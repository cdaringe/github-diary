{
  "login": "cdaringe",
  "issueComments": {
    "MDEyOklzc3VlQ29tbWVudDI4Mzk4NTI=": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4Mzk4NTI=",
      "body": "apologies for filing a duplicate issue.  i'd be happy to share all pertinent files.  please see: http://cdaringe.net/img/share/slic3r_issue/\n",
      "createdAt": "2011-11-22T20:13:16Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzE0MTEx",
        "title": "Omitted Geometry",
        "url": "https://github.com/slic3r/Slic3r/issues/66"
      },
      "repository": {
        "nameWithOwner": "slic3r/Slic3r"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4Mzk4OTE=": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4Mzk4OTE=",
      "body": "also, i do recall tweaking the thicknesses.  the 4-holed feature may be slightly thinner than the 2 holed feature and the large curve.  i'm not on my main machine, otherwise i'd confirm dimensions for you.  however, the issue manifested itself on both hole features.\n",
      "createdAt": "2011-11-22T20:16:08Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzE0MTEx",
        "title": "Omitted Geometry",
        "url": "https://github.com/slic3r/Slic3r/issues/66"
      },
      "repository": {
        "nameWithOwner": "slic3r/Slic3r"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMzAwODM=": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMzAwODM=",
      "body": "I used to skip all of the time as well, @hradec .  my fix was ~reducing #define DEFAULT_XYJERK & #define DEFAULT_ZJERK @ the bottom of the configuration.h.  lowering max accel vals seemed to contribute too.  unsure which had greater impact.\n\n#define DEFAULT_MAX_ACCELERATION      {200,200,100,10000}\n#define DEFAULT_XYJERK                10.0    // (mm/sec)\n#define DEFAULT_ZJERK                 1     // (mm/sec)\n",
      "createdAt": "2011-12-21T06:09:17Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzEwMTE3",
        "title": "Missing steps a lot... ",
        "url": "https://github.com/MarlinFirmware/Marlin/issues/13"
      },
      "repository": {
        "nameWithOwner": "MarlinFirmware/Marlin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNDI2OTQ=": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNDI2OTQ=",
      "body": "Hi Erik:\n\nI appreciate the input! :)\n1. Axis.  Smooth as anyone could ask for.  However, with decent belt tension, it is a bit tough to spin the motor spindle.\n2. Motor current.  I could look into that but am unsure on the ramifications to motor health.  I am using pololu's.  I really don't think this is the solution based on the fact that most prints are healthy\n3. No endstop errors.\n4. Yes, decent stationary torque and recommend motors on the wiki\n\nSkipped steps are not the status quo.  Rather, they tend to show up on thin features when the x or y axis oscillates back and forth & high speeds/frequencies.  I believe this is when i occasionally drop a step.  I wrote a brute force algorithm in the sprinter experimental github to force the head to stay stationary for x milliseconds on a direction change to alleviate such 'jerk.'  I was excited to see that someone was trying to put nophead's frequency reduction algorithm in Marlin--that's exactly what i wanted!\n\nHowever, i may bring my accel back up & keep my jerk low.\n",
      "createdAt": "2011-12-22T02:22:18Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzEwMTE3",
        "title": "Missing steps a lot... ",
        "url": "https://github.com/MarlinFirmware/Marlin/issues/13"
      },
      "repository": {
        "nameWithOwner": "MarlinFirmware/Marlin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NDIxMTI=": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NDIxMTI=",
      "body": "http://hydraraptor.blogspot.com/2010/12/frequency-limit.html\n",
      "createdAt": "2012-01-18T07:43:55Z",
      "issue": {
        "id": "MDU6SXNzdWUyODU0OTc5",
        "title": "Anti-Vibration speed control for tiny infill moves",
        "url": "https://github.com/slic3r/Slic3r/issues/168"
      },
      "repository": {
        "nameWithOwner": "slic3r/Slic3r"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1MDQ5NjM=": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1MDQ5NjM=",
      "body": "nah it's closed.  i ended up w/ a jerk val of ~15, and i did reduce my accel some as you recommended.  shes puttin' out some good lookin prints!\n",
      "createdAt": "2012-05-04T06:24:45Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzEwMTE3",
        "title": "Missing steps a lot... ",
        "url": "https://github.com/MarlinFirmware/Marlin/issues/13"
      },
      "repository": {
        "nameWithOwner": "MarlinFirmware/Marlin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNzg1MzQ5": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNzg1MzQ5",
      "body": "nophead--have you done this?  what was your preferred method?\n",
      "createdAt": "2012-12-31T22:47:10Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzI5MTM0",
        "title": "SDRamps Roulette",
        "url": "https://github.com/MarlinFirmware/Marlin/issues/198"
      },
      "repository": {
        "nameWithOwner": "MarlinFirmware/Marlin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1ODgxNzEz": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1ODgxNzEz",
      "body": "Hi all:\nI as well was unable to see the register user button.  I then, per the above, installed the dev branch.  I still can't login, but the dev branch does create a user in the DB.  The web window errors when you try to register a new user, but the row is created in the user table.  Unfortunately, I still can't login :( .\nFYI!  I installed just now, a few minutes before this timestamp!\n-CD\n",
      "createdAt": "2013-04-04T06:26:00Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjYwMTUzOA==",
        "title": "Cannot create user",
        "url": "https://github.com/emoncms/emoncms/issues/42"
      },
      "repository": {
        "nameWithOwner": "emoncms/emoncms"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4ODkxOTQz": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4ODkxOTQz",
      "body": "Renae: I agree with iXce. I understand your problem statement--I too have experienced this.  I've actually gone as far as repositioning my head as you've described, setting absolute coords via GCODE, then deleting my .gcode file's line 1 thru line ##,### and simply hitting 'print' after setting the temp.  It worked pretty dang well!  It was a mendelMax plate for a friend.  However, it was clearly imperfect and had showed an obvious jog.\n\nThe ability to repeatably reposition a head after a failure I believe is _so_ difficult that it may not warrant SW dev activity.\n",
      "createdAt": "2013-06-04T06:47:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTAyMjExMg==",
        "title": "Feature Request - Resume Print",
        "url": "https://github.com/kliment/Printrun/issues/383"
      },
      "repository": {
        "nameWithOwner": "kliment/Printrun"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3MTQ1NjU5": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3MTQ1NjU5",
      "body": "I compiled vim with 2.6 (the image attached above showing :version is already outdated).  Perhaps I can try compiling with 3.x if recommended?\n",
      "createdAt": "2014-03-10T00:40:15Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTAxNzg5NQ==",
        "title": "Unable To Process Plugin Files",
        "url": "https://github.com/brookhong/DBGPavim/issues/26"
      },
      "repository": {
        "nameWithOwner": "brookhong/DBGPavim"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MDI5NDIx": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MDI5NDIx",
      "body": "I suppose that an interactive script could:\n_Parse the GCODE (from mem or freshly loaded)\n*Go to the max Z, prompt the user if this is the layer to resume on\n:_if not, drop X many layers (either user specified, or default to 1)\n:*iterate until the desired layer height is found\n*Have the user select the resume line on the GCODE vector map\n*Enable the user to move the head away, resume heating and prime the extruder\n*Execute\n\nIt'd be a project, that's for sure.  I'm skeptical if @kliment would permit it to be merged to master anyway.\n",
      "createdAt": "2014-03-30T16:06:36Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTAyMjExMg==",
        "title": "Feature Request - Resume Print",
        "url": "https://github.com/kliment/Printrun/issues/383"
      },
      "repository": {
        "nameWithOwner": "kliment/Printrun"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMDk1NjQx": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMDk1NjQx",
      "body": "See gist: https://gist.github.com/cdaringe/11194274\n",
      "createdAt": "2014-04-22T21:05:54Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjAwOTIxNw==",
        "title": "Level looks for data in different directory",
        "url": "https://github.com/pouchdb/pouchdb/issues/2012"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMDk2Nzg1": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMDk2Nzg1",
      "body": "May be closed.  Expected the new PouchDb(PATH) to be relative to the .js file.  Instead, is relative from run dir PATH.  Thx guys\n",
      "createdAt": "2014-04-22T21:15:51Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjAwOTIxNw==",
        "title": "Level looks for data in different directory",
        "url": "https://github.com/pouchdb/pouchdb/issues/2012"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyNTgyMDI1": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyNTgyMDI1",
      "body": "This is indeed a bummer.  Grateful for the project nonetheless.\n",
      "createdAt": "2014-05-08T17:49:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjg1NjUyNA==",
        "title": "Error objects are discarded during logging",
        "url": "https://github.com/winstonjs/winston/issues/280"
      },
      "repository": {
        "nameWithOwner": "winstonjs/winston"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMDE5MzIw": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMDE5MzIw",
      "body": "Thanks cait.  Looking forward to this merge\n",
      "createdAt": "2014-05-13T22:05:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE1NTUzMjg=",
        "title": "feat(ngInclude): emit $includeContentError when HTTP request fails",
        "url": "https://github.com/angular/angular.js/pull/5825"
      },
      "repository": {
        "nameWithOwner": "angular/angular.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzNjg5OTk2": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzNjg5OTk2",
      "body": "Reminder for this one: https://github.com/aaronpowell/db.js/#getting-a-single-object-by-id\n.query() does not have member function .execute(), thus this reference is incorrect/outdated\n",
      "createdAt": "2014-05-20T22:09:52Z",
      "issue": {
        "id": "MDU6SXNzdWU3NTU5ODQy",
        "title": "Port blog posts to documentation",
        "url": "https://github.com/aaronpowell/db.js/issues/19"
      },
      "repository": {
        "nameWithOwner": "aaronpowell/db.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NzU0MDkw": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NzU0MDkw",
      "body": "Someone else had a similar issue: http://stackoverflow.com/questions/20629010/safari-shows-indexed-column-undefined-on-indexeddb-polyfill-how-to-retrieve-dat\n",
      "createdAt": "2014-05-31T17:21:01Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDY5NjM2Mg==",
        "title": "add(obj) returns original object with additional 'undefined' property",
        "url": "https://github.com/indexeddbshim/IndexedDBShim/issues/132"
      },
      "repository": {
        "nameWithOwner": "indexeddbshim/IndexedDBShim"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1NDU4MTg1": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1NDU4MTg1",
      "body": "Hey guys.  This issue gets me as well.  I'm not sure what the effort would be, but a great option (ideal option?) would be to perhaps use mosh over ssh?  I.e. use ssh + some other goodies?  http://mosh.mit.edu/ .  \n",
      "createdAt": "2014-06-09T03:16:46Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDYwNTg5Mg==",
        "title": "Suggestion: Alert when connection closes or times out",
        "url": "https://github.com/textmate/rmate/issues/17"
      },
      "repository": {
        "nameWithOwner": "textmate/rmate"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4MTAwOTE0": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4MTAwOTE0",
      "body": "It looks like some of your personal config made it into this pull req.  It may be worth saving the diff, re-checking out, and commiting only your features/updates\n",
      "createdAt": "2014-07-06T01:50:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTgwMTQyNTk=",
        "title": "Add some configuration options to allow either the Analog reading of the FSR, or digital reading",
        "url": "https://github.com/jcrocholl/Marlin/pull/7"
      },
      "repository": {
        "nameWithOwner": "jcrocholl/Marlin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ5OTUzOTQ1": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ5OTUzOTQ1",
      "body": "And actually after the first click it goes to full height, still offset.  Can we perhaps instantly go full height?\n![screen shot 2014-07-23 at 5 24 28 pm](https://cloud.githubusercontent.com/assets/1003261/3682308/f95c6ef2-12c8-11e4-8c6c-c3ca4374a524.png)\n",
      "createdAt": "2014-07-24T00:25:50Z",
      "issue": {
        "id": "MDU6SXNzdWUzODU4Njg0MQ==",
        "title": "Resize handle does not position itself properly",
        "url": "https://github.com/dobtco/jquery-resizable-columns/issues/32"
      },
      "repository": {
        "nameWithOwner": "dobtco/jquery-resizable-columns"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ5OTc1MTMx": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ5OTc1MTMx",
      "body": "Ya, got it this evening.  node: v0.10.29, npm: 1.4.14, osx.  Clearing the node_modules folder, running via `sudo npm install -dd` has shown that npm is active now.  I did at one point Ctrl-c the thing, which seems to lead to this symptom as described elsewhere\n",
      "createdAt": "2014-07-24T07:19:27Z",
      "issue": {
        "id": "MDU6SXNzdWU5OTU2OTc1",
        "title": "npm install hangs (node v0.8.17 & npm v.1.2.0)",
        "url": "https://github.com/npm/npm/issues/3058"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUwMzY0MzE2": {
      "id": "MDEyOklzc3VlQ29tbWVudDUwMzY0MzE2",
      "body": "No worries!  Agreed--we are known to have some funky JS activity happening during page load.  Perhaps you can just point me to the lines where you setup your event binding, and I can do some initial debugging\n",
      "createdAt": "2014-07-28T16:45:33Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQzNjgyNg==",
        "title": "Pane Will Not Toggle By Default",
        "url": "https://github.com/kint-php/kint/issues/121"
      },
      "repository": {
        "nameWithOwner": "kint-php/kint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUwNDk3OTAz": {
      "id": "MDEyOklzc3VlQ29tbWVudDUwNDk3OTAz",
      "body": "Great, I'll give the wip branch a shot.  Now that you explain it, I bet it's our (poor) pagination system.  We run all of our js in an iframe then copy our content over to the page :(.  Don't ask why!  I bet the click handler is only active in the iframe pane?  Will update or share some code in a bit.\n",
      "createdAt": "2014-07-29T16:04:57Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQzNjgyNg==",
        "title": "Pane Will Not Toggle By Default",
        "url": "https://github.com/kint-php/kint/issues/121"
      },
      "repository": {
        "nameWithOwner": "kint-php/kint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUwNzAzOTE4": {
      "id": "MDEyOklzc3VlQ29tbWVudDUwNzAzOTE4",
      "body": "Are we ready to merge this to develop, or are there gating opens?\n",
      "createdAt": "2014-07-31T01:48:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI5MzI3MjA=",
        "title": "Attn Will::Formatting and linting webservice",
        "url": "https://github.com/trendscenter/beautifulcode/pull/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/beautifulcode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUxMTMwOTcx": {
      "id": "MDEyOklzc3VlQ29tbWVudDUxMTMwOTcx",
      "body": "What's the expected syntax to access, say, destroy?  I couldn't access it after the fact without returning it.  Any objection to returning the instances?\n\n```\n   return $.fn.extend({\n     resizableColumns: function() {\n-      var args, option;\n+      var rcObjs = [],\n+          args, option;\n       option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n-      return this.each(function() {\n+      this.each(function() {\n         var $table, data;\n         $table = $(this);\n         data = $table.data('resizableColumns');\n         if (!data) {\n           $table.data('resizableColumns', (data = new ResizableColumns($table, option)));\n+          rcObjs.push(data);\n         }\n         if (typeof option === 'string') {\n           return data[option].apply(data, args);\n         }\n       });\n+      return rcObjs;\n     }\n   });\n```\n",
      "createdAt": "2014-08-04T23:19:19Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjM0OTIxMw==",
        "title": "destroy and refresh",
        "url": "https://github.com/dobtco/jquery-resizable-columns/issues/8"
      },
      "repository": {
        "nameWithOwner": "dobtco/jquery-resizable-columns"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUzODk1ODUy": {
      "id": "MDEyOklzc3VlQ29tbWVudDUzODk1ODUy",
      "body": "NP. apparently i added an ID late in the evening. hope thats ok?  I can pull it off\n",
      "createdAt": "2014-08-29T16:04:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA0NzQ5MDc=",
        "title": "Added setUpdateInterval",
        "url": "https://github.com/gr2m/appcache-nanny/pull/6"
      },
      "repository": {
        "nameWithOwner": "gr2m/appcache-nanny"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUzODk4MDky": {
      "id": "MDEyOklzc3VlQ29tbWVudDUzODk4MDky",
      "body": "I had reasons to meddle with it externally and had other iframes on the page\n\nOn Fri, Aug 29, 2014 at 9:08 AM, Gregor Martynus notifications@github.com\nwrote:\n\n> yeah I've seen the id. But what would you need it for? You have the\n> reference to the iframe anyway, and I can't think of a usecase that you'd\n> like to interact with it from the outside, can you?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/gr2m/appcache-nanny/pull/6#issuecomment-53896356.\n",
      "createdAt": "2014-08-29T16:21:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA0NzQ5MDc=",
        "title": "Added setUpdateInterval",
        "url": "https://github.com/gr2m/appcache-nanny/pull/6"
      },
      "repository": {
        "nameWithOwner": "gr2m/appcache-nanny"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU2NzE1MDk4": {
      "id": "MDEyOklzc3VlQ29tbWVudDU2NzE1MDk4",
      "body": "Hi guys:\n\nI've been having troubles getting these binaries to go via cmd line &/or via json declaration.  Could you provide some tips?  As example, I am trying to run a zedrem server via `pm2 start /usr/bin/zedrem -- --server` and it renders the following in the error log:\n\n```\n(function (exports, require, module, __filename, __dirname) { ELF\u0002\u0001\u0001\n                                                          ^\nSyntaxError: Unexpected token ILLEGAL\nat Module._compile (module.js:439:25)\nat Object.Module._extensions..js (module.js:474:10)\nat Module.load (module.js:356:32)\nat Function.Module._load (module.js:312:12)\nat Function.Module.runMain (module.js:497:10)\nat startup (node.js:119:16)\nat node.js:906:3\n```\n\n`/usr/bin/zedrem -- --server` works great.\n\npm2:  0.10.8\nnpm:  2.0.0\nnode: 0.10.30.\n",
      "createdAt": "2014-09-24T18:19:53Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzcyMTY2Mw==",
        "title": "Execute (non-interpreted) binaries",
        "url": "https://github.com/Unitech/pm2/issues/471"
      },
      "repository": {
        "nameWithOwner": "Unitech/pm2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MDU5NDA5": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MDU5NDA5",
      "body": "No apology necessary--I definitely understand.  Sorry for such a big code dump!  In the meantime, I ended up resolving the conflicts.  Let me know if there's anything I can do to help.\n",
      "createdAt": "2014-09-27T17:19:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjE3MjYzMDA=",
        "title": "Generic Settings Loader",
        "url": "https://github.com/OctoPrint/OctoPrint/pull/591"
      },
      "repository": {
        "nameWithOwner": "OctoPrint/OctoPrint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MjM2MTcy": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MjM2MTcy",
      "body": "Thanks for the tip.  It does seem like the interpreter is the issue, as it now fails with this with your updated command.  Note the new characters between old and new:\n\n```\n/usr/bin/zedrem:1\n(function (exports, require, module, __filename, __dirname) { ^?ELF^B^A^A\n                                                              ^\nSyntaxError: Unexpected token ILLEGAL\n    at Module._compile (module.js:439:25)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n     at Function.Module.runMain (module.js:497:10)\n     at startup (node.js:119:16)\n     at node.js:906:3\n\nat Module.load (module.js:356:32)\nat Function.Module._load (module.js:312:12)\n at Function.Module.runMain (module.js:497:10)\n at startup (node.js:119:16)\n at node.js:906:3\n```\n",
      "createdAt": "2014-09-29T21:50:59Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzcyMTY2Mw==",
        "title": "Execute (non-interpreted) binaries",
        "url": "https://github.com/Unitech/pm2/issues/471"
      },
      "repository": {
        "nameWithOwner": "Unitech/pm2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MjM2NDMw": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MjM2NDMw",
      "body": "Actually, i missed the -x.  Apologies, will test again shortly\n",
      "createdAt": "2014-09-29T21:53:03Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzcyMTY2Mw==",
        "title": "Execute (non-interpreted) binaries",
        "url": "https://github.com/Unitech/pm2/issues/471"
      },
      "repository": {
        "nameWithOwner": "Unitech/pm2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MjM2NzM4": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MjM2NzM4",
      "body": "Yep, that did it!  Much appreciated!\n",
      "createdAt": "2014-09-29T21:55:32Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzcyMTY2Mw==",
        "title": "Execute (non-interpreted) binaries",
        "url": "https://github.com/Unitech/pm2/issues/471"
      },
      "repository": {
        "nameWithOwner": "Unitech/pm2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4NjI4MjY1": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4NjI4MjY1",
      "body": "Ah.  Thank you sir.  Much gratitude.\n",
      "createdAt": "2014-10-10T08:45:24Z",
      "issue": {
        "id": "MDU6SXNzdWU0NTQxODMwNQ==",
        "title": "Row Styling Not Applied When Feeding In a js object Table Config",
        "url": "https://github.com/DataTables/Plugins/issues/108"
      },
      "repository": {
        "nameWithOwner": "DataTables/Plugins"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5NDU3OTAz": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5NDU3OTAz",
      "body": "Per speaking with their support, the export api is still available, however it was behaving rather finicky as of late.  Unsure.  Closing for now.\n",
      "createdAt": "2014-10-17T02:18:17Z",
      "issue": {
        "id": "MDU6SXNzdWU0NTgxNjgzNw==",
        "title": "Ticket Incremental API Update ",
        "url": "https://github.com/blakmatrix/node-zendesk/issues/43"
      },
      "repository": {
        "nameWithOwner": "blakmatrix/node-zendesk"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxMDU1MDM4": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxMDU1MDM4",
      "body": "@piranna, willing to share a skeleton of your config?\n",
      "createdAt": "2014-10-30T07:39:01Z",
      "issue": {
        "id": "MDU6SXNzdWUxODA4Nzc2Mw==",
        "title": "Grunt integration with https://npmjs.org/package/grunt-browserify",
        "url": "https://github.com/ben-ng/minifyify/issues/5"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzMTUzMjM5": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzMTUzMjM5",
      "body": "On second review, simply moving the button order changed the styling.  This is unexpected behavior from the modal.  Would you think that this should be overruled by the theme or addressed in the jqui core?\n\n![screen shot 2014-11-14 at 5 12 31 pm](https://cloud.githubusercontent.com/assets/1003261/5055932/a585334c-6c21-11e4-9e3d-c40aea64ff0d.png)\n",
      "createdAt": "2014-11-15T01:14:15Z",
      "issue": {
        "id": "MDU6SXNzdWU0ODg1OTc3OQ==",
        "title": "Button Default Styling Changes Depending on Whether It's In a Modal/Dialog or Not",
        "url": "https://github.com/jquery-ui-bootstrap/jquery-ui-bootstrap/issues/257"
      },
      "repository": {
        "nameWithOwner": "jquery-ui-bootstrap/jquery-ui-bootstrap"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzMTU1MzU1": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzMTU1MzU1",
      "body": "The css checks out as valid css3, however, the only property that doesn't seem to impact the rendering after click events is `outline: 0;`.  This appears to feasibly be a browser bug.  Will someone else confirm that this behavior is observed?  ~ Line 2261\n\n``` css\ninput:focus, textarea:focus {\n  outline: 0;\n  border-color: rgba(82, 168, 236, 0.8);\n  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 8px rgba(82, 168, 236, 0.6);\n  -moz-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 8px rgba(82, 168, 236, 0.6);\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 8px rgba(82, 168, 236, 0.6);\n}\n```\n",
      "createdAt": "2014-11-15T01:58:09Z",
      "issue": {
        "id": "MDU6SXNzdWU0ODg2MTc5Nw==",
        "title": "Click/focus on <input type=\"button\">  button produces undesirable rendering",
        "url": "https://github.com/jquery-ui-bootstrap/jquery-ui-bootstrap/issues/258"
      },
      "repository": {
        "nameWithOwner": "jquery-ui-bootstrap/jquery-ui-bootstrap"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0Njg5NzQ3": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0Njg5NzQ3",
      "body": "i've repeatedly opened new tabs and revisited the url until it showed.  that's not a very helpful description, however, now that I know the issue affects more than just me, I will be more diligent in attempt to reproduce the problem.  i agree with @rms2219 , at least one failure mode does seem to be time correlated\n",
      "createdAt": "2014-11-26T18:25:27Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTEwOTU3Ng==",
        "title": "Xdebug helper doesn't appear w/ chrome",
        "url": "https://github.com/mac-cain13/xdebug-helper-for-chrome/issues/40"
      },
      "repository": {
        "nameWithOwner": "mac-cain13/xdebug-helper-for-chrome"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0ODQxODMy": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0ODQxODMy",
      "body": "Interesting.  I'm on pg, so I'll give it a whirl.  Thanks so much!  I\nreally appreciate it.\nOn Nov 27, 2014 7:27 AM, \"Mick Hansen\" notifications@github.com wrote:\n\n> @cdaringe https://github.com/cdaringe it's a limitation of mysql that\n> it won't return the last insert id for a multi insert, it should work for\n> postgres however.\n> \n> If you absolutely require the value postcreate you can either use a\n> bulkCreate with a findAll (however this will only work if the application\n> is in a clean state or you have some kind of unique identifier for this\n> batch) - or do a bunch of single creates as you suggest.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/sequelize/sequelize/issues/2630#issuecomment-64803235\n> .\n",
      "createdAt": "2014-11-28T01:11:26Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDMwMDE2OA==",
        "title": "question/Bulk create requiring IDs",
        "url": "https://github.com/sequelize/sequelize/issues/2630"
      },
      "repository": {
        "nameWithOwner": "sequelize/sequelize"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1NDQ1Nzky": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1NDQ1Nzky",
      "body": "Sorry for not updating this sooner.  Off the bat it still didn't return `id`.  I've used `RETURNING` in good ol' SQL, but I'm not clear on the usage intent you suggest.  Would you be willing to clarify?\n",
      "createdAt": "2014-12-03T16:57:28Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDMwMDE2OA==",
        "title": "question/Bulk create requiring IDs",
        "url": "https://github.com/sequelize/sequelize/issues/2630"
      },
      "repository": {
        "nameWithOwner": "sequelize/sequelize"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2NTUyODA4": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2NTUyODA4",
      "body": "Indeed, the rev history on the homepage states \"2013-09-14   v0.6.2   Support relative URLs via clean-css ~1.1.1.\".  Not sure who has tested it yet, but if so, it may be nice to toss up a README update PR\n",
      "createdAt": "2014-12-11T00:55:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxODE0NjMzMA==",
        "title": "Incorrect image paths",
        "url": "https://github.com/gruntjs/grunt-contrib-cssmin/issues/35"
      },
      "repository": {
        "nameWithOwner": "gruntjs/grunt-contrib-cssmin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2NTYwODgy": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2NTYwODgy",
      "body": "https://github.com/gruntjs/grunt-contrib-cssmin/pull/150 . as @bobjones mentions, you can pass this in via the options argument.  Thus, @roelvanduijnhoven, can you create multiple targets using options: {relativeTo: '/path/name'}, then have a final target that combines the output of the former?\n",
      "createdAt": "2014-12-11T02:38:19Z",
      "issue": {
        "id": "MDU6SXNzdWUxODE0NjMzMA==",
        "title": "Incorrect image paths",
        "url": "https://github.com/gruntjs/grunt-contrib-cssmin/issues/35"
      },
      "repository": {
        "nameWithOwner": "gruntjs/grunt-contrib-cssmin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2NjY0MDIx": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2NjY0MDIx",
      "body": "Hey jakub:\n\nThanks for the follow up!  Sure, point taken.  However, I am in a dev environment that mandates that I perform no transforms, regardless if they are reasonable (working on this).  Is this feasible with clean-css?  The above was simply an example of a transformation that I didn't expect to happen, as I expected no transformations from the grunt-contrib-css_min_ plugin at all.\n\nThanks!\n",
      "createdAt": "2014-12-11T18:23:56Z",
      "issue": {
        "id": "MDU6SXNzdWU1MTYzNTE2OA==",
        "title": "undesirable css transformation occurring",
        "url": "https://github.com/clean-css/clean-css/issues/402"
      },
      "repository": {
        "nameWithOwner": "clean-css/clean-css"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2NzE5MTQ5": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2NzE5MTQ5",
      "body": "@jakubpawlowicz, I don't see dev mode in the README.  however, I got the green light to move forward with this anyway.  Thx!\n",
      "createdAt": "2014-12-12T01:24:53Z",
      "issue": {
        "id": "MDU6SXNzdWU1MTYzNTE2OA==",
        "title": "undesirable css transformation occurring",
        "url": "https://github.com/clean-css/clean-css/issues/402"
      },
      "repository": {
        "nameWithOwner": "clean-css/clean-css"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY3MTI3MDA5": {
      "id": "MDEyOklzc3VlQ29tbWVudDY3MTI3MDA5",
      "body": "Hey Mick.  I finally got back to this.  I tried using `{returning: true}`, however the serial id pks were still null in the result set.  I checked the source.  It looks like the Model prototype function `update()` uses this, but the option is not explicitly discussed in `bulkCreate()`'s DocBlocks.  I see where the options are extended in `bulkCreate`, https://github.com/sequelize/sequelize/blob/master/lib/model.js#L1247, and ensured `returning: true` was being extended, which indeed it was.  My copy is probably two-three months old--would a `npm update` be expected to render any change in this regard?\n",
      "createdAt": "2014-12-16T08:30:25Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDMwMDE2OA==",
        "title": "question/Bulk create requiring IDs",
        "url": "https://github.com/sequelize/sequelize/issues/2630"
      },
      "repository": {
        "nameWithOwner": "sequelize/sequelize"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY3NDAxNDE5": {
      "id": "MDEyOklzc3VlQ29tbWVudDY3NDAxNDE5",
      "body": "@Nijikokun, I'd like to see your stuff!  i'm hoping to use swig as well\n",
      "createdAt": "2014-12-17T21:52:41Z",
      "issue": {
        "id": "MDU6SXNzdWUzNjUzNTU4OQ==",
        "title": "Too coupled with Jade",
        "url": "https://github.com/HenrikJoreteg/templatizer/issues/59"
      },
      "repository": {
        "nameWithOwner": "HenrikJoreteg/templatizer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY4MTUzMjUy": {
      "id": "MDEyOklzc3VlQ29tbWVudDY4MTUzMjUy",
      "body": "agreed. :+1: @stoikerty \n",
      "createdAt": "2014-12-26T18:54:35Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTI2OTcwMg==",
        "title": "Error: Cannot read property 'length' of undefined ",
        "url": "https://github.com/HenrikJoreteg/humanjs-sample-app/issues/4"
      },
      "repository": {
        "nameWithOwner": "HenrikJoreteg/humanjs-sample-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY4Njc2MTE0": {
      "id": "MDEyOklzc3VlQ29tbWVudDY4Njc2MTE0",
      "body": "Although it may be a contributor, I don't _think?_ App Nap is on Snow Leopard, thus couldn't alone be the sole source\n",
      "createdAt": "2015-01-05T07:31:25Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzIzMjE1Ng==",
        "title": "Pronterface Serial Idles While GUI Not Focused For Indeterminate Duration",
        "url": "https://github.com/kliment/Printrun/issues/610"
      },
      "repository": {
        "nameWithOwner": "kliment/Printrun"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY4OTU5MzU3": {
      "id": "MDEyOklzc3VlQ29tbWVudDY4OTU5MzU3",
      "body": "I have discovered that `keepAlive` must also be set to true.  We should probably specify as such in the docs.\n",
      "createdAt": "2015-01-07T00:21:47Z",
      "issue": {
        "id": "MDU6SXNzdWU1Mjk0NDMwOQ==",
        "title": "watch property `true` not triggering src watching",
        "url": "https://github.com/jmreidy/grunt-browserify/issues/274"
      },
      "repository": {
        "nameWithOwner": "jmreidy/grunt-browserify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5MTAxMjUx": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5MTAxMjUx",
      "body": "You guys rock.  I will try in a week or two as well.  @mickhansen, are you simply commenting by observation, or did you observe the actual resolving commit?  Just curious--not fishing for a commit link :)\n",
      "createdAt": "2015-01-07T22:08:01Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDMwMDE2OA==",
        "title": "question/Bulk create requiring IDs",
        "url": "https://github.com/sequelize/sequelize/issues/2630"
      },
      "repository": {
        "nameWithOwner": "sequelize/sequelize"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5MTI5NjE0": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5MTI5NjE0",
      "body": "I'm struggling to do this _dynamically_.  The following adds the class, but the column still shows.  I've tried triggering a `draw()`, which is actually counter productive.  Tips?\n\n``` js\n$header = jQuery($dt.column('col1:name').header());\n$header.addClass('never'); // confirmed, never is in tacked onto the th\n```\n",
      "createdAt": "2015-01-08T03:02:53Z",
      "issue": {
        "id": "MDU6SXNzdWU0MzI2ODQ4Ng==",
        "title": "responsive vs hidden columns",
        "url": "https://github.com/DataTables/Responsive/issues/8"
      },
      "repository": {
        "nameWithOwner": "DataTables/Responsive"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5MjI1ODAw": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5MjI1ODAw",
      "body": "Did I make a remark just hours ago and already see the feature get built in?\nYou sir, are a man of the people!\nCan't wait to try!\n![](http://i626.photobucket.com/albums/tt344/JHnGA09/Misc/GenieJawDropping.jpg)\n",
      "createdAt": "2015-01-08T18:34:29Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzczMDExOQ==",
        "title": "Add method to recalculate breakpoint logic",
        "url": "https://github.com/DataTables/Responsive/issues/21"
      },
      "repository": {
        "nameWithOwner": "DataTables/Responsive"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5MjgzNDk2": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5MjgzNDk2",
      "body": "Indeed it actually doesn't, I just formatted. For the post. It's true form:\n\n``` html\n<a href=\"#\" title=\"List and add sites\" onclick=\"someGoofyFunction();\">Sites</a>\n```\n",
      "createdAt": "2015-01-09T02:07:55Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzgyNTA2NA==",
        "title": "Usage Example Clarification On Selectors By Text",
        "url": "https://github.com/webdriverio/webdriverio/issues/389"
      },
      "repository": {
        "nameWithOwner": "webdriverio/webdriverio"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5MjgzODYx": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5MjgzODYx",
      "body": "Also, I would like to select by other attrs, but my teamsters have added no other attr except for `title`.  I'm curious why the `name` selector, per the docs, is only `name` friendly, vs any other `attr` string?\n",
      "createdAt": "2015-01-09T02:13:26Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzgyNTA2NA==",
        "title": "Usage Example Clarification On Selectors By Text",
        "url": "https://github.com/webdriverio/webdriverio/issues/389"
      },
      "repository": {
        "nameWithOwner": "webdriverio/webdriverio"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5Mzk1MTI2": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5Mzk1MTI2",
      "body": ":+1: \n",
      "createdAt": "2015-01-09T20:37:44Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzU0NDE4Nw==",
        "title": "Create columns dynamically?",
        "url": "https://github.com/DataTables/DataTables/issues/273"
      },
      "repository": {
        "nameWithOwner": "DataTables/DataTables"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5NTk4NTc5": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5NTk4NTc5",
      "body": "That one seemed to do the trick.  Much appreciated!\n",
      "createdAt": "2015-01-12T16:33:32Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzgyNTA2NA==",
        "title": "Usage Example Clarification On Selectors By Text",
        "url": "https://github.com/webdriverio/webdriverio/issues/389"
      },
      "repository": {
        "nameWithOwner": "webdriverio/webdriverio"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcwMzA1Mzkw": {
      "id": "MDEyOklzc3VlQ29tbWVudDcwMzA1Mzkw",
      "body": "We happily use it for some tools at @ the [Mind Research Network](http://www.mrn.org/). \n\n![logo](http://www.cdaringe.net/c/pub/img/logo_mind_research_network.png)\n[logo](http://www.cdaringe.net/c/pub/img/logo_mind_research_network.png)\n",
      "createdAt": "2015-01-16T19:11:13Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzgzMDUxMg==",
        "title": "Add the following logos/links homepage",
        "url": "https://github.com/AmpersandJS/ampersandjs.com/issues/122"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersandjs.com"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyMjQ0MDUz": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyMjQ0MDUz",
      "body": "Indeed, it is designed for a container.  The trouble originates in that I didn't want the rendered `<input>` to be a generic `el` that I know nothing about.  I have additional events/bindings/etc for that `<input>`.  If the `template` is predefined, it's cumbersome to set up a `data-hook` against the `<input>`.  I suppose from an extended View I could simply reference `this.input` or do a query, but, I still cannot have custom `attrs` on a pre-defined `<input>`, which I think is worthy of supporting (i.e. let me use my own `<input>`).\n\nMaybe I should just ask you to _disregard_ this PR and look at my subsequent PR which is really is an alternate strategy.  https://github.com/AmpersandJS/ampersand-input-view/pull/42/\n",
      "createdAt": "2015-01-30T18:10:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mjc3MDAxNjY=",
        "title": "Enable usage of existing input",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/41"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyMjQ1NTc2": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyMjQ1NTc2",
      "body": "By the way, worked great!  Thanks again.\n",
      "createdAt": "2015-01-30T18:20:13Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzczMDExOQ==",
        "title": "Add method to recalculate breakpoint logic",
        "url": "https://github.com/DataTables/Responsive/issues/21"
      },
      "repository": {
        "nameWithOwner": "DataTables/Responsive"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyMzY0OTEy": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyMzY0OTEy",
      "body": "I'm overseas on mobile at the moment, but I did try using setValue first.  I seem to recall it causes a recursive lookup on this derived fn.  the call to setValue I'm not sure even provides value in this situation especially in the event that say, jqui sets a specific value, only to have this module feasibly mutate it and provide unexpected results\n",
      "createdAt": "2015-02-01T13:35:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjgzNDIyOTE=",
        "title": "Handle case: value change and no DOM events emitted",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyNjU5MDAy": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyNjU5MDAy",
      "body": "hey @kliment, I'm hanging out on your side of the world for a couple months, but when I return, I will be happy to load up the latest and test it.  was there a change that you felt could have impacted this issue in the release?\n",
      "createdAt": "2015-02-03T14:29:10Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzIzMjE1Ng==",
        "title": "Pronterface Serial Idles While GUI Not Focused For Indeterminate Duration",
        "url": "https://github.com/kliment/Printrun/issues/610"
      },
      "repository": {
        "nameWithOwner": "kliment/Printrun"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyNjYxMTAz": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyNjYxMTAz",
      "body": "Hey @wraithgar, I (1) looked thru some example source for the datepicker (my probably most common widget), (2) tested with a [fiddle](http://jsfiddle.net/cdaringe/vb4gdo06/), and (3) chatted around on the irc.  Standard DOM event emitting for common actions across widgets does not sound like it can be relied upon from jQ\n\nif you dont open the fiddle, all it does is demonstrate that `change` events are fired DOM-wise\n",
      "createdAt": "2015-02-03T14:41:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjgzNDIyOTE=",
        "title": "Handle case: value change and no DOM events emitted",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyNjYxNTQ3": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyNjYxNTQ3",
      "body": "excellent!  yahooo!  I have always printed using [caffeine](http://lightheadsw.com/caffeine/) to stop my prints from dying while i was in another room.  this will make life a little simpler :+1: \n",
      "createdAt": "2015-02-03T14:43:44Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzIzMjE1Ng==",
        "title": "Pronterface Serial Idles While GUI Not Focused For Indeterminate Duration",
        "url": "https://github.com/kliment/Printrun/issues/610"
      },
      "repository": {
        "nameWithOwner": "kliment/Printrun"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyOTYwNTUy": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyOTYwNTUy",
      "body": "haha, no sweat.  we'll get to the bottom of this conundrum im sure\n",
      "createdAt": "2015-02-04T23:11:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjgzNDIyOTE=",
        "title": "Handle case: value change and no DOM events emitted",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyOTYxMDQ4": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyOTYxMDQ4",
      "body": "Also, I know you have some unit tests somewhere, at least that I saw in responsive.  Are these 8 the whole shaboodle in `DataTables/media/unit_testing`?  I didn't see remarks in `Contributing.md`.\n",
      "createdAt": "2015-02-04T23:14:50Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjYwMjEzMg==",
        "title": "Dev Question // permit .data & .render to return DOM element",
        "url": "https://github.com/DataTables/DataTables/issues/489"
      },
      "repository": {
        "nameWithOwner": "DataTables/DataTables"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyOTY0NTE1": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyOTY0NTE1",
      "body": "I still feel like that's incomplete, as the actual `myInput.value` can differ from the reported.  Can you re-phrase why an implementation as proposed is _not_ acceptable?\n",
      "createdAt": "2015-02-04T23:39:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjgzNDIyOTE=",
        "title": "Handle case: value change and no DOM events emitted",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyOTY3Nzc5": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyOTY3Nzc5",
      "body": "Respectfully, the presence of `setValue` as a proxied value setter method I feel is somewhat irrelevant.  I am of the simple opinion that if there's a change, we should try and detect that change.\n\nWhy disregard the change if we can sniff for it?\n",
      "createdAt": "2015-02-05T00:05:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjgzNDIyOTE=",
        "title": "Handle case: value change and no DOM events emitted",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyOTcyMDEy": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyOTcyMDEy",
      "body": "Certainly can't disagree with either remarks.  When I consider my inputs, I bind all sorts of other things to them. Autocompletes, datepickers, custom sliders, etc etc.  It seems unfortunate that `myValue.input` doesn't reflect the actual value without additional massaging from other components/libs (and I understand the justification), but it still seems worthwhile to me in the meantime to permit the sloppy detect almost as a **fallback** in addition to supplementing documentation.  Is there anything we could do feasibly by making the DOM element `observable` somehow?  To summarize\n- No proper change events from external components + with sloppy `.input` change detection === biased/lagging state.  This is an edge-case, but likely a **common one** outside of my own dev work\n- Not all forms need the input value for state (mine included), but said form does need an honest value at submission.  `myValue.input` return value as it stands === misleading `myInput.value` return/behavior\n",
      "createdAt": "2015-02-05T00:37:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjgzNDIyOTE=",
        "title": "Handle case: value change and no DOM events emitted",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDczMDgyNDk5": {
      "id": "MDEyOklzc3VlQ29tbWVudDczMDgyNDk5",
      "body": "Ah, thanks for the good word!\n",
      "createdAt": "2015-02-05T16:57:14Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjYwMjEzMg==",
        "title": "Dev Question // permit .data & .render to return DOM element",
        "url": "https://github.com/DataTables/DataTables/issues/489"
      },
      "repository": {
        "nameWithOwner": "DataTables/DataTables"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDczMTMxMTkz": {
      "id": "MDEyOklzc3VlQ29tbWVudDczMTMxMTkz",
      "body": "Thanks @christian-bromann.  How do these all get chained/promisified?  Even a pointer to the code would help if it's easier to just state \"look here!\"\n",
      "createdAt": "2015-02-05T21:20:48Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjczMDk0Mg==",
        "title": "Clarity On Command Process and .call Callback",
        "url": "https://github.com/webdriverio/webdriverio/issues/421"
      },
      "repository": {
        "nameWithOwner": "webdriverio/webdriverio"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDczMTM4NDA3": {
      "id": "MDEyOklzc3VlQ29tbWVudDczMTM4NDA3",
      "body": "Objective: let me use my own `input` `el`, but still receive the rest of the ampersand goodies.  What this does to accomplish said objective is use the default template, but swap the default input el for my el.  If I just set my passed el to be the el in the current state, I loose the validation parts of the template.  The options are:\n\n1) Don't let me use my own input el.  I must use the templated input el.   Any subsequent bindings must attach to the rendered ampersand FieldView input.\n2) Let me use my own input el, and still attache the templated validation message nodes\n3) Let me use my own input el, but force me to provide additional validation message nodes\n\nI pursued option 2.  After our last conversation and another I've been having with wraithgar, maybe we want to scrap this, but provide another `attr` that can _easily identify the input_ such that my managing form can conveniently query into the FieldView and do additional bindings/activity to the input.\n",
      "createdAt": "2015-02-05T21:58:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mjc3OTMzNTI=",
        "title": "Feature/use el with validation",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDczMTU1OTY2": {
      "id": "MDEyOklzc3VlQ29tbWVudDczMTU1OTY2",
      "body": "i just read that again. yeeeikes!  that was _verrr-bose!_\n",
      "createdAt": "2015-02-05T23:57:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mjc3OTMzNTI=",
        "title": "Feature/use el with validation",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDczMTYyNjQ3": {
      "id": "MDEyOklzc3VlQ29tbWVudDczMTYyNjQ3",
      "body": "Sorry to blow up this thread.  After I thought on this some more, the more I have found my PR unnecessary.  The FieldView maintains a `.input`.  I didn't know that when I first started, but with that knowledge, I'll just tap into it.  I can rework my templates to provide containers for inputs vs actual inputs.\n",
      "createdAt": "2015-02-06T01:00:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mjc3OTMzNTI=",
        "title": "Feature/use el with validation",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0MjE5ODEw": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0MjE5ODEw",
      "body": "the problem with the SelectView is as follows. when the SelectView is initialized, this.value is set to null. If you provide a nully `value: xzy` to the constructor, then `.validate()` will never get called. The result is that when the form `checkValid()`, `.valid` is undefined on the SelectView, thus the form is invalid. Providing a null value is a realistic case. For example, I am querying for a value, and sometimes, that value doesn't exist. validate() won't be called because of this line in setValue(), triggered by the constructor, https://github.com/cdaringe/ampersand-select-view/blob/master/ampersand-select-view.js#L181 . I think the solution is perhaps to either:\n1. set this.value to undefined, which could potentially still result in the same failiure mode\n2. set an init flag or force flag to force setValue() down through .validate() no matter what at least once. In this regard the .valid property will always be set to a bool initially, vs now, where it can be undefined\n3. eliminate the if (value === this.value) return; in setValue().  This is what i have done in my branch for the time being\n\nInputView works a completely different way and has a different structure, otherwise I'd say let's just copy that over.\n",
      "createdAt": "2015-02-13T08:22:53Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjQxMTY5Mw==",
        "title": "Empty Options yields `invalid` Despite Being Set to required: false",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/22"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0MjQzNjQ0": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0MjQzNjQ0",
      "body": "For the record, this looks awesome!  Can you give me a live demo at some point?  im not going to test it without some coaching, if that's even desired.\n",
      "createdAt": "2015-02-13T12:00:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjkyMTgxNTE=",
        "title": "Chris: Develop",
        "url": "https://github.com/trendscenter/name-matcher/pull/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/name-matcher"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0MjQzNjcx": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0MjQzNjcx",
      "body": "In classic Dieringer tradition i commented on everything.\n",
      "createdAt": "2015-02-13T12:00:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjkyMTgxNTE=",
        "title": "Chris: Develop",
        "url": "https://github.com/trendscenter/name-matcher/pull/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/name-matcher"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0MzE4NDA0": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0MzE4NDA0",
      "body": "@wraithgar, I'd be grateful for the opportunity.  I'd be willing to on either package\n",
      "createdAt": "2015-02-13T20:10:06Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzY0MDA4OA==",
        "title": "Lead maintainers",
        "url": "https://github.com/AmpersandJS/ampersand/issues/95"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0NTg1MzM5": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0NTg1MzM5",
      "body": "@nathanboktae--it renders the same error :(\n",
      "createdAt": "2015-02-16T22:55:41Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzIyNjExOQ==",
        "title": "Weird error based on running location",
        "url": "https://github.com/nathanboktae/mocha-phantomjs/issues/168"
      },
      "repository": {
        "nameWithOwner": "nathanboktae/mocha-phantomjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0OTc3MTYx": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0OTc3MTYx",
      "body": "Ah, of course.  Cool, I've update the version refs.  On the beefy side of things, I seem to recall it being grumpy about having a local version and requesting `-g`.  Am I makin' that up?  \n",
      "createdAt": "2015-02-19T00:16:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mjk1NjM3NTY=",
        "title": "Features: demo, apply user provided classes, bugfix",
        "url": "https://github.com/datuhealth/ampersand-floatinglabel-input-view/pull/1"
      },
      "repository": {
        "nameWithOwner": "datuhealth/ampersand-floatinglabel-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc1NDIxNzc2": {
      "id": "MDEyOklzc3VlQ29tbWVudDc1NDIxNzc2",
      "body": "Ah, indeed.  See updated commits.  Apologies for the delay!\n",
      "createdAt": "2015-02-22T06:07:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mjk1NjM3NTY=",
        "title": "Features: demo, apply user provided classes, bugfix",
        "url": "https://github.com/datuhealth/ampersand-floatinglabel-input-view/pull/1"
      },
      "repository": {
        "nameWithOwner": "datuhealth/ampersand-floatinglabel-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc1OTYxMzAy": {
      "id": "MDEyOklzc3VlQ29tbWVudDc1OTYxMzAy",
      "body": "for other readers, `phantom` is a package too, **but** `phantomjs` is the package you need, as ref'd in the package.json\n",
      "createdAt": "2015-02-25T13:44:38Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTQzMjAzNQ==",
        "title": "Cannot run tests out of the box",
        "url": "https://github.com/AmpersandJS/ampersand-collection-view/issues/13"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc2NDI0ODk1": {
      "id": "MDEyOklzc3VlQ29tbWVudDc2NDI0ODk1",
      "body": "@piranna, nm!  this may not be the right venue, but can someone comment on my config?  my `map` file is not being generated.  i dont think the `minifyify` options get passed through like they do with transforms.\n\n``` js\nampersand: {\n    files: {\n        'amp.bundle.min.js': [\n            \"js/browserApp/app.js\",\n            \"js/dataType/Error.js\"\n        ]\n    },\n    options: {\n        browserifyOptions: {\n            debug: true\n        },\n        plugin: [\n            ['minifyify', {\n                map: './amp.bundle.map.json' // have tried toying with the path to no success\n            }]\n        ]\n    }\n},\n```\n",
      "createdAt": "2015-02-27T16:37:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxODA4Nzc2Mw==",
        "title": "Grunt integration with https://npmjs.org/package/grunt-browserify",
        "url": "https://github.com/ben-ng/minifyify/issues/5"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc2NTA0NTgx": {
      "id": "MDEyOklzc3VlQ29tbWVudDc2NTA0NTgx",
      "body": "Yahoo!  Answered my own question. The target's option's plugin `[]` looks like below.  I didn't know that if you provide a function, an instance of browserify gets passed to the function, and you can use the node-browserify api!  I was also missing an `output` attr.\n\n``` js\noptions: {\n            plugin: [\n                [function(b) {\n                    b.plugin('minifyify', {\n                        map: 'coins_core/build/js/browser.bundle.map.json',\n                        output: './build/js/browser.bundle.map.json'\n                    });\n                }],\n            ],\n```\n",
      "createdAt": "2015-02-28T02:10:04Z",
      "issue": {
        "id": "MDU6SXNzdWUxODA4Nzc2Mw==",
        "title": "Grunt integration with https://npmjs.org/package/grunt-browserify",
        "url": "https://github.com/ben-ng/minifyify/issues/5"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc2OTk1MDIw": {
      "id": "MDEyOklzc3VlQ29tbWVudDc2OTk1MDIw",
      "body": "Man, **you rock!**\n",
      "createdAt": "2015-03-03T17:41:49Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTU0ODQ5Mw==",
        "title": "Cannot Destroy A Responsive Table with The Responsive Row Open",
        "url": "https://github.com/DataTables/Responsive/issues/31"
      },
      "repository": {
        "nameWithOwner": "DataTables/Responsive"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3MDIwMjky": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3MDIwMjky",
      "body": "Ah, missing return statement.  Looks like the promise needs to be returned!  Should we document that?\n",
      "createdAt": "2015-03-03T19:49:38Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTY5NDg5OA==",
        "title": "Quick Migrations Q  // ",
        "url": "https://github.com/knex/knex/issues/720"
      },
      "repository": {
        "nameWithOwner": "knex/knex"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3NDIyOTMx": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3NDIyOTMx",
      "body": "@reggi, i just installed it as part of my dev dependencies, then use it as a plugin.  Shouldn't need to load it under transforms, no.\n",
      "createdAt": "2015-03-05T18:40:11Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODg1MzI2MA==",
        "title": "bundle has no method 'transform'",
        "url": "https://github.com/ben-ng/minifyify/issues/82"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3NDkzNjI5": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3NDkzNjI5",
      "body": "@ComputerTinker, would you be willing to post/edit a fiddle of your workaround?  I tried editing your fiddle to match the description and it was still being stubborn\n",
      "createdAt": "2015-03-06T02:05:33Z",
      "issue": {
        "id": "MDU6SXNzdWU1MTEzNTYzOA==",
        "title": "Can't Expand When Icon in Separate Column",
        "url": "https://github.com/DataTables/Responsive/issues/16"
      },
      "repository": {
        "nameWithOwner": "DataTables/Responsive"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3Njk1MDYz": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3Njk1MDYz",
      "body": "This looked good.  Unfortunately, after pulling the PR branch locally, the diff is pretty unwieldy.  It's probably easier and safer to manually replay the updates line by line from the _latest_ state, unless someone has a better idea.  Because this refactor touches every function as it converts from the prototype def to obj def style, the likelihood of a repeat situation is very likely unless other PRs are either (a) minimal or (b) frozen until this one gets through.  @tamasdancsi, do you still intend to actively work on this?\n",
      "createdAt": "2015-03-07T15:57:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjM1OTA5Mjk=",
        "title": "Refactoring to be extended from ampersand-view.",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/18"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4MTM2OTUw": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4MTM2OTUw",
      "body": "I use this regularly.  This is not a bug (1.10.4 & 1.10.5 @least).  Should be closed.  @libillgithub, put up a fiddle and I can help you out if allan is slammed.\n",
      "createdAt": "2015-03-10T20:08:48Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjIyMjk3MA==",
        "title": " The Responsive extension can't work with the datatables rendered with javascript soured data",
        "url": "https://github.com/DataTables/Responsive/issues/23"
      },
      "repository": {
        "nameWithOwner": "DataTables/Responsive"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4NDI0OTgy": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4NDI0OTgy",
      "body": "overall looks good.  does this similarly warrant an update to: https://github.com/AmpersandJS/ampersand-input-view/blob/treat-zero-as-valid/ampersand-input-view.js#L180\ni.e.  `if (this.inputValue !== '' && this.changed) {`\n",
      "createdAt": "2015-03-12T05:12:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NDM4NDQ=",
        "title": "Treat zero as a valid input value",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/53"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4NDU0NDA0": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4NDU0NDA0",
      "body": "1. By the way, the implementation is my own, so if anyone has perf improvements or input, I'm all ears.\n2. this is failing on invalid sauce credentials?  i saw how to do this for my machine, but not for the build server.  it's way past bedtime.  tips there would be appreciated\n",
      "createdAt": "2015-03-12T10:19:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwMjIzNTU=",
        "title": "release/to-kebab-case",
        "url": "https://github.com/AmpersandJS/amp/pull/88"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/amp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4NTU2Mjk3": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4NTU2Mjk3",
      "body": "@bear, do you know how I can get the saucelabs credentials going for the build?\n",
      "createdAt": "2015-03-12T18:24:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwMjIzNTU=",
        "title": "release/to-kebab-case",
        "url": "https://github.com/AmpersandJS/amp/pull/88"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/amp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4Njc3MTc5": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4Njc3MTc5",
      "body": "Thanks @bear!  Would you be willing to restart the build?  I don't have access.  I could push another commit if reqd.\n",
      "createdAt": "2015-03-12T23:00:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwMjIzNTU=",
        "title": "release/to-kebab-case",
        "url": "https://github.com/AmpersandJS/amp/pull/88"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/amp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4Njk2ODQx": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4Njk2ODQx",
      "body": "@bear, looks like the credentials are still failing.  No rush.  We can try again whenever.\n",
      "createdAt": "2015-03-12T23:41:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwMjIzNTU=",
        "title": "release/to-kebab-case",
        "url": "https://github.com/AmpersandJS/amp/pull/88"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/amp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5NTI3MjU1": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5NTI3MjU1",
      "body": "I had this issue too, wanting to run pm2 as root.  Here's what I did (**warning: know what you're doing while root! insert root precautions here!!**):\n1. `sudo su`\n2. as root, `rm /etc/init.d/pm2-init.sh`\n3. as root, run `pm2 startup`.  it still complains that /etc/init.d/pm2-init.sh _links_ already exists, despite just removing it\n4. as root, `pm2 start` (my processes, eg ecosystem.json), `pm2 start ecosystem.json`\n5. as root, `pm2 save`\n6. `reboot` (if ubuntu)\n\nthat resolved it.  i definitely ran the `pm2 startup` originally as my normal user, not my pm2 user (root).  this fubared the init file.  ill submit a PR to warn of that in the docs if its missing already\n",
      "createdAt": "2015-03-13T23:30:07Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTI1OTY5Mg==",
        "title": "Startup is not starting pm2 daemon and saved process",
        "url": "https://github.com/Unitech/pm2/issues/1055"
      },
      "repository": {
        "nameWithOwner": "Unitech/pm2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5NTI5Nzkx": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5NTI5Nzkx",
      "body": "https://github.com/Unitech/PM2/pull/1092/files\n",
      "createdAt": "2015-03-13T23:32:45Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTI1OTY5Mg==",
        "title": "Startup is not starting pm2 daemon and saved process",
        "url": "https://github.com/Unitech/pm2/issues/1055"
      },
      "repository": {
        "nameWithOwner": "Unitech/pm2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5NTU2MzA1": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5NTU2MzA1",
      "body": "I was causally updating my log dirs, and I just updated `\"error_file\" : \"/coins/error_files/zedserver.error\",` as I noticed `/coins/error_files` didn't exist.  I did a startOrRestart on my ecosystem.json, what do you know, the process spun up!  how peculiar!\n",
      "createdAt": "2015-03-14T00:12:19Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTI5NzQ4Nw==",
        "title": "ecosystem.json declaration ignored",
        "url": "https://github.com/Unitech/pm2/issues/1093"
      },
      "repository": {
        "nameWithOwner": "Unitech/pm2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5NjgzNDk0": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5NjgzNDk0",
      "body": "@bear, it's still failing on credentials.  Perhaps you're missing the equivalent of?:\n\n``` yml\nenv:\n  global:\n  - secure: \"asdfadsfkjaklsaiosdfasd37BNp4=\"\n  - secure: \"asdfafawefwefewoqpoputYs=\"\n```\n\nper the [travis docs](https://docs.saucelabs.com/ci-integrations/travis-ci/#adding-credentials-for-a-public-github-repo)\n",
      "createdAt": "2015-03-14T01:55:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwMjIzNTU=",
        "title": "release/to-kebab-case",
        "url": "https://github.com/AmpersandJS/amp/pull/88"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/amp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5Njg2MTM2": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5Njg2MTM2",
      "body": "I'm having waitForVisible issues as well :(  @gilfanov-ildar , did you find a workaround for the time being?\n",
      "createdAt": "2015-03-14T01:57:34Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODg3NzY5NQ==",
        "title": "waitForVisible doesn't work",
        "url": "https://github.com/webdriverio/webdriverio/issues/434"
      },
      "repository": {
        "nameWithOwner": "webdriverio/webdriverio"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwNTYyMjk2": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwNTYyMjk2",
      "body": "Hey @ruiramos.  Clear fiddle.  I agree, it does not produce naturally expected results.\nThis was a [pretty early commit](https://github.com/AmpersandJS/ampersand-state/commit/43123b681debae9fef668ebcd967d6ba249e87cb) in the project that @HenrikJoreteg committed back in May last year.  There are checks against `null` in the codebase which appear to be dependent on that `null` being set.  Maybe you can test updating said checks and the blocks you pointed out, add test or two, and run the test suite?\n",
      "createdAt": "2015-03-14T16:27:53Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTg5NzU4NQ==",
        "title": "Shouldn't initialising a object prop with undefined fallback to its default?",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/138"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwODcyNDE2": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwODcyNDE2",
      "body": "@wraithgar updated the README with advisement for interacting with `ampersand-input-view` with external libs.  Please [review the example here](https://github.com/AmpersandJS/ampersand-input-view#setting-inputvalue-on-non-user-input) for simple guidance per the above discussion!\n",
      "createdAt": "2015-03-15T05:58:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjgzNDIyOTE=",
        "title": "Handle case: value change and no DOM events emitted",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwODc2NTkw": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwODc2NTkw",
      "body": "@kamilogorek @lukekarrys, reviewing this I saw again that we bind a `change` listener to `this.el`.  Unless this was intentional, I'm thinking we should really bind directly to`this.select`.  Otherwise, we're reacting to all sorts of other activity, e.g. a `className` change on the label span, for instance.  Any change activity that doesn't correlate directly to the select-view's `.value` shouldn't be triggering the view's change handlers.  what are your thoughts?\n",
      "createdAt": "2015-03-15T06:26:08Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjkxMzk4Njg=",
        "title": "ADDED: Don't validate until the select is either blurred, or the user tr...",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwODc3NjEy": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwODc3NjEy",
      "body": "@nickryall, not sure if you saw, but bear updated the travis sauce credentials.  If you merge `upstream/master` into your feature branch and push a frivolous commit, hopefully the credentials will be zen :)\n",
      "createdAt": "2015-03-15T06:31:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwMTkwMjc=",
        "title": "Fix for #23 and other updates",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/32"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwODg4Mzg4": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwODg4Mzg4",
      "body": "Hi @e2jk.  A couple of things:\n1. `children` isn't _really_ needed.  i'd put your data it in props as you've suggested\n2. I understand that the intent of your question is how to get your API to return a result formatted a particular way, based on how you request it.  really, it's not related to `ampersand-select-view`, despite you asking if a server has similar functionality.  that's OK, but you'll probably want to dig through this issue in a forum more suited to API design.  however, keeping in helpful spirit, what the server does is entirely dependent on how the API you are using is designed _on the server_.  ampersand cannot control what the server gives back to the client--it can only SEND and RECEIVE, and hopefully whatever you have sent is reciprocated with something you want to receive!\n3. if the object you got back is raw, make sure that you've defined a corresponding `state` or `model` definition for the `app.objects` collection.  I'd suppose this is a large source of your issue\n4. additionally, check out https://github.com/ampersandjs/ampersand-state#parse to see how to mutate results from the server.\n\nI think this issue can be closed :+1:   Good luck!\n",
      "createdAt": "2015-03-15T07:16:08Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODIzMzE3MA==",
        "title": "`GET` not working when `POST`/`PUT` was done with `yieldModel: false`",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/27"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwODkyMDI4": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwODkyMDI4",
      "body": "`onChange` is bound via a `change` event listener.  Please see [this line](https://github.com/AmpersandJS/ampersand-select-view/blob/master/ampersand-select-view.js#L123).  Thanks!\n\n@bear, propose to close!\n",
      "createdAt": "2015-03-15T07:27:38Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTIyNTE1Ng==",
        "title": "use on('change') event vs. onChange callback",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/11"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxMTM0MzU5": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxMTM0MzU5",
      "body": "@kamilogorek, have things to do today, but FYI, near completion on a PR for this\n",
      "createdAt": "2015-03-15T16:19:29Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMxMTMwMQ==",
        "title": "If you specify `options`, you can still set `value` to any other value without an error",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/5"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxNDMxNTYz": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxNDMxNTYz",
      "body": "interesting concept.  we could also just start merging into a `develop` branch vs master, and if the build fails, in develop, the maintainer could revert the merge commit?  that sure is undue overhead for the maintainer.  perhaps if we merged into a develop branch, then post--CI _tests-pass_, some hook could listen and merge that commit into master?  That's gotta be doable?  on _tests-fail_ it should revert the commit too, that way multiple PRs hitting the develop branch at once wouldn't get merged into master together.\n",
      "createdAt": "2015-03-16T05:41:33Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTk3NDExMw==",
        "title": "SauceLabs tests won't run on Pull Requests",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/35"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyMDA2ODAy": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyMDA2ODAy",
      "body": "dont `add remove` imply a `length` change?  maybe the events just need to pass additional meta?\n",
      "createdAt": "2015-03-17T00:46:03Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTY5ODU2NQ==",
        "title": "Tracking collection state.",
        "url": "https://github.com/AmpersandJS/ampersand-collection/issues/48"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyMTI3ODU5": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyMTI3ODU5",
      "body": "@nickryall, I tend to agree with @erd0s on this one.  i dont think that the form should shout at the user on opening.  it will be validated soon enough.  however, in alignment with your intent, I do think it's important to protect your data.  As such, with my [3.0.0 proposal](https://github.com/AmpersandJS/ampersand-select-view/pull/34) (thanks for the review by the way), rather than _validate_ on construction, simply don't accept invalid options--period.  setting an invalid option is an application design error, so error out!\n\n@wraithgar, on \"what are we listening for\".  My thought process begins with \"what's the purpose of this field-view\"?  It's to produce a quality, validated value from the select control, per the designer's intent.  Therefore, I would suggest that we listen for any activity within our micro-DOM that impacts that `value`.  All other activity within the module orbits around it.  Thoughts?\n",
      "createdAt": "2015-03-17T06:03:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjkxMzk4Njg=",
        "title": "ADDED: Don't validate until the select is either blurred, or the user tr...",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyMTI4MTA3": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyMTI4MTA3",
      "body": "https://github.com/cdaringe/ampersand-select-view/blob/3.0.0/ampersand-select-view.js#L190 is actually a bug that needs to be addressed.  I have permitted short circuit to value `''` even if there is no `''` option available.  Will resolve and address with tests soon.\n",
      "createdAt": "2015-03-17T06:05:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEyMTc0NDM=",
        "title": "3.0.0 RC",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/34"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyNDEwNDk4": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyNDEwNDk4",
      "body": "on `add remove` events, could you just check the passed model's  `modelChanaged.collection.length` (if `.collection` is set), and on `reset` assume length 0?  actually, this wouldn't work when a model is shared across collections.\n\nnew idea.  perhaps we pass more than just the model to event handler--pass a `{collection: collection, model: model}` hash as the context.  this would break a lot of code :/\n",
      "createdAt": "2015-03-17T15:24:08Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTY5ODU2NQ==",
        "title": "Tracking collection state.",
        "url": "https://github.com/AmpersandJS/ampersand-collection/issues/48"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyNDE5MzY5": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyNDE5MzY5",
      "body": "@nickryall, agreed.  I don't feel like its _common_ to visit a form and see positive affirmations immediately, but there certainly could be use cases.  Sounds like you might have some :).  With this said, why don't we propose to:\n1. not validate by default\n2. add an option to `eagerValidate` (or equivalent), and denote in the README that it would trigger the validation classes\n",
      "createdAt": "2015-03-17T15:37:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjkxMzk4Njg=",
        "title": "ADDED: Don't validate until the select is either blurred, or the user tr...",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyNDMyMTM1": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyNDMyMTM1",
      "body": "closing for rework\n",
      "createdAt": "2015-03-17T15:54:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEyMTc0NDM=",
        "title": "3.0.0 RC",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/34"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyNDY4NDAy": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyNDY4NDAy",
      "body": "Thanks christian.  Cool, that will be neat in 2.5.0.  In the current scheme, I get the error, but it kills script.  Example:\n\n``` js\n// select box #id has no option with visible text 'text'...\nclient.selectByVisibleText('#id', 'text', function(err, rs) {\n    // got the err!  but script dies.  is there `proceed` or equivalent?\n});\n```\n\nAre you aware of a strategy that I can use?\n",
      "createdAt": "2015-03-17T16:45:26Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjI2MzE3NQ==",
        "title": "Handle selenium error",
        "url": "https://github.com/webdriverio-boneyard/webdriver.io/issues/22"
      },
      "repository": {
        "nameWithOwner": "webdriverio-boneyard/webdriver.io"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyNDcwNzcz": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyNDcwNzcz",
      "body": "@wackazong, check out https://github.com/webdriverio/webdriverio/issues/411\n",
      "createdAt": "2015-03-17T16:47:15Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTU1ODAxMA==",
        "title": "waitForContent, is this a good way of doing it?",
        "url": "https://github.com/webdriverio/webdriverio/issues/462"
      },
      "repository": {
        "nameWithOwner": "webdriverio/webdriverio"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyNTQ1OTE4": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyNTQ1OTE4",
      "body": "just for others, I modified @dylancwood 's code above to handle args to the condition function.  see below.  still studying how to xfer this functionality to client.\n\n``` js\nvar _ = require('lodash');\nvar waitForCondition = function(condition, conditionArgs, options, cb) {\n    if (!_.isArray(conditionArgs)) {\n        conditionArgs = [conditionArgs];\n    }\n    options = options || {};\n    var timeout = options.timeout || config.defaultTimeout; // you may not have this defined :)\n    var interval = options.interval || 500;\n\n    var startTime = new Date();\n    var self = this;\n    var exec = function() {\n        var executeArgs;\n        var poll = function(err, ret) {\n            var duration = +new Date() - startTime;\n            if (err) {\n                cb(err);\n            }\n            if (ret.value) {  // you may want ret.value !== undefined\n                cb();\n            } else {\n                if (duration > timeout) {\n                    console.log(timeout);\n                    console.log(duration);\n\n                    err = new Error('waitForCondition timeout of ' + timeout + ' exceeded');\n                    cb(err);\n                    return;\n                }\n                return exec();\n            }\n        };\n        executeArgs = _.flatten([condition, conditionArgs, poll]);\n        return self.pause(interval).execute.apply(self, executeArgs);\n    };\n    // call exec to set off the recursive waiting\n    return exec();\n};\n```\n",
      "createdAt": "2015-03-17T19:16:25Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjMxMjQ4NQ==",
        "title": "Best way to implement 'waitForCondition'",
        "url": "https://github.com/webdriverio/webdriverio/issues/411"
      },
      "repository": {
        "nameWithOwner": "webdriverio/webdriverio"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyNTU1MzA4": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyNTU1MzA4",
      "body": "you're absolutely right.  Not sure where I went astray.  Whew.  THIS IS GREAT!\n",
      "createdAt": "2015-03-17T19:28:31Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjI2MzE3NQ==",
        "title": "Handle selenium error",
        "url": "https://github.com/webdriverio-boneyard/webdriver.io/issues/22"
      },
      "repository": {
        "nameWithOwner": "webdriverio-boneyard/webdriver.io"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgzMTc0MTY2": {
      "id": "MDEyOklzc3VlQ29tbWVudDgzMTc0MTY2",
      "body": "Hey Allan,\n\nI haven't had a chance to try it yet.  So busy :$  You're the man.  I'll try it out out sometime in the next couple weeks and hopefully come back and update this thread!\n",
      "createdAt": "2015-03-18T21:00:19Z",
      "issue": {
        "id": "MDU6SXNzdWU2MDU3NzA2MA==",
        "title": "Performance",
        "url": "https://github.com/DataTables/Responsive/issues/32"
      },
      "repository": {
        "nameWithOwner": "DataTables/Responsive"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1MTU4NDQ4": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1MTU4NDQ4",
      "body": "dang it, of course.  THanks @NicolasZanotti!\n",
      "createdAt": "2015-03-23T19:27:37Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTk5NTg2Nw==",
        "title": "Drop Debugger Pass Thru Not Functioning",
        "url": "https://github.com/ben-ng/minifyify/issues/85"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1NjgzOTky": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1NjgzOTky",
      "body": "That's enough for a merge, ya?\n",
      "createdAt": "2015-03-24T20:38:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzExOTI2ODk=",
        "title": "Permit No AutoRendering",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/35"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1NzQxNzE1": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1NzQxNzE1",
      "body": "@nickryall, I added `eagerValidate` to my latest 3.0.0 PR.  It mashes with a tiny bit with your great updates, so I'd plan on getting your stuff merged first, before requesting the community to look at mine.\n@erd0s, see [this line in your code](https://github.com/AmpersandJS/ampersand-select-view/pull/24/files#diff-cd18a4507088002c17b5ed65ce48e6c1R204) .  If the field doesn't validate immediately, `this.valid` doesn't get set, and the parent FormView won't know if the field is valid or not.  I believe your intent is not to show the messages, vs. determine the validity.  thus, see what I did [here in my PR](https://github.com/AmpersandJS/ampersand-select-view/pull/36/files#diff-cd18a4507088002c17b5ed65ce48e6c1R212).  `skipValidate` should really be `skipValidationMessages` or equivalent\n",
      "createdAt": "2015-03-24T23:43:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjkxMzk4Njg=",
        "title": "ADDED: Don't validate until the select is either blurred, or the user tr...",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1NzQ0OTQ3": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1NzQ0OTQ3",
      "body": "@bear, could we move forward with an inefficient solution until this gets resolved?  We've got a handful of helpful PRs idling.  I can live with a _no_, but here's a workaround proposal I think is reasonable:\n- disable sauce testing temporarily\n- add all major browsers, -ie, to testem.json\n- dev runs `(git log -n 1 --pretty=format:\"%H\") > PR.txt; testem ci >> PR.txt;`\n  - the above outputs the latest commit and results of all browser assertion results to a file.\n  - dev uploads file to the PR.  alternatively, at least one reviewer checks out feature branch and runs xbrowser test suite and does a +1 +browser-test check off?\n- reviewers assert that the latest commit on the PR matches the commit in the .txt, and that all assertions passed, and then the PR may be merged\n\nNot wild about it, but it keeps us in motion\n",
      "createdAt": "2015-03-25T00:04:33Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTk3NDExMw==",
        "title": "SauceLabs tests won't run on Pull Requests",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/35"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1ODE2NTA1": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1ODE2NTA1",
      "body": "One of us added this since.  Closing\n",
      "createdAt": "2015-03-25T03:41:08Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDI3MTM0NQ==",
        "title": "documentation // `fields` property",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/23"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1ODE2NjAw": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1ODE2NjAw",
      "body": "@pgilad, can you be more specific?\n",
      "createdAt": "2015-03-25T03:41:38Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDA3MDYyMQ==",
        "title": "How can you handle nested model/state children?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/22"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1ODE3MDcw": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1ODE3MDcw",
      "body": "@scottcorgan, simple enough.  You can extend with something like\n\n``` js\ninvalidFields: function() {\n    return this._fieldViewsArray.filter(function(field) {\n        return !field.valid;\n    });\n};\n```\n\nwill that work for ya?\n",
      "createdAt": "2015-03-25T03:46:11Z",
      "issue": {
        "id": "MDU6SXNzdWU0Nzg2NDc2OA==",
        "title": "Easy to to get list of invalid form fields",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/16"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2MTAxMDUw": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2MTAxMDUw",
      "body": "id think if the form is invalid _and_ submitted again, then complete would toggle back to false\n",
      "createdAt": "2015-03-25T16:15:15Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDE2ODExMA==",
        "title": "Complete or submitted property",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/36"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2MTAzOTAw": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2MTAzOTAw",
      "body": "right.  currently it doesn't support additional props.  your best bet at the time of writing is to use a standard &-View, then manage the FormView as a subview.  In this regard, you can place state/collections to the top level view, and reference those props & collection from the subview.  this is what the example shows.  the top level view is in the FormView's closure, so you can ref it, e.g., using the example from the README:\n\n``` js\nvar AwesomeFormView = View.extend({\n    props: {\n        a: 'state' // the state/model/collection you're interested in\n    },\n    template: '<div><p>App form</p><form data-hook=\"app-edit-form\"></form></div>',\n    render: function () {\n        this.renderWithTemplate();\n        this.form = new FormView({\n            el: this.queryByHook('app-edit-form'),\n            submitCallback: function (obj) {\n                console.dir(this.parent.a); // and here it is\n            },\n```\n\ni think. i haven't tested this :$\n",
      "createdAt": "2015-03-25T16:24:58Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDA3MDYyMQ==",
        "title": "How can you handle nested model/state children?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/22"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2Mzc4MTk5": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2Mzc4MTk5",
      "body": "thanks @kamilogorek.  what did you think of [this class change](https://github.com/AmpersandJS/ampersand-select-view/pull/36/files#diff-cd18a4507088002c17b5ed65ce48e6c1R45)?  I'm not 100% on that.\n",
      "createdAt": "2015-03-26T07:46:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzE4ODA2NzM=",
        "title": "3.0.0 RC",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/36"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2Mzk1NDYw": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2Mzk1NDYw",
      "body": "Excellent!  If someone can volunteer to update the ci process _not_ to trigger sauce and also critique/bless https://github.com/AmpersandJS/ampersand-select-view/issues/38, we can be on our merry way!\n",
      "createdAt": "2015-03-26T08:24:25Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTk3NDExMw==",
        "title": "SauceLabs tests won't run on Pull Requests",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/35"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2ODM1NzQ4": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2ODM1NzQ4",
      "body": "thanks gar.  i reverted those classes back\n",
      "createdAt": "2015-03-27T05:58:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzE4ODA2NzM=",
        "title": "3.0.0 RC",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/36"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2ODQ1NDQy": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2ODQ1NDQy",
      "body": "hey @nickryal, your new commits look good too.  [this test](https://github.com/nickryall/ampersand-select-view/commit/bbe2804b17c76b99720c3d964c4a04ed35b80c92#diff-910eb6f57886ca16c136101fb1699231R94) may not be desirable per our parallel discussion.  Also, I like your `opts.options` validation, but you're missing [[1, 2]] case, and even then, we won't verify all of the contents' validity.  I think closing [5](https://github.com/AmpersandJS/ampersand-select-view/issues/5) via my PR may cover this sufficiently enough?\n\n+1, tests passing\n",
      "createdAt": "2015-03-27T06:48:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwMTkwMjc=",
        "title": "Fix for #23 and other updates",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/32"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2ODQ5NDg1": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2ODQ5NDg1",
      "body": "@kamilogorek @HenrikJoreteg, gar and I discussed handling cases where DOM events aren't fired when expected-or-desired [here](https://github.com/AmpersandJS/ampersand-input-view/pull/43), but agreed to close the PR after discussion.  unfortunately, it seems like workaround solutions out there are equally poor.  this alone makes me want to re-open that PR, and denote why we needed to do it until Safari get's its butt in gear.\n",
      "createdAt": "2015-03-27T07:06:52Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzYxMDg5Ng==",
        "title": "Change event doesn't fire on autofill",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/2"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3MDc5MzYx": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3MDc5MzYx",
      "body": "Cool.  We'll, let's close this discussion for now, and perhaps I'll shoot something your way in the coming weeks, or even a working demo\n",
      "createdAt": "2015-03-27T20:29:43Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDE2ODExMA==",
        "title": "Complete or submitted property",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/36"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3MTA3NjE0": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3MTA3NjE0",
      "body": "agreed.  shall we close this PR for the time being?\n",
      "createdAt": "2015-03-27T22:25:08Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjM1OTA5Mjk=",
        "title": "Refactoring to be extended from ampersand-view.",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/18"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3MTA4MDY5": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3MTA4MDY5",
      "body": "#15 closed, i think we're good to go\n",
      "createdAt": "2015-03-27T22:28:55Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDIwMDgzMA==",
        "title": "Blocks Form Submission",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/4"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3MTA4MjY4": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3MTA4MjY4",
      "body": "@wraithgar, no access yet, both modules\n",
      "createdAt": "2015-03-27T22:30:51Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzY0MDA4OA==",
        "title": "Lead maintainers",
        "url": "https://github.com/AmpersandJS/ampersand/issues/95"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3MzU3MzAx": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3MzU3MzAx",
      "body": "Hey nick, I added it, but later removed it so as to not conflict with your\nPR.  Thanks for the catch.\n\nOn Saturday, March 28, 2015, Nick Ryall notifications@github.com wrote:\n\n> Reset is not in yet. Pending on #32\n> https://github.com/AmpersandJS/ampersand-select-view/pull/32 which\n> needs to be re-worked following #36\n> https://github.com/AmpersandJS/ampersand-select-view/pull/36\n> \n> @cdaringe https://github.com/cdaringe Is this correct? I can't see reset\n> in the latest source, but it is documented in the latest readme. Just\n> checking is hasn't been left it out by accident before I re-submit a PR\n> with it.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/AmpersandJS/ampersand-select-view/issues/30#issuecomment-87293531\n> .\n\n## \n\nChris Dieringer\np: (503)358-8577\ne: cdieringer@mrn.org\nw: http://cdaringe.net/\n",
      "createdAt": "2015-03-29T04:37:42Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTc0MzA3MQ==",
        "title": "reset() method for use with ampersand-form-view",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/30"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NDkxOTQz": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NDkxOTQz",
      "body": "great, thanks folks.  fear not, i'll be a good steward :smile: \n",
      "createdAt": "2015-03-29T22:50:33Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzY0MDA4OA==",
        "title": "Lead maintainers",
        "url": "https://github.com/AmpersandJS/ampersand/issues/95"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NTUwMDIw": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NTUwMDIw",
      "body": "hey @nickryall:\n- Given that we now know that `startingValue` must exist in the option set, reset() should probably require no other logic than to setting the value back to `startingValue` and then updating the selected option in the control (setValue already handles the latter).  perhaps if the option set is dynamic and the starting option is removed, other logic could justified.  however, in that case, I would lobby that it's not truly a `reset()` anymore.  what do you think?\n\n> I was going to fallback to clear here, however, it will result in an error if there isn't a null option available. Is this the expected behavior of clear?\n- I interpret `clear` as removal-of-value.  that would mean to set the field value to `null`, or perhaps the the empty string (not `undefined`, tho!).  admittedly, however, the case of the empty string still isn't quite baked in SelectView.  we should certainly do so soon.  `options: ['a', '', 'c']` then a `.setValue` on `''`, for example, will fail.\n",
      "createdAt": "2015-03-30T05:16:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxODk3NTE=",
        "title": "reset and beforeSubmit Methods. Explicitly hide message container on setup. ",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/39"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NTYxMjU0": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NTYxMjU0",
      "body": "+1\n",
      "createdAt": "2015-03-30T06:11:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxNzczODE=",
        "title": "update ampersand-view; remove unused amp-defaults",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/58"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NTYyMzQw": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NTYyMzQw",
      "body": "+1\n",
      "createdAt": "2015-03-30T06:18:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxNjEzMzc=",
        "title": "Remove unused amp-defaults dep",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/57"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NTY1MjQ4": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NTY1MjQ4",
      "body": "hey @nickryall.  sure, but if you can only ever have an option in the option set, then there is _always a `startingValue`_\n",
      "createdAt": "2015-03-30T06:24:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxODk3NTE=",
        "title": "reset and beforeSubmit Methods. Explicitly hide message container on setup. ",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/39"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NTY4NzI2": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NTY4NzI2",
      "body": "apologies for the lack of clarity in my original intent, as the remark didn't reflect your PR code!  hence the confusion\n",
      "createdAt": "2015-03-30T06:28:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxODk3NTE=",
        "title": "reset and beforeSubmit Methods. Explicitly hide message container on setup. ",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/39"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NTc2MDM2": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NTc2MDM2",
      "body": "too funny--we're on the same page.  initializing `startingValue` unconditionally on construction would be some extra effort, but _may_ be worth it long term.  we have the following case that could create issue:\n- you may have a collection of Models with ids 'foo', 'bar', and 'baz'\n-  no initial `value` is passed to the constructor\n- post-initialization, `'foo'` gets removed.\n- a `reset` happens. 'bar' is now selected\n\nI'd think that's an Error state, as really, `'foo'` was the original value.  Regardless, I think what you've got here now is good, and definitely beats nothing.\n\nlet me know if you'd like to arm-wrestle some more over `clear`.  a 0th-index selecting `clear()` may feel right to others beyond yourself\n",
      "createdAt": "2015-03-30T07:12:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxODk3NTE=",
        "title": "reset and beforeSubmit Methods. Explicitly hide message container on setup. ",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/39"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3ODg2NTQz": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3ODg2NTQz",
      "body": "@nickryall.  i hear ya.  Furthermore, to support your thought process, I think that's what @latentflip may have originally intended as the lib seemed to like defaulting to index 0.  My opinion is still that a [bulletproof](https://github.com/AmpersandJS/ampersand-form-view) form won't passively accept an error state.  If I start in an arbitrary state A, request to `reset()` to state A, yet end up in state B--that's contrary to the linguistic intent, thus arguably an error.  Passively moving to state B I think may induce user heartache in the future.  Perhaps we make this configurable?\n\n@wraithgar @kamilogorek @latentflip \nwe'd like your input on this discussion.  To summarize briefly, the discussion is simply should a `reset()` in ampersand-select-view default to the 0th-index <option> or should it throw an Error, if and when the original value is no longer present in the option set.\n",
      "createdAt": "2015-03-31T00:32:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxODk3NTE=",
        "title": "reset and beforeSubmit Methods. Explicitly hide message container on setup. ",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/39"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg4MzU3NTE2": {
      "id": "MDEyOklzc3VlQ29tbWVudDg4MzU3NTE2",
      "body": "@wraithgar, yes, absolutely.  perhaps a simple module to publish would be ampersand-field-view-conventions, much like the normal view convention lib.  each field view's test suite runs it, and we are on our way.  someone asked in the gitter recently if they could 'save' their form, which ultimately means reconstruct it.  with `setValue` and `getValue` in each FieldView, form caching & reconstruction becomes feasible within the ampersand toolchain.\n\nactually, it looks like latentflip [already had this idea](https://github.com/AmpersandJS/ampersand-view-conventions/blob/master/ampersand-view-conventions.js#L48).  we just need to beef it up and add the test suite to each FieldView.\n",
      "createdAt": "2015-04-01T05:37:48Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjI4MTk5MQ==",
        "title": "aggregate functions",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/28"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg4MzY1MDYw": {
      "id": "MDEyOklzc3VlQ29tbWVudDg4MzY1MDYw",
      "body": "##### review formField view conventions\n\n latentflip has some good fieldView requirements in there already. here are some additions I think should be considered (✓ when implemented in formField conventions):\n- [x] should support `setValue`\n- [x] ~~should support getValue~~  _`.value` should suffice for this requirement_\n- [ ] should support `autoRender: false` option (possibly redundant if we want to move FieldViews to extend ampersand-view)\n- [x] should have an explicit boolean `.valid` after construction, regardless of rendered state\n\nIssues submitted to common field views requesting addition of _view-conventions_ and _formField view-conventions_ to test suites\n",
      "createdAt": "2015-04-01T06:15:25Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjI4MTk5MQ==",
        "title": "aggregate functions",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/28"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg4MzkzNjIz": {
      "id": "MDEyOklzc3VlQ29tbWVudDg4MzkzNjIz",
      "body": "hey @nickryall:\n\nstill lovin' this PR.  I hope I'm not coming off rude or too picky :smile: , but...\n1. `reset` doing _nothing_ when `opts.value` isn't defined doesn't really solve my initial problem statement.  i'm still thinking that reset needs to be honest, and needs to be explicit.  Perhaps we could adjust `setValue()` to return the actual `value` vs `this` (no chaining :( ), and then in construction we modify the setValue call to look like `this.startingValue = setValue(opts.value, opts.eagerValidate ? false : true);`.  To finish it up, reset would be simply be `function() { return this.setValue(this.startingValue, true); }`.  It would break some of your tests as they stand, but at least we'd know explicitly what the startingValue really is, and reset would try to set it to it no matter what.\n2. `beforeSubmit` won't work as you have it with collections, as yieldModel, for instance, expects an object to be passed to setValue.  In your case, you're just submitting a string.\n\nI checked out your PR and did an update on it.  Solving the first issue actually led to finding some further issues, hence the ~large update.  [Check out the diff here](https://gist.github.com/cdaringe/2aa1dac555a0a6cb4c79).\n\nTell me what you think!\n",
      "createdAt": "2015-04-01T08:34:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxODk3NTE=",
        "title": "reset and beforeSubmit Methods. Explicitly hide message container on setup. ",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/39"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg4NTM5ODky": {
      "id": "MDEyOklzc3VlQ29tbWVudDg4NTM5ODky",
      "body": "text updated\n",
      "createdAt": "2015-04-01T16:17:12Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjI4MTk5MQ==",
        "title": "aggregate functions",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/28"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg4NjAyNzgz": {
      "id": "MDEyOklzc3VlQ29tbWVudDg4NjAyNzgz",
      "body": "How about I tidy up my content, and submit a PR to your personal master branch?  In that regard, you can see more clearly my take on your good stuff, and we can keep it in this PR.  I'm thinking about trashing the `try` blocks for performance reasons and using a `test-if-option-exists` sort of implementation.\n\nI meant to trash that `clear` remark.  Sorry there!\n",
      "createdAt": "2015-04-01T19:26:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxODk3NTE=",
        "title": "reset and beforeSubmit Methods. Explicitly hide message container on setup. ",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/39"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg4NzYwNDA1": {
      "id": "MDEyOklzc3VlQ29tbWVudDg4NzYwNDA1",
      "body": "should this be executed post- error/success handler?  I feel like that is more common behavior.    i never used the jQ ajax.always(), but `always` sounds analogous to `finally`, and I frequently use the promise [rsvp finally](https://github.com/tildeio/rsvp.js/#finally), which is generally used to exec after the fact.\n\njust asking. :smile: \n",
      "createdAt": "2015-04-02T06:16:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjY5Mzc1NjI=",
        "title": "Provide an 'always' callback",
        "url": "https://github.com/AmpersandJS/ampersand-sync/pull/33"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-sync"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg4OTM1NDM0": {
      "id": "MDEyOklzc3VlQ29tbWVudDg4OTM1NDM0",
      "body": "Thanks Ben!  I found a dupe question here https://groups.google.com/forum/m/#!topic/google-chrome-developer-tools/EPG4T_Q_LNQ\n",
      "createdAt": "2015-04-02T14:54:55Z",
      "issue": {
        "id": "MDU6SXNzdWU2NTgxMTUyNQ==",
        "title": "sourceMap loads, developer tools vars still mangled",
        "url": "https://github.com/ben-ng/minifyify/issues/91"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5MzQ4ODQ2": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5MzQ4ODQ2",
      "body": "Ben, have you been able to disable mangling?  I suspect that however minifify passes mange ops to uglify may suffers from this issue: https://github.com/mishoo/UglifyJS2/issues/378.  I get `Error` warnings on most files.\n\n``` js\n// no workee\nvar compressOpts = {\n    drop_debugger: false,\n    unsafe: false,\n    dead_code: true,\n    mangle: false\n};\n\n// also no workee\nvar compressOptsDev = {\n    drop_debugger: false,\n    unsafe: false,\n    dead_code: true,\n    mangle: {\n        sort: false,\n        toplevel: false,\n        eval: false\n    }\n};\n```\n",
      "createdAt": "2015-04-03T16:44:00Z",
      "issue": {
        "id": "MDU6SXNzdWU2NTgxMTUyNQ==",
        "title": "sourceMap loads, developer tools vars still mangled",
        "url": "https://github.com/ben-ng/minifyify/issues/91"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5NDc2MzEy": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5NDc2MzEy",
      "body": "hey gar, ya, I will.  adding the required capability to extend `beforeSubmit`.  I have no hard qualms with removing the container hooks, although it might be nice!\n",
      "createdAt": "2015-04-04T01:05:26Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjI4MTk5MQ==",
        "title": "aggregate functions",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/28"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5NTE0MjU1": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5NTE0MjU1",
      "body": "hey @nickryall!  Sorry it took a while to get this your way.  Let me know if you find my adjustments acceptable\n",
      "createdAt": "2015-04-04T06:54:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzI2MzAxMTQ=",
        "title": "Support #39 improvements",
        "url": "https://github.com/nickryall/ampersand-select-view/pull/1"
      },
      "repository": {
        "nameWithOwner": "nickryall/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5NTE0OTMz": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5NTE0OTMz",
      "body": "we no longer validate onblur, so that's taken care of.  this is likely to prevent validation from popping up from just tabbing thru.  the template is the place likely to drop your auto-focus attr, just as wraithgar suggested.  of course, your post-render method can work too!  it looks like setting `shouldValidate` to false on `reset()` has already made it into the repo as shown [here](https://github.com/AmpersandJS/ampersand-input-view/blob/master/ampersand-input-view.js#L213) then [here](https://github.com/AmpersandJS/ampersand-input-view/blob/master/ampersand-input-view.js#L142)\n\nwith that said, sounds like you're good to go!  of course, follow back up if we missed anything\n",
      "createdAt": "2015-04-04T07:13:56Z",
      "issue": {
        "id": "MDU6SXNzdWU1MjgyNjgxNg==",
        "title": "Best way to modify InputView?",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/33"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5NTE1NDU5": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5NTE1NDU5",
      "body": "**bump**.  reviving this in effort to support https://github.com/AmpersandJS/ampersand-form-view/issues/28\n",
      "createdAt": "2015-04-04T07:22:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjM2MDA0NDk=",
        "title": "Fix tests for input views",
        "url": "https://github.com/AmpersandJS/ampersand-view-conventions/pull/5"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view-conventions"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5NTE1NDcz": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5NTE1NDcz",
      "body": "Cross-referencing https://github.com/AmpersandJS/ampersand-form-view/issues/28\n",
      "createdAt": "2015-04-04T07:23:32Z",
      "issue": {
        "id": "MDU6SXNzdWU0NzI2MjY1NA==",
        "title": "Does not pass view-convention tests.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/26"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5NTE2Mzg3": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5NTE2Mzg3",
      "body": "issues filed\n",
      "createdAt": "2015-04-04T07:31:54Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjI4MTk5MQ==",
        "title": "aggregate functions",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/28"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5ODczODg2": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5ODczODg2",
      "body": "hey @vwasteels, [per the source](https://github.com/AmpersandJS/ampersand-view/blob/master/ampersand-view.js#L332) there is not.  Because of the ambiguity & uncertainty of the returned elements, &-js would not know _how_ you would like those cached.  I.e. how would your elements get stored onto obj? `this.titleSocial1`?, `this.title_social_el_0`?, etc etc. I'd recommend that you add a sugar function to do the query, and index on key definitions as you see fit.\n\nLet me know if that was unclear!  If you have an idea about a standard way to do it that could be beneficial, please share. :smile: \n",
      "createdAt": "2015-04-06T00:34:50Z",
      "issue": {
        "id": "MDU6SXNzdWU2MDExOTI2MQ==",
        "title": "cacheElements with queryAll",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/107"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5ODg4OTc5": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5ODg4OTc5",
      "body": "after reviewing the formField view convention requirements code, it's clear that the criteria was well thought through on first pass.  we really don't need to add more, beyond that in open pull requests.  \n\nsimply adding the test requirements to each field view should suffice, then the aggregate functions should be able to be added safely\n",
      "createdAt": "2015-04-06T02:03:05Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjI4MTk5MQ==",
        "title": "aggregate functions",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/28"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5OTA3MTk2": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5OTA3MTk2",
      "body": "additionally, may we simultaneously reduce the stringency of [this line](https://github.com/AmpersandJS/ampersand-view-conventions/pull/5/files#diff-15331390f4c8c1e49f6771cd4205b6acR105) to perhaps just a `t.ok`?  [This is still inwork](https://github.com/AmpersandJS/ampersand-input-view/issues/56), thus input view tests will still break\n",
      "createdAt": "2015-04-06T03:39:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjM2MDA0NDk=",
        "title": "Fix tests for input views",
        "url": "https://github.com/AmpersandJS/ampersand-view-conventions/pull/5"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view-conventions"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg5OTE2Mjk5": {
      "id": "MDEyOklzc3VlQ29tbWVudDg5OTE2Mjk5",
      "body": "hey @mike-engel, we were going to add some additional requirements to formField conventions, but the request is to simply add https://github.com/AmpersandJS/ampersand-view-conventions to the test suite!  [example](https://github.com/AmpersandJS/ampersand-select-view/blob/master/test/index.js#L43)\n",
      "createdAt": "2015-04-06T04:43:30Z",
      "issue": {
        "id": "MDU6SXNzdWU2NjI4NjM3NQ==",
        "title": "Implement view convention and formField view convention tests",
        "url": "https://github.com/datuhealth/ampersand-floatinglabel-input-view/issues/2"
      },
      "repository": {
        "nameWithOwner": "datuhealth/ampersand-floatinglabel-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwMDc5MDAz": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwMDc5MDAz",
      "body": "Yessir!  https://ampersandjs.com/learn/forms#form-input-view-conventions .\nWhat is not there is making sure to add the &-view convention test suite to\nyour field view tests\nhttps://github.com/AmpersandJS/ampersand-view-conventions.  See\nampersand-select-view for an example of how the tape suite is set up\nconcisely to execute the view convention tests before it runs its own.\n\nOn Sunday, April 5, 2015, Gabriel Dibble notifications@github.com wrote:\n\n> _obvious question or not:_     is there a posted _SPEC_ for\n> form-field-view developers to follow?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/AmpersandJS/ampersand-form-view/issues/28#issuecomment-89932251\n> .\n\n## \n\nChris Dieringer\np: (503)358-8577\ne: cdieringer@mrn.org\nw: http://cdaringe.net/\n",
      "createdAt": "2015-04-06T14:14:36Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjI4MTk5MQ==",
        "title": "aggregate functions",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/28"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwMjA2MDU0": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwMjA2MDU0",
      "body": "@nickryall, give it up for teamwork :metal: !\n\n+1, tests pass\n",
      "createdAt": "2015-04-06T19:28:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxODk3NTE=",
        "title": "reset and beforeSubmit Methods. Explicitly hide message container on setup. ",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/39"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwNjk4ODM3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwNjk4ODM3",
      "body": "Closing with #59.  Your validation still won't happen precisely when autocomplete happens, but at least beforeSubmit validation will occur.  A reasonable temp workaround\n",
      "createdAt": "2015-04-07T19:01:45Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzYxMDg5Ng==",
        "title": "Change event doesn't fire on autofill",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/2"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwNjk4OTY3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwNjk4OTY3",
      "body": "Closing with #59 \n",
      "createdAt": "2015-04-07T19:02:18Z",
      "issue": {
        "id": "MDU6SXNzdWU0NzI2MjY1NA==",
        "title": "Does not pass view-convention tests.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/26"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwNzA5MTA5": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwNzA5MTA5",
      "body": "really the preg_match's _silently fail_ by not matching full well. Actually, the change probably hit in 5.3.6 or 5.3.7? http://php.net/ChangeLog-5.php#5.3.6\n\nI didn't have a change to try these incremental versions--I did have the chance to test on 5.3.10\n",
      "createdAt": "2015-04-07T19:39:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwNTg0MjM=",
        "title": "Update to 5.3.10.",
        "url": "https://github.com/f3-factory/F3com-data/pull/64"
      },
      "repository": {
        "nameWithOwner": "f3-factory/F3com-data"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwNzE2MDU0": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwNzE2MDU0",
      "body": "sure. apologies for the lack or information posted before hand.  i know better.  panic mode ensued when pushing to production.  anyway, here was a simple test I ran between my two versions.\n\n``` php\n$pattern = \"GET /v1/study\";\n$types = array(\"ajax\", \"async\");\npreg_match('/([\\|\\w]+)\\h+(?:(?:@(\\w+)\\h*:\\h*)?([^\\h]+)|@(\\w+))(?:\\h+\\[('.implode('|',$types).')\\])?/',$pattern,$parts);\nprint_r($parts); // in 5.3.5 empty array observed. in 5.3.10, populated array observed\n```\n\nthis originated from the `route` function in `base.php` (below is the diff how I shadily hacked it to make it work with my install temporarily)\n\n``` diff\n    function route($pattern,$handler,$ttl=0,$kbps=0) {\n        $types=array('sync','ajax');\n-       if (is_array($pattern)) {\n-           foreach ($pattern as $item)\n-               $this->route($item,$handler,$ttl,$kbps);\n-           return;\n-       }\n-       preg_match('/([\\|\\w]+)\\h+(?:(?:@(\\w+)\\h*:\\h*)?([^\\h]+)|@(\\w+))'.\n-           '(?:\\h+\\[('.implode('|',$types).')\\])?/',$pattern,$parts);\n-       if ($parts[2])\n-           $this->hive['ALIASES'][$parts[2]]=$parts[3];\n-       elseif (!empty($parts[4])) {\n-           if (empty($this->hive['ALIASES'][$parts[4]]))\n-               user_error(sprintf(self::E_Named,$parts[4]));\n-           $parts[3]=$this->hive['ALIASES'][$parts[4]];\n-       }\n-       if (empty($parts[3]))\n+        $urlPos = strpos($pattern, '/');\n+        $actions = trim(substr($pattern, 0, $urlPos));\n+        $url = trim(substr($pattern, $urlPos));\n+       if (empty($url))\n            user_error(sprintf(self::E_Pattern,$pattern));\n        $type=empty($parts[5])?\n            self::REQ_SYNC|self::REQ_AJAX:\n            constant('self::REQ_'.strtoupper($parts[5]));\n-       foreach ($this->split($parts[1]) as $verb) {\n+       foreach ($this->split($actions) as $verb) {\n            if (!preg_match('/'.self::VERBS.'/',$verb))\n                $this->error(501,$verb.' '.$this->hive['URI']);\n-           $this->hive['ROUTES'][str_replace('@',\"\\x00\".'@',$parts[3])]\n+           $this->hive['ROUTES'][str_replace('@',\"\\x00\".'@',$url)]\n                [$type][strtoupper($verb)]=array($handler,$ttl,$kbps);\n        }\n    }\n```\n",
      "createdAt": "2015-04-07T20:07:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwNTg0MjM=",
        "title": "Update to 5.3.10.",
        "url": "https://github.com/f3-factory/F3com-data/pull/64"
      },
      "repository": {
        "nameWithOwner": "f3-factory/F3com-data"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwNzM2MTU4": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwNzM2MTU4",
      "body": "Yep, CentOS.\nPCRE `6.6 06-Feb-2006`\n:frowning:\n\nis it worth changing my README update to denote that?  what are your thoughts?\n",
      "createdAt": "2015-04-07T21:21:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwNTg0MjM=",
        "title": "Update to 5.3.10.",
        "url": "https://github.com/f3-factory/F3com-data/pull/64"
      },
      "repository": {
        "nameWithOwner": "f3-factory/F3com-data"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwOTU3MzYy": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwOTU3MzYy",
      "body": "well that's super embarrassing. :/  sorry guys.  sheesh, can't believe i missed all of that\n",
      "createdAt": "2015-04-08T15:50:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwNTg0MjM=",
        "title": "Update to 5.3.10.",
        "url": "https://github.com/f3-factory/F3com-data/pull/64"
      },
      "repository": {
        "nameWithOwner": "f3-factory/F3com-data"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwOTc2NjY3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwOTc2NjY3",
      "body": "+1, tests pass\n",
      "createdAt": "2015-04-08T17:06:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzI4NDIzNTg=",
        "title": "Check for parentNode before invoking removeChild",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/41"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkwOTc3MDU5": {
      "id": "MDEyOklzc3VlQ29tbWVudDkwOTc3MDU5",
      "body": "you guys think we should add the tests to view-conventions additionally/instead?\n",
      "createdAt": "2015-04-08T17:09:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzI4NDIzNTg=",
        "title": "Check for parentNode before invoking removeChild",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/41"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxMDQ0ODc1": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxMDQ0ODc1",
      "body": "Hey @e2jk, there are dozens of programs that fakeApi could be.  What it boils down to is that your API needs to be manually coded to support that feature.  Ampersand can't control your server.  Ampersand sync provides hooks to enable you to send all sorts of other data to the server which you could use to help facilitate this. But, the bottom line is that you can't blur these two subsystems together.  They are two components of one system, and they are generally entirely decoupled, meaning that one knows nothing about the other\n",
      "createdAt": "2015-04-08T21:44:32Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODIzMzE3MA==",
        "title": "`GET` not working when `POST`/`PUT` was done with `yieldModel: false`",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/27"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxNjIxMjI1": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxNjIxMjI1",
      "body": "I didn't realize this was an open issue.  This is actually resolved in recent versions of form-view :smile: \n",
      "createdAt": "2015-04-10T16:57:46Z",
      "issue": {
        "id": "MDU6SXNzdWU1Mzk3ODI2Mg==",
        "title": "Render happens before Initialize",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/21"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxNjIxNTc3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxNjIxNTc3",
      "body": "Let's get back in touch if further discussion is needed and hash it out!\n",
      "createdAt": "2015-04-10T16:59:07Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDA3MDYyMQ==",
        "title": "How can you handle nested model/state children?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/22"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxNjIyNzMy": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxNjIyNzMy",
      "body": "hey @Zearin, im looking [at render( ) now](https://github.com/AmpersandJS/ampersand-form-view/blob/master/ampersand-form-view.js#L143), and not observing this behavior.  perhaps this was old timey functionality!  I think we will eventually want to migrate to &-view, but nothing has been settled ATM!\n",
      "createdAt": "2015-04-10T17:05:11Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDM0NTY3NA==",
        "title": "New object on every `render()`?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxNjUzMzYz": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxNjUzMzYz",
      "body": "no, it is not.  however, rendered events don't happen on non- &-view form field views\n",
      "createdAt": "2015-04-10T19:06:06Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzY0MzE5MQ==",
        "title": "form-view and field-view rendered relation inconsistency",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/41"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxOTMyNDEx": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxOTMyNDEx",
      "body": "mutation to existing logic was kept to a minimum, except those updates that\n- required changes in order to support &-view\n- required changes to add new features\n",
      "createdAt": "2015-04-11T21:46:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTA1NTY=",
        "title": "3.0.0 rc",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/7"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxOTU5MDU3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxOTU5MDU3",
      "body": "@dhritzkiv,\n- here's the issue, detailed: https://github.com/AmpersandJS/ampersand-form-view/issues/41 \n- here it is, summarized:\n  - SelectView `render()`s immediately on construction, which is not expected view behavior on construction.  it immediately sets `.rendered` to true\n  - FormView doesn't call `render()` on fieldViews if they are _already rendered_.\n\nI just patched up &-checkbox-view to [not `render()` during construction](https://github.com/AmpersandJS/ampersand-checkbox-view/pull/7), but it needs core_team and community review.  select-view will be soon.\n",
      "createdAt": "2015-04-12T01:13:55Z",
      "issue": {
        "id": "MDU6SXNzdWU2Nzg0MzI3OA==",
        "title": "Not compatible with ampersand-form-view@3.x",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxOTgzMzUz": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxOTgzMzUz",
      "body": "See #42 \n",
      "createdAt": "2015-04-12T04:03:34Z",
      "issue": {
        "id": "MDU6SXNzdWU1MjI3NjY2Ng==",
        "title": "Extend from ampersand-view or rename",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/20"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxOTgzNTU4": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxOTgzNTU4",
      "body": "`extend` was added after this question, but didn't have the full `State` capability that may have expected expected.  see semi-duplicate #25, and PR #42.  Thanks!\n",
      "createdAt": "2015-04-12T04:05:31Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDM0NjU0OA==",
        "title": "No `FormView.extend()`?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/25"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxOTgzNzc5": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxOTgzNzc5",
      "body": "hey @dhritzkiv! at the time of writing, they are still unavailable.  please see PR #42.  would love to get your review on it too, as i know you're a power-user\n",
      "createdAt": "2015-04-12T04:07:51Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTIyNjE3Mg==",
        "title": "listenTo not a method?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/8"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkxOTg0MzEx": {
      "id": "MDEyOklzc3VlQ29tbWVudDkxOTg0MzEx",
      "body": "@wraithgar, pretty much what I'm getting is that is that I'm going to go through all of the fields, remove `render()` out of `initialize()`, and likely extend from ampersand-view.  I hope this will be well received?\n",
      "createdAt": "2015-04-12T04:12:37Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzY0MzE5MQ==",
        "title": "form-view and field-view rendered relation inconsistency",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/41"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkyMDAyMzY0": {
      "id": "MDEyOklzc3VlQ29tbWVudDkyMDAyMzY0",
      "body": "[3.0.0](https://github.com/AmpersandJS/ampersand-select-view/commit/002201f5dc3a972fc25404a6d6a14675d1da9f6d) closed this issue\n",
      "createdAt": "2015-04-12T07:08:57Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjU5NzQxNQ==",
        "title": "should not flag as invalid on initialization",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/23"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkyMDAzMDg0": {
      "id": "MDEyOklzc3VlQ29tbWVudDkyMDAzMDg0",
      "body": "hey @wraithgar, i think we may actually be set here.  it may not be as pretty as &-input-view, but `.value` functions as `getValue`, and `setValue` is dialed in.  additionally, we have formField view conventions running against it.\n\nbecause of `yieldModel`,\n\n> you can get .value and expect the actual string value that would be sent when the form is submitted\n\nwon't always hold true, but that's acceptable\n\nOK to close it up?\n",
      "createdAt": "2015-04-12T07:25:32Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjI4MTE1Ng==",
        "title": "inconsistent API within ampersand-*-view ecosystem",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/21"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkyMDA1MjU5": {
      "id": "MDEyOklzc3VlQ29tbWVudDkyMDA1MjU5",
      "body": "hi @erd0s, apologies for the huge dialog on this one!\n1. the extra validation & functions that you added here was already added by @nickryall in subsequent commits (minus handleBlur)\n2. in our other fieldView READMEs (ref input view), we don't blur explicitly\n\n> Will not show error messages pre-submit, or if it's never had a valid value. This lets people tab-through a form without triggering a bunch of error messages.\n\nI hold the counter-opinion to @lukekarrys--I think consistency is important for the user experience across controls, specifically because of the tabbing.\n\nin light of PR #43 4.0.0 RC (which has high precedence given issue #42), I'd like to put this review on hold, or perhaps close it temporarily until the the above is merged and conflicts resolved.  Let me know your thoughts.  thanks!\n",
      "createdAt": "2015-04-12T07:43:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjkxMzk4Njg=",
        "title": "ADDED: Don't validate until the select is either blurred, or the user tr...",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkyMTQ4MTI3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkyMTQ4MTI3",
      "body": "thanks @dhritzkiv!  updates pushed\n",
      "createdAt": "2015-04-12T23:04:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTQ0ODQ=",
        "title": "&-view conversion and closes #28",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkyNTMwMzI0": {
      "id": "MDEyOklzc3VlQ29tbWVudDkyNTMwMzI0",
      "body": "@PureSin , your PR is closed.  what's the scoop?\n",
      "createdAt": "2015-04-13T23:11:54Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDY3MzQxNw==",
        "title": "npm publish",
        "url": "https://github.com/jpillora/notifyjs/issues/31"
      },
      "repository": {
        "nameWithOwner": "jpillora/notifyjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkyOTI1Njkw": {
      "id": "MDEyOklzc3VlQ29tbWVudDkyOTI1Njkw",
      "body": "@mrDarcyMurphy, because of [line 159](https://github.com/AmpersandJS/ampersand-form-view/blob/master/ampersand-form-view.js#L159) and because the fieldViews are `rendered`, form view will skip 'em, regardless of _when_ formView is rendered.  the trick is to let form view handle the rendering of the field views, or manually render the field views (vs. the fields rendering themselves!).  I have updates in a series of field view repos to patch this.  which controls are you wrestling with?\n",
      "createdAt": "2015-04-14T15:52:52Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzY0MzE5MQ==",
        "title": "form-view and field-view rendered relation inconsistency",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/41"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkyOTI4MjM2": {
      "id": "MDEyOklzc3VlQ29tbWVudDkyOTI4MjM2",
      "body": "for now, you should be able to downgrade form view to 2.x and use controls that self render.  if you're not sure if they self render, perhaps just pass `autoRender: true` to them all for safety!\n",
      "createdAt": "2015-04-14T15:56:35Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzY0MzE5MQ==",
        "title": "form-view and field-view rendered relation inconsistency",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/41"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzMTg0NTI1": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzMTg0NTI1",
      "body": "ahhhh yeeaa! :+1:\n",
      "createdAt": "2015-04-15T04:36:47Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTI5NzQ4Nw==",
        "title": "ecosystem.json declaration ignored",
        "url": "https://github.com/Unitech/pm2/issues/1093"
      },
      "repository": {
        "nameWithOwner": "Unitech/pm2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzNTE0MzU3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzNTE0MzU3",
      "body": "yep, that'd be ideal\n",
      "createdAt": "2015-04-15T18:15:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzIxODk3NTE=",
        "title": "reset and beforeSubmit Methods. Explicitly hide message container on setup. ",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/39"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzNTI3OTc0": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzNTI3OTc0",
      "body": "synced\n",
      "createdAt": "2015-04-15T18:42:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTYzODI=",
        "title": "4.0.0 RC",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzNTI4NTQ3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzNTI4NTQ3",
      "body": "additionally, reviewing with `?w=1` in the URL makes the diff look **much better** and easy to process\n",
      "createdAt": "2015-04-15T18:43:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTYzODI=",
        "title": "4.0.0 RC",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzNTYxMDg3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzNTYxMDg3",
      "body": "hey @mrDarcyMurphy.  the module is geared to show the label based on presence of the label el, regardless of the label content.  same thing goes for the validation messages & message containers.  in your app, rather than setting the label to the empty string, can you instead just hide the label?  both still one line calls--`selectView.el.querySelector('[data-hook~=label]').style.display = 'none'`\n",
      "createdAt": "2015-04-15T20:34:55Z",
      "issue": {
        "id": "MDU6SXNzdWU2ODc3ODU5Mg==",
        "title": "Please don't set the label to opts.name",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/44"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzNTgyNDQ0": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzNTgyNDQ0",
      "body": "Ah, I see.  When it was \"stated doesn't show up\", I was literally thinking the node itself.  We should def add the undef check\n",
      "createdAt": "2015-04-15T22:07:59Z",
      "issue": {
        "id": "MDU6SXNzdWU2ODc3ODU5Mg==",
        "title": "Please don't set the label to opts.name",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/44"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzNjAzODEw": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzNjAzODEw",
      "body": "hi @erd0s, closing per the above remark, for now.  let's reopen to discuss further as needed\n",
      "createdAt": "2015-04-16T00:12:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjkxMzk4Njg=",
        "title": "ADDED: Don't validate until the select is either blurred, or the user tr...",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzNzgwMzc3": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzNzgwMzc3",
      "body": "i'll push somethin momentarily to review\n",
      "createdAt": "2015-04-16T16:38:02Z",
      "issue": {
        "id": "MDU6SXNzdWU2ODc3ODU5Mg==",
        "title": "Please don't set the label to opts.name",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/44"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzNzkwODk2": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzNzkwODk2",
      "body": "@dhritzkiv we were going to add #45 to it, but just going to merge that separately before wraithgar pushes to npm.  i've just merged #43 it for now!  thanks man!  sorry for the inconvenience :)\n",
      "createdAt": "2015-04-16T17:27:25Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzcwMjA1NQ==",
        "title": "ampersand-select-view does not extend ampersand-view",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/2"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzNzkyMDg5": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzNzkyMDg5",
      "body": "hi @johnmarkos, i posted one unreliable condition which produces this in the #613 thread.  the code that leads to that condition above isn't open-sourced yet, otherwise I would have slapped up a gist!  however, i will spend some more time trying to reproduce its conditions if #613 isn't sufficient\n",
      "createdAt": "2015-04-16T17:32:55Z",
      "issue": {
        "id": "MDU6SXNzdWU2ODQ1ODk4NQ==",
        "title": "Error occurs but no meaningful stack or meta provided",
        "url": "https://github.com/node-inspector/node-inspector/issues/611"
      },
      "repository": {
        "nameWithOwner": "node-inspector/node-inspector"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDkzODI2MDgz": {
      "id": "MDEyOklzc3VlQ29tbWVudDkzODI2MDgz",
      "body": "@mrDarcyMurphy, nah, you're cool, it was me reading hastily that led to my own befuddled-ness\n\n@all, it is possible that styles against the text-less node get rendered, which was my original comment suggested to hide the node.  i can see people both wanting the node present consistently for a simple contract of when the node is present, and people not wanting it for possible aesthetics.\n\nit's more overhead, but maybe we toggle it's display to `'none'` when `label` is falsy, that way all potential needs can be satisfied?\n",
      "createdAt": "2015-04-16T19:55:37Z",
      "issue": {
        "id": "MDU6SXNzdWU2ODc3ODU5Mg==",
        "title": "Please don't set the label to opts.name",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/44"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk0MDQ0Njc4": {
      "id": "MDEyOklzc3VlQ29tbWVudDk0MDQ0Njc4",
      "body": "what do you know!  i found this little guy: alias `shasum=\"sha1sum\"`\n",
      "createdAt": "2015-04-17T18:21:01Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTE4ODY0OQ==",
        "title": "Install fails with Unaliased sha1sum, sha1, or shasum not found.",
        "url": "https://github.com/nvm-sh/nvm/issues/732"
      },
      "repository": {
        "nameWithOwner": "nvm-sh/nvm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk0MjkxMzIx": {
      "id": "MDEyOklzc3VlQ29tbWVudDk0MjkxMzIx",
      "body": "I believe your needs can already be achieved by defining a 'parse' function on your rest collection.  Did you see the bit on it in the docs?\n",
      "createdAt": "2015-04-19T16:09:23Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTQzNDk1Mw==",
        "title": "Accepting a transform",
        "url": "https://github.com/AmpersandJS/ampersand-collection-rest-mixin/issues/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection-rest-mixin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk0MzAyMzQ0": {
      "id": "MDEyOklzc3VlQ29tbWVudDk0MzAyMzQ0",
      "body": "Apologies, it is in state.  Whenever your API returns data and goes to create a model, before the model is injected into the collection, the object for each record will first be passed into parse, and mutated as you see fit. In this regard, It can be used as a transform, or be used to proxy transforms!\n",
      "createdAt": "2015-04-19T18:15:41Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTQzNDk1Mw==",
        "title": "Accepting a transform",
        "url": "https://github.com/AmpersandJS/ampersand-collection-rest-mixin/issues/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection-rest-mixin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk0NTAxMjM5": {
      "id": "MDEyOklzc3VlQ29tbWVudDk0NTAxMjM5",
      "body": "i reproduced this multiple times yesterday.  reproducing today it worked.  most likely this is something fishy with my env.  closing until more reliably reproducible.\n",
      "createdAt": "2015-04-20T16:30:40Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTM4OTA1NA==",
        "title": "3.4.0 breaks node support for default fs adapter",
        "url": "https://github.com/pouchdb/pouchdb/issues/3738"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk0NTQ3Mjkx": {
      "id": "MDEyOklzc3VlQ29tbWVudDk0NTQ3Mjkx",
      "body": "Hey @lifehacket, it might actually handle your collections too.  I haven't tested or dug thru the source, but if your collection has a model property defined on it, and that model reference also has a parse, I am thinking that each raw obj from your API will also get parsed, even its nested.\n\nState.serialize should handle your outbound transforms!\n",
      "createdAt": "2015-04-20T19:28:10Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTQzNDk1Mw==",
        "title": "Accepting a transform",
        "url": "https://github.com/AmpersandJS/ampersand-collection-rest-mixin/issues/24"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection-rest-mixin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk0ODQ1MjQz": {
      "id": "MDEyOklzc3VlQ29tbWVudDk0ODQ1MjQz",
      "body": "hey @ferdinandsalis, see http://requirebin.com/?gist=34edb359882bce0c85ae.  i think that this example demonstrates that a test against `this.el` is insufficient.  [view conventions](https://www.npmjs.com/package/ampersand-view-conventions) somewhat supports your point, but the waters become muddied when your own `el` is provided.  you'll see that a `View` reports `rendered` without `render` ever being called.\n\nyou are correct--this modified test may counter separation of concerns--i just couldnt' think of an instance where someone would call render and _not_ put something on the DOM.  we could feasibly flip some bits in render and remove?\n",
      "createdAt": "2015-04-21T15:44:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM3MzM5MDc=",
        "title": "bugfix/report-rendered-when-on-dom",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/115"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk1MDMxODI5": {
      "id": "MDEyOklzc3VlQ29tbWVudDk1MDMxODI5",
      "body": "@fyockm @wraithgar\nis the combo of your two +1s OK to close, or are we sticking to core_team +1 && module-at-hand-maintainer +1s only?  i searched around and couldnt find it.  i know it was discussed it _somewhere_\n",
      "createdAt": "2015-04-22T04:38:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM0NzA4MTU=",
        "title": "Bugfix/handle empty options",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/45"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk1MDMyMDE1": {
      "id": "MDEyOklzc3VlQ29tbWVudDk1MDMyMDE1",
      "body": "@fyockm, would like your input too\n",
      "createdAt": "2015-04-22T04:41:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM3MzM5MDc=",
        "title": "bugfix/report-rendered-when-on-dom",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/115"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk1MDU1NjM1": {
      "id": "MDEyOklzc3VlQ29tbWVudDk1MDU1NjM1",
      "body": "Hey @boopathi:\n\nYou are on the right track!  I've created a detailed [requirebin for you to check out](http://requirebin.com/?gist=d514a6c2c6ee92095253) that shows a couple ways to do this.   Open up your console and follow along with the code :)  Come back and ask questions as needed.\n\n:smile: \n",
      "createdAt": "2015-04-22T07:14:30Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTU3MDYzNQ==",
        "title": "Collection of Collections",
        "url": "https://github.com/AmpersandJS/ampersand-collection/issues/60"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk1OTUyNTA0": {
      "id": "MDEyOklzc3VlQ29tbWVudDk1OTUyNTA0",
      "body": "Yeah, the interface isn't designed to handle such an approach. The & strategy is generally one of minimalism and simplicity, meaning, that it won't go create that nested data structure on your behalf or allocate that memory on your behalf.  Perhaps, you could write a small little interface object that does I/O on your nested collections, and creates the structures if they are not present?\n",
      "createdAt": "2015-04-24T14:46:50Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTU3MDYzNQ==",
        "title": "Collection of Collections",
        "url": "https://github.com/AmpersandJS/ampersand-collection/issues/60"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk2MDM3MjIy": {
      "id": "MDEyOklzc3VlQ29tbWVudDk2MDM3MjIy",
      "body": "hey @DataTables, idea.  what if the api.columns(...).visibility(boolean) { ... } _checks_ if responsive mode is enabled, and if so, applies `'never'` to the header such that the column hiding logic behavior is consistent with non-responsive tables?  is that a reasonable solution?\n",
      "createdAt": "2015-04-24T19:04:37Z",
      "issue": {
        "id": "MDU6SXNzdWU0MzI2ODQ4Ng==",
        "title": "responsive vs hidden columns",
        "url": "https://github.com/DataTables/Responsive/issues/8"
      },
      "repository": {
        "nameWithOwner": "DataTables/Responsive"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk2NDAxNDQ4": {
      "id": "MDEyOklzc3VlQ29tbWVudDk2NDAxNDQ4",
      "body": "``` js\n// debuggins.js\n'use strict';\n\nvar PouchDB = require('pouchdb');\nPouchDB.plugin(require('pouchdb-find'));\n\nvar p = new PouchDB('./test');\np\n    .post({a: 123})\n    .then(function() {\n        return p.find({selector: { a: 123 } });\n    })\n    .then(console.dir)\n    .catch(console.dir);\n```\n",
      "createdAt": "2015-04-26T15:40:27Z",
      "issue": {
        "id": "MDU6SXNzdWU3MTAxNjEzNw==",
        "title": "TypeError: Cannot use 'in' operator to search for '$ne' in 123",
        "url": "https://github.com/nolanlawson/pouchdb-find/issues/30"
      },
      "repository": {
        "nameWithOwner": "nolanlawson/pouchdb-find"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk2NzU2ODc4": {
      "id": "MDEyOklzc3VlQ29tbWVudDk2NzU2ODc4",
      "body": "@wraithgar, drats, i knew [it was somewhere](http://ampersandjs.com/learn/bug-triage-process#pull-requests)!  just to be clear, i interpret your remark above as stating that  (gar + 1) && (fyockm + 1) === sufficient to merge.  however, i interpret your link above to exclude fyockm's +1, as he isnt _this module's_ lead.  set me straight!\n",
      "createdAt": "2015-04-27T17:50:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM0NzA4MTU=",
        "title": "Bugfix/handle empty options",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/45"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk2Nzc3ODEy": {
      "id": "MDEyOklzc3VlQ29tbWVudDk2Nzc3ODEy",
      "body": "and that's why I like workin' with you guys :+1: \n",
      "createdAt": "2015-04-27T18:49:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM0NzA4MTU=",
        "title": "Bugfix/handle empty options",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/45"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk3NTQ5MDUw": {
      "id": "MDEyOklzc3VlQ29tbWVudDk3NTQ5MDUw",
      "body": "thanks everyone for your input!  sounds like we're all in agreement then.  I will rework to match group consensus.\n",
      "createdAt": "2015-04-29T19:17:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM3MzM5MDc=",
        "title": "bugfix/report-rendered-when-on-dom",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/115"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk3NTU3MDg1": {
      "id": "MDEyOklzc3VlQ29tbWVudDk3NTU3MDg1",
      "body": ":+1: !  when i first saw that `pouch.query` was moving to a plugin, I grumbled a bit, but in retrospect, i think this is a much cleaner interface!  much appreciated!\n",
      "createdAt": "2015-04-29T19:41:16Z",
      "issue": {
        "id": "MDU6SXNzdWU3MTAxNjEzNw==",
        "title": "TypeError: Cannot use 'in' operator to search for '$ne' in 123",
        "url": "https://github.com/nolanlawson/pouchdb-find/issues/30"
      },
      "repository": {
        "nameWithOwner": "nolanlawson/pouchdb-find"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk3ODcyMDUy": {
      "id": "MDEyOklzc3VlQ29tbWVudDk3ODcyMDUy",
      "body": "Hi @klaemo:\n\nI can't look into this immediately.  I wouldn't be surprised if [this had something to do with it](https://github.com/AmpersandJS/ampersand-view/pull/115), but can't say for certain.  in the meantime, fiddle?\n\nThx!\n",
      "createdAt": "2015-04-30T16:36:46Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjEyNTQ2Mg==",
        "title": "Doesn't render in el",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk4MDUyNDMy": {
      "id": "MDEyOklzc3VlQ29tbWVudDk4MDUyNDMy",
      "body": "for now I just patched `render`, and didn't fiddle with `attach`.  ready for review number 2!  gracias.\n",
      "createdAt": "2015-05-01T06:07:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM3MzM5MDc=",
        "title": "bugfix/report-rendered-when-on-dom",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/115"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk4MTY5Mjcx": {
      "id": "MDEyOklzc3VlQ29tbWVudDk4MTY5Mjcx",
      "body": "as it is written, yes.  to get the desired behavior _and_ not force overriders to have to manage `rendered` in `render`, the only solution coming to mind is a custom setter that wraps the user provided render function _with_ &-View internal actions (i.e. flipping the rendered bit).  im not sure if that will produce undesirable side-effects or not, but am willing to try it.  other implementation suggestions welcomed too.\n\nin other views, `rendered` is managed manually, e.g. [form-view](https://github.com/AmpersandJS/ampersand-form-view/blame/master/ampersand-form-view.js#L155).  however, form-view doesn't extend &-view, and in that case, it's certainly not advertised as being a public attr!\n",
      "createdAt": "2015-05-01T16:20:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM3MzM5MDc=",
        "title": "bugfix/report-rendered-when-on-dom",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/115"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDk4MTc2Njcx": {
      "id": "MDEyOklzc3VlQ29tbWVudDk4MTc2Njcx",
      "body": "Gracias!\n",
      "createdAt": "2015-05-01T16:53:27Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjMwOTgyMQ==",
        "title": "Missing Events Documentation",
        "url": "https://github.com/pouchdb/pouchdb/issues/3776"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMDMxMzEzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMDMxMzEzOQ==",
      "body": "the root of the issue is that passing in raw Models to `postMessage` will choke due to restrictions on [the structured clone algorithm](https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm).  I released a little demo module (which may be over to the top for how simple it is), and put up a fiddle: http://requirebin.com/?code=f7adb041312b06e91131\n\nalso, here's a little .md preview/validation to save folks the worry if the README.md is formatted properly\n\n![screen shot 2015-05-08 at 10 21 24 am](https://cloud.githubusercontent.com/assets/1003261/7541688/0653ec12-f56c-11e4-9fd5-19ba49db4f7b.png)\n",
      "createdAt": "2015-05-08T18:00:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ5ODQ3NDQ=",
        "title": "feature/add-noset",
        "url": "https://github.com/AmpersandJS/ampersand-collection-rest-mixin/pull/25"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection-rest-mixin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMTUxNjQ4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMTUxNjQ4Mw==",
      "body": "apologies for late follow up.  confirmed, the above issue i suggested is the root of the issue.  simply commenting out [line 82](https://github.com/AmpersandJS/ampersand-select-view/blob/master/ampersand-select-view.js#L82) does the trick.  will try to resolve that issue in effort to close this one\n",
      "createdAt": "2015-05-13T05:22:46Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjEyNTQ2Mg==",
        "title": "Doesn't render in el",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMTUxOTExNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMTUxOTExNg==",
      "body": "@klaemo, I didn't see that you had followed up saying it was unsuccessful for you.  I'm not sure how you constructed your example, but I modified the `demo/demo.js` as simple example.  Commenting out the `rendered` check in this module and using [this gist seed as demo.js](https://gist.github.com/cdaringe/d92275d490a3edaddeb5) is all it takes.  load 'er up, and you'll see it render into your container el successfully\n",
      "createdAt": "2015-05-13T05:33:28Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjEyNTQ2Mg==",
        "title": "Doesn't render in el",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMjEwMjQxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMjEwMjQxOQ==",
      "body": "Hi Allan:\n\nI need to revisit my strategy.  I started typing this out, but saw its flaw.\n\n---\n\n##### wip expln\n\nI can make a fiddle, but I think perhaps some more explanation would help.  The issue is I need to preprocess the data before rendering it, and I don't want to blindly pre-process everything.\n\n``` js\nvar arr = [{x: 1}, {x: 2}, ... {x: 1e7}];\nfor (var i = 0; i < arr.length; ++i) {\n   // maybe add a y attr\n   arr[i].y = 'y';\n  // and then some **computationally heavy lifting**, perhaps each cycle takes 1ms\n  arr[i] = computationallyHeavyMutation(arr[i]);\n}\n\n// i've now just waited at least 1e7 ms to pre-process the data\n```\n\ninstead, I want to pre-process only the rows that DT intends on rendering:\n",
      "createdAt": "2015-05-14T16:58:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzODg5MTQ=",
        "title": "Add preRowPopulate callback option",
        "url": "https://github.com/DataTables/DataTablesSrc/pull/42"
      },
      "repository": {
        "nameWithOwner": "DataTables/DataTablesSrc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMjUwNTU4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMjUwNTU4Mw==",
      "body": "Closing until review & discussion happen on #119\n",
      "createdAt": "2015-05-15T19:42:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM3MzM5MDc=",
        "title": "bugfix/report-rendered-when-on-dom",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/115"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMjUwNzkzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMjUwNzkzMg==",
      "body": "let's make a decision here and close this up! code looks good (+1). @mikehedman has a valid point--perhaps not so minimalist. he's lookin' to help keep @lukekarrys filesize report numbers down :smile: \n",
      "createdAt": "2015-05-15T19:49:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjY0Mjg5NDI=",
        "title": "Do not throw if template root has comment node as a sibling",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/89"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMjUwOTQ1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMjUwOTQ1NQ==",
      "body": "that big green merge button is looking awfully clickable!  &-view may be due for a lead nominee.\n",
      "createdAt": "2015-05-15T19:59:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjYwNjcyNDk=",
        "title": "Added queryAllByHook method",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/85"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMjUyMzg1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMjUyMzg1Mw==",
      "body": "dead link\n",
      "createdAt": "2015-05-15T20:54:31Z",
      "issue": {
        "id": "MDU6SXNzdWU3Njg1NDcwOQ==",
        "title": "When viewing a multi-part guide, a prev/next control would be helpful",
        "url": "https://github.com/AmpersandJS/ampersandjs.com/issues/154"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersandjs.com"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMjkyNjM2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMjkyNjM2Ng==",
      "body": "Looks like this is addressed in the latest!  Shoot.  Always check the latest!\n",
      "createdAt": "2015-05-18T05:26:15Z",
      "issue": {
        "id": "MDU6SXNzdWU3NzUwNTUyMg==",
        "title": "jQuery 2.1.4 breaks DT",
        "url": "https://github.com/DataTables/DataTables/issues/557"
      },
      "repository": {
        "nameWithOwner": "DataTables/DataTables"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwMzA4NzcxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwMzA4NzcxNg==",
      "body": "absolutely.  does that require any further follow up?\n",
      "createdAt": "2015-05-18T15:00:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU2MDM1NzM=",
        "title": "jq 2.1.4 sppt",
        "url": "https://github.com/DataTables/DataTablesSrc/pull/43"
      },
      "repository": {
        "nameWithOwner": "DataTables/DataTablesSrc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNDQ0NDA3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNDQ0NDA3Mg==",
      "body": "shouldn't have made the tests dependent on https://github.com/AmpersandJS/ampersand-checkbox-view/pull/7 closing, but, that should openly be a quick review.  after that's complete, i think we'll be OK\n",
      "createdAt": "2015-05-21T22:53:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTQ0ODQ=",
        "title": "&-view conversion and closes #28",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNDQ0NTY5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNDQ0NTY5NA==",
      "body": "hmm. here is the process i just ran:\n- branched from upstream/master\n- replaced demo.js with my gist content\n- commented out the suggested line\n- ran `npm run demo`\n\nit all worked out!  can you do a double check?  gotta get that `rendered` issue ironed out\n\n![screen shot 2015-05-21 at 6 02 52 pm](https://cloud.githubusercontent.com/assets/1003261/7760724/e7ce5c1e-ffe3-11e4-8a45-cf8e885ab9d0.png)\n![screen shot 2015-05-21 at 6 03 46 pm](https://cloud.githubusercontent.com/assets/1003261/7760725/e81485b8-ffe3-11e4-9da0-aa93306b5d39.png)\n![screen shot 2015-05-21 at 6 03 50 pm](https://cloud.githubusercontent.com/assets/1003261/7760726/e815ffb0-ffe3-11e4-849b-b35d808e86c0.png)\n![screen shot 2015-05-21 at 6 04 41 pm](https://cloud.githubusercontent.com/assets/1003261/7760727/e8194210-ffe3-11e4-84e8-2bf67d168510.png)\n",
      "createdAt": "2015-05-21T23:07:24Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjEyNTQ2Mg==",
        "title": "Doesn't render in el",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNDQ0OTQ5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNDQ0OTQ5Ng==",
      "body": "@AmpersandJS/core-team, friendly bump!\n",
      "createdAt": "2015-05-21T23:33:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzNTc5MTk=",
        "title": "bugfix/report-rendered-honestly",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/119"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNDQ1NDc3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNDQ1NDc3Mw==",
      "body": "closing. added to milestones\n",
      "createdAt": "2015-05-22T00:10:08Z",
      "issue": {
        "id": "MDU6SXNzdWU2NjI1NzI1NQ==",
        "title": "Add support for user defined tests in 4.x.x",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/40"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNDQ1NzY1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNDQ1NzY1Ng==",
      "body": "hello, can you provide more input?  are you by chance also using `unselectedText`?  is there a falsy first value other than 0 for your top option?  i tested this and saw the desired behavior.  a requirebin would be helpful!\n",
      "createdAt": "2015-05-22T00:35:03Z",
      "issue": {
        "id": "MDU6SXNzdWU3OTAzOTMzMA==",
        "title": "Validation error message not showing on parent form submit",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/47"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNDY4NzYwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNDY4NzYwNQ==",
      "body": "@ErikWittern, awesome.  thanks man!  so there are two issues.\n- adding the empty string `''` to your `categories` list tells the select that `''` is a **valid** option.  please use `unselectedText` instead\n- there's a little bug where setting `''` as `unselectedText` isn't honored.  i'm pushing a bugfix for review now.\n\ni ran a little demo with these updates and it seems to be working fine.  i will push the PR soon\n",
      "createdAt": "2015-05-22T15:17:11Z",
      "issue": {
        "id": "MDU6SXNzdWU3OTAzOTMzMA==",
        "title": "Validation error message not showing on parent form submit",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/47"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNTY5MDc2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNTY5MDc2Mg==",
      "body": "hi @joy01804.  only in cases where the field is required should such a rule apply.  additionally, this makes assumptions about the greater form behavior.  for instance, a combination of other field values may programmatically force the control to one value or another, including the placeholder (`''`) option.  This module does extend AmpersandView, which should have '.extend' on the prototype.  Extend at your leisure :smile: .  Let me know your thoughts.  Thanks!\n",
      "createdAt": "2015-05-26T22:49:21Z",
      "issue": {
        "id": "MDU6SXNzdWU4MTE2NzU1MA==",
        "title": "Need an option to set unselectedText to be an disabled option",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/49"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNTY5Njk1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNTY5Njk1Mw==",
      "body": "yea, looks like 4.0.0 didn't get shipped. @wraithgar is the man for that\n",
      "createdAt": "2015-05-26T23:28:11Z",
      "issue": {
        "id": "MDU6SXNzdWU4MTE2NzU1MA==",
        "title": "Need an option to set unselectedText to be an disabled option",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/49"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNTY5NzQzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNTY5NzQzNg==",
      "body": "@kamilogorek, @lukekarrys lend me your eyes and thoughts.  sorry to pester here, but I think that it's an important one!\n",
      "createdAt": "2015-05-26T23:32:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzNTc5MTk=",
        "title": "bugfix/report-rendered-honestly",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/119"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNjY0MTYxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNjY0MTYxMA==",
      "body": "i changed the port in my testem.json file, and indeed, the issue vanished. thanks for the tip @adamesque , @sbalko \n",
      "createdAt": "2015-05-29T00:39:49Z",
      "issue": {
        "id": "MDU6SXNzdWU2NTU2NDE2OA==",
        "title": "testem ci not exiting",
        "url": "https://github.com/testem/testem/issues/528"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNjg0MTgzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNjg0MTgzOQ==",
      "body": "Exactly.  I didn't want the review to be a pain in the butt.\n",
      "createdAt": "2015-05-29T15:10:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTA1NTY=",
        "title": "3.0.0 rc",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/7"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNjg0MjM3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNjg0MjM3OA==",
      "body": "Arg, time for a new cell.  Fat fingering all the buttons!  But yes, minimal convention changes to get State first, then a migration PR eventually to exploit States features within\n",
      "createdAt": "2015-05-29T15:13:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTA1NTY=",
        "title": "3.0.0 rc",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/7"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNjg0NTQ3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNjg0NTQ3MA==",
      "body": "I do.  I'll merge when Travis wakes up\n",
      "createdAt": "2015-05-29T15:27:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTA1NTY=",
        "title": "3.0.0 rc",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/7"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNjg4NjE5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNjg4NjE5Mg==",
      "body": "fire in the hole!  worked great\n",
      "createdAt": "2015-05-29T17:51:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY1MTY1Nzg=",
        "title": "Add publish script",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/8"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwNzI0OTIxMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwNzI0OTIxMw==",
      "body": "hi all. hope everyone is enjoying their weekend :)  i refactored this PR in light of realizing the original implementation was emitting redundant `change:rendered` events. not OK!  this implementation is **very similar**, except that it moves `rendered` back to a derived attr to exploit caching and suppress said duplicate events.  I think it's pretty straightforward still, but simplified.  i discuss it more verbally [here](https://gist.github.com/cdaringe/928eccc55121ded4c4d5)\n",
      "createdAt": "2015-05-31T21:38:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzNTc5MTk=",
        "title": "bugfix/report-rendered-honestly",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/119"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwODA1MDMyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwODA1MDMyOA==",
      "body": "@pmdarrow, thanks!  that was my issue too.  a shim in the `package.json` and in my debug `browserify -t browserify-shim ...` cmd\n",
      "createdAt": "2015-06-02T18:44:03Z",
      "issue": {
        "id": "MDU6SXNzdWU0MjkwNDQ1Nw==",
        "title": "TypeError when shimming Angular",
        "url": "https://github.com/thlorenz/browserify-shim/issues/88"
      },
      "repository": {
        "nameWithOwner": "thlorenz/browserify-shim"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwODUzMjU3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwODUzMjU3Mw==",
      "body": "+1\n",
      "createdAt": "2015-06-03T17:23:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY3ODg3NDA=",
        "title": "Revalidate minimal-field-view when value is updated",
        "url": "https://github.com/AmpersandJS/ampersand-view-conventions/pull/10"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view-conventions"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEwODY1MjIzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEwODY1MjIzOA==",
      "body": "@hailwood, a fiddle would be helpful.  i've changed the behavior for `rendered` here,  #119.  I don't forsee this being an issue under the proposed implementation.\n",
      "createdAt": "2015-06-04T00:04:53Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzY1MzA3NA==",
        "title": "autoRender:true does not fire change:rendered event",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/112"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMDQwMzExNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMDQwMzExNg==",
      "body": "Hey @doratias, looks good.  Willing to do a README update and a test?\n",
      "createdAt": "2015-06-09T15:30:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzcyNTg1NzI=",
        "title": "Add readonly option",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/61"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMDQ3ODczNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMDQ3ODczNA==",
      "body": ":+1: \n",
      "createdAt": "2015-06-09T19:34:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzcyODkyMjA=",
        "title": "Add check for parent update method",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/51"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMDUwODc3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMDUwODc3OQ==",
      "body": "rad+! +1\n",
      "createdAt": "2015-06-09T21:28:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzcyNTg1NzI=",
        "title": "Add readonly option",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/61"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMDkzNzI0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMDkzNzI0MA==",
      "body": "yeehaw.  i don't have publish access, but this will go into the next release\n",
      "createdAt": "2015-06-10T22:35:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzcyNTg1NzI=",
        "title": "Add readonly option",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/61"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTMwNjAxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTMwNjAxNA==",
      "body": "tests passing\n",
      "createdAt": "2015-06-11T23:30:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzcyODkyMjA=",
        "title": "Add check for parent update method",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/51"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTMyMDA4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTMyMDA4MA==",
      "body": "i've had to design around this as well.  it's definitely do-able.  in my case, i've wanted to bind listeners to an element that :dash: (whoosh) disappears :dash: once I render a view on it.  as a consequence, in a my parent's view definition, I then need to know about my child view's hooks to bind the parent view's desired handlers.  i like the `container` suggestion.\n\nmy workaround (ref'ing child hooks) _could_ admittedly be an anti-pattern.  such listeners perhaps could be bound to my child view's `el` within the child view definition, vs. the parent definition.  those listeners would have to trigger an event for the parent to listen to such that i could achieve the same behavior.  thinking out loud, this is now a weak point in that there's still an extra implicit view-relationship to manage between parent-child.\n\n`container` sounds more & more appealing as it keeps my binding, my template, and my behavior in the same place.  this is how we did it in forms for specifying a pre-existing FieldView container, @HenrikJoreteg, at your own suggestion.  Albeit we still used `el` as a target container.\n",
      "createdAt": "2015-06-12T01:22:55Z",
      "issue": {
        "id": "MDU6SXNzdWU1MjM5MzIzNg==",
        "title": "Subview replaces container rather than become child",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/87"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTM3NjUxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTM3NjUxMQ==",
      "body": "bummer, thx.  minifyify was good while it lasted!\n",
      "createdAt": "2015-06-12T06:23:15Z",
      "issue": {
        "id": "MDU6SXNzdWU4NzYyMjU0OA==",
        "title": "Compatible With `factor-bundle` plugin?",
        "url": "https://github.com/ben-ng/minifyify/issues/100"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTM3NjU0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTM3NjU0Mw==",
      "body": "really appreciated your work here!\n",
      "createdAt": "2015-06-12T06:23:38Z",
      "issue": {
        "id": "MDU6SXNzdWU4NzYyMjU0OA==",
        "title": "Compatible With `factor-bundle` plugin?",
        "url": "https://github.com/ben-ng/minifyify/issues/100"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTU1OTMwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTU1OTMwMw==",
      "body": "@wraithgar.  guten tag!\neek!\n\n``` bash\nnpm ERR! You do not have permission to publish 'ampersand-select-view'. Are you logged in as the correct user? : ampersand-select-view\n\ncdieringer@Snapper-osx:~/node/release/ampersand-select-view$ npm whoami\ncdaringe\n\n```\n",
      "createdAt": "2015-06-12T17:07:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzcyNTg1NzI=",
        "title": "Add readonly option",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/61"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTU3NzAzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTU3NzAzNA==",
      "body": "whoa-hoa! looks like it staged my failed attempts and still ran them.  that's not great.  i ran it a total of 3 times, two failed ~hour ago, third succeeded ~now, yet it still pushed 3 minor versions.  it's no big deal, but 'empty' history.  Thanks gar\n",
      "createdAt": "2015-06-12T18:06:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzcyNTg1NzI=",
        "title": "Add readonly option",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/61"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTU4ODcyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTU4ODcyOA==",
      "body": "Hi all:\n\nI am using these two together quasi-successfully, and I say quasi because I'm not getting the performance gain.  Check this out:\n\n``` js\n    grunt.registerTask('browserify', 'browserify/watchify', function() {\n        var watch = grunt.option('watch') ? true : false;\n        var files = [\n            'js/browserApp/ampersand/app.js',\n            'js/browserApp/global-utils.js'\n        ];\n        var distFiles = {\n            partitions: [\n                'build/js/amp.bundle.js',\n                'build/js/global-utils.bundle.js'\n            ],\n            common: 'build/js/common.bundle.js'\n        };\n        var b, w, m;\n\n        b = browserify(files);\n        b.plugin('factor-bundle', {\n            verbose: true,\n            outputs: distFiles.partitions\n        });\n\n        if (watch) {\n            this.async();\n            w = watchify(b);\n            w.on('update', function (ids) {\n                console.log('>> file changed, bundle updated');\n                console.dir(ids);\n                w.bundle();\n            });\n            w.on('log', function(msg) {\n                var size = msg.match(/^\\d+/);\n                msg = msg.replace(size[0], '');\n                size = sigBytes(parseInt(size[0]), 10);\n                console.log(size + msg);\n            });\n        }\n\n        console.log('>> init bundling');\n        b = w || b;\n        b.bundle().pipe(fs.createWriteStream(distFiles.common));\n\n    });\n```\n\n``` bash\nRunning \"browserify\" task\n>> init bundling\n1.18 Mbs bytes written (7.36 seconds)\n>> file changed, bundle updated\n[ '/var/www/html/coins_core/js/browserApp/global-utils.js' ]\n1.18 Mbs bytes written (6.61 seconds)\n>> file changed, bundle updated\n[ '/var/www/html/coins_core/js/browserApp/global-utils.js' ]\n1.18 Mbs bytes written (6.53 seconds)\n```\n\nAny tip-skies?\n",
      "createdAt": "2015-06-12T18:57:14Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDQxOTA3Nw==",
        "title": "Example of how to use with factor-bundle",
        "url": "https://github.com/browserify/watchify/issues/112"
      },
      "repository": {
        "nameWithOwner": "browserify/watchify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTYyNDEwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTYyNDEwMw==",
      "body": "Hi @pgilad:\n\nI agree, it's complex to manage a simple bool.  The group consensus ruled out using `contains` as that reflects `attached`, as in #115.  `rendered` also, IMHO, shouldn't be user managed.  Despite the complexity, the solution is functional.  Please respond to the [design reflection](https://gist.github.com/cdaringe/928eccc55121ded4c4d5) to make your feedback more actionable.\n\nThanks!\n",
      "createdAt": "2015-06-12T21:31:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzNTc5MTk=",
        "title": "bugfix/report-rendered-honestly",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/119"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTY0MDAzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTY0MDAzNg==",
      "body": "no worries man.\n\n> derives from the fact that we don't know what the user will be doing - autoRendering, rendering synchronously after initialize or maybe even never rendering.\n\nagreed\n\n>  I think that in most cases (and maybe even all) the user either auto-renders or immediately renders after initializing.\n\ni respectfully (and courteously!) disagree.  it was the counter case that drove me to uncover this issue to begin with.  it's negatively affecting FormView now.  for instance, it's been a common case with myself and other form users that want to use FormView to manage fields that aren't instantiated by FormView itself.  e.g.:\n\n``` js\nvar formView = new FormView({\n    ...\n    fields: [ someOtherInstantiated_but_unrenderedView ]\n```\n\nBecause those fieldViews have `el` containers, when `formView.render()` occurs, it skips rendering those input fields.  even just a field view that's not `autoRendered` may suffer the same.  Major bummer!\n\n> For the rare cases where user wants to delay rendering - let him handle that in his render function (and recommend this behavior).\n\nagreed that if the group finds it too complex, its better to remove entirely, vs. keeping it and having it unreliable.  that would also require a FormView update, that thats manageable\n",
      "createdAt": "2015-06-12T23:19:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzNTc5MTk=",
        "title": "bugfix/report-rendered-honestly",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/119"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTY0ODcwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTY0ODcwMg==",
      "body": "word.  do you guys get good `watch/watchify` perf when using factor-bundle.  Mine takes ~7s on each bundle, even w/ caching.  what's your minify strategy now that you've gone to a multi-bundle approach?  No more barrage of questions :smile: \n",
      "createdAt": "2015-06-13T00:44:58Z",
      "issue": {
        "id": "MDU6SXNzdWU4NzYyMjU0OA==",
        "title": "Compatible With `factor-bundle` plugin?",
        "url": "https://github.com/ben-ng/minifyify/issues/100"
      },
      "repository": {
        "nameWithOwner": "ben-ng/minifyify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMTc1NDg4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMTc1NDg4Nw==",
      "body": "If you'd be willing to give me read/write access to your repo, I'd like to publish it to npm as well!\n",
      "createdAt": "2015-06-13T21:52:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc2MzE5NTg=",
        "title": "release 2.6.0",
        "url": "https://github.com/LarryBattle/YASMIJ.js/pull/16"
      },
      "repository": {
        "nameWithOwner": "LarryBattle/YASMIJ.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMjI4MjgxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMjI4MjgxOA==",
      "body": "@wraithgar patching this repo probably isn't the ideal solution until a decision is made on the &view 'rendered' bug.  Would appreciate some follow up on that one!  Link above\n",
      "createdAt": "2015-06-16T04:15:55Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjEyNTQ2Mg==",
        "title": "Doesn't render in el",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMjU1NTg2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMjU1NTg2Ng==",
      "body": "Just one +1, @wraithgar, since bug fix #5219936 in this PR\n",
      "createdAt": "2015-06-16T20:17:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzNTc5MTk=",
        "title": "bugfix/report-rendered-honestly",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/119"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMjY3NDUzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMjY3NDUzNg==",
      "body": "also check out http://learn.humanjavascript.com/react-ampersand !\n",
      "createdAt": "2015-06-17T06:44:02Z",
      "issue": {
        "id": "MDU6SXNzdWU3NDA1NzEwMg==",
        "title": "How to use ampersand with reactjs?",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/117"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMjgyODc4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMjgyODc4NA==",
      "body": "great, thanks all.  id like to release soon too, but will defer to @kamilogorek because he has some other things on the 8.x docket.  see milestones tab.  ill go thru and add some comments to those opens\n",
      "createdAt": "2015-06-17T14:46:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzNTc5MTk=",
        "title": "bugfix/report-rendered-honestly",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/119"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMjgzNDEzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMjgzNDEzMw==",
      "body": "looks OK.  safeSet _may_ belong ampersand-state?, while we simply use that interface here.\n",
      "createdAt": "2015-06-17T15:00:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzczNjQ3NTI=",
        "title": "Provide namespace collision errors",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/128"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMjgzNTM3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMjgzNTM3OQ==",
      "body": "+1\n",
      "createdAt": "2015-06-17T15:03:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzcwMDk1MzY=",
        "title": "Make query & queryAll throw if no this.el",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/127"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMjk4NDQxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMjk4NDQxMA==",
      "body": "i'm ready to jump on this too.  one more task before we can publish &-view 8.0.0!  https://github.com/AmpersandJS/ampersand-view/milestones/8.0.0\n",
      "createdAt": "2015-06-18T00:14:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTQ0ODQ=",
        "title": "&-view conversion and closes #28",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzU1NTAzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzU1NTAzOA==",
      "body": "hey @pgilad @kamilogorek , may I release 8.x now?  I think this feature is OK to roll in later as a minor.  8.x release is gating a form view issue closure and a select view issue closure.\n",
      "createdAt": "2015-06-19T15:53:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzczNjQ3NTI=",
        "title": "Provide namespace collision errors",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/128"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzU2NjQxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzU2NjQxOQ==",
      "body": "cool, thx for the quick response. i will release momentarily\n",
      "createdAt": "2015-06-19T16:29:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzczNjQ3NTI=",
        "title": "Provide namespace collision errors",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/128"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzU3MTczNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzU3MTczNA==",
      "body": "@klaemo, yea, you are correct.\n",
      "createdAt": "2015-06-19T16:47:05Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjEyNTQ2Mg==",
        "title": "Doesn't render in el",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzU3NjExNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzU3NjExNA==",
      "body": "tests passing. updated deps for &-view 8.0.0. releasing now\n",
      "createdAt": "2015-06-19T17:00:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTQ0ODQ=",
        "title": "&-view conversion and closes #28",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzU3ODQ4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzU3ODQ4MA==",
      "body": "migrating all &-view deps to 8.x should resolve this\n",
      "createdAt": "2015-06-19T17:10:48Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzY0MzE5MQ==",
        "title": "form-view and field-view rendered relation inconsistency",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/41"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzU3ODc0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzU3ODc0Ng==",
      "body": "@wraithgar, may have i npm access to publish, or would you publish? :smile: \n",
      "createdAt": "2015-06-19T17:11:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTQ0ODQ=",
        "title": "&-view conversion and closes #28",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzU4MDQ1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzU4MDQ1OA==",
      "body": "**bump**. requesting reviews\n",
      "createdAt": "2015-06-19T17:20:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYwNDM3MTA=",
        "title": "Closes #47",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/48"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzU4MDY3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzU4MDY3MA==",
      "body": "4.3.1 released, with 8.0.0 dep!  this should do the trick!\n",
      "createdAt": "2015-06-19T17:21:39Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjEyNTQ2Mg==",
        "title": "Doesn't render in el",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzU4MzM3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzU4MzM3OA==",
      "body": "yahoo! thanks gents.\n\narg. :frowning:  i scrapped the repo folder pre-release (`rm -rf repo-folder`), `npm i`'d, and `npm run publish-major`'d.  once again, having tried before, it _double bumped_.  I didn't realize that the 4.0.0 tag had made it into git, so publishing the major ended up releasing 5.0.0.  `npm unpublish` won't let you re-use the version number ever again, so i can't just scrap the tags and redo the release.  your thoughts?  I could re-tidy the git tags, then npm unpublish 4.0.0 & 5.0.0, and instead go right to 4.0.1?  thinking out loud.\n",
      "createdAt": "2015-06-19T17:35:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTQ0ODQ=",
        "title": "&-view conversion and closes #28",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/42"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExMzYxNTM3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExMzYxNTM3Mw==",
      "body": "nice :smile: tests are passing, but zuul issue is 'still a thing', hence the build failing. publishing as patch\n",
      "createdAt": "2015-06-19T19:33:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYwNDM3MTA=",
        "title": "Closes #47",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/48"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNDU1MDcyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNDU1MDcyMw==",
      "body": "+1\n",
      "createdAt": "2015-06-23T15:42:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzgzMjY1MTA=",
        "title": "bump dev dependencies",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/9"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNDYxODI0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNDYxODI0NQ==",
      "body": "IMHO, the path to achieve the desired goal is to use a different `template`, which should already be available.  additionally, such mods can take place inside of initialize or render.  because label is so consistently `.textContent` between field views, i think we should maintain consistency, or rework all and add a requirement to field-view-conventions.\n\nis that OK @mikehedman ?\n",
      "createdAt": "2015-06-23T19:33:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjQ3OTcwMjE=",
        "title": "Allowing checkbox labels to contain HTML",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/6"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNTAzMzYzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNTAzMzYzMw==",
      "body": "i agree, it's peculiar that your change works, but the old does not.  if you havent figured it out, maybe we can get a gist goin?\n",
      "createdAt": "2015-06-24T22:35:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODIwMzE=",
        "title": "fix form submission",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/45"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNjgxNDQxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNjgxNDQxOQ==",
      "body": "@mikehedman, my gut tells me that unless \n\n1) we offer some standard `safe/unsafe` feature with sanitization support, and _maybe_\n2) have field views extend a base field view to assert that sanitization is handled/used accordingly\n\ni feel like letting this in could open a can of worms.  i am not a security expert nor will i claim to be.  i think  if an organized case was made, the core team and community team would definitely give it attention\n",
      "createdAt": "2015-06-29T19:45:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjQ3OTcwMjE=",
        "title": "Allowing checkbox labels to contain HTML",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/6"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNjk2MDA5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNjk2MDA5OA==",
      "body": "ya, adding \n\n``` js\nmodule: {\n    loaders: []\n}\n```\n\nat the same level as entry/output/etc did the trick, as is somewhat reasonable. thx\n",
      "createdAt": "2015-06-30T04:58:26Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTY3MDAxNg==",
        "title": "Cannot read property 'loaders' of undefined",
        "url": "https://github.com/webpack-contrib/grunt-webpack/issues/43"
      },
      "repository": {
        "nameWithOwner": "webpack-contrib/grunt-webpack"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNzAzMTQ0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNzAzMTQ0Mw==",
      "body": "hi @sokra, thanks for the great project.  can you add a bit more clarification?  this would be helpful to me as well!  _which_ client reference?  and can you confirm the proper query kv pair?  i assume my client needs to be uri encoded too?  Thanks!\n",
      "createdAt": "2015-06-30T07:16:09Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTM0MzY0MQ==",
        "title": "Can't get hot-reload to work for remote server with private IP",
        "url": "https://github.com/webpack/webpack-dev-server/issues/205"
      },
      "repository": {
        "nameWithOwner": "webpack/webpack-dev-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNzIyNzc3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNzIyNzc3OA==",
      "body": "looks good\n",
      "createdAt": "2015-06-30T15:25:03Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTY3MDAxNg==",
        "title": "Cannot read property 'loaders' of undefined",
        "url": "https://github.com/webpack-contrib/grunt-webpack/issues/43"
      },
      "repository": {
        "nameWithOwner": "webpack-contrib/grunt-webpack"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNzI0MjYxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNzI0MjYxNw==",
      "body": "cool, let's close for now, and revisit if/when it becomes more pressing\n",
      "createdAt": "2015-06-30T16:17:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjQ3OTcwMjE=",
        "title": "Allowing checkbox labels to contain HTML",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/6"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNzcxMDM5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNzcxMDM5Mg==",
      "body": "@pgilad, do you mean `change:value`?\n",
      "createdAt": "2015-07-01T15:06:38Z",
      "issue": {
        "id": "MDU6SXNzdWU5MjE4OTExMA==",
        "title": "Update parent fires twice",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/66"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNzcxMTU2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNzcxMTU2NQ==",
      "body": "closing this issue for now.  ditto @pgilad--would love a :hammer:PR:hammer: for multi-select!  it's not on a roadmap/milestone at this point\n",
      "createdAt": "2015-07-01T15:12:06Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDI0MjgyNQ==",
        "title": "How to implement multiselect in ampersand-select-view",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/37"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExNzczNDA5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExNzczNDA5Mg==",
      "body": "http://ampersandjs.com/learn/forms#form-input-view-conventions\n\n> It reports changes to its parent when it deems appropriate by calling this.parent.update(this) **note that it passes itself to the parent. You would typically do this when the this.value has changed or the this.valid has changed.\n\nin the grand scheme, i suppose that a `value` change transitively drives `valid` change, so two events may not be reqd.  im not sure if that covers all cases tho.  e.g. can `valid` ever change without `value` changing?  the form itself should be checking child fields for validity on update regardless, supporting your guys' points\n\n> can valid ever change without value changing\n> let's agree to an answer on this, and if it comes out with a 'yes', lets drop the `valid` evt and update the docs.  gotta run!\n",
      "createdAt": "2015-07-01T16:16:44Z",
      "issue": {
        "id": "MDU6SXNzdWU5MjE4OTExMA==",
        "title": "Update parent fires twice",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/66"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExODM5MzE1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExODM5MzE1OA==",
      "body": "Yes, I agree that serialized date output should produce not just ISO 8601 compliant strings, but ISO compliant locale strings.  toISO will yield the value normalized to UTC, which is just as problematic as the status quo.  I'm sure that's what you inferred, but it is an important distinction. I [blogged on this](http://cdaringe.com/managing-application-dates/) recently\n",
      "createdAt": "2015-07-03T17:05:28Z",
      "issue": {
        "id": "MDU6SXNzdWU5Mjg5NTQ3Mw==",
        "title": "Date values serialization",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/177"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExODU2Mjg0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExODU2Mjg0Mw==",
      "body": "given that there is no _bug_ per se here, it's just user expectation differences, let's close this one out.  one of the best part of ampersandjs is its minimalist nature and great extensibility.  in this case, you can [create your own datatypes](https://github.com/AmpersandJS/ampersand-state#datatypes--ampersandstateextend-datatypes-mycustomtypes-) easily on top of ampersand state.  for this issue, i generated an [ampersand state datatype for locale iso-strings](https://github.com/cdaringe/ampersand-state-mixin-datatype-iso-date).  feel free to try the same per your needs.\n\n@icflorescu, modifying `serialize` could work, but you may be best off creating a new datatype as well, such as 'utc-date' if you require a utc iso str.\n",
      "createdAt": "2015-07-04T23:29:50Z",
      "issue": {
        "id": "MDU6SXNzdWU5Mjg5NTQ3Mw==",
        "title": "Date values serialization",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/177"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExODU3OTc2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExODU3OTc2NA==",
      "body": "that's gotta be it.  closing, under the high likelihood that that will be the case\n",
      "createdAt": "2015-07-05T05:03:43Z",
      "issue": {
        "id": "MDU6SXNzdWU5MzA1NzQ1OA==",
        "title": "isSame returns false when using same ISO src string",
        "url": "https://github.com/moment/moment/issues/2447"
      },
      "repository": {
        "nameWithOwner": "moment/moment"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExOTAzNjI1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExOTAzNjI1Mg==",
      "body": "I think that this is supposed to happen based on seeing some demos, but my current execution line does not show up either, nor does the viewport scroll with execution.\n\ni run:\n- OSX yosemite\n- ST3, build 3083\n- installed this via wbonds package manager\n- running over a vagrant machine, per instructions [here](http://markonphp.com/debugging-xdebug-sublime-text-3/)\n\n<img width=\"929\" alt=\"screen shot 2015-07-06 at 5 40 34 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/8536431/272e5e40-2406-11e5-9114-647e9fc132ce.png\">\n",
      "createdAt": "2015-07-07T00:45:56Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDU0NTA1NA==",
        "title": "Add line highlighting for current execution line and breakpoints",
        "url": "https://github.com/martomo/SublimeTextXdebug/issues/141"
      },
      "repository": {
        "nameWithOwner": "martomo/SublimeTextXdebug"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDExOTAzNzY2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDExOTAzNzY2NQ==",
      "body": "as you can see, my vagrant apache is sending debug goodness back to sublime, but the UI doesn't appear to be adjusting accordingly.  tips would be great!\n",
      "createdAt": "2015-07-07T00:57:37Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDU0NTA1NA==",
        "title": "Add line highlighting for current execution line and breakpoints",
        "url": "https://github.com/martomo/SublimeTextXdebug/issues/141"
      },
      "repository": {
        "nameWithOwner": "martomo/SublimeTextXdebug"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMDA5NjE1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMDA5NjE1MA==",
      "body": "Are you using npm dedupe or the web pack dedupe plugin?\n",
      "createdAt": "2015-07-09T18:28:19Z",
      "issue": {
        "id": "MDU6SXNzdWU5NDA5NTAzNg==",
        "title": "Ampersand modules appear to have redudant nested dependencies",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/133"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMDQzMDU1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMDQzMDU1Ng==",
      "body": "Cool.  Let us know how it works for you. \n",
      "createdAt": "2015-07-10T15:02:31Z",
      "issue": {
        "id": "MDU6SXNzdWU5NDA5NTAzNg==",
        "title": "Ampersand modules appear to have redudant nested dependencies",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/133"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMjEzMzIwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMjEzMzIwMA==",
      "body": "i ended up setting a spoofed header of `'http://localhost:5984'`, but now it comes back with: \n\n``` js\nerror: true\nmessage: \"Only reserved document ids may start with underscore.\"\nname: \"bad_request\"\nreason: \"Only reserved document ids may start with underscore.\"\nstatus: 400\n```\n",
      "createdAt": "2015-07-16T23:56:00Z",
      "issue": {
        "id": "MDU6SXNzdWU5NTU1MTQ5MA==",
        "title": "Creating an index in pouch that is synced to couch throws error ",
        "url": "https://github.com/nolanlawson/pouchdb-find/issues/50"
      },
      "repository": {
        "nameWithOwner": "nolanlawson/pouchdb-find"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMjQ0ODQzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMjQ0ODQzOQ==",
      "body": "i like it. +1.  did you consider if `valid` should be `session/prop`, so it just events on it's own?\n",
      "createdAt": "2015-07-17T23:31:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDAyNzkwMzQ=",
        "title": "Events for `valid` and `submit`",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/47"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMjYwMDk1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMjYwMDk1NA==",
      "body": "At the end of the day it's probably a minor detail. change:valid gives the user more capability as it yields ~invalid detection, and a consistent interface with other & state extending protos.  No fuss, but it's my 10cents\n",
      "createdAt": "2015-07-18T22:03:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDAyNzkwMzQ=",
        "title": "Events for `valid` and `submit`",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/47"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMjYwMjg2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMjYwMjg2MQ==",
      "body": "@nolanlawson, you are correct, i am on couch 1.6.  we selected it exclusively because i'm a raving pouch fan :) .  do you have any personal recommendations that will still exploit all the great pouch sync-ability?  much appreciated!\n",
      "createdAt": "2015-07-18T22:51:13Z",
      "issue": {
        "id": "MDU6SXNzdWU5NTU1MTQ5MA==",
        "title": "Creating an index in pouch that is synced to couch throws error ",
        "url": "https://github.com/nolanlawson/pouchdb-find/issues/50"
      },
      "repository": {
        "nameWithOwner": "nolanlawson/pouchdb-find"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMjk1Mjk4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMjk1Mjk4OQ==",
      "body": "cool. good to know couch 2.x is coming along!  ill [give it a shot](http://docs.couchdb.org/en/latest/install/mac.html).  thanks for the tips, as always!\n",
      "createdAt": "2015-07-20T17:04:38Z",
      "issue": {
        "id": "MDU6SXNzdWU5NTU1MTQ5MA==",
        "title": "Creating an index in pouch that is synced to couch throws error ",
        "url": "https://github.com/nolanlawson/pouchdb-find/issues/50"
      },
      "repository": {
        "nameWithOwner": "nolanlawson/pouchdb-find"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMzUyOTM1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMzUyOTM1MQ==",
      "body": "ill look into this\n",
      "createdAt": "2015-07-22T01:53:34Z",
      "issue": {
        "id": "MDU6SXNzdWU5NjQyOTMxMA==",
        "title": "\"remove\" event triggered prematurely",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/139"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMzc1NDg2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMzc1NDg2NA==",
      "body": "@dhritzkiv, we chose the strategy specifically so the user wouldn't have to manage triggering events on their own in their over-ridden render/remove functions.  the first PR implementation did something close to exactly that, just manually triggering remove/render events in their corresponding functions.  there was some discussion, and we decided to handle it for the user.\n\nanyway, it's a pretty simple fix!  take a peek, let me know your thoughts\n",
      "createdAt": "2015-07-22T15:14:55Z",
      "issue": {
        "id": "MDU6SXNzdWU5NjQyOTMxMA==",
        "title": "\"remove\" event triggered prematurely",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/139"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMzc1NTk0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMzc1NTk0MQ==",
      "body": "`myView.on('render', initializeYourChart)` should do the trick.  This would not have worked prior to &-view 8.x.  However, so long as your `render` method does attach your view to the DOM, which I'm comfortable claiming is 99% of the time, you should be good to go!  Let me know if that will suffice!\n",
      "createdAt": "2015-07-22T15:19:24Z",
      "issue": {
        "id": "MDU6SXNzdWU3ODU2ODMzMA==",
        "title": "need a \"domready\" event hook after calling renderWithTemplate()",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/124"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMzc1NjI1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMzc1NjI1MQ==",
      "body": "i believe that this addressed in the latest 8.x release.  let me know if its still hurtin ya otherwise!\n",
      "createdAt": "2015-07-22T15:20:41Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzY1MzA3NA==",
        "title": "autoRender:true does not fire change:rendered event",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/112"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMzc2OTcwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMzc2OTcwMw==",
      "body": "@ahdinosaur @pgilad,\ni agree, this causes issues.  in [ampersand-form-manager-view](http://cdaringe.github.io/ampersand-form-manager-view/) i cycle between forms, meaning I render, remove, and re-render them.  i [reinitialize bindings and subviews](https://github.com/cdaringe/ampersand-form-manager-view/blob/master/ampersand-form-manager-view.js#L133) on each render manually.  the fix may be as easy as pulling out the binding and subview initialization to a helper. then, on render, test if they are set.  if not, re-init them.\n",
      "createdAt": "2015-07-22T15:56:53Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTE4MzUzMg==",
        "title": "unexpected that `remove` also modifies bindings",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/105"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyMzk0MTAyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyMzk0MTAyMw==",
      "body": "published as `8.0.1`\n",
      "createdAt": "2015-07-23T02:51:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA1NzE2MTI=",
        "title": "prevent bogus `remove` event thrown",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/141"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyNTgwNjc5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyNTgwNjc5NQ==",
      "body": "Am I correct in stating that a simplified version of your problem statement is \"I didn't know about collections.  per reading the docs, I feel like I should have sooner\"?\n",
      "createdAt": "2015-07-29T02:11:02Z",
      "issue": {
        "id": "MDU6SXNzdWU5Nzc5NDI3Ng==",
        "title": "Extend docs, how to manage object/collection associations with non-nested resources",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/187"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyNjEwNjE0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyNjEwNjE0Nw==",
      "body": "sorry if tone was mis-conveyed.  i ask only such that we could find a bit more of human readable approach to update the docs. i'm not confident that `manage` conveys enough purpose, or if the over-arching issue is clear enough.  respectfully, maybe you can mock up how you feel it should updated to help improve clarity?\n",
      "createdAt": "2015-07-29T21:46:01Z",
      "issue": {
        "id": "MDU6SXNzdWU5Nzc5NDI3Ng==",
        "title": "Extend docs, how to manage object/collection associations with non-nested resources",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/187"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyNjUyMTMyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyNjUyMTMyNA==",
      "body": "publish minor, ya?\n",
      "createdAt": "2015-07-30T23:34:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDAyNzkwMzQ=",
        "title": "Events for `valid` and `submit`",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/47"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyNjczODYwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyNjczODYwOQ==",
      "body": "did a README update for this too. 5.1.0, comin in hot\n",
      "createdAt": "2015-07-31T16:20:08Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDAyNzkwMzQ=",
        "title": "Events for `valid` and `submit`",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/47"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyNzY1MzMyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyNzY1MzMyOQ==",
      "body": "hey @gnimmelf!\n\nlooks like you are mixing up what goes in `.extend` and what goes inside the constructor, e.g. new EditForm({ur-options-here}).  take a closer peek at the API docs, and you'll find that your method overriding goes in .extend, but other options, like fields, go into the constructor!\n\nas a forewarning, many \"features\" of FormView actually extend from \"View\" itself.  If you need to override `initialize` and are willing to call `View.prototype.call(this)` from there too, I recommend doing so until you are more comfortable with the lib.  You don't need to, but it will likely be helpful as you're just fist learnin' it.  It will make sure you get all the other &-View goodies.\n\nwrite back with more Qs as necessary.  feel free to post a requirebin fiddle too if youd like\n",
      "createdAt": "2015-08-04T15:39:17Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODk1MDQ0Ng==",
        "title": "Form in a view (should be very simple =)",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/49"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEyOTY5OTQ1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEyOTY5OTQ1NQ==",
      "body": "+1\n",
      "createdAt": "2015-08-11T04:32:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDIwODIwNDM=",
        "title": "Made template extensible (#11)",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/12"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzMDE4MDgzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzMDE4MDgzMQ==",
      "body": "``` js\nz = new PouchDB('z');\nz.destroy()\n    .then(function() {\n        return z.post({test: 'doc'});\n    })\n    .catch(function(err) {\n        console.error(err.message); // Failed to execute 'transaction' on 'IDBDatabase': The database connection is closing.\n    })\n```\n\nin my case, it was user error.  async, i destroyed db erroneously!\n",
      "createdAt": "2015-08-12T06:06:01Z",
      "issue": {
        "id": "MDU6SXNzdWU1Mjk0OTcyMw==",
        "title": "DB Connection closed on Chrome: Failed to execute 'transaction' on 'IDBDatabase'",
        "url": "https://github.com/pouchdb/pouchdb/issues/3277"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzMTE3MTk2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzMTE3MTk2OQ==",
      "body": "i posted this elsewhere, in a spot I can no longer find, but I manually force in my `draw` method that all the essential view initialization steps happen: https://github.com/cdaringe/ampersand-form-manager-view/blob/master/ampersand-form-manager-view.js#L133\n\nit's a hack. but it works!\n",
      "createdAt": "2015-08-14T16:32:58Z",
      "issue": {
        "id": "MDU6SXNzdWU4NDY2MjcxOA==",
        "title": "Subviews are not re-rendered on subsequent render() calls in same context",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/126"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzMzE2MzYwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzMzE2MzYwNA==",
      "body": "thanks for the support guys :)  i accept\n",
      "createdAt": "2015-08-20T20:37:59Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDIyMDk5ODg=",
        "title": "List cdaringe as lead maintainer and add him to core team",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/144"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzMzIwOTc2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzMzIwOTc2NQ==",
      "body": "hey @bryanspears.  keep in mind that `rendered !== attached`.  `rendered` being emitted does not 100% guarantee that your content will be on the DOM.  _most of the time_, it's the case.  perhaps there's a requirebin ex we can get goin' to diagnose?\n",
      "createdAt": "2015-08-20T23:21:51Z",
      "issue": {
        "id": "MDU6SXNzdWU0OTgwNDAwNA==",
        "title": "Emitting events for rendering/inserting",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/84"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzMzU3NTkzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzMzU3NTkzOQ==",
      "body": "thanks @drewlandis!\n",
      "createdAt": "2015-08-21T22:00:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMwODE3NjI=",
        "title": "add FireFox compatibility",
        "url": "https://github.com/cdaringe/square-dance/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/square-dance"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzMzU4MDQ2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzMzU4MDQ2Mw==",
      "body": "I think that @pgilad is correct.  Let's close this out for the time being. @dhritzkiv has [file-drop-view](https://www.npmjs.com/package/ampersand-file-drop-view) which can likely substitute in the interim\n",
      "createdAt": "2015-08-21T22:33:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mjg5MDEzMTQ=",
        "title": "File type support and accept field",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/50"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNDM2MDE1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNDM2MDE1Mg==",
      "body": "@rsskmr can you add us to the codeship perms, if possible?\n",
      "createdAt": "2015-08-24T20:04:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMxOTc1Nzk=",
        "title": "Add cas_roles to permission scheme",
        "url": "https://github.com/trendscenter/nodeapi/pull/16"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNDM2MzQwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNDM2MzQwOQ==",
      "body": "@dylancwood roger that!\n",
      "createdAt": "2015-08-24T20:13:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMxOTc1Nzk=",
        "title": "Add cas_roles to permission scheme",
        "url": "https://github.com/trendscenter/nodeapi/pull/16"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjYwMzg2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjYwMzg2Nw==",
      "body": "@tnguyen14, agreed.  this is more a BKM question than a bug file.  how to handle async errors is a bit beyond the scope here.  I, for example, use a different version of `sync` which is promisified and `.catch` and restore eager deleted models.  really depends on your app!  closing unless further discussion is needed.  thanks!\n",
      "createdAt": "2015-09-01T06:49:47Z",
      "issue": {
        "id": "MDU6SXNzdWU5OTU3NzQ1Nw==",
        "title": "wait for sync when collection model is destroyed",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/143"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjYwNTk1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjYwNTk1Mw==",
      "body": "Henrik made some progress on this, but it wasn't quite all there yet.  if someone wants to pick it up and run with it, feel free. however, given that it's not high priority, I am closing out until someone takes the reigns.\n",
      "createdAt": "2015-09-01T06:54:21Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMzNTA0OQ==",
        "title": "Shorthands for subview declaration",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/43"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjYwODQzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjYwODQzOQ==",
      "body": "the [renderCollection](https://github.com/AmpersandJS/ampersand-view#rendercollection-viewrendercollectioncollection-itemview-containerel-viewoptions) docs I think has sufficient content to cover the case. ya, it's not apples-to-apples, but definitely nectarines-to-peaches™\n",
      "createdAt": "2015-09-01T07:02:12Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDY5OTY4OQ==",
        "title": "Document how to create child collections along with a collection subview.",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/48"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjYxMTIxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjYxMTIxNQ==",
      "body": "this affects &-view, but at the end-of-the-day, the solution is really begging for extra work on &-collection-view to host an eventing Collection.  I don't however, see the potential perf gains? @scottcorgan, how were you expecting better perf from your suggested solution?\n",
      "createdAt": "2015-09-01T07:18:38Z",
      "issue": {
        "id": "MDU6SXNzdWU0NTU3OTY4NA==",
        "title": "Notify parent view that child views have been rendered",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/70"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjYxMjA1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjYxMjA1OQ==",
      "body": "@lukekarrys, is this something we still want to pursue?\n",
      "createdAt": "2015-09-01T07:24:07Z",
      "issue": {
        "id": "MDU6SXNzdWU0Njc3NzIzNQ==",
        "title": "jQuery plugins dont work with event hash",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/72"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjYxMjk3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjYxMjk3Mw==",
      "body": "closing as it's dually tracked.  See trello link above.  target is for &-dom-events dep update!\n",
      "createdAt": "2015-09-01T07:28:19Z",
      "issue": {
        "id": "MDU6SXNzdWU0NzMxMDU0NA==",
        "title": "mouseenter/mouseleave don't fire for child elements",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/73"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjYxNjY0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjYxNjY0Mw==",
      "body": "yea @bryanspears, if it's synchronous the whole way though, i agree, you shouldn't have issue.  async `render`s will definitely ruin your day though!  @dhritzkiv, there is a dupe thread about wanting events from `renderCollection` items.  i definitely get the semantic desire to do `collectionView.views.on(...)`.  I think if someone wants to take a stab at updating &-collection-view, it could use some love!  for now, however, as the issue really resides in the other module's capability, i'm going to close this one out.  we can re-open as needed\n",
      "createdAt": "2015-09-01T07:41:43Z",
      "issue": {
        "id": "MDU6SXNzdWU0OTgwNDAwNA==",
        "title": "Emitting events for rendering/inserting",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/84"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjc2MTc3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjc2MTc3Nw==",
      "body": "apologies for unclear lingo!  BKM => Best Known Method. Questions are fine in here, it's just a long outstanding issue, so i was doing some house keeping :)\n",
      "createdAt": "2015-09-01T15:31:31Z",
      "issue": {
        "id": "MDU6SXNzdWU5OTU3NzQ1Nw==",
        "title": "wait for sync when collection model is destroyed",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/143"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjc4MTc0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjc4MTc0Nw==",
      "body": "hi @jzaefferer, all view's accept this, and do so through the `bindings` object.  i made a fiddle to demonstrate: http://requirebin.com/?gist=f6027f76d0d84d47a1ca\n\nthere have been a lot of discussions about which view modules should accept which DOM attrs/props.  As a general rule, we've been somewhat defaulting to saying 'use the bindings' vs. add additional code for single attributes.\n\nHTH\n",
      "createdAt": "2015-09-01T16:26:49Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDQyMzk0NDA=",
        "title": "Support disabled attribute",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/issues/13"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNjgxNDE0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNjgxNDE0NA==",
      "body": "@jzaefferer, i agree it's verbose.  it is certainly 'supported', however. :)  definitely accepting PRs to update as you think would increase understanding and clarity.\n",
      "createdAt": "2015-09-01T18:05:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDQyMzk0NDA=",
        "title": "Support disabled attribute",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/issues/13"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNzE4Nzk4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNzE4Nzk4Ng==",
      "body": "+1\n",
      "createdAt": "2015-09-02T17:50:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM0NTMxODU=",
        "title": "Add safeSet for children & collections",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/192"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNzI0NDIwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNzI0NDIwMQ==",
      "body": "I'm not sure exactly how this all works.  Given that this is a notable size project and you've done a ton of cool work, would you be open to sharing your work with the team in the form of a design review once it's all clicking and working together?\n",
      "createdAt": "2015-09-02T21:06:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQwMjIyODk=",
        "title": "code modified for customized block",
        "url": "https://github.com/trendscenter/coins-blockly/pull/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coins-blockly"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNzM4NzUzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNzM4NzUzMQ==",
      "body": "thanks! i ended up generating my own CLI tool to achieve my needs. thanks for the response tho\n",
      "createdAt": "2015-09-03T09:14:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDI4OTM5Nzg=",
        "title": "db level features?",
        "url": "https://github.com/cliffano/couchtato/issues/11"
      },
      "repository": {
        "nameWithOwner": "cliffano/couchtato"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNzUwMzI3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNzUwMzI3OA==",
      "body": "switched to webpack in the troublesome repo since then.  will remember to try as i do still use b-ify in other projects. thx\n",
      "createdAt": "2015-09-03T16:27:09Z",
      "issue": {
        "id": "MDU6SXNzdWU4MTE3Njk3NA==",
        "title": "grunt-browserify watching process exits on parse error ",
        "url": "https://github.com/jmreidy/grunt-browserify/issues/333"
      },
      "repository": {
        "nameWithOwner": "jmreidy/grunt-browserify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNzU4NDY0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNzU4NDY0NA==",
      "body": "@kamilogorek or @pgilad, can you shoot me a rubber stamper over here?\n",
      "createdAt": "2015-09-03T21:53:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQwMjM5NDI=",
        "title": "add serialize([options]) support",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/193"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNzg3OTcyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNzg3OTcyMw==",
      "body": "yahtzee!\n",
      "createdAt": "2015-09-04T23:50:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQwMjM5NDI=",
        "title": "add serialize([options]) support",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/193"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNzg4MTk4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNzg4MTk4Ng==",
      "body": "added publish scripts too. however, no publish access on this module, so 4.6.0 is just chillin on github for now :)\n",
      "createdAt": "2015-09-05T00:01:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQwMjM5NDI=",
        "title": "add serialize([options]) support",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/193"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzNzg4OTQ2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzNzg4OTQ2MQ==",
      "body": "thanks brotha! :angel: \n",
      "createdAt": "2015-09-05T00:49:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQwMjM5NDI=",
        "title": "add serialize([options]) support",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/193"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzODA1MDQ3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzODA1MDQ3OQ==",
      "body": "hi @timdorr @cesarandreu.  thanks for your willingness to add ideas!\n1. my selected-mapped state isn't tiny, but it's not huge either. see [here](https://gist.github.com/cdaringe/ed5e5d185be2aba9a9e4).  I could perhaps reduce some of that data further.  do you know much about the what and why of the `validation` step?\n2. i have tried to get react devtools up, but it's currently out-of-order in electron, which is my target client.\n3. in regards to reselect, i'm not modifying as I select my state-bits into the component's stateToProps map.  but perhaps therein is part of the issue?  i'm still reasoning over why you'd cache in this part of the processes vs. before/conditionally dispatching an action.\n4. i will be trying pure render for sure\nthanks guys! would definitely care for some more tips if you got them!\n",
      "createdAt": "2015-09-06T07:39:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDUwMDA4NDU=",
        "title": "Slow Performance Observed When Updating State On Keyup",
        "url": "https://github.com/reduxjs/redux/issues/691"
      },
      "repository": {
        "nameWithOwner": "reduxjs/redux"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzODYxMjM2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzODYxMjM2OA==",
      "body": "@pgilad recently did _just_ this.  https://github.com/AmpersandJS/ampersand-state/pull/192.  looks like the &-model deps just need to be bumped to `ampersand-state@4.6.x+`\n",
      "createdAt": "2015-09-08T16:04:02Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDU0MDQ5MzE=",
        "title": "A collection declared as a prop introduces errors.",
        "url": "https://github.com/AmpersandJS/ampersand-model/issues/59"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-model"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzODc3MDkyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzODc3MDkyMw==",
      "body": "@wraithgar, you spent your fair share in collection-town.  May I have a review from you as well?\n",
      "createdAt": "2015-09-09T03:43:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODcxNjk=",
        "title": "feature: permit indexing on derived",
        "url": "https://github.com/AmpersandJS/ampersand-collection/pull/67"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzOTQyODUwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzOTQyODUwMA==",
      "body": "looks beautiful\n",
      "createdAt": "2015-09-11T01:55:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQ3MzgzODI=",
        "title": "Prettify names",
        "url": "https://github.com/MRN-Code/coinstac-distributed-algorithm-set/pull/1"
      },
      "repository": {
        "nameWithOwner": "MRN-Code/coinstac-distributed-algorithm-set"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzOTU3MTExNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzOTU3MTExNg==",
      "body": "Friendly bump!\n",
      "createdAt": "2015-09-11T15:10:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODcxNjk=",
        "title": "feature: permit indexing on derived",
        "url": "https://github.com/AmpersandJS/ampersand-collection/pull/67"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzOTY3NjY0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzOTY3NjY0Nw==",
      "body": "> Just so I'm following along, the use case here is for when a non-ampersand-state object is passed in, and the index is a derived property.\n\nYup!\n\n>  apply the derived function from the model's prototype onto the attributes in order to figure out what the result of that attribute is, and is why we can't just go lodash.result because it's not an instantiated ampersand-state object.\n\nDouble yup!\n\n> ... to fall over is when you have nested derived properties, i.e. a property that is derived from another derived property.\n\ntriple, flipping, yup.\n\nany other follow up on it? :)\n",
      "createdAt": "2015-09-11T22:27:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODcxNjk=",
        "title": "feature: permit indexing on derived",
        "url": "https://github.com/AmpersandJS/ampersand-collection/pull/67"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDEzOTY5Mzk0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDEzOTY5Mzk0NA==",
      "body": "cool!  i'll release 1.5.0 soon if someone would be willing to grant publish access\n",
      "createdAt": "2015-09-12T00:57:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODcxNjk=",
        "title": "feature: permit indexing on derived",
        "url": "https://github.com/AmpersandJS/ampersand-collection/pull/67"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MDgwMjQxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MDgwMjQxNQ==",
      "body": "it's probably firing the event, but if it's rendering during the instantiation cycle, there's no time for other views to setup listeners on it.  e.g., there's no chance for something else to call `yourAutoRenderingView.on('change', ...)`, because by the time `yourAutoRenderingView` is formally instantiated, it has been rendered, and thus the event is lost.   i'm not sure that it's a bug, but definitely a design consideration.  does that sound right to folks?  what are your thoughts?\n\nin making a fiddle, it the chicken-and-egg problem became very apparent:\nhttp://requirebin.com/?gist=9abae7fb677d5160c5a6\n",
      "createdAt": "2015-09-16T16:54:54Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzY1MzA3NA==",
        "title": "autoRender:true does not fire change:rendered event",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/112"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MTg4MzcwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MTg4MzcwMA==",
      "body": "i slapped some output code in `docker-browser-server` and it showed this:\n\n```\nunable to verify the first certificate\n{ [Error: unable to verify the first certificate] code: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE' }\n```\n\nbed time for now!  \n",
      "createdAt": "2015-09-21T06:04:12Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc0NDgzMTQ=",
        "title": "docker server spawns and dies immediately",
        "url": "https://github.com/max-mapper/adventure-time/issues/6"
      },
      "repository": {
        "nameWithOwner": "max-mapper/adventure-time"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MTg5MzU4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MTg5MzU4Mg==",
      "body": "i lied about bedtime.\ndocker-run calls `create` which calls docker-remote-api, which tests to see if DOCKER_TLS_VERIFY is `'1'` or `'true'`.  It was. There's an [article about it here](https://docs.docker.com/articles/https/).  I hot-routed that docker requirement for dev by simply exporting it as `'0'` in the same process running the server.\n\nNow onto figuring out why `create` now calls back with `\"HPE_INVALID_CONSTANT\"`.  progress :)\n",
      "createdAt": "2015-09-21T06:55:18Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc0NDgzMTQ=",
        "title": "docker server spawns and dies immediately",
        "url": "https://github.com/max-mapper/adventure-time/issues/6"
      },
      "repository": {
        "nameWithOwner": "max-mapper/adventure-time"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjA2MjQyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjA2MjQyOA==",
      "body": "hey @bryanspears.  indeed, at the form-level, there's not a place to do so.  the form maintains validity strictly as a subset of it's child field views' validities.  because of this, similar to how @fyockm's password-view works, the real only clean way to do this ATM is to make another _Field View_ to manage the relationship.  you could perhaps do some hacks to listen to key events and set some state on the form by sniffing the form's `_fieldViews`, but then you break the contract of trusting the form's `.valid` property, which may eventually lead to more head banging!  arg!  making a FieldView isn't too much work.  https://ampersandjs.com/learn/forms#form-input-view-conventions\n",
      "createdAt": "2015-09-21T18:02:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc1NjM4Njk=",
        "title": "Example of multi-field validation?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/51"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjA3NTc5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjA3NTc5NA==",
      "body": "@bryanspears, exactly.  it definitely feels like a bit of overhead for a seemingly simple case, but it's the pattern.  here's his password-view: https://gist.github.com/fyockm/81830ae9574d72fe34e2 .  I've done some as well, but _unfortunately_ they are still closed source (working on that!)\n",
      "createdAt": "2015-09-21T18:55:48Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc1NjM4Njk=",
        "title": "Example of multi-field validation?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/51"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjA4MDA5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjA4MDA5Mw==",
      "body": "added publish scripts.  published as 6.0.2.\n",
      "createdAt": "2015-09-21T19:07:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU1ODUwNzU=",
        "title": "rev deps, notably &-state to 4.6.0 (minor bump)",
        "url": "https://github.com/AmpersandJS/ampersand-model/pull/62"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-model"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjA4MzI0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjA4MzI0MQ==",
      "body": "i hear ya man!  i was in the same boat when i got started.  one of my first cases was building a field that sourced data from either an < input > or a < select > based on another piece of state.  i somewhat hacked around it and it ended up being a real pain.  i really regret not doing it per the book.\n\nit may not be a bad idea to extend `FormView` to add optional tests form-level.  in that regard, you can test each at the field level, and at the form level.  it could be a pretty dang easy extension, I'd think. @wraithgar may have opinions on that.  @bryanspears, take a peek at the FormView source--it's compact.  you may consider prototyping it\n",
      "createdAt": "2015-09-21T19:19:57Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc1NjM4Njk=",
        "title": "Example of multi-field validation?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/51"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjA4NzMxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjA4NzMxMg==",
      "body": "whoops--nm.  don't have publish access.  publish scripts are pushed to github, tho\n",
      "createdAt": "2015-09-21T19:37:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU1ODUwNzU=",
        "title": "rev deps, notably &-state to 4.6.0 (minor bump)",
        "url": "https://github.com/AmpersandJS/ampersand-model/pull/62"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-model"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjEyMzQwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjEyMzQwOA==",
      "body": "gladly.  looks like it took!\n",
      "createdAt": "2015-09-21T22:05:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU1ODUwNzU=",
        "title": "rev deps, notably &-state to 4.6.0 (minor bump)",
        "url": "https://github.com/AmpersandJS/ampersand-model/pull/62"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-model"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjEyMzc3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjEyMzc3MQ==",
      "body": "well there's a simple solution!\n",
      "createdAt": "2015-09-21T22:07:17Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc1NjM4Njk=",
        "title": "Example of multi-field validation?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/51"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjE1MDc4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjE1MDc4OQ==",
      "body": "for the time being, i'm experimenting with\n\n``` js\n    initialize: function(attrs) {\n        for (var def in this._definition) {\n            var defDfl = this._definition[def].default;\n            if (this._definition[def].required &&\n                (!defDfl || (typeof defDfl === 'function' && !defDfl())) &&\n                (attrs[def] === undefined || attrs[def] === null)) {\n                throw new ReferenceError('expected value for attr `' + def + '`. received ' + attrs[def]);\n            }\n        }\n        Model.prototype.initialize.apply(this, arguments);\n    }\n```\n",
      "createdAt": "2015-09-22T01:02:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc2MjYxNjk=",
        "title": "required attributes misleading",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/195"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjE3OTYyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjE3OTYyMg==",
      "body": "@mafintosh, would you have any tips in this regard?\n",
      "createdAt": "2015-09-22T04:32:45Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc0NDgzMTQ=",
        "title": "docker server spawns and dies immediately",
        "url": "https://github.com/max-mapper/adventure-time/issues/6"
      },
      "repository": {
        "nameWithOwner": "max-mapper/adventure-time"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjE4Mzg1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjE4Mzg1Nw==",
      "body": "i ended up moving from OSX into a vagrant box.  `sudo` was required.  got it going.  i'm still not sure why it wasn't workin otherwise :/\n\nregardless, unbelievably cool!\n",
      "createdAt": "2015-09-22T05:12:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc0NDgzMTQ=",
        "title": "docker server spawns and dies immediately",
        "url": "https://github.com/max-mapper/adventure-time/issues/6"
      },
      "repository": {
        "nameWithOwner": "max-mapper/adventure-time"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjQwMzk2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjQwMzk2Mw==",
      "body": "yikes, can't believe i didn't find those oldies-but-goodies\n\n> And if they are undefined and there is a default? Should required and default be mutually exclusive?\n\ni would say they must be able to coexist.  if you set a prop to `undefined` that is required, then it semantically and practically violates any meaning that required inferred.  however, there's no reason why a default shouldn't be able to provide an initial value!  therefore, \"let me the user provide an initial value, and assert that there is forever a value that meets the type requirement or allowNull requirement\"\n\nI think, @wraithgar, your notes #48 echo this\n",
      "createdAt": "2015-09-22T20:07:13Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc2MjYxNjk=",
        "title": "required attributes misleading",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/195"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MjczOTUyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MjczOTUyNg==",
      "body": "+1\n",
      "createdAt": "2015-09-23T21:45:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU4MjAzNTU=",
        "title": "just call forceUpdate if component is mounted",
        "url": "https://github.com/AmpersandJS/ampersand-react-mixin/pull/11"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-react-mixin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Mjc0NDE0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Mjc0NDE0Ng==",
      "body": "@pgilad i like it.  i'm trying to poke holes in it for hardening sake, but im comin' up short!\n",
      "createdAt": "2015-09-23T22:02:19Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc2MjYxNjk=",
        "title": "required attributes misleading",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/195"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MzAxNzY4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MzAxNzY4NA==",
      "body": "tests still passing :)\n",
      "createdAt": "2015-09-24T18:50:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU0NjA2NTU=",
        "title": "move .result => .data",
        "url": "https://github.com/trendscenter/nodeapi/pull/29"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0MzAxODc0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0MzAxODc0Ng==",
      "body": "@bryanspears, i think adding `tests` at the FormView level is a valid request.  I am def open to a PR if you'd be interested in giving it a whirl\n",
      "createdAt": "2015-09-24T18:55:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc1NjM4Njk=",
        "title": "Example of multi-field validation?",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/issues/51"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Mzg3ODE1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Mzg3ODE1Nw==",
      "body": "thanks @gaearon!  will try at my next opportunity\n",
      "createdAt": "2015-09-28T21:22:09Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDUwMDA4NDU=",
        "title": "Slow Performance Observed When Updating State On Keyup",
        "url": "https://github.com/reduxjs/redux/issues/691"
      },
      "repository": {
        "nameWithOwner": "reduxjs/redux"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NDI3Njc3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NDI3Njc3OQ==",
      "body": "Arg, sorry there.  [_I found it_](https://github.com/cdaringe/pouchy/commit/1c72f356970d3c6f89c285c1e1968df9bdec40ab).  It was all me!  I really threw myself for a loop.\n",
      "createdAt": "2015-09-30T04:14:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDg5ODAzMTg=",
        "title": "db with http adapter creates local filesystem presence without path option",
        "url": "https://github.com/pouchdb/pouchdb/issues/4382"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NDUyODY4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NDUyODY4OA==",
      "body": "Confirmed.  I use it in the main and render process\n",
      "createdAt": "2015-09-30T20:19:30Z",
      "issue": {
        "id": "MDU6SXNzdWU4MjQwMjAwNQ==",
        "title": "PouchDB and electron",
        "url": "https://github.com/pouchdb/pouchdb/issues/3893"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NDg2MzY4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NDg2MzY4MQ==",
      "body": "hmmm.  i confirmed my firewall is _off_ in OSX.\n\n```\ncdieringer@Snapper-osx:/coins/localcoin$ sudo mount -v -t nfs -o nfsv3 192.168.1.1:/Users/cdieringer/Sublime/ /coins/test\nmount_nfs: option nfsv3 deprecated, use vers=#\nmount_nfs: can't mount /Users/cdieringer/Sublime/ from 192.168.1.1 onto /coins/test: Operation timed out\n```\n\nstill searching for the cause\n",
      "createdAt": "2015-10-01T22:11:24Z",
      "issue": {
        "id": "MDU6SXNzdWU4NTY0NDYwNA==",
        "title": "[NFS] vagrant up hangs while \"Mounting NFS shared folders\"",
        "url": "https://github.com/hashicorp/vagrant/issues/5802"
      },
      "repository": {
        "nameWithOwner": "hashicorp/vagrant"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NTA5NDU2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NTA5NDU2Nw==",
      "body": "See AmpersandJS/ampersand-view#146\n",
      "createdAt": "2015-10-02T17:38:43Z",
      "issue": {
        "id": "MDU6SXNzdWU5MjQ5MzY2NA==",
        "title": "Don't use view.rendered to determine whether render must be called",
        "url": "https://github.com/AmpersandJS/ampersand-view-switcher/issues/25"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view-switcher"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NTE0MzcyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NTE0MzcyOA==",
      "body": "thanks @toddbluhm.  indeed, i did check that, and it is correct.  mine is also /usr/local.  The npm confirms  the directory. further, all of my global node bins are workin' just dandy!  Thanks for the tip!\n",
      "createdAt": "2015-10-02T20:14:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDkyMDI2MTk=",
        "title": "\"extends\": \"eslint:recommended\" not honored",
        "url": "https://github.com/AtomLinter/linter-eslint/issues/220"
      },
      "repository": {
        "nameWithOwner": "AtomLinter/linter-eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NTU5MzIzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NTU5MzIzNw==",
      "body": "Can one of you get a requirebin going so we can look at it together?\n",
      "createdAt": "2015-10-05T16:36:42Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDUwMzA5MDU=",
        "title": "deep nested subviews issue of re-rendering",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/145"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NTYxOTM4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NTYxOTM4Mg==",
      "body": "declarative subviews get rendered on on `change:el`, I believe.  i'm pretty swapped at work ATM, but you could slap a `debugger;` perhaps in the parseSubviews fn and try and sniff a trace back on that second dubious render.  perhaps if you're binding to the root element in both subviews this would occur.  in the src there's a local fn called `action` that you can hook into for debugging purposes\n",
      "createdAt": "2015-10-05T18:11:33Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDUwMzA5MDU=",
        "title": "deep nested subviews issue of re-rendering",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/145"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NjM3OTY0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NjM3OTY0NQ==",
      "body": "swig rocks.  I used it a bunch!  thanks for the hard work\n",
      "createdAt": "2015-10-08T00:31:46Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTA3MTY4MA==",
        "title": "No longer maintained — Do you want to help?",
        "url": "https://github.com/paularmstrong/swig/issues/628"
      },
      "repository": {
        "nameWithOwner": "paularmstrong/swig"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NjkxNzI2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NjkxNzI2MQ==",
      "body": "it's failing to due the same issue reported in the url in the top.  apologies for lack of clarity\n",
      "createdAt": "2015-10-09T16:21:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDcyMDk2MTY=",
        "title": "use mcrypt 0.0.15 per package author: tinyurl.com/nlmaae5",
        "url": "https://github.com/trendscenter/nodeapi/pull/38"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NzEzNzk1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NzEzNzk1MA==",
      "body": "Ah, I see.  I didn't know it was a thing!  Thanks :)\n",
      "createdAt": "2015-10-10T23:53:31Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTA3NzI5Mzk=",
        "title": "open to making the server exported/importable?",
        "url": "https://github.com/pouchdb/pouchdb-server/issues/120"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NzEzODIyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NzEzODIyOA==",
      "body": "If I already have ACL controls in place,  auth in place (app rest API+Postgres), and pouch>couch proxy in place, @daleharvey, is it your opinion that these doc level/db level access authorizations occur in the app-level API layer?  This is what I've been leaning towards vs spreading perms into various systems (eg into couch)\n",
      "createdAt": "2015-10-11T00:04:01Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDg0NTIzMjA=",
        "title": "Per-document access control",
        "url": "https://github.com/pouchdb/express-pouchdb/issues/262"
      },
      "repository": {
        "nameWithOwner": "pouchdb/express-pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NzQ4MTA2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NzQ4MTA2Mw==",
      "body": "thanks @rvagg.  i was able to repeat your steps and confirm that all was well with leveldown@latest (builds and tests OK).  this lead me to scrap my global version, reinstall (which perhaps was done with a different node build?), and return to happiness. :+1: \n",
      "createdAt": "2015-10-12T18:18:43Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTg0NDgyMg==",
        "title": "Installation on os x 10.7.5 ( xcode 4.6.3 ) fails",
        "url": "https://github.com/Level/leveldown/issues/92"
      },
      "repository": {
        "nameWithOwner": "Level/leveldown"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0NzU2MjQxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0NzU2MjQxNw==",
      "body": "Can we all just acknowledge that that was a real team feature right there?  3 devs, one branch?  Success.  \n",
      "createdAt": "2015-10-13T01:01:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDcyMjQyNDk=",
        "title": "Feature/remove iojs",
        "url": "https://github.com/trendscenter/nodeapi/pull/39"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg1NzY3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg1NzY3NQ==",
      "body": "I closed temporarily because tests weren't passing.  However, even on master they are not passing.  Perhaps this is something you can assist with?\n",
      "createdAt": "2015-10-13T21:21:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDc1ODYwOTE=",
        "title": "feature/quick-rebuilds",
        "url": "https://github.com/electron/rebuild/pull/28"
      },
      "repository": {
        "nameWithOwner": "electron/rebuild"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg2MzkwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg2MzkwOQ==",
      "body": "If there is an EPERM, for example, you are just returning `false`.  Because of this, the user/consumer is mislead.  I'm not using this lib, but was checking out the src.  Something you may want to consider!  Thx\n",
      "createdAt": "2015-10-13T21:49:46Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTEyMzcxMDI=",
        "title": "Errors swallowed by method",
        "url": "https://github.com/IonicaBizau/node-is-there/issues/9"
      },
      "repository": {
        "nameWithOwner": "IonicaBizau/node-is-there"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg2ODIxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg2ODIxMg==",
      "body": "testing has shown it's just not quite there yet :/\n",
      "createdAt": "2015-10-13T22:08:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDc1ODYwOTE=",
        "title": "feature/quick-rebuilds",
        "url": "https://github.com/electron/rebuild/pull/28"
      },
      "repository": {
        "nameWithOwner": "electron/rebuild"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg3NTk1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg3NTk1NQ==",
      "body": "okee doke :).  can you talk to me about `prepublish: npm run compile`?  I use npm hooks often, but I'm thinking there may be some magic with publish?  When I'm trying to install my branch from git, nslog starts building before the `lib/` dir gets built.  what is supposed to trigger the lib build?  usually i've done `postinstall`\n",
      "createdAt": "2015-10-13T22:50:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDc1ODYwOTE=",
        "title": "feature/quick-rebuilds",
        "url": "https://github.com/electron/rebuild/pull/28"
      },
      "repository": {
        "nameWithOwner": "electron/rebuild"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg3ODA0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg3ODA0OA==",
      "body": "rad+.  thanks guys.  istanbul ignore added.  additionally, jshint was barking about `atob` being redefined, which I suppressed.  rebase was being a little bully as  f70fc9b was a merge commit with a conflict resolution embedded.  i wasn't comfortable rebasing that one :/\n",
      "createdAt": "2015-10-13T23:01:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDczMzg0NTI=",
        "title": "Add friendly error message for common leveldown error case",
        "url": "https://github.com/pouchdb/pouchdb/pull/4448"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg4MDEzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4MDEzOQ==",
      "body": "sheesh, almost forgot about this!  this is $money$!  one more +1 folks! :)\n",
      "createdAt": "2015-10-13T23:15:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDY2NjEyNzU=",
        "title": "persist bindings thru lifecycle. Closes #105",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/146"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTA4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTA4NA==",
      "body": "yahtzee :game_die: :game_die: :game_die: :game_die: :game_die:\n",
      "createdAt": "2015-10-14T00:11:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDY2NjEyNzU=",
        "title": "persist bindings thru lifecycle. Closes #105",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/146"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTY4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTY4Ng==",
      "body": "hey @pgilad, do you still want to pursue this one?\n",
      "createdAt": "2015-10-14T00:15:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzQxMzU=",
        "title": "Be more concise on rendering subview",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/134"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTgxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTgxNA==",
      "body": "if someone wants to pick this one up and run with it, please do! tagging as such\n",
      "createdAt": "2015-10-14T00:16:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjEzMjg0MDM=",
        "title": "implementing shorthand syntax for subviews. Fixes #43",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/64"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTkyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTkyNQ==",
      "body": "same as #64, if others want to jump in and revive those issues, please do\n",
      "createdAt": "2015-10-14T00:17:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk4NzE2MDU=",
        "title": "Subview shorthands for assigning model and/or collection",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/44"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzg5MDMzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzg5MDMzNw==",
      "body": "hey bryan, https://github.com/AmpersandJS/ampersand-view/pull/130/files#diff-078c61d10edbcb3f23f11f2a923ea310R81. the derived property changing should still emit events.  are you not seeing those?  i think this may have been take of by now\n",
      "createdAt": "2015-10-14T00:20:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzgxMzEyMDg=",
        "title": "Attempting to fix subview re-render issue",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/130"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzk0NDQ5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzk0NDQ5Mg==",
      "body": "whether to replace or append the el has been a long standing issue.  although Henrik is in the 'use less DOM' camp, I, as yourself, have also preferred the \"new view ~ new sub-DOM approach\", unless explicitly replacing.  react does this so well with vdom!\n\nanyway, +1 from me!\n",
      "createdAt": "2015-10-14T05:58:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzkwMjk5Njc=",
        "title": "Fix issue #87 - Subviews hash should append el",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/132"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzk0NDc4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzk0NDc4Ng==",
      "body": "@kamilogorek, I seem to recall you already solving this problem _somewhere else_?  Do you recall?  I'd like to support the same behavior\n",
      "createdAt": "2015-10-14T06:01:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzkxMzc=",
        "title": "Add a clear error message for empty templates",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/136"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzk1MjUwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzk1MjUwOQ==",
      "body": "couchdb will mutate your urls.  i created [couchdb-urlify](https://www.npmjs.com/package/couchdb-urlify) which i use to set my db names before putting them into pouch, and thus into couch. it will even send me an error if i'm in violation :) \n",
      "createdAt": "2015-10-14T06:40:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDcwODA2ODc=",
        "title": "Problem with czech encoding",
        "url": "https://github.com/pouchdb/pouchdb/issues/4351"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzk1MjY1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzk1MjY1Mg==",
      "body": "you might check it out using the [assert](https://www.npmjs.com/package/couchdb-urlify#assert) method\n",
      "createdAt": "2015-10-14T06:41:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDcwODA2ODc=",
        "title": "Problem with czech encoding",
        "url": "https://github.com/pouchdb/pouchdb/issues/4351"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0Nzk1NzAwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0Nzk1NzAwNQ==",
      "body": "I experienced similar symptoms on `2.11.3` installing leveldown, despite that npm component being revamped.  bummer!  however, installing `3.3.6` and installing thru it resolved my issue\n",
      "createdAt": "2015-10-14T07:01:14Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDg1Nzc1MA==",
        "title": "Specific combination of dependencies causes npm install to skip building native modules",
        "url": "https://github.com/npm/npm/issues/5400"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0ODE0ODE1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0ODE0ODE1OQ==",
      "body": "thanks @bryanspears. sorry for the slow approval on that one\n",
      "createdAt": "2015-10-14T18:34:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzkwMjk5Njc=",
        "title": "Fix issue #87 - Subviews hash should append el",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/132"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0ODE0OTY2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0ODE0OTY2Mg==",
      "body": "changelog updated in README\n",
      "createdAt": "2015-10-14T18:37:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzkwMjk5Njc=",
        "title": "Fix issue #87 - Subviews hash should append el",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/132"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0ODE4MzE5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0ODE4MzE5MA==",
      "body": "@tyscorp, indeed.  however, I'm dealing with vendor code\n",
      "createdAt": "2015-10-14T20:18:20Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTE0NTk5Njc=",
        "title": "Mutation of rejected argument in onPossiblyUnhandledRejection",
        "url": "https://github.com/petkaantonov/bluebird/issues/806"
      },
      "repository": {
        "nameWithOwner": "petkaantonov/bluebird"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0ODMwOTEwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0ODMwOTEwNg==",
      "body": "thanks @maxkorp.  It's pretty obnoxious. doing `npm i --save electron-rebuild` seems to do the prepublish before installing deps, whilst doing `npm i --save git+...electron-rebuild` tries to do it afterwards, thus the content isn't built!  arg!  i've temporarily added the lib/\\* to my branch, just so i can do some external testing.\n",
      "createdAt": "2015-10-15T07:52:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDc1ODYwOTE=",
        "title": "feature/quick-rebuilds",
        "url": "https://github.com/electron/rebuild/pull/28"
      },
      "repository": {
        "nameWithOwner": "electron/rebuild"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0ODQ2ODg2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0ODQ2ODg2Mw==",
      "body": "thanks @paulcbetts, yea, I ended up l just `link`ing.  But I sure was going nuts before hand. :)  Fear not, I'll rebase the `lib/*` content out once it's all finished up.\n",
      "createdAt": "2015-10-15T17:40:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDc1ODYwOTE=",
        "title": "feature/quick-rebuilds",
        "url": "https://github.com/electron/rebuild/pull/28"
      },
      "repository": {
        "nameWithOwner": "electron/rebuild"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0ODQ5MjA1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0ODQ5MjA1NA==",
      "body": "hmm.  toJSON calls serialize without any args, and [serialize adds props by default](https://github.com/AmpersandJS/ampersand-state/blob/master/ampersand-state.js#L107). requirebin?\n",
      "createdAt": "2015-10-15T19:13:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTE2NzgyNTM=",
        "title": "toJSON does not serialize state props",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/197"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0ODgxMjUyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0ODgxMjUyMg==",
      "body": "@pgilad, ya, perhaps that's the simplest route.  in this PR, I was sniffing the various stores.  a single store may tidy things up.\n\n@latentflip, correct. i'm not attached to it, but it is my proposal.  I desire something to protect my model definition integrity, whether from myself or my team.\n",
      "createdAt": "2015-10-16T19:26:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU3Mzc0NDM=",
        "title": "feature/improve-collision-detection",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/196"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0ODkzOTM5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0ODkzOTM5Mw==",
      "body": "hey @latentflip!\n\nthis PR was definitely targeted at _\"a subclass redefining a property that its superclass defined\"_.  as you can see [here](https://github.com/AmpersandJS/ampersand-state/pull/196/files#diff-8a9bf6b5d6e0c56925dadb3c3f2ae1b5R725), I had listed out the stores that &-state uses to cache it's Model properties, for lack of the perfect terms.\n\nThe PR as it stands simply scans each property definition store, and asserts that the new attribute isn't defined in _any_ of them.\n\nThere could be cleaner implementations.  Rather than sniffing each store, it could be simpler to just maintain an aggregated set.  E.g. If you had a session var of 'bananas' and a derived var of 'grapes', `model._allProps = { grapes: 'derived', bananas: 'session' }`, or equivalent.  Then scanning everything wouldn't be such a hassle.  Just throwin' out ideas :)\n\n@pgilad,\n\n> \"whether allowing overriding &state private vars for usage in state/props/derived is the right way to go\". \n\n I don't fully understand this bit. can you clarify?\n",
      "createdAt": "2015-10-17T18:25:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU3Mzc0NDM=",
        "title": "feature/improve-collision-detection",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/196"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTI4ODIxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTI4ODIxNQ==",
      "body": "cool stuff, @STRML. i'm definitely in support of the team add :)\n",
      "createdAt": "2015-10-19T17:24:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDc5NzUyMjQ=",
        "title": "Optimization: Remove unneeded lodash functions and replace polymorphic _.each",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/199"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTI5MDU4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTI5MDU4MQ==",
      "body": "thanks @johanneswuerbach.  unfortunately, #616 doesn't seem to resolve the issue for me.  i asserted that it was all up to date, and that any global installation was purged.  the port hack doesn't seem to do the trick either.  do you see any potential reasons why it would still hang?\n",
      "createdAt": "2015-10-19T17:32:23Z",
      "issue": {
        "id": "MDU6SXNzdWU2NTU2NDE2OA==",
        "title": "testem ci not exiting",
        "url": "https://github.com/testem/testem/issues/528"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTMzNDg3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTMzNDg3NA==",
      "body": "uh oh!  yea, we should definitely address this. ease of use is a requirement, to some extent :).  thanks for the fiddle @brianberlin!\n",
      "createdAt": "2015-10-19T20:21:17Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTM0MDcyMg==",
        "title": "Error on invalid property type",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/56"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTMzNzc0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTMzNzc0MQ==",
      "body": "thx @pgilad, updated to clarify.  would still like @latentflip's feedback here too!\n",
      "createdAt": "2015-10-19T20:30:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU3Mzc0NDM=",
        "title": "feature/improve-collision-detection",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/196"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTM0NDg1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTM0NDg1MQ==",
      "body": "> I guess a mitigating factor would be that someone upgrading would at least see warnings about: \"did you mean to squash\" correct? So maybe it's okay?\n\nyea, I agree.  a warning/deprecation notice would be beneficial perhaps over error'ing out.\n\n> I'm not totally sure that squash makes sense as the parameter here either, but maybe that's just me. replaceExisting or something is longer, but readable? I dunno?\n\nhmm.  `overwrite` perhaps?\n",
      "createdAt": "2015-10-19T20:57:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU3Mzc0NDM=",
        "title": "feature/improve-collision-detection",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/196"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTM3OTQ1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTM3OTQ1Ng==",
      "body": "> overwriting of super class is kind of important to keep as a feature, that is... if we're going to keep inheritance as a feature at all.\n\ntotally.  in fact, the case that prompted this PR, was trying to do exactly that.  I wanted to override an  `_id` prop.  however, because the props are spread across several different stores, the end result did not behave predicatably.  instead, it yielded a duplicate definition within the different stores, leading to :boom: chaos! :bomb: :)\n\n> we shouldn't support inheritance of props and derived props at all simply because things can potentially get a bit messy\n\ni know you're just playing devil's advocate here.  but i agree with you both above, this is obviously a core functionality we can't live without.\n\n@latentflip @HenrikJoreteg \n\nperhaps a happy middle ground is to not warn at all, but just plain old clear out colliding definitions when you go to extend over it.  in that regard, the system behaves transparently when you override any type of attr.  I don't think it'd be too messy--the code is already there in this PR, just needs to be massaged.\n",
      "createdAt": "2015-10-19T23:53:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU3Mzc0NDM=",
        "title": "feature/improve-collision-detection",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/196"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTQ5NDg0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTQ5NDg0Mg==",
      "body": "@paulcbetts @maxkorp, I think we're ready for review.  I figured we could run everything through eslint --fix or standard after all is said and done\n",
      "createdAt": "2015-10-20T09:35:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDc1ODYwOTE=",
        "title": "feature/quick-rebuilds",
        "url": "https://github.com/electron/rebuild/pull/28"
      },
      "repository": {
        "nameWithOwner": "electron/rebuild"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTc0NzkwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTc0NzkwOA==",
      "body": "Really data is a property, and accessible.  Perhaps it needs to be broken out under a diff header?\n",
      "createdAt": "2015-10-21T00:56:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDgyNzU2NTE=",
        "title": "Fix list of available events",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/52"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTk0ODU0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTk0ODU0NQ==",
      "body": "happy to be adding coverage!  doesn't change any functional code, so if it works for you, +1 from me!\n",
      "createdAt": "2015-10-21T16:13:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDgzNDUwOTU=",
        "title": "Add code coverage using Istanbul and Coveralls",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/201"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTk0OTA0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTk0OTA0Ng==",
      "body": "i agree, i see why it was misleading.  whoops!  yes, i think the suggestion looks great\n",
      "createdAt": "2015-10-21T16:15:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDgyNzU2NTE=",
        "title": "Fix list of available events",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/52"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTk5MjE4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTk5MjE4MA==",
      "body": "I do want to add that even when I do a `Promise.reject(realErrorInstance)` without a `.catch`, I still do not get access to the `realErrorInstance` in the `onPossiblyUnhandledRejection` handler*\n",
      "createdAt": "2015-10-21T18:51:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTE0NTk5Njc=",
        "title": "Mutation of rejected argument in onPossiblyUnhandledRejection",
        "url": "https://github.com/petkaantonov/bluebird/issues/806"
      },
      "repository": {
        "nameWithOwner": "petkaantonov/bluebird"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE0OTk5NjkyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE0OTk5NjkyMw==",
      "body": "I suppose the content _is_ in there, but it's tucked away in a different format.  I can still access the attrs.  looks like they may be proxied to `err.properties`?  curious about the design here.  can someone share the intent, as to how and why the error obj was mutated?\n",
      "createdAt": "2015-10-21T19:10:36Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTE0NTk5Njc=",
        "title": "Mutation of rejected argument in onPossiblyUnhandledRejection",
        "url": "https://github.com/petkaantonov/bluebird/issues/806"
      },
      "repository": {
        "nameWithOwner": "petkaantonov/bluebird"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MDM5NjM1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MDM5NjM1NQ==",
      "body": "updating to el capitan killed it!  thanks for the tips!  booting into the gui yielded \"Kernel driver not installed (rc=-1908)\".  googling that error led to several forums indicating that virtualbox has kernel hooks that were incompatible after the OS update. reinstalling virtualbox solved the issue!\n",
      "createdAt": "2015-10-23T00:44:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTE0ODkzNw==",
        "title": "\"The guest machine entered an invalid state while waiting for it to boot. Valid states are 'starting, running'. The machine is in the 'poweroff' state. Please verify everything is configured properly and try again.\"",
        "url": "https://github.com/hashicorp/vagrant/issues/2157"
      },
      "repository": {
        "nameWithOwner": "hashicorp/vagrant"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MDYyNDM3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MDYyNDM3Mw==",
      "body": "putting in an element check here i think would be ok!  i understand, per your notes, that it would be incomplete.  if we wanted to add some string detection on setting the template (+domify conversion), that would be cool too at some point\n",
      "createdAt": "2015-10-23T16:22:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzkxMzc=",
        "title": "Add a clear error message for empty templates",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/136"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MDY3OTc0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MDY3OTc0MA==",
      "body": "@Ramblurr, thanks!\n\n>  this bug has been fixed in Vagrant, but you can still get the \"waiting for\" delays if you're /etc/networking/interfaces file has extra ifaces in it.\n\nIs it fixed? (not snarky, but genuine).  I:\n1. had a private network w/ a static IP in my Vagrantfile, booted and halted.\n2. removed it from my Vagrantfile\n3. booted\n\nThen observed these long delay symptoms.  I would have expected that Vagrant would have removed the entry in interfaces (perhaps on next boot?).\n",
      "createdAt": "2015-10-23T20:19:34Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzg3OTUwMg==",
        "title": "Issues with virtualbox provisioner `private_network` mode in cloud ubuntu 14.04 box",
        "url": "https://github.com/hashicorp/vagrant/issues/3860"
      },
      "repository": {
        "nameWithOwner": "hashicorp/vagrant"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MTMzNzEyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MTMzNzEyNw==",
      "body": "holy. guac. a. mole! :+1: \n",
      "createdAt": "2015-10-27T01:34:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDg4MTkyMjk=",
        "title": "Multi shot",
        "url": "https://github.com/trendscenter/nodeapi/pull/42"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MTY1ODMyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MTY1ODMyOA==",
      "body": "yup, this makes sense.  i think it's good as is, but _perhaps_ we should simply sniff for a serialize fn at all, and if it exists call it.  that way it would work with custom types too, if they define `serialize()`?  It may only be ~0.01% of use cases, but hey, just thinkin' out loud.\n\n`if (raw && val && val.serialize && typeof val.serialize === 'function') val = val.serialize();`\n\n+1 either way\n",
      "createdAt": "2015-10-27T22:00:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDg5MzQ5Njg=",
        "title": "Serialize state props on toJSON",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/205"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MTY4NTY0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MTY4NTY0Mg==",
      "body": "forgive my quick skim, but is calling `model.serialize()` into your template _not_ an option or a solution?\n",
      "createdAt": "2015-10-28T00:47:59Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTM3MTg4OTA=",
        "title": "Possible fix to template engines that attempt to copy the getter-laden context from going crazy ",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/147"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MTk0Njk2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MTk0Njk2NQ==",
      "body": "+1\n",
      "createdAt": "2015-10-28T18:41:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDg5MzQ5Njg=",
        "title": "Serialize state props on toJSON",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/205"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MjEwNjQyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MjEwNjQyMA==",
      "body": "+1, yep :/\n",
      "createdAt": "2015-10-29T07:56:47Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjU4NjIwNg==",
        "title": ">> TypeError: Object #<Object> has no method 'registerHelper'",
        "url": "https://github.com/gruntjs/grunt-contrib-clean/issues/44"
      },
      "repository": {
        "nameWithOwner": "gruntjs/grunt-contrib-clean"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MjU4MjMwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MjU4MjMwNQ==",
      "body": "+1\n",
      "createdAt": "2015-10-30T16:43:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDkyODE4ODc=",
        "title": "hasChanged returns correct value for derived props. FIX #188",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/206"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MjY1MDI1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MjY1MDI1OQ==",
      "body": "Thanks christian.  I will consider your points and try and move forward!\n",
      "createdAt": "2015-10-30T21:01:41Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTM2NjAyMDY=",
        "title": "v2 command chaining not working in v3.x and `.debug` not stopping the command queue",
        "url": "https://github.com/webdriverio/webdriverio/issues/846"
      },
      "repository": {
        "nameWithOwner": "webdriverio/webdriverio"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MzQyNDAzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MzQyNDAzNw==",
      "body": "dude.  nice!!\n",
      "createdAt": "2015-11-03T17:22:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDk1ODM0NDE=",
        "title": "Add view and form-view convention tests; typo fix",
        "url": "https://github.com/AmpersandJS/ampersand-array-input-view/pull/16"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-array-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MzQyNDQ3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MzQyNDQ3MA==",
      "body": "+1\n",
      "createdAt": "2015-11-03T17:24:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDk1NzgzNTE=",
        "title": "Update deps",
        "url": "https://github.com/AmpersandJS/ampersand-array-input-view/pull/15"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-array-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MzQyNDYzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MzQyNDYzNw==",
      "body": "will deploy to npm momentarily...\n",
      "createdAt": "2015-11-03T17:25:08Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDk1NzgzNTE=",
        "title": "Update deps",
        "url": "https://github.com/AmpersandJS/ampersand-array-input-view/pull/15"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-array-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MzQyNjg0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MzQyNjg0Nw==",
      "body": "actually, @lukekarrys or @wraithgar, can you hook it up with publish perms?\n",
      "createdAt": "2015-11-03T17:33:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDk1NzgzNTE=",
        "title": "Update deps",
        "url": "https://github.com/AmpersandJS/ampersand-array-input-view/pull/15"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-array-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MzQzNzMxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MzQzNzMxMQ==",
      "body": "+1\n",
      "createdAt": "2015-11-03T18:03:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDk1ODM0NDE=",
        "title": "Add view and form-view convention tests; typo fix",
        "url": "https://github.com/AmpersandJS/ampersand-array-input-view/pull/16"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-array-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1MzQ2OTAwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1MzQ2OTAwNA==",
      "body": "thanks everyone.  published as 4.0.0.  i wasn't 100% sure on major bump, but given that many key deps have undergone many majors, I felt major was a safe bet\n",
      "createdAt": "2015-11-03T19:53:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDk1NzgzNTE=",
        "title": "Update deps",
        "url": "https://github.com/AmpersandJS/ampersand-array-input-view/pull/15"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-array-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1NDEyNzg2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1NDEyNzg2NQ==",
      "body": "yahtzee! :game_die: :game_die: :game_die: :game_die: :game_die: \n\nlooks great. +1\n",
      "createdAt": "2015-11-05T17:21:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDk4MTkzMTA=",
        "title": "Allow clear() on props with values array. FIX #212",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/213"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1NDEzMDc3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1NDEzMDc3OA==",
      "body": "Interesting, I understand your point.  Thanks for the thorough explanation!  I ended up just `dom` ing out a container with a special class, spacing out buttons, and adding the class to DT.Buttons.defaults.\n\nMuch appreciated!\n\n<img width=\"345\" alt=\"screen shot 2015-11-05 at 9 27 32 am\" src=\"https://cloud.githubusercontent.com/assets/1003261/10976229/89399822-839f-11e5-97e3-e0da2116d0f8.png\">\n",
      "createdAt": "2015-11-05T17:29:02Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTUxMzk1ODE=",
        "title": "Missing ui- class on DT defaults",
        "url": "https://github.com/DataTables/Buttons/issues/54"
      },
      "repository": {
        "nameWithOwner": "DataTables/Buttons"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1NTE4MjkxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1NTE4MjkxOA==",
      "body": "+1\n",
      "createdAt": "2015-11-09T20:27:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTAxNjAwNTM=",
        "title": "Switch to console.warn for invalid data types",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/215"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1NTIxOTgxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1NTIxOTgxNg==",
      "body": "For ref, my base theme is [here](http://jqueryui.com/themeroller/?ffDefault=Helvetica&fwDefault=normal&fsDefault=1em&cornerRadius=3px&bgColorHeader=%23f9f9f9&bgTextureHeader=flat&bgImgOpacityHeader=100&borderColorHeader=%23aaaaaa&fcHeader=%23222222&iconColorHeader=%23222222&bgColorContent=%23ffffff&bgTextureContent=flat&bgImgOpacityContent=75&borderColorContent=%23aaaaaa&fcContent=%23222222&iconColorContent=%23222222&bgColorDefault=%23fdfdfd&bgTextureDefault=flat&bgImgOpacityDefault=100&borderColorDefault=%23aaaaaa&fcDefault=%23333333&iconColorDefault=%23454545&bgColorHover=%23e6e6e6&bgTextureHover=flat&bgImgOpacityHover=75&borderColorHover=%23999999&fcHover=%23212121&iconColorHover=%23454545&bgColorActive=%23eeeeee&bgTextureActive=inset_hard&bgImgOpacityActive=100&borderColorActive=%23aaaaaa&fcActive=%23212121&iconColorActive=%23454545&bgColorHighlight=%23fbf9ee&bgTextureHighlight=glass&bgImgOpacityHighlight=55&borderColorHighlight=%23fcefa1&fcHighlight=%23363636&iconColorHighlight=%232e83ff&bgColorError=%23fef1ec&bgTextureError=glass&bgImgOpacityError=95&borderColorError=%23cd0a0a&fcError=%23cd0a0a&iconColorError=%23cd0a0a&bgColorOverlay=%23aaaaaa&bgTextureOverlay=flat&bgImgOpacityOverlay=0&opacityOverlay=30&bgColorShadow=%23aaaaaa&bgTextureShadow=flat&bgImgOpacityShadow=0&opacityShadow=30&thicknessShadow=3px&offsetTopShadow=-3px&offsetLeftShadow=-3px&cornerRadiusShadow=3px)\n",
      "createdAt": "2015-11-09T22:31:27Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTU5ODIyNDk=",
        "title": "theme-roller not honoring edited font-size",
        "url": "https://github.com/jquery/jqueryui.com/issues/136"
      },
      "repository": {
        "nameWithOwner": "jquery/jqueryui.com"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1NjE5MzUxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1NjE5MzUxNQ==",
      "body": "interesting, I just ran into this issue as well.  however, i did unlink, make a copy, clear my node modules, and retry in the copy, with no results.  unsure at this point. will continue to debug\n",
      "createdAt": "2015-11-12T18:29:34Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTYzMDc3MzI=",
        "title": "Doesn't compile a npm linked module",
        "url": "https://github.com/babel/babel-loader/issues/149"
      },
      "repository": {
        "nameWithOwner": "babel/babel-loader"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1NjQ5MzYwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1NjQ5MzYwNw==",
      "body": "Should have checked the issue tracker first!  Just diagnosed this!  FYI to late visitors, this affects 1.0.3, and is patched in 1.1.0+\n",
      "createdAt": "2015-11-13T17:24:02Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDQ5MDU5Mzc=",
        "title": "CSV commas not escaped properly",
        "url": "https://github.com/DataTables/Buttons/issues/16"
      },
      "repository": {
        "nameWithOwner": "DataTables/Buttons"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1NjY2Nzc5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1NjY2Nzc5OA==",
      "body": "Yep, as wraithgar mentioned.  If you weren't already aware, you can also bind that toggling action to a piece of state in your View as well via the bindings key.  https://github.com/AmpersandJS/ampersand-dom-bindings\n",
      "createdAt": "2015-11-14T08:18:27Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTY4ODkxNDc=",
        "title": "$('.className') vs this.queryByHook('hookName')",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/148"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1NzUzNzE4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1NzUzNzE4Ng==",
      "body": "perhaps you're right.  I never installed _all_ of the deps.  Likely part of a major bump?  [Readme ref](https://github.com/babel/babel-loader#installation)\n",
      "createdAt": "2015-11-17T22:58:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTYzMDc3MzI=",
        "title": "Doesn't compile a npm linked module",
        "url": "https://github.com/babel/babel-loader/issues/149"
      },
      "repository": {
        "nameWithOwner": "babel/babel-loader"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1NzgxMDA5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1NzgxMDA5Ng==",
      "body": "whoops, i see what you meant. disregard emailed comment :)\n",
      "createdAt": "2015-11-18T18:22:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTAzMzcwMjc=",
        "title": "extract api client",
        "url": "https://github.com/trendscenter/nodeapi/pull/45"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1ODQzMTkyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1ODQzMTkyOA==",
      "body": "If you look at the screenshot, however, you'll notice that the output is\nnot parsed.  The README says when using a test_page that framework and\nsrc_files options are ignored.  I use a configuration like the one you've\nlinked to in many of my other projects.  This is the first time that I'm\ntrying to integrate with an existing test_page.\n\nThanks!\n\nOn Friday, November 20, 2015, Toby Ho notifications@github.com wrote:\n\n> Testem doesn't actually interact with tape directly. Instead it reads the\n> texts printed by tape in the console, and uses a TAP parser to interpret\n> it. See this configuration\n> https://github.com/testem/testem/blob/master/examples/tape_example/testem.json\n> .\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/testem/testem/issues/682#issuecomment-158371270.\n\n## \n\nChris Dieringer\np: (503)358-8577\ne: cdieringer@mrn.org\nw: http://cdaringe.com\n",
      "createdAt": "2015-11-20T15:27:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTc5Njg4MzY=",
        "title": "question: custom test page with tape",
        "url": "https://github.com/testem/testem/issues/682"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1ODQ1ODUxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1ODQ1ODUxMA==",
      "body": "gladly!\n\n``` json\n{\n    \"test_page\": \"examples/index.mustache\",\n    \"serve_files\": [\n        \"test.bundle.js\"\n    ],\n    \"before_tests\": \"webpack --config webpack.testem.config.js\",\n    \"launch_in_dev\": [\"PhantomJS\", \"Chrome\"]\n}\n```\n\nwhere `webpack.testem.config.js` =>\n\n``` js\n...\n    entry: { 'test': './test/index.js' },\n    output: {\n       ...\n        filename: '[name].bundle.js', // generates test.bundle.js, which testem is serving\n    },\n};\n```\n",
      "createdAt": "2015-11-20T16:55:10Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTc5Njg4MzY=",
        "title": "question: custom test page with tape",
        "url": "https://github.com/testem/testem/issues/682"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1ODY2ODE3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1ODY2ODE3OA==",
      "body": "Thanks guys! :)\n",
      "createdAt": "2015-11-21T18:12:04Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTc5Njg4MzY=",
        "title": "question: custom test page with tape",
        "url": "https://github.com/testem/testem/issues/682"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1ODcwMzcwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1ODcwMzcwNQ==",
      "body": "@drasko, agreed.  looks like @dougwilson's router has dibbs on the pkg name\n",
      "createdAt": "2015-11-22T02:58:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDUxMDY5NDY=",
        "title": "`npm` installs wrong router",
        "url": "https://github.com/mafintosh/router/issues/10"
      },
      "repository": {
        "nameWithOwner": "mafintosh/router"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1ODcwNzA4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1ODcwNzA4Mg==",
      "body": "interesting. i expected the behavior you expected as well.  i'm not sure that this _isn't_ a bug*\n",
      "createdAt": "2015-11-22T04:20:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTgyMzY2MTk=",
        "title": "Feature idea: onlyOnce method",
        "url": "https://github.com/AmpersandJS/ampersand-events/issues/11"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-events"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1ODc2NjY5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1ODc2NjY5Mw==",
      "body": "Thanks for the input @Immortalin.  The presence of a package.json is a declarative manifest stating that \"this package is defined by these characteristics and dependencies.\"  To go modify the folder structure and generate a new package.json is to declare the first package.json insufficient.  99.99 percent of projects using it specify a main script used when importing the library.  Here, that's not the case.  Further, such requirements aren't stated in the README.  I would run npm install in a repo simply by observing a package.jsons presence, as that is how it is intended to be used, if dependencies are listed.\n\nMy tone is cordial, not brash, FTR :).  Anyway, we have an automated build script that npm installs all packages with a package.json then after runs all builds that have a Gruntfile/gulp file if present.  This automated workflow is what uncovered the issue\n",
      "createdAt": "2015-11-22T15:31:38Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTQzNjY2NzY=",
        "title": "build.py fails for duplicate provide",
        "url": "https://github.com/google/blockly/issues/204"
      },
      "repository": {
        "nameWithOwner": "google/blockly"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1OTA0MDY4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1OTA0MDY4Mg==",
      "body": "I think that's just fine :smile: \n",
      "createdAt": "2015-11-23T19:40:18Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTg0NDMzNzE=",
        "title": "The ability to extend the declarative style of the subviews is very limited",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/150"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1OTA4NTUyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1OTA4NTUyMA==",
      "body": "+1, straightforward enough\n",
      "createdAt": "2015-11-23T22:20:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTE1ODIwMTg=",
        "title": "Added ability to extend the declarative subview format.",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/151"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE1OTc0ODE3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE1OTc0ODE3Ng==",
      "body": "@AmpersandJS/core-team, willing to lend some :eyes: ?\n",
      "createdAt": "2015-11-25T22:43:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTE1ODIwMTg=",
        "title": "Added ability to extend the declarative subview format.",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/151"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2MDY3MTcwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2MDY3MTcwMQ==",
      "body": "published as `9.0.1`.\n\nthanks @dschissler!\n",
      "createdAt": "2015-11-30T16:03:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTg0NDMzNzE=",
        "title": "The ability to extend the declarative style of the subviews is very limited",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/150"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2MDgxOTUzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2MDgxOTUzMQ==",
      "body": ":open_mouth:\n@jzaefferer, it's ...working!  I wonder what happened/changed?  Thanks for following up!\n",
      "createdAt": "2015-12-01T01:40:05Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTU5ODIyNDk=",
        "title": "theme-roller not honoring edited font-size",
        "url": "https://github.com/jquery/jqueryui.com/issues/136"
      },
      "repository": {
        "nameWithOwner": "jquery/jqueryui.com"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2MTQ1MTEyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2MTQ1MTEyNg==",
      "body": "thx!\n",
      "createdAt": "2015-12-02T22:15:20Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTk4NDEyNTA=",
        "title": "blackbox/ignore modules for debugging in node",
        "url": "https://github.com/microsoft/vscode/issues/892"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2MTg1Nzc2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2MTg1Nzc2Mg==",
      "body": "@bnoordhuis, i have a similar question.  I've been toying with electron-rebuild.  as you may be aware, my node version !== electron's node version, so electron-rebuild has to recompile some modules against it's version.  I see the rebuild module doing something like `npm rebuild --target=TARGET_VERSION --arch=ARCH_VERSION`.  That doesn't seem to _reliably_ product builds to my expectation.  e.g. node v0.12.7 has `process.versions.modules` == 14, while my electron's === 44.  the above command still seems to build against 14, vs 44 like I expect.\n\nDo you have any tips on how I can best use npm to recompile against a target version?  Assume that I have the target header files already downloaded.  I need to use npm vs explicit node-gyp as there may be other lifecycle hooks that must be run for a module at install.\n\nI will gladly add to the README with pertinent docs if you can assist!\n",
      "createdAt": "2015-12-04T02:55:05Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTk0Nzk2NTg=",
        "title": "Cross compilation",
        "url": "https://github.com/nodejs/node-gyp/issues/829"
      },
      "repository": {
        "nameWithOwner": "nodejs/node-gyp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2MjA0ODUwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2MjA0ODUwMA==",
      "body": "this is also affecting me as well, 100% of the time.  specifically, electron-rebuild is failing, which calls:\n\n`node {/path/to/}npm-cli rebuild --target=version --arch=version`\n\n@BlueWinds, your suggestion seems reasonable, however, I _dont_ have the binaries for the versions I need to build against all of the time, which is cumbersome.  I'm on `0.12.7`, and @mafintosh ref'd https://github.com/mafintosh/prebuild/issues/14.  maybe it's time to upgrade?\n",
      "createdAt": "2015-12-04T18:46:31Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTAxMDYwNg==",
        "title": "iojs 2.3.0 name 'openssl_fips' is not defined\"",
        "url": "https://github.com/nodejs/node-gyp/issues/652"
      },
      "repository": {
        "nameWithOwner": "nodejs/node-gyp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2MjA1OTMwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2MjA1OTMwNg==",
      "body": "respectfully, IMHO, if closure-library is a dependency of blockly _and_ blockly is using a package.json, closure-library should either (a) be a `dependency` of blockly or (b) installed into blockly perhaps during the npm `postinstall` lifecycle hook.  It would be great if blocky didn't depend on externals. then, i could do something like `npm run build` or `grunt build` or whatever, which automatically would run when installing blockly to begin with (assuming it was npm distributed).  which it can be!  we can help :)\n",
      "createdAt": "2015-12-04T19:25:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTQzNjY2NzY=",
        "title": "build.py fails for duplicate provide",
        "url": "https://github.com/google/blockly/issues/204"
      },
      "repository": {
        "nameWithOwner": "google/blockly"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2MjI4NTc0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2MjI4NTc0Nw==",
      "body": "I would love if someone (&-js community member perhaps?? :) ) had some time to hack a PR together for this.  I think that the issue is acknowledged widely enough, and that there's good enough consensus on what needs to change.  Specifically, @pgiliad outlined a great proposal that supports this issue's original problem statement , supports @wraithgar's marks in #48, as well as all others' follow ups in the thread.  With that, let us welcome the issue up some PR activity :)\n",
      "createdAt": "2015-12-06T08:06:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc2MjYxNjk=",
        "title": "required attributes misleading",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/195"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2MjYwOTk4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2MjYwOTk4OA==",
      "body": "@bnoordhuis, thanks, I'll check it out.  I did trace my original problem to the fact that some npm lifecycle scripts were conditionally rebuilding based on `process.xzy`, where the `process` was the sys process vs. the electron node process.  I updated my stuff to rebuild using electron's node by appending `env: ATOM_SHELL_INTERNAL_RUN_AS_NODE`.  yahtzee!\n",
      "createdAt": "2015-12-07T18:05:02Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTk0Nzk2NTg=",
        "title": "Cross compilation",
        "url": "https://github.com/nodejs/node-gyp/issues/829"
      },
      "repository": {
        "nameWithOwner": "nodejs/node-gyp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NDU2NjEzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NDU2NjEzMw==",
      "body": ":+1: give up for CI! yahtzee!\n",
      "createdAt": "2015-12-14T21:32:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTM2MjQzNTA=",
        "title": "Attn : Chris :: Field Reverse Bug : 16 December 2015",
        "url": "https://github.com/trendscenter/coins-logon-widget/pull/5"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coins-logon-widget"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NTU5MjIwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NTU5MjIwMA==",
      "body": "I forgot to add, JSON.stringify produces a max call stack, which _perhaps_ is expected.\n\n``` js\napi = require('remote').require('/path/to/api/services/index.js');\nsetDataz = function(err, result) { JSON.stringify(result); } // kaaaboooom!!\napi.bots.list(setDataz)\n```\n",
      "createdAt": "2015-12-17T21:50:00Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjI4MjY5MTA=",
        "title": "method to get serialized remote object",
        "url": "https://github.com/electron/electron/issues/3856"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NTU5OTc2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NTU5OTc2MA==",
      "body": "you know... i think i have a cycle.  brb\n",
      "createdAt": "2015-12-17T22:22:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjI4MjY5MTA=",
        "title": "method to get serialized remote object",
        "url": "https://github.com/electron/electron/issues/3856"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NTYwNjMzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NTYwNjMzMA==",
      "body": "so the main process would have to `decycle`.  what if we detected if the call was coming from remote and decycled prior to passing?\n",
      "createdAt": "2015-12-17T22:47:31Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjI4MjY5MTA=",
        "title": "method to get serialized remote object",
        "url": "https://github.com/electron/electron/issues/3856"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NTY3NjI4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NTY3NjI4Mw==",
      "body": "+1, tests pass locally\n",
      "createdAt": "2015-12-18T05:25:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTQwNTU0Mjk=",
        "title": "Bind change event listener to select, not el.",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/58"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NjAwMTQ3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NjAwMTQ3Nw==",
      "body": "@chrislea, thanks chris.  i'm betting the root of my issue is that we used `n` to install 2.5.0.  after running the steps in the readme to install 4.x, `node` still boots 2.5.0, not the `nodejs` binary as expects.  perhaps whatever generates that symlink only does so if it's not present already.  I'll experiment with trashing our old node installs _then_ reinstalling on Monday.\n",
      "createdAt": "2015-12-19T16:27:22Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjMwMzQ3MTg=",
        "title": "install scripts produce `nodejs` binary vs `node` binary on ubuntu 14.04",
        "url": "https://github.com/nodesource/distributions/issues/198"
      },
      "repository": {
        "nameWithOwner": "nodesource/distributions"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2Njc1NzAyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2Njc1NzAyMg==",
      "body": "i did this _a while_ ago, but didn't commit and stage it.  unforch that means i gruntified, vs. our new goal of simple npm'ifying, but hey, big whoop.  who cares, it works!  we can npmify in another PR.\n",
      "createdAt": "2015-12-22T22:59:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjQ4MTE=",
        "title": "feature/commonjsify-with-umd-export",
        "url": "https://github.com/trendscenter/halfpenny/pull/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/halfpenny"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2Njc1NzE3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2Njc1NzE3OA==",
      "body": "most of this PR is just file moves and de-UMD-ification.  the real meat is just the webpack config, https://github.com/MRN-Code/halfpenny/pull/1/files#diff-11e9f7f953edc64ba14b0cc350ae7b9dR1\n",
      "createdAt": "2015-12-22T23:01:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjQ4MTE=",
        "title": "feature/commonjsify-with-umd-export",
        "url": "https://github.com/trendscenter/halfpenny/pull/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/halfpenny"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NzQ4MTk3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NzQ4MTk3Nw==",
      "body": "hey @remko,\n\nI don't think the team has this on the roadmap, but would certainly welcome a community module.  It could be as simple as:\n\n```\n// ampersand-mega/all/spine/agg.js\nmodule.exports = { State: require('ampersand-state'), Model: ..., Router: ... }  // eg ampersand-backbone ;)\n```\n\nWere such a module to be released, the internals & API of the aggregated package would change, and consuming APIs would still need to adapt accordingly.  What you gain is the ability to flip back-and-forth between multiple &-js modules' versions quickly.  This all-and-all would be a fine thing!  IMHO, however, the problems you noted don't really get addressed by a singleton package.   The legal teams will _still_ need to sniff _nested_ licenses.  The UI tests would still need a full sweep.\n\nI humbly believe that the best we can do as a framework team is (a) keep on top of denoting clear changelogs and (b) keep on top of writing many, diligent tests.  You've noted that changelogs _aren't_ kept.  This isn't fully true, but hasn't been rigorously followed either.  This is definitely a place for improvement.  cc @AmpersandJS/core-team for making a changelog process \"more official.\"\n\nI've written and deleted various responses to this, unable to select the right wording.  However, to summarize simply, as a fellow user, I don't believe that further simplicity or clarity is achieved by aggregation.\n\nSome specific responses to some of your bullets:\n\n> My npm-shrinkwrap.json is currently 2300 lines long, ...\n\na big project is a big project.  I think having \"many dependencies\" is unfortunate in that it generates a long list, but it's the beauty of the unix philosophy.  I _personally_ wouldn't claim that \"many dependencies\" is a strong complexity adder.\n\n> ... modules combined are all over the place: some modules depend on underscore, some on lodash.*...\n\nI hope this is not the case.  the group made a big effort to lodashify almost everything.  at least the official modules\n\n> Whenever I detect I need to upgrade a module, I'm too scared to do it these days\n\nYea, better changelogs could definitely help--I'm with you here for sure.  However, that's what semver and testing are for too, which are invalueable assets in any huge project.  sounds like yours is a pretty big one!\n\n> This greatly simplifies the dependency tree in a project using ampersand ...\n\nAt a cost.  A cost of ambiguity of purpose, and refactor-ability of the consuming code.  `¯\\_(balance)_/¯`.\n\n> Keeping track of what changes in ampersand is easier ...\n\nthis is a complicated claim.  for some us, perhaps yes.  for my usual use cases (picking and choosing a small subset), I would not think so.\n\n> It makes it easier to report global ampersand issues such as this one...\n\nI'm not confident such a thing exists (\"global ampersand issues\").  I think what you are getting at is when some change or bug affects many modules?  As a counter, wouldn't it feel _incorrect_ to post the issue in a global place versus the offending package/repo?\n\nAnyway, that's my long response to a long question.  :)  I respect your opinion as a peer and active ampersander, so I hope nothing came off brash!\n",
      "createdAt": "2015-12-28T04:34:26Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjM2MzAxMjY=",
        "title": "Provide a combined `ampersand` module",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/219"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NzYwNzk5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NzYwNzk5Nw==",
      "body": "@chrisfilo, a couple of our _X_-crypt dependencies (bcrypt included), pin us into specific versions of nodejs.  this is because during the install process, native addons are compiled (generally from c++) to expose javascript hooks to those packages.  I believe that iojs versions 2.4.0/2.5.0 both work right out of the box for `nodeapi`.  which nodejs version are you running?\n\nthe team will be migrating to track with nodejs LTS, which is currently 4.2.3.  if you'd care to use that, you may, but must update mcrypt to the latest `npm remove --save mcrypt && npm i mcrypt --save`.  ideally, we'd like node-version agnostic packages, but the `nodeapi` squad has not yet needed to dial that in.\n\nHTH\n\n@dylancwood @rsskmr, some README tidy is probably in order.  not sure what the BE team has been hackin' on back here recently.\n",
      "createdAt": "2015-12-28T17:30:40Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjQwOTAzMzQ=",
        "title": "Error during npm install",
        "url": "https://github.com/trendscenter/nodeapi/issues/51"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NzYwOTgyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NzYwOTgyNA==",
      "body": "> I have to admit that installation instructions are a bit confusing...\n\nagreed.  By this point they have been primarily for internal consumption.  you're the first non-COINSer to even try\n",
      "createdAt": "2015-12-28T17:41:53Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjQwOTAzMzQ=",
        "title": "Error during npm install",
        "url": "https://github.com/trendscenter/nodeapi/issues/51"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NzYwOTk3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NzYwOTk3Mw==",
      "body": "ps, 5.3 works too, but the mcrypt swap above is still required\n",
      "createdAt": "2015-12-28T17:42:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjQwOTAzMzQ=",
        "title": "Error during npm install",
        "url": "https://github.com/trendscenter/nodeapi/issues/51"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NzYyNDQ2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NzYyNDQ2MA==",
      "body": "classic Python3.  Out-of-left field.  i wonder what the [systems bible](http://www.amazon.com/The-Systems-Bible-Beginners-Guide/dp/0961825170) has to say about this.\n\nthere is no magic or shortcut.  it's just very early software.  we all have 2.7 on our machines, and weren't aware that node-gyp was locked onto 2.x.  perhaps a `venv` would help, or using the `--python` flag onto the `npm` command would do it.  `npm` doesn't have it documented, but it does pass some args from its CLI to the node-gyp CLI.\n\nwhat are your goals from getting all of this up and running?\n",
      "createdAt": "2015-12-28T18:38:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjQwOTAzMzQ=",
        "title": "Error during npm install",
        "url": "https://github.com/trendscenter/nodeapi/issues/51"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2NzcyMjQwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2NzcyMjQwMQ==",
      "body": "thanks @zcbenz :)\n",
      "createdAt": "2015-12-29T05:37:08Z",
      "issue": {
        "id": "MDU6SXNzdWU3Nzk5OTQwNQ==",
        "title": "Timing of app.ready event",
        "url": "https://github.com/electron/electron/issues/1726"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2Nzg1MTE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2Nzg1MTE4NQ==",
      "body": "thanks Chris!  we'll merge it as soon as our production servers and services are all ready to run the latest node LTS\n",
      "createdAt": "2015-12-29T18:44:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTQ3NDgyNzk=",
        "title": "Updating dependencies to maintain compatibility with mac",
        "url": "https://github.com/trendscenter/nodeapi/pull/52"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2Nzg1MzY3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2Nzg1MzY3Mg==",
      "body": "ref: https://github.com/MRN-Code/ansible-ops/pull/19/files\n",
      "createdAt": "2015-12-29T19:00:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTQ3NDgyNzk=",
        "title": "Updating dependencies to maintain compatibility with mac",
        "url": "https://github.com/trendscenter/nodeapi/pull/52"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2ODEyNTY2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2ODEyNTY2Ng==",
      "body": "removing the `\"ATOM_SHELL_INTERNAL_RUN_AS_NODE\": \"0\"` from my config seemed to solve the issue.  this was OK to keep in as of electron `v0.30.x`\n",
      "createdAt": "2015-12-31T05:04:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjQ0MzI1NzE=",
        "title": "launching electron app produces module not found",
        "url": "https://github.com/microsoft/vscode/issues/1720"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2ODcxNzk3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2ODcxNzk3Nw==",
      "body": "it's a simple patch, but is potentionally breaking.  will publish as major hopefully later today. @hailwood, mind patching the changelog in the readme @5.0.0?\n",
      "createdAt": "2016-01-04T16:06:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTQwNTU0Mjk=",
        "title": "Bind change event listener to select, not el.",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/58"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2ODcxOTU4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2ODcxOTU4OA==",
      "body": "right right. hmm.  Sheesh I'm not sure.  @lynnandtonic, what do you think?\n",
      "createdAt": "2016-01-04T16:10:11Z",
      "issue": {
        "id": "MDU6SXNzdWU5NDc2MzY2MQ==",
        "title": "When label value is empty/undefined hide label",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/53"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2ODcyMjY1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2ODcyMjY1Nw==",
      "body": "looks like this is a limitation of [domify](https://github.com/component/domify/blob/master/index.js#L71).  In &-view, renderWithTemplate [accepts a string or a function](https://github.com/AmpersandJS/ampersand-view/blob/master/ampersand-view.js#L321).  What we probably need to do is use `renderWithTemplate` in this pkg's `render` fn and consider accepting raw-DOM over in &-vew.  will be thinking about this one.  im wondering if this hasn't actually already been considered\n",
      "createdAt": "2016-01-04T16:22:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDcyNjk3MDI=",
        "title": "Template should accept DOM node like other ampersand form views",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/55"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2ODcyODkxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2ODcyODkxOA==",
      "body": "Something like that could definitely be a good solution. If the code in the end is light we could keep it in this package, otherwise, maybe just make the async bits a mixin (which would require updates here too)\n",
      "createdAt": "2016-01-04T16:42:31Z",
      "issue": {
        "id": "MDU6SXNzdWU0NjEzNzA1Mg==",
        "title": "Remote/async validation",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/18"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2ODc5MzA5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2ODc5MzA5OA==",
      "body": "I get the parse error pretty regularly.\n\n```\nAn error occured: <class 'xml.etree.ElementTree.ParseError'>\nTraceback (most recent call last):\n  File \"/home/cdieringer/.vim/bundle/vdebug/plugin/python/start_vdebug.py\", line 119, in handle_eval\n    return self.runner.eval(args)\n  File \"/home/cdieringer/.vim/bundle/vdebug/plugin/python/vdebug/runner.py\", line 288, in eval\n    self.ui.watchwin.accept_renderer(rend)\n  File \"/home/cdieringer/.vim/bundle/vdebug/plugin/python/vdebug/ui/vimui.py\", line 377, in accept_renderer\n    self.write(renderer.render())\n  File \"/home/cdieringer/.vim/bundle/vdebug/plugin/python/vdebug/ui/vimui.py\", line 560, in render\n    properties = self.response.get_context()\n  File \"/home/cdieringer/.vim/bundle/vdebug/plugin/python/vdebug/dbgp.py\", line 146, in get_context\n    for c in list(self.as_xml()):\n  File \"/home/cdieringer/.vim/bundle/vdebug/plugin/python/vdebug/dbgp.py\", line 71, in as_xml\n    self.xml = ET.fromstring(self.response)\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 1300, in XML\n    parser.feed(text)\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 1642, in feed\n    self._raiseerror(v)\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 1506, in _raiseerror\n    raise err\nParseError: reference to invalid character number: line 2, column 239\n```\n\nFor example, if i do `:VdebugEval $v[0]`, it renders properly with my object breakdown, just as expected:\n\n<img width=\"1541\" alt=\"good\" src=\"https://cloud.githubusercontent.com/assets/1003261/12099368/3b08dd8c-b2e5-11e5-9058-3a2f372ad975.png\">\n\nhowever, if i do a  `:VdebugEval (array) $v[0]` (key take away there is that I tried to cast a StdClass to array):\n\n<img width=\"1541\" alt=\"bad\" src=\"https://cloud.githubusercontent.com/assets/1003261/12099389/5ec954ae-b2e5-11e5-8f87-a35a29ed67f4.png\">\n",
      "createdAt": "2016-01-04T20:18:08Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTgzMjYzNA==",
        "title": "Stack trace on connect",
        "url": "https://github.com/vim-vdebug/vdebug/issues/60"
      },
      "repository": {
        "nameWithOwner": "vim-vdebug/vdebug"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2OTEzMDQ0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2OTEzMDQ0NA==",
      "body": "this looks SPECTACULAR.  truly excellent work, per usual, @swashcap!\n",
      "createdAt": "2016-01-05T20:52:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTUxMjg4MzQ=",
        "title": "Enhancement/refactor components",
        "url": "https://github.com/trendscenter/coins-logon-widget/pull/8"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coins-logon-widget"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2OTE2MjMxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2OTE2MjMxMg==",
      "body": "thx!\n",
      "createdAt": "2016-01-05T23:00:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTUxNTUxNDI=",
        "title": "Add 5.0.0 changelog",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/59"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2OTE2MzA1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2OTE2MzA1OA==",
      "body": "published as 5.0.0\n",
      "createdAt": "2016-01-05T23:04:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTQwNTU0Mjk=",
        "title": "Bind change event listener to select, not el.",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/58"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE2OTE4OTc2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE2OTE4OTc2MQ==",
      "body": "i guess what i'm sayin is who's wolfy?  do you trust the wolf man?  it struck me as `require('homelessman62-react')` ;)\n",
      "createdAt": "2016-01-06T01:25:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTUxMjg4MzQ=",
        "title": "Enhancement/refactor components",
        "url": "https://github.com/trendscenter/coins-logon-widget/pull/8"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coins-logon-widget"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MDQyMTkxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MDQyMTkxMg==",
      "body": "my app is here: https://github.com/MRN-Code/coinstac/tree/feature/tidy-process-service-roles/app/render\nthe component is here: https://github.com/MRN-Code/coinstac/blob/feature/tidy-process-service-roles/app/render/components/user-account-controller.js#L17\n\nunfortunately the backend server for supporting the services isn't readily accessible, hence you'd have to hack it a bit to even get logged in (in order to logout to observe the issue!). \n",
      "createdAt": "2016-01-11T03:06:38Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjU4NjUyMjA=",
        "title": "Synthetic Mouse Event dispatched non-explicitly",
        "url": "https://github.com/reduxjs/react-redux/issues/246"
      },
      "repository": {
        "nameWithOwner": "reduxjs/react-redux"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MDQyMzc1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MDQyMzc1MA==",
      "body": "In a nutshell, I don't expect the MouseEvent to be dispatched like a redux action, but its getting tangled into the redux action flow!  Bummer!\n",
      "createdAt": "2016-01-11T03:25:12Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjU4NjUyMjA=",
        "title": "Synthetic Mouse Event dispatched non-explicitly",
        "url": "https://github.com/reduxjs/react-redux/issues/246"
      },
      "repository": {
        "nameWithOwner": "reduxjs/react-redux"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MDQyMzg4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MDQyMzg4Mw==",
      "body": "NM.  I see the issue.  How embarrasing :)\n",
      "createdAt": "2016-01-11T03:26:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjU4NjUyMjA=",
        "title": "Synthetic Mouse Event dispatched non-explicitly",
        "url": "https://github.com/reduxjs/react-redux/issues/246"
      },
      "repository": {
        "nameWithOwner": "reduxjs/react-redux"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MDQzMDA2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MDQzMDA2Nw==",
      "body": "Thanks @zcbenz, you rock\n",
      "createdAt": "2016-01-11T04:49:14Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjU0OTMzODc=",
        "title": "remote disregards properties defined when using Object.defineProperty",
        "url": "https://github.com/electron/electron/issues/4024"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MTA3NDgyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MTA3NDgyOA==",
      "body": "thanks @joonty!  i will do so.  ATM i'm yakking my brains out with food poisoning, so post-TMI and passing of the the aforementioned circumstances, i'll get right on it ;)  thanks so much.  vdebug has been so critical to workflow i dont know what id do without it\n",
      "createdAt": "2016-01-12T22:04:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTgzMjYzNA==",
        "title": "Stack trace on connect",
        "url": "https://github.com/vim-vdebug/vdebug/issues/60"
      },
      "repository": {
        "nameWithOwner": "vim-vdebug/vdebug"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MTM4Mjc4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MTM4Mjc4Mw==",
      "body": "[here](https://gist.github.com/cdaringe/c60b074eac92537b9b3e) it is.  I hope it has something helpful in there.  note, i set a breakpoint next to the line where some offending code used to be, did a `VdebugEval (array) $value` to produce the error (as that's what the old code did), removed the breakpoint and continued.\n",
      "createdAt": "2016-01-13T18:08:50Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTgzMjYzNA==",
        "title": "Stack trace on connect",
        "url": "https://github.com/vim-vdebug/vdebug/issues/60"
      },
      "repository": {
        "nameWithOwner": "vim-vdebug/vdebug"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MTg2NDE1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MTg2NDE1Nw==",
      "body": "yea, sorry, i tossed that up without any supporting context.  i figured out the cause.  it was as simple as running the default query (query with mango) on skim db.  slowly crawled my mem usage from 90mb to 1.5~gb before tanking.  not a local-npm problem.  sorry for the waisted effort.  it would be nice to be able to cancel that active query, but that'd be more of a couch/fauxton thing\n",
      "createdAt": "2016-01-15T03:35:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjY1MTA0MDE=",
        "title": "crashes when browsing in fauxton",
        "url": "https://github.com/local-npm/local-npm/issues/83"
      },
      "repository": {
        "nameWithOwner": "local-npm/local-npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MTg2NDIxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MTg2NDIxNw==",
      "body": "i didnt realize that was the issue at first because I used the UI for ~another minute for it all went down!  thanks :)\n",
      "createdAt": "2016-01-15T03:36:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjY1MTA0MDE=",
        "title": "crashes when browsing in fauxton",
        "url": "https://github.com/local-npm/local-npm/issues/83"
      },
      "repository": {
        "nameWithOwner": "local-npm/local-npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MjA5NTE0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MjA5NTE0OA==",
      "body": "The action creator was bound (to dispatch) already.  Everything was behaving as expressed in the file.  I simply didn't expect the above because of different implementation strategies between a coworker and myself.\n\nI prefer `dispatch(actionCreator())`.  He preferred `bindActionCreators(...)` then `actionCreator()`.  Inconsistent conventions used between us was the root of the issue--I didn't see that it had already been bound.\n",
      "createdAt": "2016-01-15T21:19:18Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjU4NjUyMjA=",
        "title": "Synthetic Mouse Event dispatched non-explicitly",
        "url": "https://github.com/reduxjs/react-redux/issues/246"
      },
      "repository": {
        "nameWithOwner": "reduxjs/react-redux"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MjcyNDQ4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MjcyNDQ4MA==",
      "body": "> node 0.12, node 4.x\n\ntracking w/ LTS is a safe move.  im in support of 4\n\n> if we get tests working in zuul then it doesn't matter what node or npm version we're on\n\nyep!\n\nnice work :)\n",
      "createdAt": "2016-01-19T03:06:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTYyMDQ2MzM=",
        "title": "update travis config",
        "url": "https://github.com/AmpersandJS/ampersand-filtered-subcollection/pull/26"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-filtered-subcollection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MzA3NDM2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MzA3NDM2NA==",
      "body": "Hey @nlf!  Respectfully, is it the point?  I love your module here, use it frequently, and regularly don't use jshint with it.  Seemed like powerful language for a reasonable issue.  I'd  be a fan of pulling out the dep as well.  The configurability youve built in is part of what makes precommit-hook great!\n",
      "createdAt": "2016-01-20T03:27:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjU5NTY1NzU=",
        "title": "unnecessary jshint dependency",
        "url": "https://github.com/nlf/precommit-hook/issues/69"
      },
      "repository": {
        "nameWithOwner": "nlf/precommit-hook"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MzQxMzg5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MzQxMzg5MQ==",
      "body": "i did end up `var childSchemasByName = _.indexBy(schema._inner.children, 'key');`, but that's probably taboo :/\n",
      "createdAt": "2016-01-21T00:41:14Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjc4MTgwODQ=",
        "title": "Question: Validate against sub-schema?",
        "url": "https://github.com/hapijs/joi/issues/807"
      },
      "repository": {
        "nameWithOwner": "hapijs/joi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MzY4ODg1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MzY4ODg1Ng==",
      "body": "this is fine, but don't forget that we're trashing it all anyway momentarily!\n",
      "createdAt": "2016-01-21T19:49:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTY3OTYyMzQ=",
        "title": "Bump dom-storage",
        "url": "https://github.com/trendscenter/halfpenny/pull/3"
      },
      "repository": {
        "nameWithOwner": "trendscenter/halfpenny"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MzY4OTEyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MzY4OTEyNQ==",
      "body": "published as 0.0.3\n",
      "createdAt": "2016-01-21T19:50:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTY3OTYyMzQ=",
        "title": "Bump dom-storage",
        "url": "https://github.com/trendscenter/halfpenny/pull/3"
      },
      "repository": {
        "nameWithOwner": "trendscenter/halfpenny"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MzY5MTU5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MzY5MTU5Mw==",
      "body": "thanks for the great tip, @Marsup.  unfortunately, I don't directly own the code i'm pulling from.  for now, what I've done does the trick.  perhaps `joi` would be open to a `joi.subschema(schema, 'path.to.subschema')`, which would wrap that which I proposed above?\n",
      "createdAt": "2016-01-21T19:59:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjc4MTgwODQ=",
        "title": "Question: Validate against sub-schema?",
        "url": "https://github.com/hapijs/joi/issues/807"
      },
      "repository": {
        "nameWithOwner": "hapijs/joi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3MzY5Mjg0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3MzY5Mjg0OQ==",
      "body": "if something as critical as dom-bindings hasn't worked, then have we really ever supported it?\n",
      "createdAt": "2016-01-21T20:04:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTYyMDQ2MzM=",
        "title": "update travis config",
        "url": "https://github.com/AmpersandJS/ampersand-filtered-subcollection/pull/26"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-filtered-subcollection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3Mzk4MDczNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3Mzk4MDczNQ==",
      "body": "hey @Marsup!  thanks again for the tip.\n\nI did try `complete: joi.date().iso().raw()`.  Unfortunately with `convert: false` it still errors. :/\n",
      "createdAt": "2016-01-22T17:11:05Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjgwNDEzOTM=",
        "title": "conflicting .iso() date type",
        "url": "https://github.com/hapijs/joi/issues/809"
      },
      "repository": {
        "nameWithOwner": "hapijs/joi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3Mzk4Nzc0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3Mzk4Nzc0NA==",
      "body": "what are your thoughts towards the problem statement?  specifically `.date().iso()` isn't really a thing, and that only a a string can really represent an iso date?\n",
      "createdAt": "2016-01-22T17:36:45Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjgwNDEzOTM=",
        "title": "conflicting .iso() date type",
        "url": "https://github.com/hapijs/joi/issues/809"
      },
      "repository": {
        "nameWithOwner": "hapijs/joi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3Mzk5NjMxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3Mzk5NjMxMg==",
      "body": "whaaaaaa! im a foooool!  how did i miss that!  thanks!\n",
      "createdAt": "2016-01-22T18:09:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjgwNDEzOTM=",
        "title": "conflicting .iso() date type",
        "url": "https://github.com/hapijs/joi/issues/809"
      },
      "repository": {
        "nameWithOwner": "hapijs/joi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NDEyNDYxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NDEyNDYxMg==",
      "body": "This request removes the default configuration of a field label fallback.  I know that its presence has caused some grief, and that's the last thing we want, but certainly some users use the fallback and are content with it.  Would simply setting `label: null` fix your issue?  the node would still be present, but empty, and _likely_ not impacting the rendering of the DOM unless there was some wily nily CSS at play.\n\nthoughts?\n",
      "createdAt": "2016-01-23T03:21:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTY5NTc1Mjk=",
        "title": "Hide label when opts.label is not set (fixes: #53)",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/62"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NDEyNTI2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NDEyNTI2OA==",
      "body": "meh, ok, in favor of matching input view's behavior, i'm in support of it, however it will be a major bump.\n\n+1 once test are confirmed passing\n",
      "createdAt": "2016-01-23T03:23:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTY5NTc1Mjk=",
        "title": "Hide label when opts.label is not set (fixes: #53)",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/62"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NDEyNTM0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NDEyNTM0MA==",
      "body": "+1\n",
      "createdAt": "2016-01-23T03:24:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTY3ODcwODM=",
        "title": "update testing framework",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/60"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NDEyNTQzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NDEyNTQzNA==",
      "body": "i agree, that would be rad!  i'm not actively enhancing select-view ATM, more just working to keep it afloat, but that may change soon.  i'd definitely love to give such a PR a review if someone wants to take a stab at it.  hopefully it wouldn't be too much work\n",
      "createdAt": "2016-01-23T03:27:50Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjgyNzE0NzQ=",
        "title": "Ability to use the <optgroup> element",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/61"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NDEyNTYyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NDEyNTYyMA==",
      "body": "@e2jk, will you pull the latest upstream master into your branch?  hopefully that resolves the testing issues :)\n",
      "createdAt": "2016-01-23T03:32:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTY5NTc1Mjk=",
        "title": "Hide label when opts.label is not set (fixes: #53)",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/62"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NDM2NTU0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NDM2NTU0MA==",
      "body": "one of those days.\n\nthank you for taking the time to spot my bug for me.\n",
      "createdAt": "2016-01-25T01:20:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjg0MjQ1MzI=",
        "title": "local var undefined if compiling a template twice",
        "url": "https://github.com/pugjs/pug/issues/2225"
      },
      "repository": {
        "nameWithOwner": "pugjs/pug"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NDYxODAzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NDYxODAzNw==",
      "body": "Ya definitely so.  I can publish in an hour or so.  I'll make sure to patch the changelog too\n",
      "createdAt": "2016-01-25T18:46:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTcwMjY5ODc=",
        "title": "Pr62",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/63"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NDYzNTUxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NDYzNTUxOQ==",
      "body": "published `6.0.0`.  thanks @wraithgar!  you've had a very busy, very ampersandy week :)\n",
      "createdAt": "2016-01-25T19:41:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTcwMjY5ODc=",
        "title": "Pr62",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/63"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NDcyODQ1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NDcyODQ1MQ==",
      "body": "#kebabs4lyfe\n",
      "createdAt": "2016-01-25T23:26:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzEwMjIzNTU=",
        "title": "release/to-kebab-case",
        "url": "https://github.com/AmpersandJS/amp/pull/88"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/amp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NTE2MTA4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NTE2MTA4Mg==",
      "body": "@wraithgar, watching all your great work here got me thinkin.  maybe using @nlf's [git-validate](https://github.com/nlf/git-validate) we can manage all of this stuff a bit easier.  that is to say, release a module called something like `ampersand-validate` which, on `npm install`, copies over the .jshintrc, .zuul, etc etc.  then, when these things get updated, we just bump the version of `ampersand-validate`.  this prevents us from having to do manual file updates in ~10 bazillion repos.  maybe give it a cutesie or fun name. `ampersand-legos`, `ampersand-kitty-litter`, `ampersand-shield`, `ampersand-afterburner`, `ampersand-straightjacket`.  i dont know.  think that would be cool?\n",
      "createdAt": "2016-01-26T18:28:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTYyMDQ2MzM=",
        "title": "update travis config",
        "url": "https://github.com/AmpersandJS/ampersand-filtered-subcollection/pull/26"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-filtered-subcollection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NTIxNDM0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NTIxNDM0NQ==",
      "body": "hi all.  I'm still not clear what the best practice is.  it seems that my `process.on('unhandledRejection, ...)` in the renderer isn't being recognized in the `0.36.x`.  per @zcbenz 's mark on Apr 29, it may be disabled now?  can someone clarify?\n",
      "createdAt": "2016-01-26T20:33:15Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDQ3MjQ5NQ==",
        "title": "\"Unhandled promise rejection\" no longer shows up in the console.",
        "url": "https://github.com/electron/electron/issues/1472"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NTI1NjI5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NTI1NjI5NQ==",
      "body": "nevermind.  the event is present and working properly.  yahoo!  was using a vendor lib that was swallowing the rejected promise unexpectedly.\n",
      "createdAt": "2016-01-26T22:09:48Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDQ3MjQ5NQ==",
        "title": "\"Unhandled promise rejection\" no longer shows up in the console.",
        "url": "https://github.com/electron/electron/issues/1472"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NTI3MDU5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NTI3MDU5NA==",
      "body": "perhaps if the promise that is rejected has some attr in it that is sniffable to determine that the error thrown is desired.  `{ fields: { field1: ..., field2: ... } }`.  that AND that it's not indeed an `Error` instance?\n",
      "createdAt": "2016-01-26T22:34:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjg5NTcyMzI=",
        "title": "async submit errors are swallowed",
        "url": "https://github.com/redux-form/redux-form/issues/596"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NTcxOTYyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NTcxOTYyOA==",
      "body": "> How do WizardHandler get the values from create-form-\\* form fields?\n\nin a connected component, wire up `state.form` in `mapStateToProps`.  then you can ref `this.props.form['create-form-*']`\n\n> Is it a good design for solving the wizards with respect to React and Redux-Form?\n\nno red flags.  you tell us when you're done :).  it may be easier to change some other piece of state post-Wizard1 form submit that indicates that wizard2 be shown, _maybe_?  follow your heart.\n",
      "createdAt": "2016-01-27T16:18:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjkxNTgxMzI=",
        "title": "Designing Wizards and Validations With Redux Form",
        "url": "https://github.com/redux-form/redux-form/issues/601"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NTcyMDkyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NTcyMDkyNA==",
      "body": "oh, and http://erikras.github.io/redux-form/#/api/get-values?_k=eo04uv\n",
      "createdAt": "2016-01-27T16:21:42Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjkxNTgxMzI=",
        "title": "Designing Wizards and Validations With Redux Form",
        "url": "https://github.com/redux-form/redux-form/issues/601"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NTcyMjg5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NTcyMjg5Mg==",
      "body": "hey @joonty, if you take a peek above, I demonstrated that just `VdebugEval $v[0]` indeed works just fine.  is this what you mean?\n",
      "createdAt": "2016-01-27T16:24:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTgzMjYzNA==",
        "title": "Stack trace on connect",
        "url": "https://github.com/vim-vdebug/vdebug/issues/60"
      },
      "repository": {
        "nameWithOwner": "vim-vdebug/vdebug"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NTc2OTQ0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NTc2OTQ0MQ==",
      "body": "mystery revealed.\n\n> probably best doing a string sanitize on the raw xml before parsing\n\n:game_die: :game_die: :game_die: :game_die: :game_die: yahtzee!\n",
      "createdAt": "2016-01-27T17:55:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTgzMjYzNA==",
        "title": "Stack trace on connect",
        "url": "https://github.com/vim-vdebug/vdebug/issues/60"
      },
      "repository": {
        "nameWithOwner": "vim-vdebug/vdebug"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NTk2Mzk1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NTk2Mzk1NQ==",
      "body": "@kylefarris, i have well have done this manually via functions.  thanks for taking the time!\n\n> ... the word opposite jumps out as confusing at first ...\n\ni was kind of thinking the same thing, but would def take it over nothing.  something a little more common in the dev vernacular may be `invert`?  how do folks feel about that?\n",
      "createdAt": "2016-01-28T04:17:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc0MzIyMTQ=",
        "title": "Added 'invert' option to boolean-like bindings",
        "url": "https://github.com/AmpersandJS/ampersand-dom-bindings/pull/52"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-dom-bindings"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NjI4NDExOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NjI4NDExOQ==",
      "body": "ditto.  big thanks!\n",
      "createdAt": "2016-01-28T17:02:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc0MzIyMTQ=",
        "title": "Added 'invert' option to boolean-like bindings",
        "url": "https://github.com/AmpersandJS/ampersand-dom-bindings/pull/52"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-dom-bindings"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NjI4OTAxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NjI4OTAxOQ==",
      "body": "hey guys!  ah, i don't like to stifle contributions, but IMHO, i share similar reservations to @wraithgar.  from my perspective,  99% of the time `<option>`s are generated from a homogenous type'd dataset (or group of similar datasets).  options source data are then `map`d or piped through some generator function, creating a uniform output.  conditional options may get tacked on after the fact, which may be manually derived from user interaction or user specific biz logic--in which case could potentially support the PR's intent.  however, it's certainly a pattern _i personally_ wouldn't use because it complicates your ability to do other meaningful actions on the `.options` data.\n\n> Definitely not a hard and firm opinion though. If others really thought this would be better then by all means let's do it.\n\nyea, i agree\n",
      "createdAt": "2016-01-28T17:16:19Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjkzNDY0Njg=",
        "title": "Error when mixing string and array in options definition",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/64"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NjI5MjM4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NjI5MjM4OQ==",
      "body": "Looks good!  only two comments, and of course getting some tests generated!  if gar's note on how to run them was unclear, write back.  would love to show you the ropes otherwise.\n",
      "createdAt": "2016-01-28T17:27:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc0NjE3ODc=",
        "title": "support <optgroup> elements",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/65"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NjM3ODYyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NjM3ODYyMg==",
      "body": "+1\n",
      "createdAt": "2016-01-28T20:04:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc0MzIyMTQ=",
        "title": "Added 'invert' option to boolean-like bindings",
        "url": "https://github.com/AmpersandJS/ampersand-dom-bindings/pull/52"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-dom-bindings"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NjU1MDU1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NjU1MDU1MA==",
      "body": "Thanks for the input.  Ive been wrestling with these tjoughts as well.  As a counter to the last bit, if you're in an action Creator and you're already formatting your errors into the redux form format, you are already concerned with redux form anyway. At least now, its explicit and communicative about it.  What I also like about using submission error is that it follows the natural control flow, then redirects the control internally within r-form.\n\nEither work.  Let's see what Mr man @erikras has to say on the matter\n",
      "createdAt": "2016-01-29T03:21:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTczNzAyNjk=",
        "title": "fixes #596 - handle unexpected/unhandled async error",
        "url": "https://github.com/redux-form/redux-form/pull/602"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3Njg1ODgzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3Njg1ODgzMA==",
      "body": "hey all!  thanks for the continued effort :).  BTW, i'm not firmly attached to my PR--i'm much more interested in coming out with the right design, so no worries if that was a concern.\n\n> We're trying to fit three options into a binary-shaped hole\n\nright.  respectfully, IMHO, the your proposed strategy still suffers the same issue.  promise api, cb api--same thing. ok ok, there are some differences, but the existence of `.promisify` or `.nodeify` are testaments to the claim :)\n\nconsider the following:\n- returning a resolved promise as a means to set form state can be dicey because of namespace conflicts. e.g. `return promiseXhr.get(url)`.  also, if the user chained on to the call, it's misleading that all was well to them.\n- using a cb strategy doesn't change the problem.  `return xhr.get(..., cb)`.  the handler will still have an empty `err` first argument.\n- returning a rejected promise doesn't work, because of the original intent of the PR--meaningful errors are swallowed\n- using a cb strategy in the error field doesn't change the problem.  `myBrokenAsyncCall(..., cb)`.  same as the rejected promise.\n\ni think the **problem lies in that we are trying to detect form error state implicitly** through a control flow which is susceptible to transmitting data of unknown types and content. \n\nif we pass in a separate method entirely to set form error state (a bound/unbound actionCreator perhaps), then all of reasoning around whether or not the operation was successfully/unsuccessful goes away--the user explicitly declares/defines it.\n\n> Validation errors: The promise is never resolved or rejected; wait for your errors to show up as props on the next process tick.\n\nthis reduces usability, and arguably introduces non-determinism.\n\ni'd like to chase something like\n\n``` js\nconst validate = (values, setErrors) => {\n  if (!values.firstName) {\n    return setErrors({\n        firstName: 'Required'\n    });\n}\n```\n\nif it's possible.\n\nwhat do you think?\n",
      "createdAt": "2016-01-29T16:55:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTczNzAyNjk=",
        "title": "fixes #596 - handle unexpected/unhandled async error",
        "url": "https://github.com/redux-form/redux-form/pull/602"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NzA5MDI5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NzA5MDI5Mg==",
      "body": "yep yep.  it will be a minor.  feel free to mark it as 6.1.0 in the log, as that's what it will roll in as.  thanks again for the PR.  appreciate the tests being added!  the tests in this package are a little intense (e.g. checking the content of each node).  we may reduce them down at some point just to make the massive file a little more digestible, without sacrificing quality of course ;).\n",
      "createdAt": "2016-01-30T06:55:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc0NjE3ODc=",
        "title": "support <optgroup> elements",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/65"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NzM1MjY0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NzM1MjY0OQ==",
      "body": "@wraithgar, i've made it pretty far with my bulk updater suggestion above.  https://github.com/cdaringe/ampersand-family-meeting .  tests are currently... lacking.\n\nright now it clones or pulls everything `ampersand-*` land (even unofficial), makes some changes, adds them, commits them.  it really needs to `fork` first, then push to forked-feature branch.  as a test, i have them all install `standard` into dev dependencies, then would possibly add a precommit hook to run it precommit.\n\nso the question is, _what do we want to easily keep standardized across the whole ecosystem?_\n- linting stuff\n- testing stuff\n- auto README patches to link back to our main docs\n- precommit scripts for:\n  - asserting changelogs get updated?  asserting they exist?\n  - linting, testing, validating,\n- adding our deploy scripts to `npm scripts`\n- ???  so many activities!\n\nstill more work to be done, by hey, let's get serious about unity!\n",
      "createdAt": "2016-01-31T01:09:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTYyMDQ2MzM=",
        "title": "update travis config",
        "url": "https://github.com/AmpersandJS/ampersand-filtered-subcollection/pull/26"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-filtered-subcollection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NzM1MzM1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NzM1MzM1NA==",
      "body": "tests pass locally for me. +1.  i'll probably do a little general README tidy prepublish\n",
      "createdAt": "2016-01-31T01:26:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc0NjE3ODc=",
        "title": "support <optgroup> elements",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/65"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NzY3MDc5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NzY3MDc5NQ==",
      "body": "thanks @timwis  :)\n",
      "createdAt": "2016-02-01T00:24:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc3ODI2MTg=",
        "title": "Fix typo in collections example",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/229"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3NzY3MzcwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3NzY3MzcwNQ==",
      "body": "what is offline mode?  is that an application defined thing or is it analogous to when the phone enters \"airplane mode.\"  if the latter, i wouldn't be surprised if the OS restricts HTTP calls (even local), so &-sync hangs/times out.  are you using ampersand-sync (default w/ &-model) or have you used a different sync mechanism?\n\nhaven't ever done android dev, so i can't given in depth feedback, though am about to start on my first one :).\n",
      "createdAt": "2016-02-01T00:30:04Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzAyMTEwODg=",
        "title": "local data",
        "url": "https://github.com/AmpersandJS/ampersand-model/issues/69"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-model"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODA2NDY1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODA2NDY1MA==",
      "body": "maybe we should set up an org for it. swig/swig, then add a few collabs?\n",
      "createdAt": "2016-02-01T16:52:32Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTA3MTY4MA==",
        "title": "No longer maintained — Do you want to help?",
        "url": "https://github.com/paularmstrong/swig/issues/628"
      },
      "repository": {
        "nameWithOwner": "paularmstrong/swig"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODA2ODk0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODA2ODk0OQ==",
      "body": "i've never tried to hit an endpoint where information served on the loopback is not explicitly served over http.  it's not really a problem with &-model--&-model with REST mixin will make HTTP requests via xhr to the endpoint.  if that endpoint doesn't serve JSON back, kaboom.\n\n@AmpersandJS/core-team, has anyone seen a mobile friendly f/s `sync` published?  @jeremiehirsch, my gut is that you need to override some methods in ampersand-sync to make a f/s read call, parse the json, and return that.\n\nnot a mobile expert, so take it with a grain of salt\n",
      "createdAt": "2016-02-01T17:01:13Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzAyMTEwODg=",
        "title": "local data",
        "url": "https://github.com/AmpersandJS/ampersand-model/issues/69"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-model"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODA4OTcxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODA4OTcxOQ==",
      "body": "the swig org is already a thing. i propose that we:\n- choose a diff org name\n- fork\n- put interested parties in as collaborators\n- use the \"it takes two +1s from collabs\" to land a PR into master\n",
      "createdAt": "2016-02-01T17:41:12Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTA3MTY4MA==",
        "title": "No longer maintained — Do you want to help?",
        "url": "https://github.com/paularmstrong/swig/issues/628"
      },
      "repository": {
        "nameWithOwner": "paularmstrong/swig"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODEyMDkyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODEyMDkyOA==",
      "body": "patched some spacing issues and missing &lt; &gt; escaped chars.  published as 6.1.0.\n",
      "createdAt": "2016-02-01T18:45:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc0NjE3ODc=",
        "title": "support <optgroup> elements",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/65"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODI0OTU3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODI0OTU3Mg==",
      "body": "probably shouldn't change the project name, just a new org name.  project name has deep roots in the src, site, npm, etc etc\n",
      "createdAt": "2016-02-01T23:17:17Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTA3MTY4MA==",
        "title": "No longer maintained — Do you want to help?",
        "url": "https://github.com/paularmstrong/swig/issues/628"
      },
      "repository": {
        "nameWithOwner": "paularmstrong/swig"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODI0OTc0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODI0OTc0NQ==",
      "body": "it caused quite a stir didn't it\n",
      "createdAt": "2016-02-01T23:17:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTczNzAyNjk=",
        "title": "fixes #596 - handle unexpected/unhandled async error",
        "url": "https://github.com/redux-form/redux-form/pull/602"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODI2OTg2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODI2OTg2Nw==",
      "body": "could keep it simple.  `node-swig`?\n",
      "createdAt": "2016-02-02T00:16:20Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTA3MTY4MA==",
        "title": "No longer maintained — Do you want to help?",
        "url": "https://github.com/paularmstrong/swig/issues/628"
      },
      "repository": {
        "nameWithOwner": "paularmstrong/swig"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODI3NDEzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODI3NDEzNg==",
      "body": "ok, it's a thing.  let's move the discussion over there.\n\nrepo: https://github.com/node-swig/swig\ndiscussion: https://github.com/node-swig/swig/issues/1\n\nthanks again @paularmstrong!  at some point, those of us interested in keeping the project alive will request npm access.  it doesn't need to be now, but is that something you can set us up with?\n",
      "createdAt": "2016-02-02T00:38:42Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTA3MTY4MA==",
        "title": "No longer maintained — Do you want to help?",
        "url": "https://github.com/paularmstrong/swig/issues/628"
      },
      "repository": {
        "nameWithOwner": "paularmstrong/swig"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODI5MjI4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODI5MjI4NA==",
      "body": "ultimately all that i'm trying to do is:\n- use the form\n- based on form state, conditionally dispatch more actions to set or remove other state immediately after a different value has been set in a field\n\nwhat i'm finding is that something in is _off_ in the component lifecycle or the state isn't being updated as I anticipate it should be\n",
      "createdAt": "2016-02-02T01:13:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzA1MzE2ODI=",
        "title": "getValues not returning state post- CHANGE action deploy",
        "url": "https://github.com/redux-form/redux-form/issues/610"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODY5MjUwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODY5MjUwMQ==",
      "body": "agreed.\n\n> How would it deal with the fact that you'd still get model.drivingDistance === undefined until the callback was done\n\na key question that would still require bottoming out on.  not that it's pertinent, but i can see folks abusing this, embedding application logic within the state obj itself.  im not saying it's so, but there's something fishy feeling (to me*) about tying your application and model logic into the state container itself.  just food for thought.\n",
      "createdAt": "2016-02-02T17:07:38Z",
      "issue": {
        "id": "MDU6SXNzdWU1MTM2NzM4NQ==",
        "title": "feature request: async derived properties",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/117"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODc3MDY2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODc3MDY2NQ==",
      "body": "i was referencing `this.props`, not `newProps`.  my mistake.\n",
      "createdAt": "2016-02-02T19:23:58Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzA1MzE2ODI=",
        "title": "getValues not returning state post- CHANGE action deploy",
        "url": "https://github.com/redux-form/redux-form/issues/610"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3ODg3NDA1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3ODg3NDA1MA==",
      "body": ":) thanks.  a little video never hurt anybody!\n",
      "createdAt": "2016-02-02T22:56:24Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzA1MzE2ODI=",
        "title": "getValues not returning state post- CHANGE action deploy",
        "url": "https://github.com/redux-form/redux-form/issues/610"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE3OTMyNTQwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE3OTMyNTQwMw==",
      "body": "will patch the README post merge, you dont have to do it. i'm already on here :)\n",
      "createdAt": "2016-02-03T16:30:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTgwOTQ0OTA=",
        "title": "use autogenerated client from API",
        "url": "https://github.com/trendscenter/halfpenny/pull/5"
      },
      "repository": {
        "nameWithOwner": "trendscenter/halfpenny"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MDAwOTU4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MDAwOTU4MQ==",
      "body": "it may be easy-ish to do using [ampersand-family-meeting](https://github.com/cdaringe/ampersand-family-meeting/) .  could be a good first run with it.  need to finish the PR logic, which won't be hard.  doesn't cover the package publishing, but _could_ with a little elbow grease :)\n",
      "createdAt": "2016-02-04T19:17:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzE0MDc0NTc=",
        "title": "Upgrade lodash dependency to 4.*",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/230"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MDA4NzgyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MDA4NzgyMg==",
      "body": "sure.  what'd you like in this update?  nothing jumped out at me as super special?\n",
      "createdAt": "2016-02-04T22:47:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc2MDE0ODI=",
        "title": "Update pouchdb to version 5.2.1 🚀",
        "url": "https://github.com/cdaringe/pouchy/pull/37"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MDA5MDcyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MDA5MDcyMA==",
      "body": "bumped to 5.2.0\n\nOn Thu, Feb 4, 2016 at 2:34 PM, Cory Reed notifications@github.com wrote:\n\n> Would you mind bumping the version so this is available on NPM?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/cdaringe/pouchy/pull/37#issuecomment-180061859.\n\n## \n\nChris Dieringer\np: (503)358-8577\ne: cdieringer@mrn.org\nw: http://cdaringe.com\n",
      "createdAt": "2016-02-04T22:54:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc2MDE0ODI=",
        "title": "Update pouchdb to version 5.2.1 🚀",
        "url": "https://github.com/cdaringe/pouchy/pull/37"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MDQ1NzI1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MDQ1NzI1MQ==",
      "body": "+1\n",
      "createdAt": "2016-02-05T17:33:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg0NTAwNzg=",
        "title": "Fix 5.2.0 backwards compatibility issues",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/56"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MDU0NTgyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MDU0NTgyMg==",
      "body": "not sure.  submitted it so long ago.  currently focused on other things.  closing for now\n",
      "createdAt": "2016-02-05T20:33:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODM0ODg=",
        "title": "improve render and update behavior",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MTUzMzUxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MTUzMzUxMg==",
      "body": "minor adjustments were needed (e.g. this lib uses `lib/` vs. `src/` and some things wouldnt pass jscs, so i had to run `npm run lintfix`).  posted, and all is well.\n",
      "createdAt": "2016-02-08T19:36:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg2NTEyMTc=",
        "title": "Add coins-validate to project.",
        "url": "https://github.com/trendscenter/bookshelf-shield/pull/4"
      },
      "repository": {
        "nameWithOwner": "trendscenter/bookshelf-shield"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MTUzNDI3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MTUzNDI3Mw==",
      "body": ":+1: \n",
      "createdAt": "2016-02-08T19:38:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg2NTE3MTg=",
        "title": "Update bookshelf-shield.",
        "url": "https://github.com/trendscenter/nodeapi/pull/64"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MTY1MzUxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MTY1MzUxNw==",
      "body": "hey @dw2!\n\nit's actually doing a `==` vs. a `===`, so i'm wondering if there's more than meets the eye.  see [here](https://github.com/AmpersandJS/ampersand-select-view/blob/master/ampersand-select-view.js#L366).\n\nif you'd want to edit your node_modules/ampersand-select-view/ampersand-select-view.js and slap a debugger statement right _around_ there, report back on `this.options` and `value`.  these should be good clues to help us move along!\n\nthx!\n",
      "createdAt": "2016-02-09T01:08:19Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzIyOTgyMjM=",
        "title": "Form submit fails on attributes with the type 'number'",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/issues/66"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MTY4NjQ2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MTY4NjQ2NQ==",
      "body": "thanks @dw2!  i now see what you're sayin. :)\n\nwraithgar and I had a long thread with another user about permitting the use of mixed types.  at current time, we are hesistant to support multiple option types in the options set, per discussion [here](https://github.com/AmpersandJS/ampersand-select-view/issues/64#issuecomment-176277662).  also, mixing of some types are just plain incompatible.  however, we definitely do want to support numbers only.  can't believe this has never come up before!\n\nvery grateful for your PR.  for the time being, would you be kind enough to:\n1. add a test?  they should be relatively straightforward. to imitate.  see the test folder\n2. find the matching option within common types?  if you want to use `.find` and be more functional about it, thats ok too. :)\n",
      "createdAt": "2016-02-09T03:14:08Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg2OTQ4MTI=",
        "title": "Added support for number type attributes",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/68"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MTY5ODc0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MTY5ODc0Ng==",
      "body": "you know, embarrassingly, i think i may have already asked this very question before.  your response is all too familiar.  thanks for the quick reply!\n",
      "createdAt": "2016-02-09T04:06:08Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzIyMjM4NDg=",
        "title": "thoughts on running programmatically?",
        "url": "https://github.com/pouchdb/pouchdb-server/issues/128"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MTk3MTU2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MTk3MTU2MA==",
      "body": "> Can you explain what you mean by \"common types\"\n\napologies for the lack of clarity.  \"find the matching option within common types?\" should have read \"adjust the code to find the matching option assuming that the options in `this.options` are homogeneous.  e.g. 'remove support for mixed option sets'.\"\n\n>  and using \".find\"?\n\nif you don't want to use the status quo `for` loop, you're welcome to find the matching option using `this.options.find(function(option) { ... })`.  just conveying no need to maintain the status quo if you didnt care to. \n",
      "createdAt": "2016-02-09T17:30:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg2OTQ4MTI=",
        "title": "Added support for number type attributes",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/68"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MjA0Njg2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MjA0Njg2Mg==",
      "body": "looks ok to me.\n\neach control getting a default tab index of 0 may be breaking (UX-wise) for some users.  because of this, i would suppose this gets a major.  thoughts?\n\nfurther, i'm unsure how different browsers would handle duplicate index values.  i would guess that in-order depth traversal would yield the tab ordering when there are conflicts\n",
      "createdAt": "2016-02-09T20:27:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg4MDA2MDI=",
        "title": "Added tabindex as a new option.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/70"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MjA0NzIyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MjA0NzIyMw==",
      "body": "would you add a bit to the changelog section in the bottom of the README about this, after we sync up on proper version bump & index conflicts?\n",
      "createdAt": "2016-02-09T20:28:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg4MDA2MDI=",
        "title": "Added tabindex as a new option.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/70"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MjExMzUzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MjExMzUzOQ==",
      "body": "thanks all, +1\n",
      "createdAt": "2016-02-09T22:43:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg4MDA2MDI=",
        "title": "Added tabindex as a new option.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/70"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MjQ0MjE1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MjQ0MjE1NQ==",
      "body": "updated published as 5.0.1\n",
      "createdAt": "2016-02-10T15:53:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg4MDA2MDI=",
        "title": "Added tabindex as a new option.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/70"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MjU2ODc5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MjU2ODc5NQ==",
      "body": "yeeep. bumped to 5.1.0 WITH `changelog` update.  deprecated `5.0.1` w/ note to use 5.0.0 or 5.1.0, _just_ to be thorough\n",
      "createdAt": "2016-02-10T20:25:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg4MDA2MDI=",
        "title": "Added tabindex as a new option.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/70"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4MzQ3ODMzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4MzQ3ODMzOA==",
      "body": "ideally, i want to be able to provide a db name and a path for the leveldb store.  my db name is in all actuality `xyz`, but I have to send it through a proxy `someroute/xy` to get to my couch instance.\n",
      "createdAt": "2016-02-12T20:32:00Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzMzMzY0NTI=",
        "title": "Unable to use \"/\" in db name when replicating using node/leveldown",
        "url": "https://github.com/pouchdb/pouchdb/issues/4885"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4Mzk2NDcwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4Mzk2NDcwNQ==",
      "body": "hey @nolanlawson\n\n> Can you encode the / character? \n\nwe did find a way around the problem, but encoding the character wouldn't really address the root of the problem.  the root of the problem that i was trying to convey was that CouchDB permits the `/`, and PouchDB does not.  i was thinking that LevelPouch could possibly  provide a means to handle the case.  i.e. suppose the constructor call was `new PouchDB(url, opts)`.  if `opts.name` was `my/store` and `name = 'http://url.com/couchroot/my/store'`, LevelPouch could encode the file system cached store as `'my%2Fstore'`, and `/`'s would still effectively be supported.\n\nmay not be worth the effort.\n\nanyway, my solution was to not construct with a `url` at all as I had been previously. instead, i just construct with a db name, then use the `.replicate(...)` API, which offers the same effect.\n\nsomething to consider, but definitely an edge case!\n\nthanks!\n",
      "createdAt": "2016-02-14T19:56:27Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzMzMzY0NTI=",
        "title": "Unable to use \"/\" in db name when replicating using node/leveldown",
        "url": "https://github.com/pouchdb/pouchdb/issues/4885"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NDI2MjkyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NDI2MjkyMw==",
      "body": "that's one of those blocks of code that I figured no one would ever touch.  is it even semantically acceptable to set type textarea on an input?\n\nMDN doesn't suggest textarea an acceptable input: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type\n\nim curious what the CSS framework people have to say on the matter!\n",
      "createdAt": "2016-02-15T15:46:34Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzM1NjE5NjI=",
        "title": "Textarea template cannot be provided",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/71"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NDI3MTkyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NDI3MTkyOQ==",
      "body": "+1\n",
      "createdAt": "2016-02-15T16:01:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTkyMTAxMTU=",
        "title": "Allow overriding template with extend",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/69"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NDI3MjA0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NDI3MjA0Mw==",
      "body": "i will update the README and publish\n",
      "createdAt": "2016-02-15T16:02:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTkyMTAxMTU=",
        "title": "Allow overriding template with extend",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/69"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NDI3MzU0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NDI3MzU0Nw==",
      "body": "published as 6.2.0!  thx\n",
      "createdAt": "2016-02-15T16:06:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTkyMTAxMTU=",
        "title": "Allow overriding template with extend",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/69"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NDMxNTYzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NDMxNTYzMQ==",
      "body": "whoops, ya, sorry there!  please bear with me here as i put it all together.  tell me where my thought process is wrong here:\n- you provide a template\n- `renderWithTemplate` is called\n- &-input-view [queries for textarea, and sets it to this.input](https://github.com/AmpersandJS/ampersand-input-view/blob/master/ampersand-input-view.js#L81)\n- handleTypeChange change runs.  type is set to textarea from the constructor, and this.input is a text area, so this [bit runs](https://github.com/AmpersandJS/ampersand-input-view/blob/master/ampersand-input-view.js#L182)\n\nwhat i think you're saying is that your `this.input` is being swapped by [this bit](https://github.com/AmpersandJS/ampersand-input-view/blob/master/ampersand-input-view.js#L177).  is that correct?\n",
      "createdAt": "2016-02-15T17:26:33Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzM1NjE5NjI=",
        "title": "Textarea template cannot be provided",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/71"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NDM0OTQ3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NDM0OTQ3Ng==",
      "body": "fixed!\n",
      "createdAt": "2016-02-15T19:07:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzMxMTY0MjA=",
        "title": "duplicated deps",
        "url": "https://github.com/trendscenter/nodeapi/issues/65"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NDg4ODI4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NDg4ODI4Mw==",
      "body": "seems straight forward enough.  +1, assuming we get travis rollin' soon and all is green\n",
      "createdAt": "2016-02-16T21:47:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTk1NTkzMzg=",
        "title": "Fix tests",
        "url": "https://github.com/node-swig/swig-templates/pull/3"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NTg5MjM1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NTg5MjM1NQ==",
      "body": "+1\n",
      "createdAt": "2016-02-18T20:02:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTk1NTA5Nzg=",
        "title": "Added the tabindex option to match capabilities of ampersand-input-view.",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/70"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NjA3ODU1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NjA3ODU1NA==",
      "body": "done n did! thanks!\n",
      "createdAt": "2016-02-19T06:11:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzQxMDIwMDI=",
        "title": "Set up Travis",
        "url": "https://github.com/node-swig/swig-templates/issues/2"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NjA3ODgwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NjA3ODgwMw==",
      "body": "ps, just been _slammed_ this week, hence the delayed response.  hopefully you have admin rights now\n",
      "createdAt": "2016-02-19T06:11:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzQxMDIwMDI=",
        "title": "Set up Travis",
        "url": "https://github.com/node-swig/swig-templates/issues/2"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NjA3OTQ5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NjA3OTQ5NQ==",
      "body": "forking your branched, resolved conflicts in #6 so you still get the cred :)\n",
      "createdAt": "2016-02-19T06:12:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTk1NjE3MDg=",
        "title": "update badge url to point to node-swig/swig",
        "url": "https://github.com/node-swig/swig-templates/pull/4"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NjA5NTU0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NjA5NTU0OA==",
      "body": "i'm really sorry man, i'm still not tracking.  i do have a tendency to look at these issues pretty late at night, but...\n\nwhy set `type` to `textarea` on an `<input>`?  again, it's not a valid type for an input, and `type` per the constructor options _is_ an [attribute toggle](https://github.com/AmpersandJS/ampersand-input-view/blob/master/ampersand-input-view.js#L27).\n\n> looks like if you set type to textarea, handleTypeChange simply replaces your `<input>` with a `<textarea>`\n\nyep, i observe that per you notes above as well\n\n> In my case, I'm using a CSS framework that requires class=\"textarea\" be set on `<textarea>` elements for proper rendering.\n\nbut weren't we just talking about `<input>`s?  if it's setting type and/or class to `textarea` on a `<textarea>`, aren't we all good?\n\n> Textarea template cannot be provided\n\nCheck this out: http://requirebin.com/?gist=05bba44a0ac73ac96c59\n\nWhew.  :)  Please, set me straight if I'm still missing something\n",
      "createdAt": "2016-02-19T07:06:31Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzM1NjE5NjI=",
        "title": "Textarea template cannot be provided",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/71"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4Njk3MjU4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4Njk3MjU4OQ==",
      "body": "not silly at all.  it's a weird-ism of the API.  if anything, i'm prone to removing that logic _or_ throwing an error if there's some sort of mismatch.  if you look at the blame, it's legacy stuff.  maybe it had better purpose then, but certainly now its arguably unhelpful code!\n",
      "createdAt": "2016-02-22T02:23:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzM1NjE5NjI=",
        "title": "Textarea template cannot be provided",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/issues/71"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NzM3MTU4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NzM3MTU4NA==",
      "body": "i guess i need to specify log `false` too.  thx!\n",
      "createdAt": "2016-02-22T20:33:58Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU1MzUyNzk=",
        "title": "using no config file option fails",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/issues/32"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NzQ4ODY2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NzQ4ODY2Mg==",
      "body": "your test structure is a little foreign looking to me, and some guy with :+1: two thumbs :-1: has endless h/w to do :).  anyway, i did rebase and patch the commit :)\n",
      "createdAt": "2016-02-23T02:24:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjAyNjc2MjM=",
        "title": "protect user input",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/pull/33"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4Nzc4MTU0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4Nzc4MTU0OA==",
      "body": "you're right--apologies on the false claim.  _they are working_ in master. hmmm\n",
      "createdAt": "2016-02-23T16:39:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjAyNjc2MjM=",
        "title": "protect user input",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/pull/33"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4Nzc5MTMzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4Nzc5MTMzMQ==",
      "body": "i should have mentioned that the `created` event also gets fired a of couple times.  i did observe variable counts of calls to the event handler depending on the run.\n",
      "createdAt": "2016-02-23T16:59:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU1NTEzMzE=",
        "title": "destroyed event fired twice",
        "url": "https://github.com/pouchdb/pouchdb/issues/4922"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NzgxODgyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NzgxODgyMg==",
      "body": "thanks @Smashpipe!\n\nto @all, it's evident that the community still has a lot of love for this package, which is excellent.  land a PR or two (fix a bug, improve the site page, etc), and we'll get you on the collaborator list if you're willing.  we'll still need to dial down a merge strategy, but i'm thinking that \"at least two +1\"s from collabs is a simple, great way to go.\n",
      "createdAt": "2016-02-23T17:59:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzA1Mjk3NDM=",
        "title": "swig build forward plan",
        "url": "https://github.com/node-swig/swig-templates/issues/1"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NzgxOTI2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NzgxOTI2OA==",
      "body": "@paularmstrong, would you be willing to add additional collaborators to swig on npm for publish right?\n",
      "createdAt": "2016-02-23T18:01:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU4MTQ2MjI=",
        "title": "get npm publish rights",
        "url": "https://github.com/node-swig/swig-templates/issues/7"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NzgyOTA4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NzgyOTA4OQ==",
      "body": "i actually tried bumping the version in the travis.yml, however, the build then fails.  needs some further sleuthing!  otherwise, +1\n",
      "createdAt": "2016-02-23T18:24:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjAzODI0MTU=",
        "title": "Fix tests",
        "url": "https://github.com/node-swig/swig-templates/pull/9"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4NzgzMDkzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4NzgzMDkzNA==",
      "body": "i don't think that has to happen in this PR.  I'll file an issue to help us update the build process\n",
      "createdAt": "2016-02-23T18:29:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjAzODI0MTU=",
        "title": "Fix tests",
        "url": "https://github.com/node-swig/swig-templates/pull/9"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4ODEwOTU2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4ODEwOTU2MQ==",
      "body": "jshint, from my experience, doesn't offer very great auto-correction tools.  i'm ok with any improvement by this point, however!  my bias is first https://github.com/feross/standard, then eslint, and finally jshint. the prior two offer a `--fix` or `--format` flag to help out.  if you guys are both pro- jshint, however, sounds ok to me :)\n",
      "createdAt": "2016-02-24T06:59:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjAzODI0MTU=",
        "title": "Fix tests",
        "url": "https://github.com/node-swig/swig-templates/pull/9"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4ODExMDQyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4ODExMDQyOQ==",
      "body": "BTW, i think tracking with LTS is the _ideal_ plan!\n",
      "createdAt": "2016-02-24T07:06:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjAzODI0MTU=",
        "title": "Fix tests",
        "url": "https://github.com/node-swig/swig-templates/pull/9"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4ODM1MDU5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4ODM1MDU5Mg==",
      "body": "we ready to merge?  :muscle: +1 from me!  over in ampersand, we do two +1s on a PR to get it in (from someone who didnt do the PR), and none for documentation changes.  OK with that?\n",
      "createdAt": "2016-02-24T16:52:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjAzODI0MTU=",
        "title": "Fix tests",
        "url": "https://github.com/node-swig/swig-templates/pull/9"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4ODM1ODI4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4ODM1ODI4MQ==",
      "body": "i think as @paulcpederson suggests is fine for now.  looks like `still` uses `consolidate`, which eventually tries to require in the specified `engine`.  perhaps we can also add a `postpublish` hook to auto-build those docs everytime we bump version.\n",
      "createdAt": "2016-02-24T17:15:19Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU4MTQ5OTc=",
        "title": "get doc site running under node-swig",
        "url": "https://github.com/node-swig/swig-templates/issues/8"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4ODYxMDE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4ODYxMDE4NQ==",
      "body": "so i'm trying out eslint with just their 'recommended' settings.  hardly any updates needed.  37?  no sweat! staging the PR now...\n\nhopefully you guys are down!\n",
      "createdAt": "2016-02-25T04:40:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzYwOTMwMTU=",
        "title": "choose a new linter",
        "url": "https://github.com/node-swig/swig-templates/issues/11"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4OTA2NjM0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4OTA2NjM0Mg==",
      "body": "@paulcpederson, because i didn't realize i needed to update the `.travis.yml` too.  bumping...\n",
      "createdAt": "2016-02-26T01:16:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjA2Mjc5OTc=",
        "title": "Feature/eslint",
        "url": "https://github.com/node-swig/swig-templates/pull/12"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4OTA3MzQ2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4OTA3MzQ2NA==",
      "body": "> Why change the travis config to npm run lint instead of just updating the make lint target? \n\ni want to run the lint task automatically on pre-commit s.t. all contributors don't forget to lint their code manually. i could surely use the make command, but\n- it's extra overhead (i.e. runs an extra child process vs running the eslint directly), and\n- adds an extra level of indirection\n  - runs a command purely as a proxy to another command `npm => make => eslint` vs just `npm => eslint`\n  - npm scripts are already acting as a task runner--why sustain a redundant secondary task runner?\n\n> I am somewhat obsessed with GNU Make, it's one of my favorite tools\n\n`make` is great, but IMHO it's not friendly or common in the js community. if this were a `C++` library, id say rock on, but using ~~js standards~~ common js practices in a js lib seems kind of like an \"of course\" sort of thing to me.  i would lobby that make is not _as_ friendly to new contributors.\n\nit's sort of bikeshedding in the grand scheme of things. anyway, hopefully we can come to resolution\n",
      "createdAt": "2016-02-26T01:39:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjA2Mjc5OTc=",
        "title": "Feature/eslint",
        "url": "https://github.com/node-swig/swig-templates/pull/12"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4OTc2NDY2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4OTc2NDY2Nw==",
      "body": "restored to make.  should have had that discussion before starting a change.  best to do it all at once if at all!  i originally didn't consider it scope creep as we already sorta-kinda use _both_, but that's arguably grey!\n\nhopefully travis get's its act together and gives us green soon and we can call this one done!\n",
      "createdAt": "2016-02-28T02:10:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjA2Mjc5OTc=",
        "title": "Feature/eslint",
        "url": "https://github.com/node-swig/swig-templates/pull/12"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE4OTc2NTE3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE4OTc2NTE3NA==",
      "body": "hey @paularmstrong, can please briefly pitch in over at https://github.com/node-swig/swig/issues/7 ?  much appreciated!\n",
      "createdAt": "2016-02-28T02:12:46Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTA3MTY4MA==",
        "title": "No longer maintained — Do you want to help?",
        "url": "https://github.com/paularmstrong/swig/issues/628"
      },
      "repository": {
        "nameWithOwner": "paularmstrong/swig"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MDU2MjkzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MDU2MjkzOA==",
      "body": "thanks! :)\n",
      "createdAt": "2016-03-01T06:10:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjExMzQzNDQ=",
        "title": "Add Pouchy to external.md",
        "url": "https://github.com/pouchdb/pouchdb/pull/4935"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MDgxNjU2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MDgxNjU2Ng==",
      "body": "thanks @gr2m!  i re-read my problem statement... it wasn't that clear!  glad you deciphered it.  :)  also, i should have noticed it was all still es5.  thanks for patching :+1: \n",
      "createdAt": "2016-03-01T17:04:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjExOTY1OTg=",
        "title": "fix: test for serverUp from server vs logLevel depedent logFile",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/pull/34"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MDg4MzU1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MDg4MzU1Ng==",
      "body": "interesting.  unable to replicate.  closing. will revisit if it comes up again!\n",
      "createdAt": "2016-03-01T20:14:31Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzcwNzU5ODU=",
        "title": "attempting to print the stack results in a TypeError",
        "url": "https://github.com/AndreasMadsen/trace/issues/23"
      },
      "repository": {
        "nameWithOwner": "AndreasMadsen/trace"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MTMxMjM5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MTMxMjM5Ng==",
      "body": "@nolanlawson, thanks for the thoughtful response!  my response is long, simply because i'm thinking out-loud as I digest your remarks!\n\n> EventEmitters do have a memory overhead\n\nyea, def.  i was thinking that it could be lazily instantiated.  e.g., when people want events, `myPouch._events` gets instantiated, and all other emitters route through there\n\n> Multiple ongoing replications - which 'change' events to emit?\n\ngood point.  well, I dont think there'd need to be _too_ much change from the status quo. instead of getting events exclusively from the `changes` API, a call to `changes()` simply `UPSERT`s `myPouch._events`, and proxies events through there. if you `replicate.to(x)` and `replicate.to(y)`... yea, the event payload  would need some additional data: `{ event: \"change\", db: \"x\", doc: {...} }`.\n\nwhat i suggest ^^ is something like:\n\n```\nmyPouch._events (Emitter)\n^ pipes events      ^ pipes events    ^ pipes events             ^ pipes events\ndbA-syncEmitter  dbB-syncEmitter db-created/destroyed  doc-changes\n\n==>\nmyPouch.changes(...);\nmyPouch.on('change', () => { ... });\nmyPouch.sync(...).on('sync', (evt) => { if (evt.complete/inProgress) { ... } }); // where .sync _returns_ myPouch._events, and you can chain right on!\n```\n\n> Remote databases - if users aren't going to listen to changes feed, no sense in opening a permanent HTTP connection\n\nabsolutely, completely agree.  again with the `lazy` bit!\n\n> Docs - ... Attachments ...\n\ncould be a no-op if the proxy solution was considered\n\n---\n\nto summarize again, events happen on my stores.  sync events, change events, etc.  i must cache Pouch generated emitters in my app and pass them around to those who need to listen.  a more natural feeling approach to is enable `myPouch.on(...)` like interface.  this provides simple and unified Event API for a pouch instance.\n",
      "createdAt": "2016-03-02T16:24:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU4MDM0NDE=",
        "title": "fragmented event emitting strategy",
        "url": "https://github.com/pouchdb/pouchdb/issues/4927"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MjUyNTE3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MjUyNTE3Nw==",
      "body": "not sure how the pure http client works, but if it does local caching (e.g. has a local db, vs. purely connecting to the remote db), the local version and the remote DB would be instantiated and destroyed in my example, so it _could actually make sense_.  if you reproduced without any remote, however, then :(\n",
      "createdAt": "2016-03-04T23:37:22Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU1NTEzMzE=",
        "title": "destroyed event fired twice",
        "url": "https://github.com/pouchdb/pouchdb/issues/4922"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MzM4MDY3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MzM4MDY3MA==",
      "body": "@nathanmarks... you figure it out? :)\n",
      "createdAt": "2016-03-07T18:22:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTA1OTU5NDY=",
        "title": "How to properly document node modules exporting a factory?",
        "url": "https://github.com/jsdoc/jsdoc/issues/1086"
      },
      "repository": {
        "nameWithOwner": "jsdoc/jsdoc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MzM4MzIwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MzM4MzIwNw==",
      "body": "``` js\n/**\n * @module jsdoctest\n */\n\n/**\n * Creates a new jsdocTest object.\n * @name jsdocTestFactory\n * @returns {jsdocTest}\n */\nfunction factory () {\n  return {\n    method1: method1\n  };\n\n  /**\n   * Does something useful.\n   */\n  function method1 () {\n  }\n};\n\nmodule.exports = factory\n```\n\nseems to do it.  trick is, define your fn, _then_ export it, vs using shorthand\n",
      "createdAt": "2016-03-07T18:27:38Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTA1OTU5NDY=",
        "title": "How to properly document node modules exporting a factory?",
        "url": "https://github.com/jsdoc/jsdoc/issues/1086"
      },
      "repository": {
        "nameWithOwner": "jsdoc/jsdoc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MzQzOTEwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MzQzOTEwOQ==",
      "body": "hmmm, i just tried in a [brand new package](https://gist.github.com/cdaringe/9181887fa1e87d9a5e52) it checked out\n\nit may be a npm3 incompatibility?\n",
      "createdAt": "2016-03-07T20:38:09Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzkwODYxOTA=",
        "title": "npm install error",
        "url": "https://github.com/trendscenter/coins-validate/issues/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coins-validate"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MzQzOTQ1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MzQzOTQ1Nw==",
      "body": "git-validate i believe expects a certain package structure. could be playin a role\n",
      "createdAt": "2016-03-07T20:38:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzkwODYxOTA=",
        "title": "npm install error",
        "url": "https://github.com/trendscenter/coins-validate/issues/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coins-validate"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5MzU4ODg5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5MzU4ODg5NQ==",
      "body": "es6, very cheeky.  i'm also in bioinformatics.  go team!\n",
      "createdAt": "2016-03-08T03:37:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTA1OTU5NDY=",
        "title": "How to properly document node modules exporting a factory?",
        "url": "https://github.com/jsdoc/jsdoc/issues/1086"
      },
      "repository": {
        "nameWithOwner": "jsdoc/jsdoc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5Njk3NDU1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5Njk3NDU1MQ==",
      "body": "+1\n",
      "createdAt": "2016-03-15T19:02:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjI5NTExOTA=",
        "title": "zuul should be a devDependency",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/59"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5ODUxNTA2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5ODUxNTA2NA==",
      "body": "yes, but I would strongly prefer to keep it the same.  I've tried reaching out to @paularmstrong a couple of times without response.  we may consider following the npm package name resolution process\n",
      "createdAt": "2016-03-18T19:45:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU4MTQ2MjI=",
        "title": "get npm publish rights",
        "url": "https://github.com/node-swig/swig-templates/issues/7"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5OTQ3MzI2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5OTQ3MzI2NQ==",
      "body": "@aubertdavy, can you be more specific?\n",
      "createdAt": "2016-03-21T20:45:20Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTAyODEwOQ==",
        "title": "No such table error",
        "url": "https://github.com/chennaione/sugar/issues/50"
      },
      "repository": {
        "nameWithOwner": "chennaione/sugar"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5OTUyMjM0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5OTUyMjM0MA==",
      "body": "found the get path method\n",
      "createdAt": "2016-03-21T22:47:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDI0OTExOTg=",
        "title": "where is DB persisted? <eom>",
        "url": "https://github.com/yahoo/squidb/issues/151"
      },
      "repository": {
        "nameWithOwner": "yahoo/squidb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5OTU2MTM4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5OTU2MTM4MA==",
      "body": "i'm sorry to be a total rookie on this (i _rarely_ code java), but no where in my current app do I use `Application` explicitly (perhaps implicitly?).  Even if so, I'd like to write some unit tests--I'm unsure how'd I'd get the context otherwise if there'd be no `Context` in the test suite.\n\nthanks for the tip.\n",
      "createdAt": "2016-03-22T00:37:34Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTAyODEwOQ==",
        "title": "No such table error",
        "url": "https://github.com/chennaione/sugar/issues/50"
      },
      "repository": {
        "nameWithOwner": "chennaione/sugar"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5OTU3ODAwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5OTU3ODAwMA==",
      "body": "nm, @aubertdavy, i did figure out how to do that. still gives the error, though, unforunately\n\n>  Caused by: android.database.sqlite.SQLiteException: no such table: CUSTOMER (code 1): , while compiling: INSERT OR REPLACE  INTO CUSTOMER(EMAIL,ID,NAME) VALUES (?,?,?)\n",
      "createdAt": "2016-03-22T01:46:01Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTAyODEwOQ==",
        "title": "No such table error",
        "url": "https://github.com/chennaione/sugar/issues/50"
      },
      "repository": {
        "nameWithOwner": "chennaione/sugar"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDE5OTYwNTcyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDE5OTYwNTcyOQ==",
      "body": "@mohamed-habib, I skeptical that SQLite supports it.  i think that postgres does, however, unrelated\n",
      "createdAt": "2016-03-22T03:06:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzg1MTQ2NDU=",
        "title": "Return number of affected rows in Update/Delete operations and Uri in Insert.",
        "url": "https://github.com/agrosner/DBFlow/issues/675"
      },
      "repository": {
        "nameWithOwner": "agrosner/DBFlow"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDA4OTAwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDA4OTAwMg==",
      "body": "thanks @hegemonic!  hmm.  surprised i missed that one!  i really appreciate your input!\n",
      "createdAt": "2016-03-23T00:08:36Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzkwOTE2MzY=",
        "title": "applying @method tag _removes_ method from doc output",
        "url": "https://github.com/jsdoc/jsdoc/issues/1170"
      },
      "repository": {
        "nameWithOwner": "jsdoc/jsdoc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDUwMjMwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDUwMjMwNg==",
      "body": "fixed it :)\n",
      "createdAt": "2016-03-23T19:18:54Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjY5Mjk4OTc=",
        "title": "API crashes on ENTER via stdin",
        "url": "https://github.com/trendscenter/nodeapi/issues/56"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDU4MjUyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDU4MjUyNQ==",
      "body": "+1\n",
      "createdAt": "2016-03-23T23:32:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjM5Mjk0NDI=",
        "title": "Update ampersand-view to version 9",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/16"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDU4MjU2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDU4MjU2OQ==",
      "body": "+1\n",
      "createdAt": "2016-03-23T23:32:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjM5MzE1MTM=",
        "title": "Update ampersand view to version 9",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/72"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDU4MjY4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDU4MjY4MQ==",
      "body": "so many updates! :) thanks @imorrison! +1\n",
      "createdAt": "2016-03-23T23:33:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjM5MzE4NjY=",
        "title": "Update ampersand-view to version 9",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/72"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDYzMDEwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDYzMDEwMA==",
      "body": "i agree. yea, i will do all select/checkbox/input, and do changelog updates in each\n",
      "createdAt": "2016-03-24T02:52:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjM5MzE4NjY=",
        "title": "Update ampersand-view to version 9",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/72"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDYzNDMwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDYzNDMwMQ==",
      "body": "all day, the registry has been having some serious issues.  perhaps in wake of yesterdays drama there's been a lot of patching?  i had to piece-by-piece our publish scripts to make her buck.  regardless, all is updated and per expectation.\n- ampersand-input-view@6.0.0\n- ampersand-checkbox-view@5.0.0\n- ampersand-select-view@7.0.0\n",
      "createdAt": "2016-03-24T03:07:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjM5MzE4NjY=",
        "title": "Update ampersand-view to version 9",
        "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/72"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDY1MTI5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDY1MTI5OQ==",
      "body": "Whats the latest status?\n",
      "createdAt": "2016-03-24T04:00:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTIyNDIwOTE=",
        "title": "Add support for Robolectric on Max OS X",
        "url": "https://github.com/realm/realm-java/pull/1867"
      },
      "repository": {
        "nameWithOwner": "realm/realm-java"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDkwNDg1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDkwNDg1Mg==",
      "body": "+1\n",
      "createdAt": "2016-03-24T16:09:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjM5OTgxODk=",
        "title": "Updated dependencies to survive get-object-path@0.0.2 being removed from npm",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/61"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDk5NzAzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDk5NzAzOQ==",
      "body": "@dhritzkiv, if you want to stage a patched 8.x version, i'd be happy to publish it\n",
      "createdAt": "2016-03-24T20:02:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDMzMTYwNzI=",
        "title": "get-object-path issues + proposal",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/157"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMDk5OTE4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMDk5OTE4Ng==",
      "body": "> However, this version of ampersand-view relies on get-object-path@v0.0.2 (which was unpublished)\n\nFTR, the current version (even at the time of issue filing) uses lodash.get\n",
      "createdAt": "2016-03-24T20:07:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDMzMTYwNzI=",
        "title": "get-object-path issues + proposal",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/157"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMTAyMTY5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMTAyMTY5OQ==",
      "body": "@dhritzkiv, good point, i didn't consider that!\n",
      "createdAt": "2016-03-24T21:09:20Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDMzMTYwNzI=",
        "title": "get-object-path issues + proposal",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/157"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMTA2OTc3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMTA2OTc3Nw==",
      "body": "@dschissler, full time job, school, and life!  you're welcome to start staging these PRs on your own if you want.  we'd happily accept them :).  the upgrade is not so seamless\n- not all modules are compatible with the upgrade immediately.  i did upgrade &-view, and it didn't pass tests. debugging required\n- all lodash refs need to be converted to `lodash/mod` vs `lodash.mod` for package size reduction\n- to be most effective, we'd want and try and hit ampersandjs-core modules (most important) but propose the updates to community modules as well.  with everyone aligned, bundle sizes continue to drop.  `npm search` will show you that the following pkgs exist:\n1. ampersand-app\n2. ampersand-array-checkbox-view\n3. ampersand-array-input-view\n4. ampersand-auto-closing-view\n5. ampersand-autocomplete-view\n6. ampersand-avatar-field\n7. ampersand-avatar-input-view\n8. ampersand-bootstrap-tagsinput-view\n9. ampersand-bubble-prop\n10. ampersand-calendar\n11. ampersand-chart\n12. ampersand-checkbox-view\n13. ampersand-chess-state\n14. ampersand-chess-view\n15. ampersand-class-extend\n16. ampersand-collection\n17. ampersand-collection-filterable\n18. ampersand-collection-fluxible-mixin\n19. ampersand-collection-history\n20. ampersand-collection-jquery-datatable\n21. ampersand-collection-lodash-mixin\n22. ampersand-collection-pouchdb-mixin\n23. ampersand-collection-pusher-mixin\n24. ampersand-collection-rest-mixin\n25. ampersand-collection-sort-mixin\n26. ampersand-collection-underscore-mixin\n27. ampersand-collection-view\n28. ampersand-controller-router\n29. ampersand-date-view\n30. ampersand-date-view2\n31. ampersand-dependency-mixin\n32. ampersand-dom\n33. ampersand-dom-bindings\n34. ampersand-domthing-mixin\n35. ampersand-drawer-view\n36. ampersand-events\n37. ampersand-expanding-textarea-view\n38. ampersand-express-router\n39. ampersand-fetch\n40. ampersand-file-drop-view\n41. ampersand-filereader-input-view\n42. ampersand-filter-tracker\n43. ampersand-filtered-collection\n44. ampersand-filtered-subcollection\n45. ampersand-floatinglabel-input-view\n46. ampersand-form-manager-view\n47. ampersand-form-view\n48. ampersand-fullcalendar-view\n49. ampersand-grid-view\n50. ampersand-grouped-collection-view\n51. ampersand-hoodie-collection\n52. ampersand-hoodie-mixin\n53. ampersand-hoodie-model\n54. ampersand-infinite-scroll\n55. ampersand-input-view\n56. ampersand-io\n57. ampersand-io-collection\n58. ampersand-io-model\n59. ampersand-jid-datatype-mixin\n60. ampersand-json-patch\n61. ampersand-jsonapi-ajaxconfig\n62. ampersand-jsonapi-collection\n63. ampersand-jsonapi-model\n64. ampersand-local-cache-mixin\n65. ampersand-main-view\n66. ampersand-mixins\n67. ampersand-modal-view\n68. ampersand-model\n69. ampersand-model-optimistic-update-mixin\n70. ampersand-model-patch-mixin\n71. ampersand-model-pouchdb-mixin\n72. ampersand-model-pusher-mixin\n73. ampersand-model-validations-mixin\n74. ampersand-movingobj\n75. ampersand-multifield-view\n76. ampersand-multiselect-view\n77. ampersand-offline-first\n78. ampersand-optimistic-sync\n79. ampersand-paginated-subcollection\n80. ampersand-pagination-mixin\n81. ampersand-pikaday-view\n82. ampersand-pouchdb-sync\n83. ampersand-questionnaire-view\n84. ampersand-radio-view\n85. ampersand-react-connector\n86. ampersand-react-mixin\n87. ampersand-react-view\n88. ampersand-react-view-mixin\n89. ampersand-registry\n90. ampersand-rest-collection\n91. ampersand-router\n92. ampersand-router-query-parameters\n93. ampersand-sanitized-html-data-type\n94. ampersand-search-select\n95. ampersand-select-view\n96. ampersand-single-sync\n97. ampersand-state\n98. ampersand-state-fluxible-mixin\n99. ampersand-state-mixin-datatype-function\n100. ampersand-state-mixin-datatype-iso-date\n101. ampersand-store\n102. ampersand-subcollection\n103. ampersand-sync\n104. ampersand-sync-adapter\n105. ampersand-sync-localforage\n106. ampersand-sync-promise\n107. ampersand-sync-with-promise\n108. ampersand-tab-view\n109. ampersand-time-range\n110. ampersand-version\n111. ampersand-view\n112. ampersand-view-conventions\n113. ampersand-view-jquery-events\n114. ampersand-view-jquery-mixin\n115. ampersand-view-switcher\n116. ampersand-virtual-dom-mixin\n117. ampersand-webcam-snapshot-view\n118. ampersand-websocket-hint\n119. ampersand-webworker-demo\n120. ampersand-wildemitter-datatype-mixin\n\nso, in summary, (not to be curt), it is difficult and very time consuming.  that's why i started working on ampersand-family-agenda--to help automate these upgrades and to ease the synchronization of our loosely-coupled framework!\n",
      "createdAt": "2016-03-24T23:20:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzE0MDc0NTc=",
        "title": "Upgrade lodash dependency to 4.*",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/230"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMTE3MDg5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMTE3MDg5NQ==",
      "body": "hey @pgilad! how's it goin man?\n\nj dalton explained in a presentation that the `lodash.xzy` **inlines the module _with_ all of its dependencies**.  so, if `.get` and `.set` both have a common dep (which they do, `_isKey`), you will consequently \"over-bundle\" it using the dot strategy.\n\nby example:\n\n``` js\n// get-set-dot-strategy.js\nvar set = require('lodash.set');\nvar get = require('lodash.get');\n```\n\n``` js\n// get-set-slash-strategy.js\nvar set = require('lodash/set');\nvar get = require('lodash/get');\n```\n\n```\n# post browserify\ncdieringer  staff  17038 Mar 25 00:34 get-set-dot-strategy.bundled.js\ncdieringer  staff  15318 Mar 25 00:35 get-set-slash-strategy.bundled.js # less, yahtzee!\n```\n",
      "createdAt": "2016-03-25T06:39:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzE0MDc0NTc=",
        "title": "Upgrade lodash dependency to 4.*",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/230"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMTM2MjgyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMTM2MjgyMQ==",
      "body": "> @cdaringe Once everything is upgraded when using NPM 3 it would be the same since it installs flat dependencies. Just sayin'.\n\nhey @dschissler, the dot strategy _inlines the dependencies_, so even if npm3 flattens deps, they will still be duplicated in each lodash module :)\n\n> I could get the upgrades in some of the packages if you want\n\n@pgilad, if you'd like to! it's really about keepin' the users happy by this point, and churning to keep our deps up to date.  maybe greenkeeper is something we should consider?  i'm definitely not opposed to getting the ball rolling, i'm just swamped ATM\n",
      "createdAt": "2016-03-25T16:58:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzE0MDc0NTc=",
        "title": "Upgrade lodash dependency to 4.*",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/230"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMTQyNDMwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMTQyNDMwNw==",
      "body": "i as well have begun to have this issue.  the github package declaration formatting is valid--it works for my peers and has worked for me in the past.  unsure what's changed on my system since the arrival of the issue\n\n```\ncdieringer@devcoin4:/var/www/html/coins_core/js/browserApp$ npm prune && npm i\nnpm ERR! git clone --template=/home/cdieringer/.npm/_git-remotes/_templates --mirror git@github.com:mrn-code/ampersand-expanding-textarea-view.git /home/cdieringer/.npm/_git-remotes/git-github-com-mrn-code-ampersand-expanding-textarea-view-git-2676e229: Cloning into bare repository '/home/cdieringer/.npm/_git-remotes/git-github-com-mrn-code-ampersand-expanding-textarea-view-git-2676e229'...\nnpm ERR! git clone --template=/home/cdieringer/.npm/_git-remotes/_templates --mirror git@github.com:mrn-code/ampersand-expanding-textarea-view.git /home/cdieringer/.npm/_git-remotes/git-github-com-mrn-code-ampersand-expanding-textarea-view-git-2676e229: fatal: Unable to read current working directory: No such file or directory\nnpm ERR! git clone --template=/home/cdieringer/.npm/_git-remotes/_templates --mirror git@github.com:mrn-code/ampersand-expanding-textarea-view.git /home/cdieringer/.npm/_git-remotes/git-github-com-mrn-code-ampersand-expanding-textarea-view-git-2676e229: fatal: index-pack failed\nnpm ERR! Linux 3.16.0-30-generic\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"i\"\nnpm ERR! node v4.4.1\nnpm ERR! npm  v2.14.20\nnpm ERR! code 128\n\nnpm ERR! Command failed: git clone --template=/home/cdieringer/.npm/_git-remotes/_templates --mirror git@github.com:mrn-code/ampersand-expanding-textarea-view.git /home/cdieringer/.npm/_git-remotes/git-github-com-mrn-code-ampersand-expanding-textarea-view-git-2676e229\nnpm ERR! Cloning into bare repository '/home/cdieringer/.npm/_git-remotes/git-github-com-mrn-code-ampersand-expanding-textarea-view-git-2676e229'...\nnpm ERR! fatal: Unable to read current working directory: No such file or directory\nnpm ERR! fatal: index-pack failed\nnpm ERR!\nnpm ERR!\nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     <https://github.com/npm/npm/issues>\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /coins/www/html/coins_core/js/browserApp/npm-debug.log\ncdieringer@devcoin4:/var/www/html/coins_core/js/browserApp$ git --version\ngit version 1.9.1\n```\n",
      "createdAt": "2016-03-25T18:56:01Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDA1MzkyMjM=",
        "title": "npm install error",
        "url": "https://github.com/npm/npm/issues/9250"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMTQyNjQwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMTQyNjQwNQ==",
      "body": "and [here's the pertinent](http://pastebin.com/wLC26eCf) content from the npm-debug.log, per request\n",
      "createdAt": "2016-03-25T18:58:41Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDA1MzkyMjM=",
        "title": "npm install error",
        "url": "https://github.com/npm/npm/issues/9250"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMjQ3NTE0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMjQ3NTE0Mg==",
      "body": "@paulcpederson @Lochlan, thoughts?\n",
      "createdAt": "2016-03-28T16:35:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU4MTQ2MjI=",
        "title": "get npm publish rights",
        "url": "https://github.com/node-swig/swig-templates/issues/7"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMjY0Njk0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMjY0Njk0MA==",
      "body": "i will note that downgrading to 4.2.4 did temporarily resolve the issue\n",
      "createdAt": "2016-03-29T00:42:27Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDQxMjE2Nzk=",
        "title": "HPE_UNEXPECTED_CONTENT_LENGTH error",
        "url": "https://github.com/hapijs/hapi/issues/3103"
      },
      "repository": {
        "nameWithOwner": "hapijs/hapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMjY1MjAyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMjY1MjAyNQ==",
      "body": "i haven't run the tests locally, but looks great! +1\n",
      "createdAt": "2016-03-29T01:10:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjQyMzIxMDY=",
        "title": "Update lodash to v4",
        "url": "https://github.com/AmpersandJS/ampersand-events/pull/15"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-events"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMjY2ODIxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMjY2ODIxNg==",
      "body": ":+1: thanks chris\n",
      "createdAt": "2016-03-29T02:10:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjQ0MDI4NjY=",
        "title": "fixed a link",
        "url": "https://github.com/trendscenter/coinstac/pull/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMjY2OTA4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMjY2OTA4MA==",
      "body": "there was a deadlink over @ coinstac-simulator too.  patched!\n",
      "createdAt": "2016-03-29T02:15:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjQ0MDI4NjY=",
        "title": "fixed a link",
        "url": "https://github.com/trendscenter/coinstac/pull/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMzA0NDgwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMzA0NDgwNQ==",
      "body": "hey @hueniverse,\n\nthanks for getting back.  i omitted key details that were relevant to the problem.  we _were_ using hapi v9.x.  upon upgrading to hapi 13.x just now (sole change*\\* to the environment), the problem has vanished.  verified on multiple machines, osx and ubu based.\n\nthe error sources from node's internal http lib.  i assume hapi wraps that, and suspect that hapi was writing headers in the `reply` cycle that my version of node didn't like.\n\nsound like a reasonable thing?  thanks again.\n",
      "createdAt": "2016-03-29T18:46:10Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDQxMjE2Nzk=",
        "title": "HPE_UNEXPECTED_CONTENT_LENGTH error",
        "url": "https://github.com/hapijs/hapi/issues/3103"
      },
      "repository": {
        "nameWithOwner": "hapijs/hapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMzE3MjM1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMzE3MjM1OQ==",
      "body": "thanks @stroem  :)\n",
      "createdAt": "2016-03-30T00:45:19Z",
      "issue": {
        "id": "MDU6SXNzdWU3NjMyMjUwMg==",
        "title": "does not support  'like %%' when  using  where(\"item like '%?%'\",\"sub\")?",
        "url": "https://github.com/pardom-zz/ActiveAndroid/issues/368"
      },
      "repository": {
        "nameWithOwner": "pardom-zz/ActiveAndroid"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMzI2NTM0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMzI2NTM0NQ==",
      "body": "no worries.  great little lib.  too bad it wont compile with the android SDK.  the latest android flips out compiling with lambas, even though it suggests to you to use them.  :facepunch: :frowning: \n",
      "createdAt": "2016-03-30T06:06:31Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDQ0NjU3MTk=",
        "title": "New Release",
        "url": "https://github.com/failsafe-lib/failsafe/issues/7"
      },
      "repository": {
        "nameWithOwner": "failsafe-lib/failsafe"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMzI2NTQyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMzI2NTQyMA==",
      "body": "i ended up just making a jar and bringin it on over\n",
      "createdAt": "2016-03-30T06:07:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDQ0NjU3MTk=",
        "title": "New Release",
        "url": "https://github.com/failsafe-lib/failsafe/issues/7"
      },
      "repository": {
        "nameWithOwner": "failsafe-lib/failsafe"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMzI3OTg5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMzI3OTg5Mg==",
      "body": "this really threw me off.  came to file an issue, found this.  strongly agree.  this is an error, because the semantic name does not match the described behavior.\n",
      "createdAt": "2016-03-30T06:57:19Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDI4MTI3MDE=",
        "title": "`RetryListener`s are not only called on retry",
        "url": "https://github.com/rholder/guava-retrying/issues/47"
      },
      "repository": {
        "nameWithOwner": "rholder/guava-retrying"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMzUwNDMxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMzUwNDMxMg==",
      "body": "@jhalterman, sorry, that was confusing.  all of your stuff is good.  i just can't compile my android-app using lambas (sometimes?).  it eventually results in [this](https://bugs.openjdk.java.net/browse/JDK-8129537).  that's not on you!\n",
      "createdAt": "2016-03-30T16:03:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDQ0NjU3MTk=",
        "title": "New Release",
        "url": "https://github.com/failsafe-lib/failsafe/issues/7"
      },
      "repository": {
        "nameWithOwner": "failsafe-lib/failsafe"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMzYxODExOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMzYxODExOA==",
      "body": "@swashcap, i figured this out.  the gist is that `pre-commit` makes a symlink from `.git/hooks/precommit` to your node modules.  however, if your node_modules are scrapped, the link dies.  the fix is to scrap `.git/hooks/precommit` and `node_modules/pre-commit/`... possibly related modules.  re-install and the links are restored\n",
      "createdAt": "2016-03-30T20:26:19Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzkwODYxOTA=",
        "title": "npm install error",
        "url": "https://github.com/trendscenter/coins-validate/issues/1"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coins-validate"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwMzc1OTI3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwMzc1OTI3Ng==",
      "body": ":game_die: :game_die: :game_die: :game_die: :game_die: \n^^ yahtzee!\n",
      "createdAt": "2016-03-31T05:31:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDQ0NjU3MTk=",
        "title": "New Release",
        "url": "https://github.com/failsafe-lib/failsafe/issues/7"
      },
      "repository": {
        "nameWithOwner": "failsafe-lib/failsafe"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNDAwMjA3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNDAwMjA3OQ==",
      "body": "thank you!  the CLI is excellent.  i did have to login/logout, but everything else was smooth!\n",
      "createdAt": "2016-03-31T16:07:22Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDQ3MTgwOTY=",
        "title": "ERR! enable Couldn’t enable a repository with this slug",
        "url": "https://github.com/greenkeeperio/greenkeeper/issues/158"
      },
      "repository": {
        "nameWithOwner": "greenkeeperio/greenkeeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNDE3NzExNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNDE3NzExNA==",
      "body": "@paulcpederson, ya.\n\nThere's no right or wrong answers here.  swig-templates it is\n",
      "createdAt": "2016-03-31T23:46:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU4MTQ2MjI=",
        "title": "get npm publish rights",
        "url": "https://github.com/node-swig/swig-templates/issues/7"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNTAwMTAxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNTAwMTAxOA==",
      "body": "Ya, it doesn't work with androidTestCompile.  Just testCompile, if I recall correctly\n",
      "createdAt": "2016-04-03T15:47:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDI4NjQ2NTU=",
        "title": "Including Roboelectric Produces ABGI Errors In Android Studio onbuild",
        "url": "https://github.com/robolectric/robolectric/issues/2382"
      },
      "repository": {
        "nameWithOwner": "robolectric/robolectric"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNTQ3ODU1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNTQ3ODU1Mw==",
      "body": "I followed up some commits to get this closed out\n",
      "createdAt": "2016-04-04T20:23:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTUwMDIxNDc=",
        "title": "Scan details route",
        "url": "https://github.com/trendscenter/nodeapi/pull/54"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNTY2Nzg4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNTY2Nzg4NQ==",
      "body": "@remko, ya, i'm opening up to the idea.  needing to [review other teams' monorepo formal approaches](https://github.com/babel/babel/blob/master/doc/design/monorepo.md) some.\n",
      "createdAt": "2016-04-05T06:10:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjM2MzAxMjY=",
        "title": "Provide a combined `ampersand` module",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/219"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNjQ1NjM3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNjQ1NjM3Ng==",
      "body": "5.0.0 breaks the build\n",
      "createdAt": "2016-04-06T16:38:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjUyNjc3NDE=",
        "title": "Update hapi-swagger to version 5.0.0 🚀",
        "url": "https://github.com/trendscenter/nodeapi/pull/84"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNjQ2Nzc3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNjQ2Nzc3OA==",
      "body": "done manually in b748f45\n",
      "createdAt": "2016-04-06T17:07:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjUyNTY2NTk=",
        "title": "Update lodash to version 4.8.2 🚀",
        "url": "https://github.com/trendscenter/nodeapi/pull/83"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNjQ2ODcxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNjQ2ODcxMQ==",
      "body": "done manually in 79ae912\n",
      "createdAt": "2016-04-06T17:10:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjUxMjE0Mzg=",
        "title": "Update bookshelf to version 0.9.4 🚀",
        "url": "https://github.com/trendscenter/nodeapi/pull/78"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNjQ4NDc5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNjQ4NDc5Nw==",
      "body": "my guess is that you'll have to hack up the templates and do some post-processing.  i know that's not entirely helpful, but based on the functionality that this tool provides, it may be your only route!\n",
      "createdAt": "2016-04-06T17:45:18Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDYzMjEyNDU=",
        "title": "Customization Requests",
        "url": "https://github.com/swagger-api/swagger-codegen/issues/2505"
      },
      "repository": {
        "nameWithOwner": "swagger-api/swagger-codegen"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNjUyNDYxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNjUyNDYxNQ==",
      "body": "after some experimentation, i've found that when i remove:\n\n``` js\nvalidate: {\n    headers: true, //TODO: validate x-forwaded https header\n    payload: {\n        username: joi.binary().encoding('base64').required(),\n        password: joi.binary().encoding('base64').required()\n    }\n},\n```\n\nfrom my full route config, the `definition` drops.  the route config ~:\n\n``` js\nserver.route({\n    method: 'POST',\n    path: baseUrl,\n    config: {\n        tags: ['api', 'auth'],\n        notes: ' ... '\n        description: 'Login: Get new API key and JWT cookie',\n        auth: false,\n        validate: { ... }\n        response: { ... },\n...\n```\n",
      "createdAt": "2016-04-06T19:31:45Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY0MDkyNzU=",
        "title": "Question Regarding produced swagger definitions",
        "url": "https://github.com/hapi-swagger/hapi-swagger/issues/258"
      },
      "repository": {
        "nameWithOwner": "hapi-swagger/hapi-swagger"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNjUzNzE4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNjUzNzE4MA==",
      "body": "i was on `4.3`. on upgrade to `5.x` the strange definitions now read as `Model N`:\n\n<img width=\"205\" alt=\"screen shot 2016-04-06 at 2 04 43 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/14331078/f07fe0ca-fc00-11e5-91c3-3dbe5692b31d.png\">\n",
      "createdAt": "2016-04-06T20:08:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY0MDkyNzU=",
        "title": "Question Regarding produced swagger definitions",
        "url": "https://github.com/hapi-swagger/hapi-swagger/issues/258"
      },
      "repository": {
        "nameWithOwner": "hapi-swagger/hapi-swagger"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNjk0MDA3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNjk0MDA3NA==",
      "body": "interesting.  makes sense.  it's as though though a derived recompute needs memoization with cache size === 1\n",
      "createdAt": "2016-04-07T14:52:56Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY0NzAwMDA=",
        "title": "Derived properties are calculated unnecessarily often",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/238"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNjk0NTQ2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNjk0NTQ2NA==",
      "body": "+1. i agree.  [ref](https://nodejs.org/api/errors.html#errors_error_code)\n",
      "createdAt": "2016-04-07T15:09:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjU1MTU1NTk=",
        "title": "Check error code instead of errno",
        "url": "https://github.com/node-swig/swig-templates/pull/15"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNzAzMjk2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNzAzMjk2NQ==",
      "body": "we will address when it becomes a need\n",
      "createdAt": "2016-04-07T18:11:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzM3OTE1NjU=",
        "title": "add request lifecycle hooks to requests",
        "url": "https://github.com/trendscenter/nodeapi/issues/67"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNzAzMzM3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNzAzMzM3Nw==",
      "body": "this is really a symptom of #50 not being completed.  #50 is a key objective for the team.  closing with focus on #50\n",
      "createdAt": "2016-04-07T18:13:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjQzMDU3OTM=",
        "title": "No access to coins_auth repo",
        "url": "https://github.com/trendscenter/nodeapi/issues/53"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNzAzMzgzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNzAzMzgzMQ==",
      "body": "introduction of `coins-validate` addresses this\n",
      "createdAt": "2016-04-07T18:14:44Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODI0ODU5MQ==",
        "title": "Add jshint and jscs code validation",
        "url": "https://github.com/trendscenter/nodeapi/issues/9"
      },
      "repository": {
        "nameWithOwner": "trendscenter/nodeapi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNzE4ODIxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNzE4ODIxNw==",
      "body": "thanks @glennjones!  i'll give it a try!\n",
      "createdAt": "2016-04-08T02:52:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY0MDkyNzU=",
        "title": "Question Regarding produced swagger definitions",
        "url": "https://github.com/hapi-swagger/hapi-swagger/issues/258"
      },
      "repository": {
        "nameWithOwner": "hapi-swagger/hapi-swagger"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNzQ3NjUyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNzQ3NjUyNg==",
      "body": "closing pending further activity\n",
      "createdAt": "2016-04-08T15:21:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA2MDEzNDM=",
        "title": "Attempted fix for issue #137",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/142"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwNzQ3Njg0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwNzQ3Njg0OA==",
      "body": "@aaronmccall, can you quick fix this?\n",
      "createdAt": "2016-04-08T15:22:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTI1NjI0Mjg=",
        "title": "Improve renderSubview/registerSubview docs | closes #104",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/152"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODA4NzE1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODA4NzE1Ng==",
      "body": "if your lib needs pojo and some sort of clean/serialized content, most likely you will have to do some wrapping or proxying of your own.  if you have an explicit suggestion on what &-view can do to help, please let us know\n",
      "createdAt": "2016-04-10T22:52:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTM3MTg4OTA=",
        "title": "Possible fix to template engines that attempt to copy the getter-laden context from going crazy ",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/147"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODA4NzIxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODA4NzIxMA==",
      "body": "@orenmizr, did you figure out what was up?\n",
      "createdAt": "2016-04-10T22:53:20Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDUwMzA5MDU=",
        "title": "deep nested subviews issue of re-rendering",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/145"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODA4NzMyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODA4NzMyNw==",
      "body": "sorry for the late response. `.extends` is all we offer at this point.  hopefully you found a way to get what you needed!\n",
      "createdAt": "2016-04-10T22:55:35Z",
      "issue": {
        "id": "MDU6SXNzdWU5MDg5MDkzNA==",
        "title": "Extending multiple classes",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/131"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODA4NzY1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODA4NzY1Mg==",
      "body": "this should be fixed now.  i at some point added the `_upsert` and `_downsert` of the bindings\n",
      "createdAt": "2016-04-10T22:57:33Z",
      "issue": {
        "id": "MDU6SXNzdWU4NDY2MjcxOA==",
        "title": "Subviews are not re-rendered on subsequent render() calls in same context",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/126"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODEzODA3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODEzODA3MQ==",
      "body": "thanks @dschissler :)  shouldn't be an issue if our build and tests pass!  ampersand-view tests do run in-browser\n",
      "createdAt": "2016-04-11T03:01:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjU5MjQ4ODg=",
        "title": "Update jsdom to version 8.3.1 🚀",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/161"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODEzODI3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODEzODI3MA==",
      "body": "i always test prepublish too!\n",
      "createdAt": "2016-04-11T03:01:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjU5MjQ4ODg=",
        "title": "Update jsdom to version 8.3.1 🚀",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/161"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODQzMTUyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODQzMTUyMA==",
      "body": "whoa!  ok, turns out it doesn't sym link them, but it does create an index file where that `requires` in the other path! ok.  it was just a little misleading.  i will update the docs.\n",
      "createdAt": "2016-04-11T16:16:26Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDcwNjMyODc=",
        "title": "added packages to packages/ folder but `bootstrap` does not link them",
        "url": "https://github.com/lerna/lerna/issues/98"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODUyMzQ1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODUyMzQ1MQ==",
      "body": "mother of pete.  ya, it's in a parent dir.  hmm.  is that correct behavior?  i expected that it didnt traverse beyond the scope of the open folder root.\n",
      "createdAt": "2016-04-11T19:43:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDcyMzMxOTg=",
        "title": "\"Disable when no ESLint config is found\" is not honored",
        "url": "https://github.com/AtomLinter/linter-eslint/issues/529"
      },
      "repository": {
        "nameWithOwner": "AtomLinter/linter-eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODUyOTg5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODUyOTg5MQ==",
      "body": "Ah, I c! In retrospect that makes perfect sense. Thanks all :)\n",
      "createdAt": "2016-04-11T19:56:04Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDcyMzMxOTg=",
        "title": "\"Disable when no ESLint config is found\" is not honored",
        "url": "https://github.com/AtomLinter/linter-eslint/issues/529"
      },
      "repository": {
        "nameWithOwner": "AtomLinter/linter-eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwODU3MTUxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwODU3MTUxNg==",
      "body": "that's pretty cool, @ahfarmer!\n",
      "createdAt": "2016-04-11T21:30:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc1ODM1MDA=",
        "title": "Add `lerna changelog`",
        "url": "https://github.com/lerna/lerna/pull/29"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwOTE0MTc4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwOTE0MTc4Nw==",
      "body": "> Does it happen consistently? \n\nyep!\n\n>  At the same place? \n\nyep!\n\n> With other scripts?\n\nwill report back\n\n> How do you start node.js and/or the debugger?\n\n`node debug my-script`\n\ni will report back with the full text.\n\nthx!\n",
      "createdAt": "2016-04-12T23:05:04Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDc1NjIwNTg=",
        "title": "node debug setBreakpoint throws a TypeError on set attempt",
        "url": "https://github.com/nodejs/node/issues/6156"
      },
      "repository": {
        "nameWithOwner": "nodejs/node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwOTE3MTE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwOTE3MTE4NQ==",
      "body": "Update on the two last issues:\n\n> [does setBreakpoint fail] With other scripts?\n\nsetBreakpoint **is confirmed working** with other scripts.  i tried a few variations to try and emulate.  i tried variations of sync/async code (timeouts and promises), IIFEs, nested closures, deep require chains, etc.\n\nthis would seem to indicate that there is some property of the execution that `setBreakpoint` expects which may be an invalid/incomplete assumption.\n\nthe failing `setBreakpoint`, as reported, fails on _valid, functional, production code_, with coverage through that file. i understand this GH issue doesn't do much good if i don't provide you an executable stub demonstrating the failure, however, the failure is present.  :/\n\n> How do you start node.js and/or the debugger?\n\ni was wrong in the first response. it's actually a `mocha debug` command.  i am converting these to be `tape` tests, however, the repo designer hardwired in the tests to a private database, so I unfortunately cannot say \"here's the repo, go run this command.\" The code is open source [here](https://github.com/MRN-Code/quarterback/tree/master/packages/steelpenny), but the DB and/or ORM are not yet mocked.\n\nfull command:\n\n`mocha debug --timeout=10000 -R spec src/test/integration/keys.js`\n\nfinal words: i have it as a short- mid- term goal to do my test-db decoupling.  when that is complete, the issue will be sharable and reproducible. :)\n",
      "createdAt": "2016-04-13T01:03:41Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDc1NjIwNTg=",
        "title": "node debug setBreakpoint throws a TypeError on set attempt",
        "url": "https://github.com/nodejs/node/issues/6156"
      },
      "repository": {
        "nameWithOwner": "nodejs/node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwOTUzNDgxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwOTUzNDgxNw==",
      "body": "@wraithgar, what's the latest here?\n",
      "createdAt": "2016-04-13T16:36:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTY3ODU5Njg=",
        "title": "update testing framework",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/154"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIwOTUzNTA0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIwOTUzNTA0Mg==",
      "body": "follow up doc commit landing immediately after PR closure\n",
      "createdAt": "2016-04-13T16:37:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTI1NjI0Mjg=",
        "title": "Improve renderSubview/registerSubview docs | closes #104",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/152"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxMDg4NzY3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxMDg4NzY3Ng==",
      "body": "this occurs on mobile devices only, specifically, iPhone 4.  tried using default `<html>` as well as suggested in the examples\n",
      "createdAt": "2016-04-16T20:14:27Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDg4ODY1Nzg=",
        "title": "container overflow",
        "url": "https://github.com/gavruk/angular-card/issues/20"
      },
      "repository": {
        "nameWithOwner": "gavruk/angular-card"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxMDkwNTc3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxMDkwNTc3NA==",
      "body": "the child of the `card-container` doesn't honor/compute it's height correctly. e.g., the card-container may be `135px` computed height, yet the child `jp-container` computes a 200px. height\n",
      "createdAt": "2016-04-16T21:33:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDg4ODY1Nzg=",
        "title": "container overflow",
        "url": "https://github.com/gavruk/angular-card/issues/20"
      },
      "repository": {
        "nameWithOwner": "gavruk/angular-card"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxMTA0MTE0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxMTA0MTE0MA==",
      "body": "Ya, thanks guys.  \n",
      "createdAt": "2016-04-17T15:06:45Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY3NDQ4NDY=",
        "title": "Lack of clarity of template inputs and how to customize interface",
        "url": "https://github.com/swagger-api/swagger-codegen/issues/2522"
      },
      "repository": {
        "nameWithOwner": "swagger-api/swagger-codegen"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxMTExMTY5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxMTExMTY5NQ==",
      "body": "Good point.  Thx\n",
      "createdAt": "2016-04-17T20:48:54Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDg4ODY1Nzg=",
        "title": "container overflow",
        "url": "https://github.com/gavruk/angular-card/issues/20"
      },
      "repository": {
        "nameWithOwner": "gavruk/angular-card"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxMTE1MjE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxMTE1MjE4NQ==",
      "body": "Drop a couple PRs over there and well get you set up\n",
      "createdAt": "2016-04-18T01:50:49Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTA3MTY4MA==",
        "title": "No longer maintained — Do you want to help?",
        "url": "https://github.com/paularmstrong/swig/issues/628"
      },
      "repository": {
        "nameWithOwner": "paularmstrong/swig"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxMjYwMzk2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxMjYwMzk2Nw==",
      "body": "`lerna some-action --log-level=verbose/warn/error`  .  I wanted verbose output to see what's going on behind the scenes\n",
      "createdAt": "2016-04-20T20:59:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDc0ODA3NzY=",
        "title": "[Feature] add logger, log-levels etc",
        "url": "https://github.com/lerna/lerna/issues/99"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxMzE2MzYzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxMzE2MzYzOA==",
      "body": "FYI, node `4.4.2`\n",
      "createdAt": "2016-04-21T23:54:57Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTAyMjIyMjk=",
        "title": "node is unhappy with non Error wrapped promise rejections ",
        "url": "https://github.com/axios/axios/issues/306"
      },
      "repository": {
        "nameWithOwner": "axios/axios"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDQ2NjQzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDQ2NjQzNA==",
      "body": "sorry for missing it earlier, @janpaul123.  looks fine to me :) +1\n",
      "createdAt": "2016-04-25T18:11:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjY2NzIzNzA=",
        "title": "Bump ampersand-state to ^5.0.1",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/165"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDQ4MjI3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDQ4MjI3MQ==",
      "body": "full disclosure, i had issues with `electron-rebuild`, so i forked off and created [ionizer](https://www.npmjs.com/package/ionizer).  one of the reasons to do so was because the `rebuild` processes weren't run with the electron node, and some packages' rebuild scripts checked `process.versions` etc to do rebuilds, which consequently ended up never rebuilding with the target `node` version. `ionizer` makes sure to execute `Electron` as node before running any node-ish cmds\n",
      "createdAt": "2016-04-25T19:07:31Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTA5NTIyNjU=",
        "title": "incorrect prebuilt binary being installed for current node version",
        "url": "https://github.com/Level/leveldown/issues/278"
      },
      "repository": {
        "nameWithOwner": "Level/leveldown"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDU2ODAwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDU2ODAwNQ==",
      "body": "yep, now i'm just outright in full support. keep bundle sizes lower, improve cross-dep deployments.  i was short-sighted before, apologies.  the recent npm unpublish fiasco, &-state upgrade version debacle, and lodash v3 => v4 bumps are all advocating examples.\n\n@AmpersandJS/core-team, something to consider.  long term, it would be nice to migrate to a [lerna](https://github.com/kittens/lerna)-like approach for version control & deployment.\n",
      "createdAt": "2016-04-26T00:04:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjM2MzAxMjY=",
        "title": "Provide a combined `ampersand` module",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/219"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDU2ODA4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDU2ODA4NQ==",
      "body": "please ref https://github.com/AmpersandJS/ampersand-state/issues/219\n",
      "createdAt": "2016-04-26T00:05:15Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTQ0MjE1MzY=",
        "title": "Consider a monorepo",
        "url": "https://github.com/AmpersandJS/ampersand/issues/120"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDU3MzkyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDU3MzkyNw==",
      "body": "hey, @ConneXNL, if you can throw an example up on requirebin, that would be excellent!  without an example, i don't have much to work off of.  thanks.  reopen if you think you can post one up.  thanks!\n",
      "createdAt": "2016-04-26T00:44:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDgyMTY1OTY=",
        "title": "reset() throwing errors since I build from ES6",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/164"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDU3NDQ2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDU3NDQ2Ng==",
      "body": "@bryanspears, looks like you had an open PR for this issue.  what was the scoop w/ that?\n",
      "createdAt": "2016-04-26T00:48:42Z",
      "issue": {
        "id": "MDU6SXNzdWU5NTc1NTcxNA==",
        "title": "Falsey values do not trigger subview's waitFor condition",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/137"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDYyNDU5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDYyNDU5Nw==",
      "body": "`v10.0.0` published\n",
      "createdAt": "2016-04-26T06:04:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjY2NzIzNzA=",
        "title": "Bump ampersand-state to ^5.0.1",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/165"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDc2MzY5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDc2MzY5NA==",
      "body": "@ralphtheninja. good thought.  The above cmd fails, as explained, but so does the ionizer command.  The reason I'm skeptical about the hash being the root cause is because ionizer uses https://github.com/cdaringe/squish-squash, so I have high confidence that the right node would be used.  I'll write a test over in that repo to test your suggestion!\n",
      "createdAt": "2016-04-26T14:28:51Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTA5NTIyNjU=",
        "title": "incorrect prebuilt binary being installed for current node version",
        "url": "https://github.com/Level/leveldown/issues/278"
      },
      "repository": {
        "nameWithOwner": "Level/leveldown"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDgxMjkxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDgxMjkxMg==",
      "body": "are we sure that it would be a major?  no breaking changes would occur. dep swaps would occur, but no functionality or API change would be expected.  IMHO, it's a patch, unless there's something im missing from the &-events bump.\n",
      "createdAt": "2016-04-26T17:05:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjUxOTc0MjA=",
        "title": "Remove need for lodash/bind; Optimize",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/236"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDkzNTU1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDkzNTU1NA==",
      "body": "looks good.  +1.  didn't run tests locally tho\n",
      "createdAt": "2016-04-27T01:08:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Njc5NTIzODc=",
        "title": "Upgrade lodash to 4.0",
        "url": "https://github.com/AmpersandJS/ampersand-model/pull/75"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-model"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDkzNTU4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDkzNTU4Ng==",
      "body": "+1\n",
      "createdAt": "2016-04-27T01:09:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjY2NzIyODk=",
        "title": "Bump ampersand-state to ^5.0.1",
        "url": "https://github.com/AmpersandJS/ampersand-model/pull/74"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-model"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNDk3Mjg5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNDk3Mjg5OQ==",
      "body": "well, i wrote [the test](https://github.com/cdaringe/squish-squash/blob/master/test/index.js#L73).  i regret to inform that `#!` still does honor the squashed version of node.  bummer.\n\nso, still seeking tips!  thx.\n",
      "createdAt": "2016-04-27T05:25:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTA5NTIyNjU=",
        "title": "incorrect prebuilt binary being installed for current node version",
        "url": "https://github.com/Level/leveldown/issues/278"
      },
      "repository": {
        "nameWithOwner": "Level/leveldown"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNTEzMjcxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNTEzMjcxMA==",
      "body": "@Raynos, are your thoughts that `istanbul-child_process` would essentially modify `child_process` s.t. all calls, such as `cp.spawn(cmd, [ args... ])`, would first be intercepted by `istanbul-child_process` & have the coverage bits injected, then run the modified child process?\n\nit sounds straightforward enough.  however, how do the child coverage stats get aggregated with the parent coverage stats?\n",
      "createdAt": "2016-04-27T16:06:21Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjc1MTM3Mw==",
        "title": "instrumentation for multi-process code",
        "url": "https://github.com/gotwarlost/istanbul/issues/199"
      },
      "repository": {
        "nameWithOwner": "gotwarlost/istanbul"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNTI3Nzk1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNTI3Nzk1MQ==",
      "body": "@Raynos waaaat\n\n<img src=\"https://media.giphy.com/media/Mnw7GYKVJjX20/giphy.gif\"/>\n\nshould this issue be closed then, or does istanbul folks want to integrate said feature into this lib?\n",
      "createdAt": "2016-04-28T01:05:41Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjc1MTM3Mw==",
        "title": "instrumentation for multi-process code",
        "url": "https://github.com/gotwarlost/istanbul/issues/199"
      },
      "repository": {
        "nameWithOwner": "gotwarlost/istanbul"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNTQzOTYyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNTQzOTYyNQ==",
      "body": "<img src=\"https://media.giphy.com/media/LJa3mbWwYiOJy/giphy.gif\" />\n",
      "createdAt": "2016-04-28T14:19:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTczNzAyNjk=",
        "title": "fixes #596 - handle unexpected/unhandled async error",
        "url": "https://github.com/redux-form/redux-form/pull/602"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNTg1NjA3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNTg1NjA3NQ==",
      "body": "hey @juliangruber, apologies, can you specify further?  which do you mean?  thanks!\n",
      "createdAt": "2016-04-29T19:31:00Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTA5NTIyNjU=",
        "title": "incorrect prebuilt binary being installed for current node version",
        "url": "https://github.com/Level/leveldown/issues/278"
      },
      "repository": {
        "nameWithOwner": "Level/leveldown"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNjA3MDMzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNjA3MDMzNA==",
      "body": "~~sorry, i should have included that. v 3.9.2 w/ google~~ [edit: that was included ^^].  is \"google\" the information you are seeking?\n",
      "createdAt": "2016-05-01T20:36:36Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTEwMjAxNTE=",
        "title": "minConfidence is not honored",
        "url": "https://github.com/nchaulet/node-geocoder/issues/170"
      },
      "repository": {
        "nameWithOwner": "nchaulet/node-geocoder"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNjA4Mjc1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNjA4Mjc1Mg==",
      "body": "i'm probably not going to come back to this.  i'm ok to close.  sorry, i definitely want to figure it out for everyone, i'm just overcommitted ATM!\n",
      "createdAt": "2016-05-01T23:58:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjAyNjc2MjM=",
        "title": "protect user input",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/pull/33"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNjA4ODk5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNjA4ODk5Mw==",
      "body": "@nchaulet... you rock! 👍 \n",
      "createdAt": "2016-05-02T01:14:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTEwMjAxNTE=",
        "title": "minConfidence is not honored",
        "url": "https://github.com/nchaulet/node-geocoder/issues/170"
      },
      "repository": {
        "nameWithOwner": "nchaulet/node-geocoder"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNjA5MjM0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNjA5MjM0Ng==",
      "body": "do you need additional contributors, too?  looks like it's a one man show.  open to having other people join up?  may get some PRs thru and issues closed...\n",
      "createdAt": "2016-05-02T01:59:49Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTE5OTkyNzE=",
        "title": "Awesome Project! Milestones?",
        "url": "https://github.com/scottwrobinson/camo/issues/69"
      },
      "repository": {
        "nameWithOwner": "scottwrobinson/camo"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNjMyMzM3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNjMyMzM3MQ==",
      "body": "awesome! that's what i was hoping for :)\n",
      "createdAt": "2016-05-02T18:41:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTE4MDIyNjY=",
        "title": "nedb cross table support",
        "url": "https://github.com/scottwrobinson/camo/issues/68"
      },
      "repository": {
        "nameWithOwner": "scottwrobinson/camo"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNjMyNjY0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNjMyNjY0Mw==",
      "body": "yea, let me know your thoughts. i'd be happy to co-hack it out if you found it worth pursuit.\n",
      "createdAt": "2016-05-02T18:53:49Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTA2Mjg1ODI=",
        "title": "Enhanced validation options",
        "url": "https://github.com/scottwrobinson/camo/issues/67"
      },
      "repository": {
        "nameWithOwner": "scottwrobinson/camo"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNjczMjYyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNjczMjYyMg==",
      "body": "np.\n\nhere: https://github.com/cdaringe/wavy-test\n\nclone it.  npm install _twice_.  im on npm 2.15 FTR\n",
      "createdAt": "2016-05-04T03:22:59Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTA0Mjc3MjU=",
        "title": "postinstall hook flips out due to wavy symlink",
        "url": "https://github.com/kolodny/wavy/issues/6"
      },
      "repository": {
        "nameWithOwner": "kolodny/wavy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNzMxNTUwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNzMxNTUwOA==",
      "body": "this definitely threw me for a loop, too.  I did not expect the changes timeout to be different than the primary\n",
      "createdAt": "2016-05-06T00:12:19Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODE5Mjc2MA==",
        "title": "HTTP+filtered changes fails with ESOCKETTIMEDOUT on large CouchDB changeset",
        "url": "https://github.com/pouchdb/pouchdb/issues/3550"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNzQ1ODMwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNzQ1ODMwMA==",
      "body": "Agreed.\n",
      "createdAt": "2016-05-06T14:40:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTMzNTA5MTE=",
        "title": "electron support",
        "url": "https://github.com/AndreasMadsen/clarify/issues/6"
      },
      "repository": {
        "nameWithOwner": "AndreasMadsen/clarify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNzY3NzM0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNzY3NzM0NA==",
      "body": "tests pass locally. +1\n",
      "createdAt": "2016-05-07T23:44:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjgwNzY5MTM=",
        "title": "Bump dependencies including lodash v4",
        "url": "https://github.com/AmpersandJS/ampersand-app/pull/8"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNzY3NzM4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNzY3NzM4Ng==",
      "body": "@samhashemi, no rigid next steps. when the PRs are ready and the deps g2g, ping us and we'll get 'em published.  unifying the lodash dep is simple enough :)\n",
      "createdAt": "2016-05-07T23:45:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjgwNzY5MTM=",
        "title": "Bump dependencies including lodash v4",
        "url": "https://github.com/AmpersandJS/ampersand-app/pull/8"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxNzcyOTgzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxNzcyOTgzOQ==",
      "body": "+1\n",
      "createdAt": "2016-05-08T16:06:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjkyNjA0NjE=",
        "title": "Bumps lodash to v4, also bumps other deps",
        "url": "https://github.com/AmpersandJS/ampersand-collection-view/pull/44"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxODM0NDEwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxODM0NDEwMw==",
      "body": "+1, looks good to me.\n\n@wraithgar, the `zuul` issues have long been a thing.\n\nwhy not load the zuul credentials into env vars in travis, then on prerun, generate a `~/.zuulrc` on-the-fly?  would that not get our PRs passing?\n",
      "createdAt": "2016-05-11T02:11:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Njk1Nzk5NDU=",
        "title": "Add autofocus option",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/73"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxODM1OTc3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxODM1OTc3Nw==",
      "body": "hello:\n\ni still have this issue.  are we confident that it is resolved?  i will provide some context to demonstrate my repeated issue:\n- im on `\"coveralls\": \"^2.11.9\"`, per [here](https://github.com/cdaringe/pouchy/blob/master/package.json#L36)\n- my CI fails on the latest build, per [here](https://codeship.com/projects/103658/builds/14625748)\n- failing command: `cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js`\n\nthe failure output is:\n\n``` js\n/home/rof/src/github.com/cdaringe/pouchy/node_modules/coveralls/lib/fetchGitData.js:69\nvar items = response.match(REGEX_COMMIT_DETAILS).slice(1);\n^\n\nTypeError: Cannot read property 'slice' of null\nat /home/rof/src/github.com/cdaringe/pouchy/node_modules/coveralls/lib/fetchGitData.js:69:53\nat ChildProcess.exithandler (child_process.js:204:7)\nat emitTwo (events.js:87:13)\nat ChildProcess.emit (events.js:172:7)\nat maybeClose (internal/child_process.js:818:16)\nat Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)\n```\n\nthanks!\n",
      "createdAt": "2016-05-11T04:37:10Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTY3NTA4OQ==",
        "title": "Failure on git commits that lack email",
        "url": "https://github.com/nickmerwin/node-coveralls/issues/86"
      },
      "repository": {
        "nameWithOwner": "nickmerwin/node-coveralls"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxODM3NzM0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxODM3NzM0MQ==",
      "body": "hello:\n\n~~the latest commit in my linked package suffers the issue.  it was working last week, with no change to the dependencies.  i'm sorry that the codeship link isn't public. :$~~\n\n~~as proof of claim (not that there's trust issues or anything :) ), here's a snapshot showing the github commit:~~\n\n~~<img width=\"866\" alt=\"screen shot 2016-05-11 at 12 47 45 am\" src=\"https://cloud.githubusercontent.com/assets/1003261/15172294/53363080-1712-11e6-9b41-64f97dea523d.png\">~~\n\nthe commit listed in the above screenshot apparently _doesn't exist in my repo_?  i didn't meddle with history.  how peculiar.  well, my repo's `master` HEAD checks out, and coverage seems to be working there.  i will revisit this if i stumble upon any further clues as to the chain of events producing a mysterious commit and hence the broken coveralls script.\n\nthanks for your response!\n",
      "createdAt": "2016-05-11T06:55:10Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTY3NTA4OQ==",
        "title": "Failure on git commits that lack email",
        "url": "https://github.com/nickmerwin/node-coveralls/issues/86"
      },
      "repository": {
        "nameWithOwner": "nickmerwin/node-coveralls"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxODU5MzQyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxODU5MzQyNg==",
      "body": "+1\n",
      "createdAt": "2016-05-11T21:19:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjkyNjEzNTE=",
        "title": "Bump lodash to v4",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/241"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxODY0MTg1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxODY0MTg1MA==",
      "body": "maybe remove and re-add the link on every postinstall? or, point the link to the dir it resides on pre-install, then on post install move it's target back up a dir?\n",
      "createdAt": "2016-05-12T02:14:04Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTA0Mjc3MjU=",
        "title": "postinstall hook flips out due to wavy symlink",
        "url": "https://github.com/kolodny/wavy/issues/6"
      },
      "repository": {
        "nameWithOwner": "kolodny/wavy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTExMjcwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTExMjcwNw==",
      "body": "if tests pass locally for the maintainer, +1!  straightforward enough\n",
      "createdAt": "2016-05-13T17:48:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjgwNzg2ODU=",
        "title": "Bump dependencies including lodash v4.",
        "url": "https://github.com/AmpersandJS/ampersand-router/pull/52"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-router"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTI1OTI3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTI1OTI3OA==",
      "body": "hi all:\n\ni have a failing example to provide.  mine does _not_ concurrently use multiple processes in the application test (just one parent and child at a time), _but_, it does work with `node test/` and it does not work w/ `nyc`.\n\nsteps:\n1. clone https://github.com/MRN-Code/coinstac-server-core/tree/25fa7f2a5e1491afd04df5c0cad8ff5adb1cd44a\n2. npm i, per usual\n3. compare output of `npm test` and `npm run brokentest`.  `brokentest` is a nyc run.\n   1. you can see that `nyc` simply haults on the [`spawn` call](https://github.com/MRN-Code/coinstac-server-core/blob/25fa7f2a5e1491afd04df5c0cad8ff5adb1cd44a/test/executable.js#L24) while `node test/` has no issue with it.\n\nhopefully that can provide some value!\n\nthanks! v/r,\n\nchris\n",
      "createdAt": "2016-05-15T00:34:15Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQxODUyOTk=",
        "title": "Support Q => multiple child_processes seem to cause problems",
        "url": "https://github.com/istanbuljs/nyc/issues/257"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTI1OTM5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTI1OTM5MA==",
      "body": "oh, and `5.11.0` and `2.15.4`.  yea, running npm2 w/ node5...\n",
      "createdAt": "2016-05-15T00:37:40Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQxODUyOTk=",
        "title": "Support Q => multiple child_processes seem to cause problems",
        "url": "https://github.com/istanbuljs/nyc/issues/257"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTI1OTkxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTI1OTkxMQ==",
      "body": "hi @jessepollak!  thanks, sorry for the delayed response.  the card expanded outside of it's container element in this case.  is there anything requiring setting to make it fully self-contained/responsive?  perhaps from your point of view it is supposed to, it's just not what i experienced.  i did try and remove our own CSS to isolate the issue from our content.  again, it was _only_ on iOS devices--it did scale per expectation on other devices!  thanks again!\n",
      "createdAt": "2016-05-15T00:55:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDkwMDYzNTc=",
        "title": "card container overflows onto for on small screens",
        "url": "https://github.com/jessepollak/card/issues/243"
      },
      "repository": {
        "nameWithOwner": "jessepollak/card"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTI5MDAxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTI5MDAxNg==",
      "body": "PouchDB is not 6.x compatible, so I don't expect the tests to pass there\n:/. My installed version matches the package.json.\n\nThanks for the response!\nOn May 15, 2016 8:22 AM, \"Mark Wubben\" notifications@github.com wrote:\n\n> @cdaringe https://github.com/cdaringe FWIW, Node.js 6.1.0 and npm\n> 3.9.0, both work fine (well the test fail, but they fail for both). On OSX.\n> \n> Could you check which nyc version is _actually_ installed? (See\n> node_modules/nyc/package.json).\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/bcoe/nyc/issues/257#issuecomment-219288655\n",
      "createdAt": "2016-05-15T14:48:51Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQxODUyOTk=",
        "title": "Support Q => multiple child_processes seem to cause problems",
        "url": "https://github.com/istanbuljs/nyc/issues/257"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTI5MTcyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTI5MTcyNw==",
      "body": "here's the expected workflow:\n\n![install-process mov](https://cloud.githubusercontent.com/assets/1003261/15275015/e5752c62-1a7d-11e6-9dfd-d2c511d93fb2.gif)\n",
      "createdAt": "2016-05-15T15:18:52Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQxODUyOTk=",
        "title": "Support Q => multiple child_processes seem to cause problems",
        "url": "https://github.com/istanbuljs/nyc/issues/257"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTMzMzk1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTMzMzk1MA==",
      "body": "if it's of any help, I do know that my processes are very slow to kill network connections.  pouchdb doesn't kill sockets very well, so sometimes it takes a few seconds for the process to exit.  it _does_ exit eventually always, and within a couple seconds.  i'd be hard pressed to think `nyc` even bothers with any of that stuff, but just trying to think of ideas! :)\n",
      "createdAt": "2016-05-16T02:02:48Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQxODUyOTk=",
        "title": "Support Q => multiple child_processes seem to cause problems",
        "url": "https://github.com/istanbuljs/nyc/issues/257"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTYwODMxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTYwODMxNQ==",
      "body": "still debating, folks?  just curious :)\n",
      "createdAt": "2016-05-17T03:07:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjYwMjU4NTM=",
        "title": "add FAQ with our first FAQ!",
        "url": "https://github.com/lerna/lerna/pull/100"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTc4MjM4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTc4MjM4Nw==",
      "body": "until i can provide a more concise and shareable example, closing. thx for the first pass though :) 👍 \n",
      "createdAt": "2016-05-17T16:56:09Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTMxMzA3Nzc=",
        "title": "node leveldb pouch instance complains on changes",
        "url": "https://github.com/pouchdb/pouchdb/issues/5129"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTc4NDYwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTc4NDYwNQ==",
      "body": "it may be more effort than desired, by maxodgen and mafintosh have a nifty solution to this sort of thing.  essentially\n- make a really basic barebones docker image,\n- on connection to SOME_SITE, run an image instance\n- connect running docker image terminal to webterminal, and finally\n- on website close, kill the running docker image instance\n\nin this regard, you can get isolated pouchdb-servers/couchdb-servers booted up independently and isolated from each other.\n\ni made one:\nhttp://cdaringe.com/c/pub/npm/\n\nthey made one:\nhttps://github.com/maxogden/get-dat\n\nit's seriously awesome, and all documented here: https://github.com/maxogden/get-dat\n\nfood for thought.  just throwing out suggestions\n",
      "createdAt": "2016-05-17T17:03:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTAzNTgzMjI=",
        "title": "Remove references to IrisCouch",
        "url": "https://github.com/pouchdb/pouchdb/issues/5082"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIxOTgyNzM3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIxOTgyNzM3Ng==",
      "body": "looks good to me!  loving all the 🔴 lines. :)  @wraithgar's PR is merged, so hopefully he's cool with proceeding now.\n",
      "createdAt": "2016-05-17T19:29:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjUxOTc0MjA=",
        "title": "Remove need for lodash/bind; Optimize",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/236"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDExNTExMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDExNTExMg==",
      "body": "in fact, i added a `setTimeout(() => server.stop(failOnErr), 100)`, and i can no longer produce the failure mode.\n",
      "createdAt": "2016-05-18T18:23:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU1NTgwODc=",
        "title": "socket hangups",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/issues/41"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDM1NjY2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDM1NjY2Mw==",
      "body": "thanks @gr2m, i appreciate that!  i think that my timeout hack in here might cause more grief than help.  i'll hit-up the pouchdb fellas on pouchdb-server or express-pouchdb and see if they can perhaps add a SIGINT intercept or something and gracefully shutdown, and then from here we could just send that signal?\n",
      "createdAt": "2016-05-19T15:16:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU1NTgwODc=",
        "title": "socket hangups",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/issues/41"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDM1Nzg3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDM1Nzg3MQ==",
      "body": "ps, what's the hoodie team doing if no longer pouch?  you guys migrating to rethink?  i may have to at somepoint, just to keep the network chatter down :(\n",
      "createdAt": "2016-05-19T15:20:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU1NTgwODc=",
        "title": "socket hangups",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/issues/41"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDM2ODMxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDM2ODMxNQ==",
      "body": "hey @scottwrobinson, awesome! unfortunately I dropped out of the project that was camo dense, and consequently dropped the vested interest. lots of projects on the plate ATM, but perhaps if I circle back around, I'd be delighted to drop some commits in!\n",
      "createdAt": "2016-05-19T15:52:24Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTE5OTkyNzE=",
        "title": "Awesome Project! Milestones?",
        "url": "https://github.com/scottwrobinson/camo/issues/69"
      },
      "repository": {
        "nameWithOwner": "scottwrobinson/camo"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDQ2NjA4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDQ2NjA4Nw==",
      "body": "hmm.  interesting.  in this case, its `POST db/_bulk_docs`'ing when being asked to replicate down.  seems to still work OK, but it does seem _odd_ that it would even try a POST vs just the `GET` which follows immediately after.\n",
      "createdAt": "2016-05-19T22:08:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTUzMTIzMzk=",
        "title": "one-direction sync makes unexpected POST request to end-point",
        "url": "https://github.com/pouchdb/pouchdb/issues/5169"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDQ2OTg4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDQ2OTg4MQ==",
      "body": "yea, i was thinking about that as well. the reason i opted to file it here is because if it's done here (express-pouchdb), both packages can benefit from a graceful shutdown.  it would perhaps be a bummer if we did it in pouchdb-server, then users here eventually wanted it.  i can't imagine anyone being disappointed about graceful shutdown, unless of course they had long running requests.  could be possibly be nested behind a flag on pdbs (`--graceful/-g`) and a simple config option here `{ graceful: true }`.  just thinkin out loud\n",
      "createdAt": "2016-05-19T22:28:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU3NjU3NTU=",
        "title": "feature request: graceful shutdown",
        "url": "https://github.com/pouchdb/express-pouchdb/issues/316"
      },
      "repository": {
        "nameWithOwner": "pouchdb/express-pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDQ4NjU4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDQ4NjU4NA==",
      "body": "hey @nolanlawson!\n\nif you are replicating with `live` (correct me if i'm wrong) then a 'complete' event never gets fired.  that's why in pouchy i implement a `hasLikelySynced` event that attempts to say \"hey, we made the effort, and if a remote db was hit and we saw some action, emit hasLikelySynced\".\n\nbut regardless, the problem is that I don't have a way to shut down express gracefully to begin with.  so in your `.on('complete', ... )` example, you assume, a graceful shutdown has happened, but that is in-and-of-itself that which I cannot guarantee or do.  i can stop the server, but not gracefully with the existing API.  if there is already an inflight request and i stop the server, the only place to catch the server teardown would be in a `.on('error', ...)`, handler, and i can't even guarantee that (because the request might _actually_ succeed!).  tricky, i know.\n\nconsider these steps:\n- init remote db-server\n- init local db\n- init local-remote replication\n- do some i/o and tests\n- teardown local db\n- teardown remote db-server\n\nin this series of events, when i teardown the local-db, in pouch, there's no way for me in live mode to know if there are outbound http requests happening through the changes api. hence, i just `cancel` and `destroy`.  there still may very well be outbound requests.  when i go to teardown the remote db-server, i risk interrupting handling such a request, even if i don't care about it anymore!\n\nwhat i do now to avoid that whole situation is simply `.cancel()` as you mention, however, i do a sloppy `setTimeout(..., 100)` to hope that any outbound HTTP requests have finished their cycle, and finally teardown the server after waiting a little bit.\n\ndoes that clarify?  was it already clear?  sorry for the verbosity.\n",
      "createdAt": "2016-05-20T00:18:13Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU3NjU3NTU=",
        "title": "feature request: graceful shutdown",
        "url": "https://github.com/pouchdb/express-pouchdb/issues/316"
      },
      "repository": {
        "nameWithOwner": "pouchdb/express-pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDY1MTA1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDY1MTA1Ng==",
      "body": "hey @samhashemi, sorry to give that impression :/ my experience has told me that we've had the implicit practice of letting the package maintainer take charge of merge/publish.  im not sure who does -state, but i'm sure it was just a case of \"too-busy.\"  thanks for following up.  we'll get it taken care of.\n",
      "createdAt": "2016-05-20T16:17:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjkyNjEzNTE=",
        "title": "Bump lodash to v4",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/241"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDY1MTMwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDY1MTMwOQ==",
      "body": "@pgilad let me know if you want me to publish\n",
      "createdAt": "2016-05-20T16:19:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjkyNjEzNTE=",
        "title": "Bump lodash to v4",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/241"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDY2Mjk1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDY2Mjk1Ng==",
      "body": "@samhashemi, it should be listed on the packages (like [here](https://github.com/AmpersandJS/ampersand-view/#ampersand-view))\n@latentflip i'll add ya as such ^^ for this package (even in presence of the backseat comment for now, just to remove ambiguity).  if we need to swap out or elect a new lead for this pkg, let's get a new thread goin!\n\ni'll publish this bad boy :)\n",
      "createdAt": "2016-05-20T17:06:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjkyNjEzNTE=",
        "title": "Bump lodash to v4",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/241"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDY2NDY5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDY2NDY5NQ==",
      "body": "`5.0.2` is up!\n",
      "createdAt": "2016-05-20T17:13:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjkyNjEzNTE=",
        "title": "Bump lodash to v4",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/241"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDcyMTYzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDcyMTYzNw==",
      "body": "i'm in the same boat, @latentflip.\n\n&-state is still, IMHO, one of the best x-env js Model utilities out there. per npm-stats, it still has a big user base too.\n\nhopefully someone can volunteer to shepherd it! i know @dhritzkiv hasn't done much in &-state specifically, but he has been absolutely instrumental in improving so many of our packages, I wonder if he'd have interest in joining up. :)\n",
      "createdAt": "2016-05-20T21:22:10Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTYwMTYzNDI=",
        "title": "New lead maintainer required",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/243"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDczNzU5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDczNzU5NA==",
      "body": "@AmpersandJS/community-leaders @AmpersandJS/core-team 👀 would you support inviting @dhritzkiv  to the team?\n\n@dhritzkiv, i think that's pretty much it. :)  obviously you're familiar with the contribution guidelines/rules/etc.  the only other todo would be having us assign npm rights and updating the &-js webpage.  if a couple teamsters give their blessing and you're willing, let's do it!\n",
      "createdAt": "2016-05-20T22:57:40Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTYwMTYzNDI=",
        "title": "New lead maintainer required",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/243"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDc0NTk0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDc0NTk0NA==",
      "body": "while i was at it, confirmed #5111 in the above (`v1.1.1`)\n",
      "createdAt": "2016-05-21T00:12:48Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTYwNjkwNzI=",
        "title": "feature request: add non-native promise support",
        "url": "https://github.com/electron/electron/issues/5633"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDc0ODQ0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDc0ODQ0Mg==",
      "body": "i tried doing some investigation on this, but am not fully grasping how the RPC server works.  i'd love to be able to debug and PR this, just not quite there yet!\n",
      "createdAt": "2016-05-21T00:43:53Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDczODkxMDQ=",
        "title": "promise reject in remote not work",
        "url": "https://github.com/electron/electron/issues/5111"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMDgwMDQyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMDgwMDQyMQ==",
      "body": "no kidding.  bummer. :/  thx,\n\n+1\n",
      "createdAt": "2016-05-21T21:08:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzA5NTUxNTg=",
        "title": "Bind `_onViewRemove` to view switcher instance",
        "url": "https://github.com/AmpersandJS/ampersand-view-switcher/pull/36"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view-switcher"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTAwMjI1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTAwMjI1OA==",
      "body": "right, i saw that in the coffeescript.  however, per the issue title, I was hoping consideration of non-native promise detection.  i was thinking that it could simply test for an instance of a .then prop, and if .then is a function. it does collide with pojos or other prototypes having a `.then` attribute.  perhaps testing for `.resolve` && `.reject` on the constructor would be more thorough or less likely to risk collisions.\n",
      "createdAt": "2016-05-23T14:49:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTYwNjkwNzI=",
        "title": "feature request: add non-native promise support",
        "url": "https://github.com/electron/electron/issues/5633"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTA2MTI4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTA2MTI4MQ==",
      "body": "thanks @daleharvey!  appreciate the quick follow up!  i don't mean to pester, however, can you clarify if i should expect hours/days/weeks for the upcoming release?\n",
      "createdAt": "2016-05-23T18:52:23Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTYxNjY3Mjg=",
        "title": "Node 6 is causing Security context: 0x8de4eac9fa9 <JS Object>#0# error",
        "url": "https://github.com/pouchdb/pouchdb/issues/5202"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTMxNzIxMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTMxNzIxMw==",
      "body": "+1\n",
      "createdAt": "2016-05-24T15:54:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzExOTY0OTg=",
        "title": "add disabled option",
        "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/18"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTQ4MjE5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTQ4MjE5NA==",
      "body": "re-cloning did the trick. how bizarre. thanks!\n",
      "createdAt": "2016-05-25T06:11:27Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTY2MjgxNzY=",
        "title": "unable to bootstrap on OSX",
        "url": "https://github.com/electron/electron/issues/5686"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTQ4NTg2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTQ4NTg2Nw==",
      "body": "shucks, travis fails.  i am still unable to get `bootstrap` to work fully on OSX _and_ a copy of debian.  arg.  regardless, this PR is nonetheless very simple.  perhaps someone can take a peek and clue me into why the `require('../is-promise')` isn't properly resolving?  can try and debug later too :)\n",
      "createdAt": "2016-05-25T06:36:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzEzMzQxMjg=",
        "title": "Support non-native promises",
        "url": "https://github.com/electron/electron/pull/5689"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTYzNzY3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTYzNzY3NQ==",
      "body": "yahoo! thanks @zcbenz \n",
      "createdAt": "2016-05-25T16:53:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzEzMzQxMjg=",
        "title": "Support non-native promises",
        "url": "https://github.com/electron/electron/pull/5689"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTY3NzcwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTY3NzcwNQ==",
      "body": "Hi all!\n\nI have this issue as well.  I have a script that is reproducible too.\n\nsystem info:\n- node 4.4.3\n- osx/mavericks\n- npm 2.15.1\n\nsteps to reproduce:\n- repo @ commit hash: https://github.com/MRN-Code/coinstac-client-core/commit/5a8c711736083dd29259bb69f706a5d768c4bdca\n- clone, `npm i`\n- `node-debug test/demo.js`\n\nFYI, it _does_ work with nodes built-in cli debugger, e.g. `node debug test/demo.js`\n\n```\ncdieringer@Snapper-osx:~/node/coinstac-client-core$ node-debug test/demo.js\nNode Inspector v0.12.8\nVisit http://127.0.0.1:8080/?port=5858 to start debugging.\nDebugging `test/demo.js`\n\nDebugger listening on port 5858\ninternal/child_process.js:298\n    throw errnoException(err, 'spawn');\n    ^\n\nError: spawn ENOTDIR\n    at exports._errnoException (util.js:870:11)\n    at ChildProcess.spawn (internal/child_process.js:298:11)\n    at exports.spawn (child_process.js:362:9)\n    at checkOthers (/usr/local/lib/node_modules/node-inspector/node_modules/biased-opener/node_modules/browser-launcher2/lib/detect.js:124:16)\n    at checkDarwin (/usr/local/lib/node_modules/node-inspector/node_modules/biased-opener/node_modules/browser-launcher2/lib/detect.js:113:3)\n    at next (/usr/local/lib/node_modules/node-inspector/node_modules/biased-opener/node_modules/browser-launcher2/lib/detect.js:185:3)\n    at /usr/local/lib/node_modules/node-inspector/node_modules/biased-opener/node_modules/browser-launcher2/lib/detect.js:202:4\n    at /usr/local/lib/node_modules/node-inspector/node_modules/biased-opener/node_modules/browser-launcher2/lib/detect.js:105:7\n    at Object.getPath [as path] (/usr/local/lib/node_modules/node-inspector/node_modules/biased-opener/node_modules/browser-launcher2/lib/darwin/chrome.js:6:10)\n    at /usr/local/lib/node_modules/node-inspector/node_modules/biased-opener/node_modules/browser-launcher2/lib/detect.js:100:21\ncdieringer@Snapper-osx:~/node/coinstac-client-core$\n```\n",
      "createdAt": "2016-05-25T19:15:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjY1ODEzODQ=",
        "title": "Node-debug doesn't work",
        "url": "https://github.com/node-inspector/node-inspector/issues/807"
      },
      "repository": {
        "nameWithOwner": "node-inspector/node-inspector"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTY4MDk4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTY4MDk4Mw==",
      "body": "it's an issue w/ browser-launcher2. will file a bug w/ them and cross ref. it would have to ripple up some before fixing `node-inspector` tho!\n",
      "createdAt": "2016-05-25T19:28:38Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjY1ODEzODQ=",
        "title": "Node-debug doesn't work",
        "url": "https://github.com/node-inspector/node-inspector/issues/807"
      },
      "repository": {
        "nameWithOwner": "node-inspector/node-inspector"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTkyMDk5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTkyMDk5MQ==",
      "body": "@lukekarrys, no sweat. no toe-stepping at all!  it's as much your's as mine as anyone-else's :)\n\nwill publish soon\n",
      "createdAt": "2016-05-26T16:20:51Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTY4ODQ0NDk=",
        "title": "Release new version",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/176"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMTkzMTU3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMTkzMTU3Mg==",
      "body": "touche! thanks\n\nOn Thu, May 26, 2016 at 10:50 AM, Luke Karrys notifications@github.com\nwrote:\n\n> And at this point a patch would be find view &-view since it was already\n> using lodash 4 and the latest updates just make sure all its dependencies\n> are also using lodash 4.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/AmpersandJS/ampersand-collection-view/issues/45#issuecomment-221928957\n\n## \n\nChris Dieringer\np: (503)358-8577\ne: cdieringer@mrn.org\nw: http://cdaringe.com\n",
      "createdAt": "2016-05-26T17:00:40Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTcwMjQ4ODA=",
        "title": "1.x => 2.x q",
        "url": "https://github.com/AmpersandJS/ampersand-collection-view/issues/45"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMjMyMjg4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMjMyMjg4NA==",
      "body": "tests pass locally, +1\n",
      "createdAt": "2016-05-28T18:31:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzE3NTQxNTk=",
        "title": "bump ampersand-view to 10.0.0 for lodash 4.11.1",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/74"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMjMyMzA0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMjMyMzA0Ng==",
      "body": "publishing in 7.x, patched changelog. thanks!\n",
      "createdAt": "2016-05-28T18:35:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Njk1Nzk5NDU=",
        "title": "Add autofocus option",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/73"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMjMyMzA1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMjMyMzA1NQ==",
      "body": "publishing in 7.x. thanks!\n",
      "createdAt": "2016-05-28T18:35:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzE3NTQxNTk=",
        "title": "bump ampersand-view to 10.0.0 for lodash 4.11.1",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/74"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMjMyMzEyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMjMyMzEyNQ==",
      "body": "thanks @RickButler!  looks good to me!\n",
      "createdAt": "2016-05-28T18:36:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzE3NTUyMzU=",
        "title": "bump lodash to version to 4.11.1",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/65"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMjM5ODM1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMjM5ODM1Nw==",
      "body": "@bcoe, gah.  deep, painful embarrassment!  thanks so much for your time.  i'm super grateful.  i'm glad this was all a non-issue!\n",
      "createdAt": "2016-05-30T02:06:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQxODUyOTk=",
        "title": "Support Q => multiple child_processes seem to cause problems",
        "url": "https://github.com/istanbuljs/nyc/issues/257"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMjUyMDAwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMjUyMDAwMQ==",
      "body": "@nono, the good news is that the issue did get resolved. the bad news is that I wasn't able to root cause it. good luck! :)\n",
      "createdAt": "2016-05-30T15:57:59Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTMxMzA3Nzc=",
        "title": "node leveldb pouch instance complains on changes",
        "url": "https://github.com/pouchdb/pouchdb/issues/5129"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMzAwODEwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMzAwODEwMw==",
      "body": "yahoo! :)\n\nOn Wed, Jun 1, 2016 at 7:35 AM, Dale Harvey notifications@github.com\nwrote:\n\n> Closed #4922 https://github.com/pouchdb/pouchdb/issues/4922.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pouchdb/pouchdb/issues/4922#event-678416995, or mute\n> the thread\n> https://github.com/notifications/unsubscribe/AA9O_VfIjoQ2G7HUxwfJ9qNNF1Il-Ac2ks5qHYq2gaJpZM4HgAKH\n> .\n\n## \n\nChris Dieringer\np: (503)358-8577\ne: cdieringer@mrn.org\nw: http://cdaringe.com\n",
      "createdAt": "2016-06-01T14:22:52Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU1NTEzMzE=",
        "title": "destroyed event fired twice",
        "url": "https://github.com/pouchdb/pouchdb/issues/4922"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMzE4MTA0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMzE4MTA0OA==",
      "body": "hey @jlit, take a peek at the src: https://github.com/AmpersandJS/ampersand-state/blob/master/ampersand-state.js#L6\n\nbundlers will not bundle the full lodash module because the root module is not in the require path.\n\nping us w/ further qs. thx\n",
      "createdAt": "2016-06-02T02:41:00Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTgwMzgyMTY=",
        "title": "use lodash modules, not full",
        "url": "https://github.com/AmpersandJS/ampersand-state/issues/244"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMzYwNzAwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMzYwNzAwMg==",
      "body": "🎲 🎲 🎲 🎲 🎲 \n^^ yahtzee\n\none more req'd +1.\n",
      "createdAt": "2016-06-03T15:14:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzE3NTUyMzU=",
        "title": "bump lodash to version to 4.11.1",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/65"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMzc4OTE2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMzc4OTE2NQ==",
      "body": "yep\n",
      "createdAt": "2016-06-05T02:20:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjYwMjU4NTM=",
        "title": "add FAQ with our first FAQ!",
        "url": "https://github.com/lerna/lerna/pull/100"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMzc4OTI0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMzc4OTI0NQ==",
      "body": "yea you're right.  i fixed that recently, but had hence dropped trace.\n\nthanks so much for lookin' into it.  appreciate your time.\n",
      "createdAt": "2016-06-05T02:22:58Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQ3NzQ4ODM=",
        "title": "TypeError: Cannot read property 'apply' of undefined",
        "url": "https://github.com/AndreasMadsen/trace/issues/26"
      },
      "repository": {
        "nameWithOwner": "AndreasMadsen/trace"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMzc5MDg4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMzc5MDg4Mg==",
      "body": "i miss reported.  everything is OK in 8.1.0, but not in 8.4.0.  i ran my scripts via [the node profiler](https://nodejs.org/en/docs/guides/simple-profiling/).  my perf test is a broad brush, and isn't for relative perf, but rather for absolute perf. hence, i think my test is OK.  it also uses process.hrtime under the hood, and is simple enough.  thanks for the refs though!\n\n![image](https://cloud.githubusercontent.com/assets/1003261/15803325/23f8ba68-2a95-11e6-809a-f9d14fa99816.png)\nin [8.0.5 it takes ~900 ticks](https://gist.github.com/cdaringe/6bb4639719cec1b9fde11b8d985843e3) to complete my script execution. in [8.4.0, it takes ~4200 ticks](https://gist.github.com/cdaringe/6aa18580862a4b70c7d0b916db7bca0f). ~4-5x ticks ==> 15x real-time (sys-time + process-time) for _my particular use case_\n\ni had a difficult time tracing where the issue originated because 8.4.0 branch is not in the master branch lineage.  when i realized it was not in the master lineage, i got over to the feature branch and started bisecting from there.\n\n`git bisect` led me to this commit: 4a4211b\n\nd1b673d is fast'n'speedy (immediately prior commit). but on progressing to 4a4211b my perf tanks :(\n\nhere's the scoop.  i do a lot of these:\n\n``` js\n      joi.validate(\n        field,\n        schema,\n        validateOpts,\n        function (err) {\n          if (err) { throw err; }\n        }\n      );\n```\n\nwhich in turn runs the following internally:\n\n```\n#0 internals.checkOptions any.js:34:1\n#1 internals.Any._validateWithOptions any.js:656:19\n#2 root.validate index.js:104:23\n```\n\nin the 4a4211b, `checkOptions` was modified heavily to dogfood joi vs. using the previous much faster standard looping.\n\nis it possible, perhaps, to revert to that higher perf code?\n\nthanks!\n",
      "createdAt": "2016-06-05T03:24:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTg0NzcyNTI=",
        "title": "significant performance hit jumping to 8.4.0",
        "url": "https://github.com/hapijs/joi/issues/912"
      },
      "repository": {
        "nameWithOwner": "hapijs/joi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMzk4MDIyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMzk4MDIyOA==",
      "body": "hey @Marsup!  yahoo :)  that is _much_ better!  thanks!  i'm averaging ~0.31ms/model, which is still expectable in my application.\n\n> If you know ahead of time the options will always be constant for a given schema, you'd better put it with the schema itself\n\nya, i hear ya.  the reason i make so many calls is as follows.  perhaps you have an improvement suggestion.\n\nthe gist is that I have some Model definitions, e.g. `class A` and `class B`.  `class B` extends class A, and hence i expose the schema _components_ of `A`.\n\n``` js\nclass A { ... }\nA._schema = { attrA: joi.string() }\n```\n\nin this regard, i can `extend` (kinda) schemas via  `Object.assign`\n\n``` js\nclass B extends A { ... }\nB._schema = Object.assign({}, A._schema, { attrB: joi.number().min(5) })`\n```\n\nfinally, on every instantiation of an A or a B, I create custom getters/setters for all of the schema props, and `joi.validate` on setting of all props, e.g `attrA` on A instances of `attrA` & `attrB` on B instances.\n",
      "createdAt": "2016-06-06T14:43:51Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTg0NzcyNTI=",
        "title": "significant performance hit jumping to 8.4.0",
        "url": "https://github.com/hapijs/joi/issues/912"
      },
      "repository": {
        "nameWithOwner": "hapijs/joi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyMzk4NTU5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyMzk4NTU5NQ==",
      "body": "@MarkHerhold we have a test suite that does a basic assertion that proves that our data models are quick to generate (<1ms/model).  Our team had concern originally using joi to do runtime type checks on every property set.  so, we did some basic benchmarking, then upon agreement to use joi, left the assertion in the test suite.  the failing test is what compelled the 🔎 hunt 🔎 .\n",
      "createdAt": "2016-06-06T15:00:33Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTg0NzcyNTI=",
        "title": "significant performance hit jumping to 8.4.0",
        "url": "https://github.com/hapijs/joi/issues/912"
      },
      "repository": {
        "nameWithOwner": "hapijs/joi"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNDM0MjM3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNDM0MjM3OA==",
      "body": "interesting.  what sort of custom bindings have you made?  would they be helpful to roll back into ampersand-dom-bindings instead?\n",
      "createdAt": "2016-06-07T16:49:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTg5Njg1OTg=",
        "title": "Make bindings extensible",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/178"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNDM1MjE0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNDM1MjE0Ng==",
      "body": "> instead of polluting my models with derived types to convert a prop to a specific date/monetary or other format, ...\n\nI like that.  It's a great idea.\n\nI think we should definitely support the extensibility you need.  While im not gung-ho against your original proposal, perhaps we could simply add hooks to dom-bindings to make it more composable?  that way, there's only change required in one spot.  i think it's a little clearer to extend dom-bindings too.  the flow remains unchanged in &-view, and there's no logic to debug outside of dom-bindings.  i think it'd be easier to reason about.  what are your thoughts?\n",
      "createdAt": "2016-06-07T17:23:49Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTg5Njg1OTg=",
        "title": "Make bindings extensible",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/178"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNDM5NDMxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNDM5NDMxNA==",
      "body": "> dom-bindings a class that can be extended instead of a function\n\njust thinking out loud. i was thinking something similar to ^^.  basically add `.extend()` method to dom-bindings.  on app init, you extend to add your custom bindings.  maybe im missing something, but I don't think that'd required an &-view update\n",
      "createdAt": "2016-06-07T19:52:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTg5Njg1OTg=",
        "title": "Make bindings extensible",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/178"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNDQ0NDg5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNDQ0NDg5Mw==",
      "body": "yea, that'd be an issue. frankly, _I personally_ wouldn't want to squash a dom-binding.  i can see that really confusing the rest of the dev-team. i'd prefer instead to maybe namespace it? like `myproduct/binding-name`.  again, i'm super on board with the need to make it extensible, and think you've got a great use case.  i'm iffy on the requirement to convert what is otherwise a general utility function provider into utility provider instances.  from my current thinking, i wouldn't ever think of creating an isolated lodash instance to get special utility functions.  i'd definitely extend it (as peeps commonly do), but instancifying dom-bindings seems like convolution from my perspective.  again, just an opinion :)\n",
      "createdAt": "2016-06-07T23:30:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTg5Njg1OTg=",
        "title": "Make bindings extensible",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/178"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNDQ3MDcxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNDQ3MDcxOQ==",
      "body": "Ya.  That's a good run.  Not sure what's up with the emitters warning but\nthat full run sequence is AOK\nOn Jun 7, 2016 8:03 PM, \"Cory Reed\" notifications@github.com wrote:\n\n> Test output:\n> \n> info: db server up\n> info: db seeded\n> info: compute server up\n> info: clients up\n> error: USER: jamin My random # was 85\n> error: USER: drew My random # was 42\n> error: USER: ross My random # was 17\n> error: USER: sergey My random # was 62\n> error: COMPUTE-SERVER: My random # was 44\n> info: USER: jamin old 85 new 64.5\n> info: USER: ross old 17 new 30.5\n> info: USER: sergey old 62 new 53\n> info: USER: drew old 42 new 43\n> info: USER: jamin old 64.5 new 54.25\n> info: USER: drew old 43 new 43.5\n> info: USER: sergey old 53 new 48.5\n> info: USER: ross old 30.5 new 37.25\n> info: USER: ross old 37.25 new 40.625\n> info: USER: jamin old 54.25 new 49.125\n> info: USER: drew old 43.5 new 43.75\n> info: USER: sergey old 48.5 new 46.25\n> error: USER: jamin (node:32891) Warning: Possible EventEmitter memory leak detected. 21 error listeners added. Use emitter.setMaxListeners() to increase limit\n> error: USER: drew (node:32893) Warning: Possible EventEmitter memory leak detected. 21 error listeners added. Use emitter.setMaxListeners() to increase limit\n> error: USER: ross (node:32894) Warning: Possible EventEmitter memory leak detected. 21 error listeners added. Use emitter.setMaxListeners() to increase limit\n> error: USER: sergey (node:32892) Warning: Possible EventEmitter memory leak detected. 21 error listeners added. Use emitter.setMaxListeners() to increase limit\n> error: COMPUTE-SERVER: (node:32890) Warning: Possible EventEmitter memory leak detected. 21 error listeners added. Use emitter.setMaxListeners() to increase limit\n> info: USER: jamin old 49.125 new 46.5625\n> info: USER: sergey old 46.25 new 45.125\n> info: USER: drew old 43.75 new 43.875\n> info: USER: ross old 40.625 new 42.3125\n> info: USER: drew old 43.875 new 43.9375\n> info: USER: ross old 42.3125 new 43.15625\n> info: USER: jamin old 46.5625 new 45.28125\n> info: USER: sergey old 45.125 new 44.5625\n> info: COMPUTE-SERVER: all users converged on 44 [ { final: 43.9375, username: 'drew' },\n>   { final: 45.28125, username: 'jamin' },\n>   { final: 43.15625, username: 'ross' },\n>   { final: 44.5625, username: 'sergey' } ]\n> info: COMPUTE-SERVER: info: computation complete, run test_run_id\n> \n> Does this mean it's good?\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/MRN-Code/coinstac-example-computation-bisect-converge/pull/1#issuecomment-224467564,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AA9O_UZrfTdz2PuJXsbxLF0FHoE91UF4ks5qJiLvgaJpZM4IvEO6\n> .\n",
      "createdAt": "2016-06-08T02:26:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzI3MzY4OTI=",
        "title": "migrate for promisified common",
        "url": "https://github.com/MRN-Code/coinstac-example-computation-bisect-converge/pull/1"
      },
      "repository": {
        "nameWithOwner": "MRN-Code/coinstac-example-computation-bisect-converge"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNDkyNjkxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNDkyNjkxMQ==",
      "body": "@RickButler, if you want to modify it to do so, i'll support it so long as:\n- it comes with test(s)\n- it comes w/ a README update\n- isn't too invasive\n\nthrow up a PR, and we can get it going.  thanks for explaining all your stuff so clearly :)\n",
      "createdAt": "2016-06-09T15:13:10Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTg5Njg1OTg=",
        "title": "Make bindings extensible",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/178"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNTYzMzA2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNTYzMzA2OQ==",
      "body": "I did not title this issue well.  The title presumes a solution instead of describing the problem.  The problem is that I need to be able to modify ajax requests.  clearly, the simple existence of the `options.ajax` field is an acknowledgement that \"sure, web devs need to be able to control their webrequests.\"  The problem is that I can only modify an ajax request _once_, on initialization.  my use case is already described above, where our authentication scheme yields a JWT that expires.  continued use of our services refresh the JWT.  hence, I want to update our headers with the new JWT s.t. my pouches continue to sync, even after expiration.\n\n@ssured's use case is a great one--we do that too.  it's actually a different problem, albeit solved through the same means.\n\nso, no, I don't need to wrap `pouchdb-ajax`, but that's how I did it before.  another solution, which may be a lot easier, is to add a request lifecycle hook [here perhaps?](https://github.com/pouchdb/pouchdb/blob/master/packages/pouchdb-ajax/src/ajaxCore.js#L88).\n\nmaybe `options.preReqeust` is a thing.  then there on L88 we can do a\n\n``` js\nif (options.preRequest) {\n  options.preRequest(options)\n}\n```\n\nand let user-land code meddle with `options`.  just an idea!\n",
      "createdAt": "2016-06-13T16:24:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTk0OTg5MjI=",
        "title": "Can't change ajax parameters on-the-fly",
        "url": "https://github.com/pouchdb/pouchdb/issues/5322"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNTYzNTExMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNTYzNTExMg==",
      "body": "hey @juliangruber, thanks a bunch.  just curious, how did you prescribe the diagnosis, here?  \n",
      "createdAt": "2016-06-13T16:31:00Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTk3NDM5OTA=",
        "title": "question: err callback type",
        "url": "https://github.com/Level/leveldown/issues/291"
      },
      "repository": {
        "nameWithOwner": "Level/leveldown"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNTY1OTQyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNTY1OTQyOA==",
      "body": "OH.  i see now. thx.\n",
      "createdAt": "2016-06-13T17:59:54Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTk3NDM5OTA=",
        "title": "question: err callback type",
        "url": "https://github.com/Level/leveldown/issues/291"
      },
      "repository": {
        "nameWithOwner": "Level/leveldown"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNTY2MjAyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNTY2MjAyNg==",
      "body": "we have been fighting this as well.\n\n> will probably be a super painful proposition in the Chromium codebase\n\n@paulcbetts, I don't understand ^^ remark.  can you clarify?\n",
      "createdAt": "2016-06-13T18:09:05Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTgzNzg4OTA=",
        "title": "bundle v8 that is compatible with bundled node",
        "url": "https://github.com/electron/electron/issues/5851"
      },
      "repository": {
        "nameWithOwner": "electron/electron"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNTc0MzA1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNTc0MzA1MA==",
      "body": "This is purely a `leveldown`+`electron` bug :(.  leveldown#291 is now closed... but pretty much the electron folks need to square up with node internals.  if anyone else suffers this, it is mitigable by using `node-websql` vs. leveldown \n",
      "createdAt": "2016-06-13T23:57:41Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTk4NDMwMjc=",
        "title": "Leveldown adapter rejecting with `true`",
        "url": "https://github.com/pouchdb/pouchdb/issues/5343"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNjI1MTk5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNjI1MTk5NQ==",
      "body": "sorry there guys.  delayed reply.  my adjustments to the make file netted only to the [eslint conversion](https://github.com/node-swig/swig-templates/pull/12), which was green.  not sure what exactly is causing it to fail, but there are deprecation notices all over which should be patched.  agreed, w/ you both on all issues.\n\ni think public CI is the most honest/trustworthy place to publish coverage from, so perhaps a coveralls conversion is in order.  it's simple enough.\n",
      "createdAt": "2016-06-15T17:01:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzMyODI4ODU=",
        "title": "Fixed ReDoS vulnerability",
        "url": "https://github.com/node-swig/swig-templates/pull/18"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNjI1MzQzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNjI1MzQzMQ==",
      "body": "thanks @jackhsu978 !\n",
      "createdAt": "2016-06-15T17:07:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzMyODI4ODU=",
        "title": "Fixed ReDoS vulnerability",
        "url": "https://github.com/node-swig/swig-templates/pull/18"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNjI1NTk4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNjI1NTk4OA==",
      "body": "@Lochlan and @paulcpederson, I moved back home. if you guys want to meet up some time (maybe Sunday afternoon), it could be cool to have a 'nice-to-meet-ya' let's kick this thing into gear working session\n",
      "createdAt": "2016-06-15T17:15:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzMyODI4ODU=",
        "title": "Fixed ReDoS vulnerability",
        "url": "https://github.com/node-swig/swig-templates/pull/18"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNjI4MTczNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNjI4MTczNQ==",
      "body": "I was wrong. `websql` and `leveldown` tank in latest electron. noooooooooooo 🔥 :rage3: \n",
      "createdAt": "2016-06-15T18:43:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTk4NDMwMjc=",
        "title": "Leveldown adapter rejecting with `true`",
        "url": "https://github.com/pouchdb/pouchdb/issues/5343"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNjI5Njg1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNjI5Njg1Ng==",
      "body": "this is all trashable now post-localstorage hook.  NBD, we can just delete it\n",
      "createdAt": "2016-06-15T19:39:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzM5NTk2Nzc=",
        "title": "postinstall electron-rebuild hack.",
        "url": "https://github.com/trendscenter/coinstac/pull/3"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNjMyODk5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNjMyODk5Mw==",
      "body": "@swashcap, just 👀 \n",
      "createdAt": "2016-06-15T21:42:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzM5ODgzMzM=",
        "title": "feature/eager-fetch-tia-comps-on-init",
        "url": "https://github.com/trendscenter/coinstac/pull/6"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNjM0NTAxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNjM0NTAxOQ==",
      "body": "Totally.  The API needs a little revamp\n",
      "createdAt": "2016-06-15T23:01:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjA1NDIyODQ=",
        "title": "API Feature Request",
        "url": "https://github.com/cdaringe/tuffet/issues/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/tuffet"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNjYzNjY3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNjYzNjY3Ng==",
      "body": "@pliz gave me the 👍 \n",
      "createdAt": "2016-06-16T22:52:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzQwMDY2NTE=",
        "title": "Feature/plugin time",
        "url": "https://github.com/trendscenter/decentralized-laplacian-ridge-regression/pull/4"
      },
      "repository": {
        "nameWithOwner": "trendscenter/decentralized-laplacian-ridge-regression"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIyNjgyNTUxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIyNjgyNTUxNA==",
      "body": "cool.  i'm at pretty much at hawthorne and the river, westside.  close enough :)\n",
      "createdAt": "2016-06-17T17:06:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzMyODI4ODU=",
        "title": "Fixed ReDoS vulnerability",
        "url": "https://github.com/node-swig/swig-templates/pull/18"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzMTkzMDIzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzMTkzMDIzNg==",
      "body": "Thanks!\n",
      "createdAt": "2016-07-12T03:48:01Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjQ5NDQxNDU=",
        "title": "developer communication channel availability",
        "url": "https://github.com/dotnet/core/issues/217"
      },
      "repository": {
        "nameWithOwner": "dotnet/core"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzMjU2MjkzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzMjU2MjkzOA==",
      "body": "managing a s/w project entirely from `npm`'s `package.json` has never so simply and concisely made declaring my project, building my project, upgrading my project (e.g. greenkeeper), read/writing/parsing data about my project, and publishing my project so easy. _so_ easy.  as many of us, my history is in c++/java/python/node, with play in others. i long for the `npm` experience in all of my projects now.\n\nthe `project.json` promised to yield these same characteristics.  i think it's a model worth emulating, and not sacrificing the simplicity and power.\n\nif the team .net core team thinks the other solution can provide these traits, **excellent**, and power to 'em! however,  please don't undermine the beauty in the simplicity as you progress.\n\nalso, i understand that i'm just noise by this point in a giant thread.  maybe the moderators ought consider closing it and handling the ordeal in more controlled fashion.  lots of good feedback.  maybe a little trolling too :$ :)\n",
      "createdAt": "2016-07-14T05:49:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQyNDc0MDA=",
        "title": "[Discussion] Project dependency after project.json phase out",
        "url": "https://github.com/dotnet/aspnetcore/issues/1433"
      },
      "repository": {
        "nameWithOwner": "dotnet/aspnetcore"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzMzA4MTUxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzMzA4MTUxMg==",
      "body": "i. am. SO EXCITED about this! @isidorn, you rock man\n",
      "createdAt": "2016-07-15T22:09:36Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDI3NjQ4MjU=",
        "title": "Please make the debug toolbar moveable.",
        "url": "https://github.com/microsoft/vscode/issues/4580"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzNTAzMzA1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzNTAzMzA1Mg==",
      "body": "dude... that's awesome!  thanks so much!\n",
      "createdAt": "2016-07-25T18:02:56Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTk0NjU5MTc=",
        "title": "feature request: show TODO counter in bottom status bar",
        "url": "https://github.com/mrodalgaard/atom-todo-show/issues/123"
      },
      "repository": {
        "nameWithOwner": "mrodalgaard/atom-todo-show"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzNTEyNTA1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzNTEyNTA1OA==",
      "body": "also, is there a way i can sneak-peek at the generated spec file?\n",
      "createdAt": "2016-07-26T00:13:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjc0OTQxMTk=",
        "title": "how to actually run a `build` or `configure` command",
        "url": "https://github.com/nebula-plugins/gradle-ospackage-plugin/issues/195"
      },
      "repository": {
        "nameWithOwner": "nebula-plugins/gradle-ospackage-plugin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzNjI0OTM2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzNjI0OTM2Nw==",
      "body": "I wrote the package perish to address it\n\nOn Jul 29, 2016 10:33 AM, \"Jamund Ferguson\" notifications@github.com\nwrote:\n\n> Here's the very thorough one we've done for our app. Maybe something\n> similar can live here:\n> \n> process.on('unhandledRejection', (reason, p) => {\n>     console.error(new Date().toUTCString(), 'unhandledRejection')\n>     if (reason && reason.stack) {\n>         console.error(reason.stack)\n>     } else if (reason) {\n>         console.error('No stack trace found.')\n>         console.error('Reason: ', reason)\n>     } else {\n>         console.error('No reason given to the unhandled rejection promise')\n>         console.error(p)\n>     }\n>     process.exit(1)\n> })\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/krakenjs/endgame/issues/3#issuecomment-236243042, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_R6uSotT8negtP6iqNID0gX2mAZdks5qajlJgaJpZM4ImEtM\n> .\n",
      "createdAt": "2016-07-29T17:57:00Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTY2NDI4MjA=",
        "title": "unhandledRejection support?",
        "url": "https://github.com/krakenjs/endgame/issues/3"
      },
      "repository": {
        "nameWithOwner": "krakenjs/endgame"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzNzMxMjExMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzNzMxMjExMA==",
      "body": "closing.  re-:wrench: discussion. don't dep updates trickling in until we can un-eject\n",
      "createdAt": "2016-08-03T17:44:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Nzk4ODc2MzI=",
        "title": "Update autoprefixer to version 6.4.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/2"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzNzMxNjg4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzNzMxNjg4MA==",
      "body": "hey @gaearon!\n- first of, all, amazing that you took the time to debug this. thanks.\n-  _\"we could have resolved this without ejecting\"_.  absolutely.  `eject`ing is only a temp fix. i planned on diagnosing the issue further and reporting out on it, but exhausted my small timebox.  we intend to revert our eject commit(s).  We tagged all eject related commits with a🔧 emoji, and thus intended to `rebase` + `drop` them once we solved the problem!\n-  this `history` issue is most likely our problem.  thank you! it was _right there in the README_. we will patch shortly.\n- the current deployment, as you observed, is incorrect.  it is a product of my incomplete troubleshooting.  please disregard its known naughty, not-per-the-instructions state.\n  - your messages & warnings are top notch--i violated them intentionally thinking that a webpack plugin may have been at fault for not rendering my content.\n- lastly, unrelated, VisualBasic was great.  I'm glad you gave it props in that nodeup podcast a ways back.  I finally got around to listening and was happy to hear your defense of VB, as I have ~= the same story.\n\nthx again.  we will report back and close the issue out when work resumes on this project later in the week.\n",
      "createdAt": "2016-08-03T17:59:08Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjkxNDgwMzg=",
        "title": "GH Pages problem?",
        "url": "https://github.com/dino-dna/donut/issues/3"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzNzM5MDEzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzNzM5MDEzMA==",
      "body": "that did the trick. thanks @gaearon!\n",
      "createdAt": "2016-08-03T22:07:22Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjkxNDgwMzg=",
        "title": "GH Pages problem?",
        "url": "https://github.com/dino-dna/donut/issues/3"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzODExNDAxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzODExNDAxNg==",
      "body": "Awwwww yeya!\n",
      "createdAt": "2016-08-07T22:58:13Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQzOTQxNjM=",
        "title": "invalid semicolon inserted",
        "url": "https://github.com/max-mapper/standard-format/issues/165"
      },
      "repository": {
        "nameWithOwner": "max-mapper/standard-format"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzODM0MjM1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzODM0MjM1Mg==",
      "body": "It's just a cp command.  What am I missing?\n",
      "createdAt": "2016-08-08T19:03:17Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjk4NDIzMzM=",
        "title": "gave up, huh?",
        "url": "https://github.com/hoodie/shell-uglify/issues/1"
      },
      "repository": {
        "nameWithOwner": "hoodie/shell-uglify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzOTA4NTg0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzOTA4NTg0MA==",
      "body": "Oh snap.  Ya we need to get on it. Meetup next week?\n\nOn Aug 10, 2016 1:57 PM, \"Lochlan McIntosh\" notifications@github.com\nwrote:\n\n> More relevant than ever: paularmstrong#661\n> https://github.com/paularmstrong/swig/pull/661\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/node-swig/swig-templates/issues/17#issuecomment-239001812,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_Zp3iIP0O_gp-uQDiiDWSyyZVcsTks5qejsigaJpZM4ICo3_\n> .\n",
      "createdAt": "2016-08-11T06:51:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY3OTM5MDI=",
        "title": "update all links, CI, and website for swig-templates package name/url",
        "url": "https://github.com/node-swig/swig-templates/issues/17"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzOTIwNjc2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzOTIwNjc2Mg==",
      "body": "Ah, difficult to believe this hasn't come up before.  I thought we handled this case?  Checkout _setRender.  When you extend the view, we wrap it, call your new render, and do some other work.  We could probably find a way in there to do the upsert in there and make you never have to worry about it.  What do you think?\n",
      "createdAt": "2016-08-11T16:01:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzA1NzgyNzk=",
        "title": "Enhance docu about _upsertBindings()",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/180"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDIzOTg2MDI0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDIzOTg2MDI0OQ==",
      "body": "hi!  this is a very reasonable request.  we don't yet, however, have unified cross package / cross dependency deployment strategy.  this would probably best fall under the bucket of the monorepo/lerna thread taking place i believe over in the &-state repo.  until then, it's up to each &-*-view maintainer on his/her own to deploy.  sorry for the inconvenience!\n",
      "createdAt": "2016-08-15T16:58:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTIwMjU5MTM=",
        "title": "Release ampersand-*-view",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/168"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MDQzNDQ5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MDQzNDQ5OQ==",
      "body": "All targetted and issue associated PRs welcome!  No one is full time on this lib, but there are people watching it and caring about its critical parts.  Even if maintenance is sparse, swig-templates is very stable.\n",
      "createdAt": "2016-08-17T14:44:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzU4MTQ5OTc=",
        "title": "get doc site running under node-swig",
        "url": "https://github.com/node-swig/swig-templates/issues/8"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MDU5NjAzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MDU5NjAzNg==",
      "body": "Ah, I have guests from out of town ~~all next week :/ could do this Friday,\na weekend day, or 28th-30th?\n\nOn Aug 17, 2016 10:58 AM, \"Lochlan McIntosh\" notifications@github.com\nwrote:\n\n> Sorry, bit late on the reply here. I could meet up next Wed. or Thurs.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/node-swig/swig-templates/issues/17#issuecomment-240493850,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_WT0-eN1h_GpMwov9n46HeXDjHocks5qg0uwgaJpZM4ICo3_\n> .\n",
      "createdAt": "2016-08-18T01:08:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY3OTM5MDI=",
        "title": "update all links, CI, and website for swig-templates package name/url",
        "url": "https://github.com/node-swig/swig-templates/issues/17"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTE3MDM5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTE3MDM5NA==",
      "body": "Oh good ideas!  There's already a how-to, but it needs some more work.\nIt's currently called DECENTRALIZED_XYZ.md.  I think the sim readme refs it\n\nOn Aug 19, 2016 2:28 PM, \"Cory Reed\" notifications@github.com wrote:\n\n> As per the Albuquerque meeting on 2016-08-15 and 2016-08-16 and the\n> discussion with Sergey on 2016-08-17, we need to improve\n> _coinstac-simulator_ so that algorithm authors can start using it.\n> \n> _coinstac-simulator_ already functions as an executable, and Sergey\n> already has it installed globally. Great! I think this method provides the\n> least setup friction for authors. Sergey has a _declaration.js_ file that\n> contains an object that _coinstac-simulator_ consumes. It looks\n> approximately like:\n> \n> const n = require('numeric');\n> module.exports = {\n>   user1: {\n>     name: 'user 1',\n>     data: n.transpose([\n>       [0.001, 0.002, 0.003],\n>       // Lots of data here...\n>     ]),\n>   },\n>   user2: {\n>     name: 'user 2',\n>     data: n.transpose([\n>       // More data!\n>     ]),\n>   },\n>   user3: {\n>     name: 'user 3',\n>     data: n.transpose([\n>       // Tons of arrays!\n>     ]),\n>   },\n>   server: {\n>     // Some opts for remote\n>   },\n> };\n> \n> Sergey doesn’t want to continually copy-paste numbers into his\n> _declaration.js_ file.\n> \n> Here’s a CLI suggestion:\n> \n> coinstac-simulator --declaration declaration.js \\\n>   --user1 path/to/files1/**/*.txt \\\n>   --user2 path/to/files2/**/_.txt \\\n>   --user3 path/to/files3/__/_.txt\n> \n> This would use *NIX globbing to pass target files to the declaration,\n> which would then run. However, this doesn’t allow for user configuration or\n> server vars. Another take:\n> \n> const cstacSimulator = require('coinstac-simulator');\n> module.exports = {\n>   user1: {\n>     x: cstacSimulator.loadFiles('./data/*_/_.txt'),\n>     y: cstacSimulator.loadFile('./data/path/my-file.txt'),\n>     z: 3e-3,\n>     aa: [0.011, 0.015, 0.513, 0.744],\n>   },\n>   user2: {\n>     // ...\n>   },\n> };\n> \n> If we export utilities for file loading on on _coinstac-simulator_ it\n> could help authors out. Alternatively:\n> - ## We tell them to learn Node.js. Might be too steep a learning curve\n>   \n>   We give code examples in some sort of documentation that shows how to\n>   load files. Something like:\n>   \n>   // Here's how to get some files into your program!const fs = require('fs');const glob = require('glob'); // External package for _NIX-like globbingconst path = require('path'); // Built-in used to resolve paths\n>   // `files` is an array of full file pathsconst files = glob.sync(path.join(__dirname, 'my/data/__/_.txt'));\n>   // `filesMap` contains filenames in the keys and corresponding file contents// in valuesconst filesMap = new Map(files.map(f => {\n>    return [file, fs.readFileSync(file)];\n>   }));\n>   \n>   Is this confusing? Should we be teaching algo developers Node.js? _(Uhg,\n>   sync.)_\n> \n> _Todos:_\n> - Run parameters: authors should be able to specify run-specific\n>   parameters. The starting client sets up the run, so it makes sense for\n>   these run params to be passed through it. Also, consider the case where a\n>   user's local params are different remote params.\n> - Determine whether authors need Node.js help or _coinstac-simulator_\n>   utils. Implement utils if necessary.\n> - Write documentation (“how to” guide?) for algorithm authors.\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/MRN-Code/coinstac/issues/23, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_aJkstnppNXxeiCclJGxbQVvqfRzks5qhh_igaJpZM4Jo3rE\n> .\n",
      "createdAt": "2016-08-20T01:36:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzIyMjQxMDM=",
        "title": "Improve Algorithm Simulator API",
        "url": "https://github.com/trendscenter/coinstac/issues/23"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTIzNzg1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTIzNzg1OQ==",
      "body": "What I meant by teardown was stopping the serve non-gracefully.  I'd be killing the server during an integration test because the test focuses on client code.  So, the replicating client does some work, I do some assertuons, then I kill the server. Unknown to me, the replicating client had outbound requests.  Thus, killing the server ended up being problematic, and the pouch client would explode with socket errors!  Hence, this issue is specifically targeted at live replicating, sync stuff.  :). Whoops, late to respond by a few months!  My timeout hack seems to be somewhat stable\n",
      "createdAt": "2016-08-21T04:09:45Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU3NjU3NTU=",
        "title": "feature request: graceful shutdown",
        "url": "https://github.com/pouchdb/express-pouchdb/issues/316"
      },
      "repository": {
        "nameWithOwner": "pouchdb/express-pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTIzODE2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTIzODE2MA==",
      "body": "Still using it!  Id be interested in pitching in :)\n",
      "createdAt": "2016-08-21T04:22:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU1NTgwODc=",
        "title": "socket hangups",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/issues/41"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTI4NDQwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTI4NDQwOQ==",
      "body": "waaaat!  no kidding! i'll _try it, pronto_.\n",
      "createdAt": "2016-08-21T21:50:10Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU3NjU3NTU=",
        "title": "feature request: graceful shutdown",
        "url": "https://github.com/pouchdb/express-pouchdb/issues/316"
      },
      "repository": {
        "nameWithOwner": "pouchdb/express-pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTI4NjUwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTI4NjUwNQ==",
      "body": "holy $h@t it worked!  yahoo!  [pouchy 10.1.+](https://github.com/cdaringe/pouchy/releases/tag/v10.1.0) now detects a live replicating db and waits for `complete` on `.destroy`.  thanks @daleharvey!\n",
      "createdAt": "2016-08-21T22:32:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU3NjU3NTU=",
        "title": "feature request: graceful shutdown",
        "url": "https://github.com/pouchdb/express-pouchdb/issues/316"
      },
      "repository": {
        "nameWithOwner": "pouchdb/express-pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTI4Nzk5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTI4Nzk5MQ==",
      "body": "@daleharvey, do you know off-hand if this happens in the EE from `sync` _and_ `changes`?  I recall that there are a couple of emitters at play...\n",
      "createdAt": "2016-08-21T23:04:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU3NjU3NTU=",
        "title": "feature request: graceful shutdown",
        "url": "https://github.com/pouchdb/express-pouchdb/issues/316"
      },
      "repository": {
        "nameWithOwner": "pouchdb/express-pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTI4OTI3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTI4OTI3Mw==",
      "body": "it does. yahtzee.\n",
      "createdAt": "2016-08-21T23:30:27Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTU3NjU3NTU=",
        "title": "feature request: graceful shutdown",
        "url": "https://github.com/pouchdb/express-pouchdb/issues/316"
      },
      "repository": {
        "nameWithOwner": "pouchdb/express-pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTYxMTk2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTYxMTk2NQ==",
      "body": "- not sure how simulator can own the complexity of finding the\n  DecentralizedComputation.  Simulators job is in fact to take a DComp as\n  input and simulate it.  Thus, not providing a DComp as input doesn't make\n  sense.  If using the cli, then it could of course assume cwd for where to\n  find the DComp, but even that is a can of worms\n- the local/remote strategy will break group step.  Group step relies on\n  making sure all users gave contributed at each iteration.  You can stub a\n  dummy one in, of course, but calls to triggerRunner expect a well formed\n  Local ComputationResult.  Just FYI, you'll find this in the process.\n- the scale factor argument doesn't really make sense or add up, IMHO, but\n  I get that it's one more layer in the object/are structure\n- the loadFiles API is a great idea for some sugar to help authors.  Nice.\n  I'm going to speak on behalf of @pliz and say \"I love it!\", just give me a\n  concise cheat sheet to reference\n\nOn Aug 22, 2016 3:48 PM, \"Cory Reed\" notifications@github.com wrote:\n\n> We’re considering changing the object shape for a simulator declaration (\n> _declaration.js_ in Sergey’s examples). Right now it looks like this:\n> \n> const path = require('path');\n> module.exports = {\n>   users: [{\n>     username: 'user1',\n>     userData: [\n>       // Data here...\n>     ],\n>   }, {\n>     username: 'user2',\n>     userData: [\n>       // Data here...\n>     ],\n>   }],\n>   computationPath: path.resolve(\n>     __dirname,\n>     'path/to/decentralized-computation.js'\n>   ),\n>   verbose: true,\n> };\n> \n> We’re considering changing this structure to make algorithm development\n> easier for authors. Proposition for declarations:\n> \n> module.exports = {\n>   computationPath: './relative/path/to/computation.js',\n>   local: [{\n>     x: [/\\* ... _/],\n>     y: [/_ ... _/],\n>   }, {\n>     x: [/_ ... _/],\n>     y: [/_ ... */],\n>   }, {\n>     // And so on...\n>   }],\n>   remote: {\n>     // Remote variables/config here\n>   },\n> };\n> \n> Key changes:\n> - Change computationPath to not rely on path resolution.\n>   _coinstac-simulator_ can own this complexity.\n> - Change users to local and server (not shown above) to remote. This\n>   makes the declaration structure mirror the decentralized computation\n>   structure, which should make _coinstac-simulator_ use easier for\n>   authors.\n> - local no longer has objects with username and userData. This\n>   strategy works well for small data sets, but it seems tedious for large\n>   collections of files or programmitic use. Instead, the local array\n>   contains objects which will become “local” runners, or clients. These\n>   objects may contain arbitrary data; _coinstac-simulator_ can generate\n>   usernames and the necessary client setup.\n> \n> In addition to object changes, we expect algorithm authors to have sets of\n> files stored meaningfully in directories. Instead of teaching authors to\n> use Node.js to read the files' contents, we will provide utilities:\n> _loadFiles(pattern, filter)_: load files' contents into a declaration\n> - _pattern_ (string): File path globbing pattern\n> - _filter_ (Function): File filterer\n> \n> Use\n> \n> This assumes files important to an algorithm are stored in a directory:\n> \n> $ tree .\n> └── mydir\n>     ├── file-1.txt\n>     ├── file-2.txt\n>     ├── file-3.txt\n>     └── mysubdir\n>         └── file-4.txt\n> \n> const coinstacSimulator = require('coinstac-simulator');\n> module.exports = {\n>   local: [{\n>     // Load all the txt files using globbing:\n>     x: coinstacSimulator.loadFiles('./path/to/files/*_/_.txt'),\n> \n> ```\n> // Can still use plain values:\n> y: [3.03, 4.07, 1.06],\n> ```\n> \n>   }, {\n>     // Load all files, then filter by files starting with 'M':\n>     x: coinstacSimulator.loadFiles(\n>       './pick/some/files/*_/_',\n>       file => file.charAt(0) === 'M'\n>     ),\n>     y: [6.43, 7.01, 9.15],\n>   }],\n>   remote: {\n>     // ...\n>   },\n> };\n> \n> loadDir(path, filter)**: load a directory's contents\n> - _path_ (string): File path to directory\n> - _filter_ (Function): File filterer\n> - _mapToVars_ (Function): Maps file contents to variables\n> \n> Use\n> \n> This expects the specified path to contain a subdirectories that\n> coorespond to separate clients. Consider:\n> \n> $ tree path/to/files\n> ├── set-1\n> │   └── x\n> │   │   ├── file-1.txt\n> │   │   ├── file-2.txt\n> │   │   └── file-3.txt\n> │   └── y\n> │       ├── file-4.txt\n> │       ├── file-5.txt\n> │       └── file-6.txt\n> ├── set-2\n> │   └── x\n> │   │   ├── file-7.txt\n> │   │   ├── file-8.txt\n> │   │   └── file-9.txt\n> │   └── y\n> │       ├── file-10.txt\n> │       ├── file-11.txt\n> │       └── file-12.txt\n> └── set-3\n>     └── x\n>     │   ├── file-13.txt\n>     │   ├── file-14.txt\n>     │   └── file-15.txt\n>     └── y\n>         ├── file-16.txt\n>         ├── file-17.txt\n>         └── file-18.txt\n> \n> There are three local “clients” in this case: _set-1_, _set-2_, and\n> _set-3_. Each subdirectory’s _subdirectory_ becomes a variable.\n> \n> const coinstacSimulator = require('coinstac-simulator');\n> module.exports = {\n>   // Load the entire directory\n>   local: coinstacSimulator.loadDir('./path/to/files'),\n>   remote: {\n>     // ...\n>   },\n> };\n> \n> @pliz https://github.com/pliz @adsarwate https://github.com/adsarwate\n> What are your thoughts on these changes? Will they meet computation\n> authors’ needs?\n> \n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/MRN-Code/coinstac/issues/23#issuecomment-241574714,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_U6EXQ1EnPSQlJwUuRlJCzVO4EZ8ks5qiicogaJpZM4Jo3rE\n> .\n",
      "createdAt": "2016-08-23T02:48:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzIyMjQxMDM=",
        "title": "Improve Algorithm Simulator API",
        "url": "https://github.com/trendscenter/coinstac/issues/23"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTYyMDM4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTYyMDM4NQ==",
      "body": "Gar your bundler shouldn't bundle all of lodash the way it was.  In fact, the bundle should be smaller the way it was vs what you're reverting to, per JDD\n",
      "createdAt": "2016-08-23T03:58:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODIyNDM0Mzc=",
        "title": "use individual lodash modules",
        "url": "https://github.com/AmpersandJS/ampersand-app/pull/9"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTYzNjg0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTYzNjg0NA==",
      "body": "ya kind of wonky.  most of the travis output says all is well...\n\n+1\n",
      "createdAt": "2016-08-23T06:13:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODIyNTM5Mzk=",
        "title": "bump ampersand dependencies",
        "url": "https://github.com/AmpersandJS/ampersand-paginated-subcollection/pull/11"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-paginated-subcollection"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTgwMjQwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTgwMjQwMg==",
      "body": "yep, great, let's do it. i'll be there around 5.  i can do earlier if needed\n",
      "createdAt": "2016-08-23T17:03:33Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY3OTM5MDI=",
        "title": "update all links, CI, and website for swig-templates package name/url",
        "url": "https://github.com/node-swig/swig-templates/issues/17"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTgwNDAyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTgwNDAyNg==",
      "body": "opal is fine for me!\n\nOn Tue, Aug 23, 2016 at 10:07 AM, Lochlan McIntosh <notifications@github.com\n\n> wrote:\n> \n> OK cool! Didn't see any discussion about the place so Opal Labs? 1060 NW\n> 9th Ave. Just ring the doorbell and I'll let you guys in.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/node-swig/swig-templates/issues/17#issuecomment-241803568,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_TUSiyUYtoubnwoBImeC5ylg05foks5qiyjLgaJpZM4ICo3_\n> .\n\n## \n\nChris Dieringer\np: (503)358-8577\ne: cdieringer@mrn.org\nw: http://cdaringe.com\n",
      "createdAt": "2016-08-23T17:08:58Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY3OTM5MDI=",
        "title": "update all links, CI, and website for swig-templates package name/url",
        "url": "https://github.com/node-swig/swig-templates/issues/17"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTgxOTg3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTgxOTg3Nw==",
      "body": "i used browserify to gen the bundles i mention over [here](https://github.com/AmpersandJS/ampersand-state/issues/230#issuecomment-201170895)\n",
      "createdAt": "2016-08-23T18:00:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODIyNDM0Mzc=",
        "title": "use individual lodash modules",
        "url": "https://github.com/AmpersandJS/ampersand-app/pull/9"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTgyNTY2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTgyNTY2MA==",
      "body": "definitely. surprised i didn't see those.  it was late :) 🌚 \n",
      "createdAt": "2016-08-23T18:18:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODIzMTQ5ODQ=",
        "title": "de-unmaintain-ify",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/pull/49"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTgyODQ0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTgyODQ0OQ==",
      "body": "I'll look at this probably next week\n",
      "createdAt": "2016-08-23T18:27:26Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjM5OTc5MDI=",
        "title": "Unhandled IO error when trying to use existing db files",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/issues/22"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MTgyODcwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MTgyODcwMw==",
      "body": "oh shucks, you told me already you were doing sem release.  whoops!  need to get in the habit\n",
      "createdAt": "2016-08-23T18:28:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODIzMTQ5ODQ=",
        "title": "de-unmaintain-ify",
        "url": "https://github.com/gr2m/spawn-pouchdb-server/pull/49"
      },
      "repository": {
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MjQ1MzczNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MjQ1MzczNw==",
      "body": "you're right. thx.\n",
      "createdAt": "2016-08-25T16:32:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODIxMjEyMjU=",
        "title": "docs: live replication complete event",
        "url": "https://github.com/pouchdb/pouchdb/pull/5588"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MzI5MDc4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MzI5MDc4NQ==",
      "body": "@paulcpederson @Lochlan, if possible, let's just reschedule for a day where we can all make it.  i have some school work I'd like to get to as well today.  let's target sometime in September?  I'm OoT until the 15th\n",
      "createdAt": "2016-08-29T23:41:18Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDY3OTM5MDI=",
        "title": "update all links, CI, and website for swig-templates package name/url",
        "url": "https://github.com/node-swig/swig-templates/issues/17"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MzM2MTI0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MzM2MTI0OQ==",
      "body": "as usual, my first guess is pouchdb server.  now that you clearly have some awesome benchmarking hooks setup, it would be cool to use [perf-now](https://www.npmjs.com/package/performance-now) to try and trace it.\n- we could try measuring from clients getting a change event all the way to pipeline `run:end`\n  - if this time is ~constant between iterations, we know the problem is not in our code, but rather in the network or pdbs\n  - if these numbers do increase, we should probably profile the final saving of our docs in the pipeline runner.  this is _unlikely_.\n\ni'm curious if we stretch out the polling interval to reduce the noise all of the clients induce on PDBS if that would increase perf too in the many client count scenarios.\n\neasily the most troubling thing here is that none of these lines are flat.  something isn't able to keep up with steady state, right off the bat, seemingly no matter what.  we do expect _some_ increase in time on each iteration, because we are maintaining history on each client save, but I'd be hard pressed to think that such a factor would even be observable.\n",
      "createdAt": "2016-08-30T07:53:34Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzM4OTYzNjc=",
        "title": "coinstac-simulator performance problems",
        "url": "https://github.com/trendscenter/coinstac/issues/30"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0MzM2MTMzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0MzM2MTMzNg==",
      "body": "does the same happen against `couchdb`?\n",
      "createdAt": "2016-08-30T07:53:59Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzM4OTYzNjc=",
        "title": "coinstac-simulator performance problems",
        "url": "https://github.com/trendscenter/coinstac/issues/30"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0Mzc5NDEyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0Mzc5NDEyOQ==",
      "body": "Nice! +1\n",
      "createdAt": "2016-08-31T15:05:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM0MDE2OTE=",
        "title": "Update repo name in docs",
        "url": "https://github.com/node-swig/swig-templates/pull/21"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0Mzk0NzAxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0Mzk0NzAxMg==",
      "body": "This is some seriously sexy JavaScript!\n",
      "createdAt": "2016-09-01T01:02:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM0ODkyMjg=",
        "title": "Add File Loading Utility per #23",
        "url": "https://github.com/trendscenter/coinstac/pull/32"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0NDUxNjY1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0NDUxNjY1Mg==",
      "body": "I'm a big fan of the gh-pages package.  Should make the doc publish a walk\nin the park!  https://github.com/cdaringe/pouchy/blob/master/package.json\nref deploy-docs.  Obviously it's not xplatform friendly but is a good start!\n\nOn Sep 2, 2016 5:21 PM, \"Paul Pederson\" notifications@github.com wrote:\n\n> @Lochlan https://github.com/Lochlan @cdaringe\n> https://github.com/cdaringe This pr is into a new feature branch I\n> created so you guys can check out the work I'm doing on the doc site.\n> \n> I am running all of the jsdoc stuff from package.json and dumping it in a\n> data folder inside docs. That makes it really easy to pull in with the\n> new static site generator.\n> \n> If you pull this down and npm install you should be able to just npm run\n> docs and it will start up a server for you on 8080. This should watch the\n> lib and rebuild if you change the jsdoc comments as well.\n> \n> This also gets us further towards moving away from Make entirely. The\n> only things left are building the dist, the testing, and building to\n> gh-pages, which could all probably be accomplished via package.json\n> \n> I also took a stab at updating the CSS/fonts a bit to give the site a\n> little face lift. Let me know what you guys think about this when you get a\n> \n> ## second.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/node-swig/swig-templates/pull/24\n> Commit Summary\n> - Move documentation to a new static site generator\n> - get documentation mostly working again\n> - feature complete documentation site\n> - fix merge conflicts\n> - remove data folder from source control\n> - don't ignore the css directory\n> - add simlinks to dist files back in\n> \n> File Changes\n> - _M_ .gitignore\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-0 (3)\n> - _M_ Makefile\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-1\n>   (62)\n> - _R_ docs/_layouts/documentation.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-2 (9)\n> - _R_ docs/_layouts/html5.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-3\n>   (21)\n> - _A_ docs/_layouts/master.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-4\n>   (86)\n> - _A_ docs/css/style.css\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-5\n>   (322)\n> - _D_ docs/docs.json\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-6 (3)\n> - _R_ docs/docs/_includes/TYPES.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-7 (0)\n> - _R_ docs/docs/_includes/macros.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-8 (2)\n> - _M_ docs/docs/api.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-9\n>   (22)\n> - _M_ docs/docs/browser.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-10\n>   (8)\n> - _M_ docs/docs/cli.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-11\n>   (9)\n> - _M_ docs/docs/extending.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-12\n>   (22)\n> - _M_ docs/docs/filters.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-13\n>   (25)\n> - _M_ docs/docs/index.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-14\n>   (9)\n> - _M_ docs/docs/loaders.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-15\n>   (21)\n> - _D_ docs/docs/previous.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-16\n>   (25)\n> - _M_ docs/docs/tags.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-17\n>   (23)\n> - _M_ docs/index.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-18\n>   (107)\n> - _D_ docs/index.json\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-19\n>   (3)\n> - _D_ docs/js/lib/less.min.js\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-20\n>   (1)\n> - _M_ docs/js/master.js\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-21\n>   (1)\n> - _D_ docs/layouts/master.html\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-22\n>   (59)\n> - _D_ docs/less/button.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-23\n>   (22)\n> - _D_ docs/less/fork.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-24\n>   (23)\n> - _D_ docs/less/header.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-25\n>   (61)\n> - _D_ docs/less/layout.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-26\n>   (96)\n> - _D_ docs/less/mixins.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-27\n>   (268)\n> - _D_ docs/less/rainbow.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-28\n>   (58)\n> - _D_ docs/less/reset.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-29\n>   (250)\n> - _D_ docs/less/sidenav.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-30\n>   (16)\n> - _D_ docs/less/swig.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-31\n>   (124)\n> - _D_ docs/less/variables.less\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-32\n>   (42)\n> - _M_ package.json\n>   https://github.com/node-swig/swig-templates/pull/24/files#diff-33\n>   (35)\n> \n> Patch Links:\n> - https://github.com/node-swig/swig-templates/pull/24.patch\n> - https://github.com/node-swig/swig-templates/pull/24.diff\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/node-swig/swig-templates/pull/24, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_bbiB35s0LE0YoGHCXexMGNMBfUjks5qmK9fgaJpZM4J0KGv\n> .\n",
      "createdAt": "2016-09-03T00:48:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM4NzY1MTk=",
        "title": "New Documentation",
        "url": "https://github.com/node-swig/swig-templates/pull/24"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0NTQzMzQ0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0NTQzMzQ0NQ==",
      "body": "thanks! i completely agree.  resolved conflicts, accepted your commits, and merged over in #5\n",
      "createdAt": "2016-09-07T22:01:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM5MzA2Mzk=",
        "title": "Split the challenge-specific code out of challenge-tooling.js",
        "url": "https://github.com/cdaringe/front-end-challenge/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/front-end-challenge"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0NTQzNDE1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0NTQzNDE1Ng==",
      "body": "this was in fact part of what i wanted the interviewee to figure out.  perhaps it was overly convoluted.\n\na moderate amount of my challenge content here is a bit contrived, so forgive me in that regard.  however, the assertions should still guide the participant to success, i hope!\n",
      "createdAt": "2016-09-07T22:04:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM5MzA3NTA=",
        "title": "Correctly demonstrate how to \"output\" kebab-case",
        "url": "https://github.com/cdaringe/front-end-challenge/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/front-end-challenge"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0NTQzNDc0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0NTQzNDc0Mg==",
      "body": "nice!  i didn't know `format-patch` was a thing™!\n",
      "createdAt": "2016-09-07T22:06:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM5MzE1NTA=",
        "title": "Add instructions for covertly submitting answers",
        "url": "https://github.com/cdaringe/front-end-challenge/pull/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/front-end-challenge"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0NzY4MDU0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0NzY4MDU0MQ==",
      "body": "thanks dawgs! 🐶 \n",
      "createdAt": "2016-09-16T18:59:38Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzQ4NjgyMTc=",
        "title": "electron-prebuilt distribution size",
        "url": "https://github.com/electron-userland/electron-prebuilt/issues/187"
      },
      "repository": {
        "nameWithOwner": "electron-userland/electron-prebuilt"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0NzczMjY1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0NzczMjY1NA==",
      "body": "i rolled back from gradle 3.0 to 2.12 and it worked ok.\n",
      "createdAt": "2016-09-16T23:39:10Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzc1NDA5OTI=",
        "title": "jetty appRun[Debug] crashes on run",
        "url": "https://github.com/akhikhl/gretty/issues/292"
      },
      "repository": {
        "nameWithOwner": "akhikhl/gretty"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0Nzg1Mjk2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0Nzg1Mjk2Mg==",
      "body": "+1\n",
      "createdAt": "2016-09-18T15:06:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODU2ODA2MDY=",
        "title": "Update deps",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/67"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0Nzg1MzAxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0Nzg1MzAxMg==",
      "body": "+1\n",
      "createdAt": "2016-09-18T15:07:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODU2ODE3NDQ=",
        "title": "Remove function-bind dep in testing",
        "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/68"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0ODA5MTc5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0ODA5MTc5OQ==",
      "body": "@isidorn good call. could have been. i am skeptical however, because it persisted across runs.\n...and boom, there it is!\n\nsteps to reproduce:\n- enter variable pane whilst debugging\n- double click var for live editing (as shown above)\n- immediately click \"play\" such that execution ends\n\non next run, all variables will be dimmed. :bug:\n\nediting and exiting the edit context will restore the colors.\n",
      "createdAt": "2016-09-19T19:09:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzc2MTc2MjU=",
        "title": "variables pane went dim seemingly randomly during debug session, persisted until vscode reopend",
        "url": "https://github.com/microsoft/vscode/issues/12203"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0ODE1MzUxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0ODE1MzUxMA==",
      "body": "nevermind, it re-surfaced today :(  there's some nuance in the system.  i'll see if i can't isolate it, but this is real bummery!\n",
      "createdAt": "2016-09-19T22:59:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzc1NDA5OTI=",
        "title": "jetty appRun[Debug] crashes on run",
        "url": "https://github.com/akhikhl/gretty/issues/292"
      },
      "repository": {
        "nameWithOwner": "akhikhl/gretty"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0ODM2MTE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0ODM2MTE4NQ==",
      "body": "@akhikhl, is there any further information to provide that would aid in determining root cause here?  i'm not familiar with developing gradle plugins and running them locally such that I could effectively debug it on my own... _yet_\n",
      "createdAt": "2016-09-20T16:49:26Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzc1NDA5OTI=",
        "title": "jetty appRun[Debug] crashes on run",
        "url": "https://github.com/akhikhl/gretty/issues/292"
      },
      "repository": {
        "nameWithOwner": "akhikhl/gretty"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0ODQwMDQxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0ODQwMDQxNg==",
      "body": "Yahoo!  Thanks\n\nOn Sep 20, 2016 1:05 AM, \"Isidor Nikolic\" notifications@github.com wrote:\n\n> Closed #12203 https://github.com/Microsoft/vscode/issues/12203 via\n> 00d2225\n> https://github.com/Microsoft/vscode/commit/00d2225c6b7026d56733b84ad48c29f0b182dde4\n> .\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Microsoft/vscode/issues/12203#event-795269747, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_cVM836yCqr5tVK8LTI1TQZMLXpVks5qr5PDgaJpZM4J_vr0\n> .\n",
      "createdAt": "2016-09-20T19:04:56Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzc2MTc2MjU=",
        "title": "variables pane went dim seemingly randomly during debug session, persisted until vscode reopend",
        "url": "https://github.com/microsoft/vscode/issues/12203"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI0ODQ3MTIzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI0ODQ3MTIzMw==",
      "body": "a co-worker had me hack the following in:\n\n`````` gradle\n   dependencies {\n      classpath 'org.akhikhl.gretty:gretty:1.4.0'\n +    classpath 'org.akhikhl.gretty:gretty-runner:1.4.0'\n    }\n``\n\n```gradle\n    ...\n    compile project(':core')\n +  grettyRunnerJetty7 'org.akhikhl.gretty:gretty-runner:1.4.0'\n  }\n\n``````\n\nit works, but for whatever reason, `gradle` isn't pulling down that transitive dependency.\n",
      "createdAt": "2016-09-20T23:56:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzc1NDA5OTI=",
        "title": "jetty appRun[Debug] crashes on run",
        "url": "https://github.com/akhikhl/gretty/issues/292"
      },
      "repository": {
        "nameWithOwner": "akhikhl/gretty"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDAyNzc3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDAyNzc3Ng==",
      "body": "interesting. when i go to downgrade to beta26 in attempt to figure out if it was a regression...\n\n```\nLerna version mismatch: The current version of lerna is 2.0.0-beta.26, but the Lerna version in `lerna.json` is 2.0.0-beta.28. You can either run `lerna init` again or install `lerna@2.0.0-beta.28`.\n```\n\n```\n$: ~/node/counsel$ find . | grep lerna.json\n# empty!\n```\n",
      "createdAt": "2016-09-27T23:22:26Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzk2NDA3MDg=",
        "title": "lerna.json file not created",
        "url": "https://github.com/lerna/lerna/issues/351"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDM1MTE5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDM1MTE5MA==",
      "body": "Sorry I've been slammed!  +1 to either.  Somehow it's gotta be exposed, and\nmax exposure sounds easiest and most flexible!\n\nOn Sep 28, 2016 5:36 PM, \"Nolan Lawson\" notifications@github.com wrote:\n\n> Confirm, I would prefer custom ajax as well, instead of pre/post\n> functions. It covers more use cases (e.g. Thali's).\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pouchdb/pouchdb/pull/5683#issuecomment-250340620, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_fGpyWLCJNc2JRZMgVSC84l6Ljjxks5quwgJgaJpZM4J8tVw\n> .\n",
      "createdAt": "2016-09-29T01:59:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODUyMTczMDY=",
        "title": "(#5322) - update pouchdb-ajax to exec preRequest and preResponse funct…",
        "url": "https://github.com/pouchdb/pouchdb/pull/5683"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDM5MDM4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDM5MDM4Ng==",
      "body": "no shortage of solutions, I suppose, but I will also have a solution to this problem shortly via: https://github.com/cdaringe/counsel\n",
      "createdAt": "2016-09-29T07:22:01Z",
      "issue": {
        "id": "MDU6SXNzdWU3Nzg0NzkzMA==",
        "title": "idea: standard-readme",
        "url": "https://github.com/standard/standard/issues/141"
      },
      "repository": {
        "nameWithOwner": "standard/standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDUzMzMxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDUzMzMxMg==",
      "body": "i noticed this last night.  further, today, it looks like it _tried_ to update, but what rendered is in fact partial old content and partial new content.\n\nfor instance @ https://www.npmjs.com/package/counsel,\n\nthe bulk of the readme is from `0.0.0`,\n\nbut poorly rendered badge showed up in `0.0.2/3`.\n\nlooks like there's some README trash happenin!\n",
      "createdAt": "2016-09-29T17:21:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzg3Mjg2NjU=",
        "title": "Package pages are out-of-date",
        "url": "https://github.com/npm/www/issues/34"
      },
      "repository": {
        "nameWithOwner": "npm/www"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDc5MTg1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDc5MTg1MA==",
      "body": "hmm. ya, that's troublesome.  sorry about that! i will test/publish a `2.0.2` that is in fact the master code.\n",
      "createdAt": "2016-09-30T16:36:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzk5ODkwMTc=",
        "title": "Where is source of version 2.0.1?",
        "url": "https://github.com/node-swig/swig-templates/issues/27"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDc5MjY3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDc5MjY3OQ==",
      "body": "closed by `2.0.2` & 7a0b2ee \n",
      "createdAt": "2016-09-30T16:39:54Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzk5ODkwMTc=",
        "title": "Where is source of version 2.0.1?",
        "url": "https://github.com/node-swig/swig-templates/issues/27"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDgwNjQ4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDgwNjQ4NQ==",
      "body": "@paulcpederson,\n- got coverage working again. was going to push to `docs` branch, then merge into yours... foolishly didn't see that there already was a docs branch in `swig-templates`... :)  whatever.\n- so, coverage is back, https://travis-ci.org/node-swig/swig-templates/builds/164090583, BUT, the `docs` scripts are still wonky\n",
      "createdAt": "2016-09-30T17:40:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM4NzY1MTk=",
        "title": "New Documentation",
        "url": "https://github.com/node-swig/swig-templates/pull/24"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDgwNzAyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDgwNzAyMQ==",
      "body": "@paulcpederson, we can both run off of the `swig-templates#docs` branch to keep this guy alive! opened #29 as a continuation of this effort. at least we're green now :)\n",
      "createdAt": "2016-09-30T17:42:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM4NzY1MTk=",
        "title": "New Documentation",
        "url": "https://github.com/node-swig/swig-templates/pull/24"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDg4NzM5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDg4NzM5NA==",
      "body": "@lochlan we weren't green specifically on Paul's doc branch\n\nOn Sep 30, 2016 1:03 PM, \"Lochlan McIntosh\" notifications@github.com\nwrote:\n\n> @cdaringe https://github.com/cdaringe we've been green for a month? #25\n> https://github.com/node-swig/swig-templates/pull/25\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/node-swig/swig-templates/pull/24#issuecomment-250838882,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_SBa7N4p341rr0kqIdUNdBwZVQt3ks5qvWrhgaJpZM4J0KGv\n> .\n",
      "createdAt": "2016-10-01T02:32:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM4NzY1MTk=",
        "title": "New Documentation",
        "url": "https://github.com/node-swig/swig-templates/pull/24"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDg4NzQyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDg4NzQyNA==",
      "body": "Oh whoops, biff. Not sure how I didn't see #25!!\n\nOn Sep 30, 2016 7:32 PM, \"Christopher Dieringer\" cdieringer@mrn.org wrote:\n\n> @lochlan we weren't green specifically on Paul's doc branch\n> \n> On Sep 30, 2016 1:03 PM, \"Lochlan McIntosh\" notifications@github.com\n> wrote:\n> \n> > @cdaringe https://github.com/cdaringe we've been green for a month? #25\n> > https://github.com/node-swig/swig-templates/pull/25\n> > \n> > —\n> > You are receiving this because you were mentioned.\n> > Reply to this email directly, view it on GitHub\n> > https://github.com/node-swig/swig-templates/pull/24#issuecomment-250838882,\n> > or mute the thread\n> > https://github.com/notifications/unsubscribe-auth/AA9O_SBa7N4p341rr0kqIdUNdBwZVQt3ks5qvWrhgaJpZM4J0KGv\n> > .\n",
      "createdAt": "2016-10-01T02:32:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM4NzY1MTk=",
        "title": "New Documentation",
        "url": "https://github.com/node-swig/swig-templates/pull/24"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MDk1MzI4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MDk1MzI4Mg==",
      "body": "hi all. i released `lerna-npm-readme-hack` for easy plug-n-play for lerna packages to deal with this in the interim.  it's a little bit of copy & paste from @philholden's stuff + a CLI.\n\nhttps://www.npmjs.com/package/lerna-npm-readme-hack\n",
      "createdAt": "2016-10-02T04:39:14Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjg3Mzk4Mzk=",
        "title": "README.md not updating across publishes.",
        "url": "https://github.com/npm/registry-issue-archive/issues/42"
      },
      "repository": {
        "nameWithOwner": "npm/registry-issue-archive"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MTEzNDk0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MTEzNDk0Mg==",
      "body": "Ya I did.  I'm unable to reproduce.  Downgrading and upgrading seemed to work, which isn't helpful :/\n",
      "createdAt": "2016-10-03T15:17:26Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzk2NDA3MDg=",
        "title": "lerna.json file not created",
        "url": "https://github.com/lerna/lerna/issues/351"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MTE1ODE1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MTE1ODE1NA==",
      "body": "+1\n",
      "createdAt": "2016-10-03T16:43:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODQyMjgwNDQ=",
        "title": "Fix Travis build status badge. Remove Gemnasium dependency badge.",
        "url": "https://github.com/node-swig/swig-templates/pull/26"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MTE5Mzk0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MTE5Mzk0Mg==",
      "body": "https://www.youtube.com/watch?v=DxxR8JFsvlc\n\nOn Mon, Oct 3, 2016 at 11:56 AM, Cory Reed notifications@github.com wrote:\n\n> Right now we get something like:\n> \n> {\"level\":\"error\",\"message\":\"[ui] Unhandled rejection:\",\"timestamp\":\"2016-10-03T18:50:59.338Z\"}\n> \n> Totally unusable. Actually log ‘em errors!\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/MRN-Code/coinstac/issues/60, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_a1eAVIUKEz6rQ9QmztCjlyEGasVks5qwU_7gaJpZM4KM6nj\n> .\n",
      "createdAt": "2016-10-03T18:57:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxODA3MTc4Mzc=",
        "title": "Clean up UI error logging.",
        "url": "https://github.com/trendscenter/coinstac/issues/60"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MTIxNzkxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MTIxNzkxMg==",
      "body": "will submit a PR. thx\n",
      "createdAt": "2016-10-03T20:31:48Z",
      "issue": {
        "id": "MDU6SXNzdWUxODA3MjMwODI=",
        "title": "document where list of advisories can be viewed",
        "url": "https://github.com/nodesecurity/nsp/issues/134"
      },
      "repository": {
        "nameWithOwner": "nodesecurity/nsp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MTIxODQ4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MTIxODQ4MQ==",
      "body": "see #135 \n",
      "createdAt": "2016-10-03T20:34:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxODA3MjMwODI=",
        "title": "document where list of advisories can be viewed",
        "url": "https://github.com/nodesecurity/nsp/issues/134"
      },
      "repository": {
        "nameWithOwner": "nodesecurity/nsp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MTcyMjUwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MTcyMjUwMw==",
      "body": "i found [this](https://snyk.io/blog/tackling-the-new-npm@3-dependency-tree/) which does as I expected, albeit it [doesn't support](https://github.com/Snyk/resolve-deps/issues/24) `--prod` `--dev` flags like `npm ls` offers.\n",
      "createdAt": "2016-10-05T16:14:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxODA1MjI0MzE=",
        "title": "npm ls does not report out its dependencies' dependencies in a tree-like format",
        "url": "https://github.com/npm/npm/issues/14156"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MTc3NTQxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MTc3NTQxNg==",
      "body": "it's probably worth asking a few qs:\n- how many algo authors have we had?  are those (single digit # of humans) sufficiently large to qualify a sample?\n- if an algo author is coding an algo, he or she should be _highly competent_ in programming in their language of choice.  otherwise, the integrity of the algo is at stake, and we have much bigger problems.  JSON dumping content should not be considered \"too hard\" for an algo author when they are competent to do advanced mathematics and general programming.  where should the technical threshold be??  i would subjectively lobby that run-of-the-mill programming serialization techniques should be an expectation of algo authors. \n\nstdout/stderr behavior, also, IMHO, was reasonable given negative 0 time to crank out a feature. we collectively was discussed to use file i/o, which we never got around to implementing.  writing a file IMHO is often more difficult than a `print(...)` statement :).  now ur talkin' streams _and_ some serialization mechanism.\n",
      "createdAt": "2016-10-05T19:32:59Z",
      "issue": {
        "id": "MDU6SXNzdWUxODEyNDE5MTg=",
        "title": "Rethink Algorithm Development",
        "url": "https://github.com/trendscenter/coinstac/issues/65"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MTg0MzQ2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MTg0MzQ2Nw==",
      "body": "hey boys, what's the scoop?\n",
      "createdAt": "2016-10-06T01:16:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODM1NDk4Nzg=",
        "title": "Update",
        "url": "https://github.com/node-swig/swig-templates/pull/22"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MjA0NTExNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MjA0NTExNA==",
      "body": "it's also strange that when execution ends, the debugging bar/context remains. i would expect the debugging bar to disappear when execution finishes.\n",
      "createdAt": "2016-10-06T18:16:08Z",
      "issue": {
        "id": "MDU6SXNzdWUxODE0ODY2MzQ=",
        "title": "stepping over breakpoint appears to resume execution fully, vs stepping.",
        "url": "https://github.com/microsoft/vscode/issues/13306"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MjExNzE2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MjExNzE2Nw==",
      "body": "the docs, as mentioned in #11425, _already declare that this is how it works_.  FYI!\n",
      "createdAt": "2016-10-06T23:33:15Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzM2MjIxOTc=",
        "title": "Allow omitting '/**/*' in include",
        "url": "https://github.com/microsoft/TypeScript/issues/10578"
      },
      "repository": {
        "nameWithOwner": "microsoft/TypeScript"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MjE1ODU1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MjE1ODU1OA==",
      "body": "whoops, nm.  i now see that jup is _only_ for hw. nm!\n",
      "createdAt": "2016-10-07T05:49:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxODE1ODg1NDE=",
        "title": "`assignments` dir not present, breaking ./bin/launch-jupes.sh out-of-the-box",
        "url": "https://github.com/nehalecky/cs-7641-Machine-Learning/issues/19"
      },
      "repository": {
        "nameWithOwner": "nehalecky/cs-7641-Machine-Learning"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MjI4NTYyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MjI4NTYyOA==",
      "body": "nm, see :eyes: link\n",
      "createdAt": "2016-10-07T15:37:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxODE3MDEwMzM=",
        "title": "understand value proposition",
        "url": "https://github.com/cGuille/async-polling/issues/4"
      },
      "repository": {
        "nameWithOwner": "cGuille/async-polling"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MjcyODQ3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MjcyODQ3NQ==",
      "body": "@daleharvey, nice start!  looks great.  pedantically, i'd prefer `(ajax, opts)` vs `(opts, ajax)`, as `ajax` seems primary `opts` seem secondary to me... but nbd.  i'm borderline ashamed for even commenting about it :)\n",
      "createdAt": "2016-10-10T19:49:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg1ODg5MzQ=",
        "title": "WIP - Add ability to intercept/override ajax",
        "url": "https://github.com/pouchdb/pouchdb/pull/5763"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MjgwNTkyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MjgwNTkyOQ==",
      "body": "sure enough, you guys actually already did the hard work for me!  there's a `depType` key, which yields `\"prod\"` or `\"dev\"`.  i simply picked the `\"dev\"` ones out of the root and had what I needed!\n\nthanks for the lib!\n",
      "createdAt": "2016-10-11T04:01:56Z",
      "issue": {
        "id": "MDU6SXNzdWUxODExOTYxNzQ=",
        "title": "flag support for _just_ prd or _just_ dev deps?",
        "url": "https://github.com/snyk/resolve-deps/issues/24"
      },
      "repository": {
        "nameWithOwner": "snyk/resolve-deps"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MzAxNzgwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MzAxNzgwNA==",
      "body": "any word here?\n",
      "createdAt": "2016-10-11T19:21:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTk2OTU5ODA=",
        "title": "Update mimic.py",
        "url": "https://github.com/mjs2600/mimicry/pull/15"
      },
      "repository": {
        "nameWithOwner": "mjs2600/mimicry"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MzA4NTQ5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MzA4NTQ5Mw==",
      "body": "hey @alansouzati, thanks for writing back.  indeed, you are correct.  the \"how\" to install and run was clear.  the \"why\" i should use it was is not clear.  the homepage doesn't tell me what it is, nor do i think the \"build something now\" was indicative of the value i get from the tool.\n\ni'm guessing (hoping?) this is some sort of pattern-lib + component-api tooling that can be used for FE development between UX & engineering teams?\n\nanyway, hope i didn't come off rude, just sharing my experience\n",
      "createdAt": "2016-10-12T00:26:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxODIzNzk5Nzc=",
        "title": "getting start docs terminate in somewhat of dead end.",
        "url": "https://github.com/grommet/grommet/issues/963"
      },
      "repository": {
        "nameWithOwner": "grommet/grommet"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MzI5OTAxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MzI5OTAxOQ==",
      "body": "- i agree.  i feel that the issue name here could be changed to something more akin to \"don't exit on `.help()` call\"\n- further, i visited the issues section here today specifically because i run `help()` when something _wrong_ has been entered.  hence, i have strong feelings that the exit code should be **non-zero**, wherein now it is 0.\n\nof course this is opinion.  @tj, are you opposed to de-opinionification of `.help()`s behavior?\n",
      "createdAt": "2016-10-12T18:34:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzg0NTUwNTc=",
        "title": "Make calls to process.exit() overridable",
        "url": "https://github.com/tj/commander.js/issues/575"
      },
      "repository": {
        "nameWithOwner": "tj/commander.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MzI5OTI4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MzI5OTI4OQ==",
      "body": "here's a [ref](https://github.com/tj/commander.js/blob/9aad0d01baf93d5e509c267da44f6be9695045fd/index.js#L1052) to the offending code\n",
      "createdAt": "2016-10-12T18:35:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzg0NTUwNTc=",
        "title": "Make calls to process.exit() overridable",
        "url": "https://github.com/tj/commander.js/issues/575"
      },
      "repository": {
        "nameWithOwner": "tj/commander.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MzQwOTQwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MzQwOTQwMQ==",
      "body": "@ggascoigne, please see #2 \n",
      "createdAt": "2016-10-13T04:08:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODkxMTQxNTQ=",
        "title": "A few quick dev hacks.",
        "url": "https://github.com/cdaringe/ripcord/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MzQxMjc2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MzQxMjc2OA==",
      "body": "i'm unclear on how the intent is supposed to work.  why would \"no change\" be a non-zero exit code?  what's the convention such that i can merge things into master that _arent supposed_ to cut new releases?  i dont want CI failing because it discovered \"hey, there's nothing new.\"  in fact, yes, i'm aware there's nothing new, _and that's ok--no reason to exit 1_!  just askin' what i'm missing, here\n",
      "createdAt": "2016-10-13T04:38:53Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzgwMzI3NzA=",
        "title": "Problem: ENOCHANGE There are no relevant changes, so no new version is released.",
        "url": "https://github.com/semantic-release/semantic-release/issues/192"
      },
      "repository": {
        "nameWithOwner": "semantic-release/semantic-release"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MzU5NzE0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MzU5NzE0Mw==",
      "body": "agreed to both @ecoleman @nrambeck.  if either of ya wants to start any effort on the matter, it would be gladly welcomed :)\n",
      "createdAt": "2016-10-13T18:26:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxODEzMDM0NzA=",
        "title": "improve package visibility",
        "url": "https://github.com/node-swig/swig-templates/issues/30"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MzY0NTQ0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MzY0NTQ0NQ==",
      "body": "hello, apologies for the prior brevity.\n\nno steps are mentioned to [install these packages](https://github.com/Merott/semantic-release-codeship-example/blob/master/package.json#L22) or to add verify hash as shown in your package.json!\n",
      "createdAt": "2016-10-13T21:33:31Z",
      "issue": {
        "id": "MDU6SXNzdWUxODI2OTE4NzQ=",
        "title": "instructions missing key steps of installing and codeship condition and configuring it",
        "url": "https://github.com/Merott/semantic-release-codeship-example/issues/1"
      },
      "repository": {
        "nameWithOwner": "Merott/semantic-release-codeship-example"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1MzY5NDQ5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1MzY5NDQ5MQ==",
      "body": "@clovislima, thanks for checking it out!  actually, if you check the [releases](https://github.com/cdaringe/ripcord/releases) section, you'll see that in fact the description has been missing for quite some time.  what's new is the image!  I'll add a description in, but FWIW, this is still probably a bug!\n",
      "createdAt": "2016-10-14T02:32:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxODI5MjY4MDQ=",
        "title": "generated README renders two images",
        "url": "https://github.com/npm/npm/issues/14276"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NDI2MjE1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NDI2MjE1MQ==",
      "body": "@terales, when`ENOCHANGE` happens for me, the cli exits with code 1, and on codeship, a non-zero exit code == fail.  are you suggesting that your CI is configured to allow it to fail? \n",
      "createdAt": "2016-10-17T16:40:15Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzgwMzI3NzA=",
        "title": "Problem: ENOCHANGE There are no relevant changes, so no new version is released.",
        "url": "https://github.com/semantic-release/semantic-release/issues/192"
      },
      "repository": {
        "nameWithOwner": "semantic-release/semantic-release"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NDYyNzUwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NDYyNzUwMg==",
      "body": "IMHO (respectfully) `ENOCHANGE` possibly shouldn't be a thing.  \"no change\" is a valid and expected state, not an error condition.  using ENOCHANGE as a mean of control flow seems like misuse of the `Error` construct.\n\nGrateful for this project, keep up the good work :)\n",
      "createdAt": "2016-10-18T20:21:16Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzgwMzI3NzA=",
        "title": "Problem: ENOCHANGE There are no relevant changes, so no new version is released.",
        "url": "https://github.com/semantic-release/semantic-release/issues/192"
      },
      "repository": {
        "nameWithOwner": "semantic-release/semantic-release"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NDg4Njg2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NDg4Njg2NQ==",
      "body": "or, put a PR on https://github.com/semantic-release/commit-analyzer/\n",
      "createdAt": "2016-10-19T17:42:02Z",
      "issue": {
        "id": "MDU6SXNzdWUxODQwMjgzMjU=",
        "title": "consider supporting `ripcord release --force-version=X.Y.Z`",
        "url": "https://github.com/cdaringe/ripcord/issues/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NDk1NDUyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NDk1NDUyMg==",
      "body": "hey @alansouzati, thanks for beefing up the page with some info!  i waltzed through the changes and looked at the vimeo channel, but still, I was not clear how to achieve that which I came for originally.\n\n> We are a User Experience framework that aims to bridge the gap between design and development\n\nThis is the key claim that interests me.  Component lib + ux playground.  The docs still do not direct me to instructions on how to achieve/explore this.  Of course I don't expect the docs to completely hold my hand, but some direction would be appreciated!\n",
      "createdAt": "2016-10-19T22:04:17Z",
      "issue": {
        "id": "MDU6SXNzdWUxODIzNzk5Nzc=",
        "title": "getting start docs terminate in somewhat of dead end.",
        "url": "https://github.com/grommet/grommet/issues/963"
      },
      "repository": {
        "nameWithOwner": "grommet/grommet"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTE5NTY5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTE5NTY5Mg==",
      "body": "`#!/bin/bash` 👀 \n",
      "createdAt": "2016-10-20T18:54:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTAxMjk2NDQ=",
        "title": "✨ Freshen Builds",
        "url": "https://github.com/trendscenter/coinstac/pull/77"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTE5NTczMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTE5NTczMw==",
      "body": ":)\n",
      "createdAt": "2016-10-20T18:54:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTAxMjk2NDQ=",
        "title": "✨ Freshen Builds",
        "url": "https://github.com/trendscenter/coinstac/pull/77"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTI4MjE2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTI4MjE2Mg==",
      "body": "Hmm, very interesting.  I think I somewhat see what's going on here.  Perhaps I can fiddle on this sometime soon.  I'm assuming that a dirty hack would be to add a `MemberExpression` key to your existing `visitor: { ... }` set, and sniff directly for the two identifiers, `React` & `DOM`, then call into your existing `exit` fn?  It would be nice to rather detect if React.DOM had been imported/tokenized and just check if the MemberExpression === that reference, _and_ if there is yet another field `Identifier` tacked onto it.\n",
      "createdAt": "2016-10-21T02:59:53Z",
      "issue": {
        "id": "MDU6SXNzdWUxODQzNjg0Mjg=",
        "title": "Convert Fully Qualified Import + Field Statements",
        "url": "https://github.com/JoeStanton/babel-transform-js-to-jsx/issues/17"
      },
      "repository": {
        "nameWithOwner": "JoeStanton/babel-transform-js-to-jsx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTQ0ODQ1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTQ0ODQ1NA==",
      "body": "hey @kylefarris, just thinking out loud here, and off the cuff.  shouldn't `reset` also reset the validation state?  otherwise, if you didn't want to reset the validation state, you'd just use `clear`.  that may not be how it's implemented ATM, but seems _possibly_ more clear?  what do you think?\n",
      "createdAt": "2016-10-21T19:39:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA0Mjc3Mjc=",
        "title": "Added the ability to reset validation state.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/75"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTQ0ODcwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTQ0ODcwNw==",
      "body": "sorry for the delay, looks fine to me. +1\n",
      "createdAt": "2016-10-21T19:41:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODgxMzE0ODY=",
        "title": "Change removable behaviour",
        "url": "https://github.com/AmpersandJS/ampersand-array-input-view/pull/20"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-array-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTQ0OTIwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTQ0OTIwMQ==",
      "body": "> The first thing in the README is how to consume the core library\n\nrespectfully, how to use the editions is not what i'm after.  knowing how to use _this library_, how to use _this project_ is that which i have asked about in the title.  sorry for the lack of clarity.  i didn't want to use gulp/grunt.  i was looking into how to adapt patternlab-node into another tool, and expected some dev docs on this page. i expected to see patternlab-node's API docs.  there is a CLI page, but it's tagged WIP and, further, not for _this_ project.\n\nso, kindly, \"how to consume the core library\" I still don't see documented.\n\n> again, true, but ... of missing config entries\n\ni (a friendly stranger) would encourage re-visiting this perspective.  you've developed what appears to be some _really cool, powerful stuff_.  the presented workflow is foreign and awkward to me.  the project offers up a tool, but never gave me a tool directly.  rather, it gave a template and instructions.  i respect the hard work you've done, but I don't want _your project_, i want my project, and your great tools.  `patternify -c my-config.json my-project/`, and kaboom!  looks like per your issues below you're already moving in this direction. 💯 can't wait to see how that turns out.\n\n> yes! as evidenced:\n\nthanks for the x-refs.  that's great news!  very excited about some of this, and look forward to landing some commits.  please keep in mind that you guys have _a ton_ of documentation.  rest assured that i looked.  rather than providing developer docs (the docs I expected in source control project), however, there's lot of content, like, what gulp is or information about npm.  IMHO those should remain on the user pages, not the dev pages.\n\nwhilst you're upset that I asked some repeat questions, I was disgruntled with my lack of ability to do things that I felt should be entirely obvious, but couldn't because the right docs aren't in the right place.\n\nso (genuinely) **sorry for the shade**, i'm grateful for your response, but this issue shouldn't be demoralizing, IMHO, it should be expected.\n",
      "createdAt": "2016-10-21T19:43:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxODMxNzIzMTI=",
        "title": "getting started w/ patternlab-node is not documented/published",
        "url": "https://github.com/pattern-lab/patternlab-node/issues/535"
      },
      "repository": {
        "nameWithOwner": "pattern-lab/patternlab-node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTQ3Nzc0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTQ3Nzc0OA==",
      "body": "gosh, i'm sorry, i'm still having a hard time understanding all of what this PR is attempting to acheive.  apologies for the inconvenience, but can you baby step me through it?  I'm pretty sure i'm just a little slow today 🐢 \n",
      "createdAt": "2016-10-21T22:12:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA0Mjc3Mjc=",
        "title": "Added the ability to reset validation state.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/75"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTQ5NzQ1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTQ5NzQ1MA==",
      "body": "why not just import `lodash.methodname`, given that they are all individually published to npm?\n",
      "createdAt": "2016-10-22T01:04:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODMwMjY4MDY=",
        "title": "feat: using custom lodash build",
        "url": "https://github.com/snyk/resolve-deps/pull/21"
      },
      "repository": {
        "nameWithOwner": "snyk/resolve-deps"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTQ5ODIzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTQ5ODIzNw==",
      "body": "alright, it took a couple tries, but we're all green.  node `0.10` support, killin' me!\n",
      "createdAt": "2016-10-22T01:16:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA0NjM0MzQ=",
        "title": "permit pkg.json extra field extraction",
        "url": "https://github.com/snyk/resolve-deps/pull/25"
      },
      "repository": {
        "nameWithOwner": "snyk/resolve-deps"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTYwNDgwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTYwNDgwNQ==",
      "body": "```\napt: pkg=python-pip state=present\n```\n\nif you're on `apt` friendly systems\n",
      "createdAt": "2016-10-23T18:23:34Z",
      "issue": {
        "id": "MDU6SXNzdWU5MjQ3NTEyNA==",
        "title": "Ansible fails to find required executable pip",
        "url": "https://github.com/ansible/ansible-modules-core/issues/1656"
      },
      "repository": {
        "nameWithOwner": "ansible/ansible-modules-core"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTY0NjYxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTY0NjYxNw==",
      "body": "docs need only one 👍, FYI!\n",
      "createdAt": "2016-10-24T04:40:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA1MjQ0OTM=",
        "title": "Minor README tweak (formatting, phrasing, clarity)",
        "url": "https://github.com/AmpersandJS/ampersand-state/pull/249"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-state"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTc4OTI4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTc4OTI4NQ==",
      "body": "tidied up!\n",
      "createdAt": "2016-10-24T16:19:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA0NjM0MzQ=",
        "title": "permit pkg.json extra field extraction",
        "url": "https://github.com/snyk/resolve-deps/pull/25"
      },
      "repository": {
        "nameWithOwner": "snyk/resolve-deps"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NTc5NTUxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NTc5NTUxNw==",
      "body": "yahoo! 🎉 \n\nwhat's your release process like?\n",
      "createdAt": "2016-10-24T16:42:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA0NjM0MzQ=",
        "title": "permit pkg.json extra field extraction",
        "url": "https://github.com/snyk/resolve-deps/pull/25"
      },
      "repository": {
        "nameWithOwner": "snyk/resolve-deps"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NjEyMTc0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NjEyMTc0MQ==",
      "body": "thanks all!\n\nOn Mon, Oct 24, 2016 at 9:54 AM, Josh Emerson notifications@github.com\nwrote:\n\n> @cdaringe https://github.com/cdaringe Congrats! https://github.com/Snyk/\n> resolve-deps/releases/tag/v1.8.0 🎉\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Snyk/resolve-deps/pull/25#issuecomment-255798722, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_XLgiGmZnFM3YCEVGnE5CjoWaoE_ks5q3OLigaJpZM4KdtKC\n> .\n",
      "createdAt": "2016-10-25T18:21:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA0NjM0MzQ=",
        "title": "permit pkg.json extra field extraction",
        "url": "https://github.com/snyk/resolve-deps/pull/25"
      },
      "repository": {
        "nameWithOwner": "snyk/resolve-deps"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NjIwMzQyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NjIwMzQyNA==",
      "body": "this may belong in `npmlog`? but really `npm` is my entry point!\n",
      "createdAt": "2016-10-25T23:00:59Z",
      "issue": {
        "id": "MDU6SXNzdWUxODUyNTYxMDQ=",
        "title": "--silent doesn't silence --progress as well",
        "url": "https://github.com/npm/npm/issues/14413"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NjM5ODE0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NjM5ODE0NQ==",
      "body": "@kylefarris, amazing writeup.  thanks so much!\n\nwith this new understanding, i'm on board.  i'm going to speak through my thought process below.  i'm sorry to keep dragging out the review, but:\n- are you still convinced reset need the ability?  [select-view](https://github.com/AmpersandJS/ampersand-select-view/blob/master/ampersand-select-view.js#L276) clears it by default.  however, to counter that, clearing by default doesn't represent a _true_ reset if validation was present on init. so 👍 \n- API.  my _personal_ pref would be for the API to be more akin to `field.clear({ validate: false })`.  more specifically, an object based argument, to ++communication/readability.  it's definitely not the status quo (shame on me!) but if this will be rippling back up to form and possibly into other fields, it may be a good opportunity to make it great 💪 \n",
      "createdAt": "2016-10-26T16:09:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA0Mjc3Mjc=",
        "title": "Added the ability to reset validation state.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/75"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1Njc4MjMxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1Njc4MjMxNQ==",
      "body": "🎲 🎲 🎲 🎲 🎲 \nyahtzee!\n",
      "createdAt": "2016-10-27T21:59:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxODMxNjg1OTQ=",
        "title": "is this intended to be a pure npm scripts powered version of patternlab? <eom>",
        "url": "https://github.com/pattern-lab/edition-node/issues/1"
      },
      "repository": {
        "nameWithOwner": "pattern-lab/edition-node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1Njc5NTEwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1Njc5NTEwOA==",
      "body": "LATER HIST!\n",
      "createdAt": "2016-10-27T23:07:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTEyOTM0NTE=",
        "title": "Speedup: remove hist addition to speedup runs",
        "url": "https://github.com/trendscenter/coinstac/pull/86"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NzAzNDY5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NzAzNDY5Mg==",
      "body": "will migrate under `scmcycle`\n",
      "createdAt": "2016-10-28T21:35:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxODQ5MTg3NTA=",
        "title": "consider preversion and publish scripts rolled up into `ripcord publish`",
        "url": "https://github.com/cdaringe/ripcord/issues/16"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NzA5ODkxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NzA5ODkxOA==",
      "body": "woo hooooooo @swashcap :eyes:\n",
      "createdAt": "2016-10-29T15:47:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg1ODg5MzQ=",
        "title": "WIP - Add ability to intercept/override ajax",
        "url": "https://github.com/pouchdb/pouchdb/pull/5763"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NzExOTI3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NzExOTI3NA==",
      "body": "`_.merge` is a good option to address collisions.  `_.defaults` could be used as well.  whatever is most fitting for what you observe in the codebase.  `_.assign` is fine if parameters are flat-ish.  call the ball, based on what you see \n",
      "createdAt": "2016-10-29T22:16:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA0Mjc3Mjc=",
        "title": "Added the ability to reset validation state.",
        "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/75"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1NzU4OTQ5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1NzU4OTQ5Mg==",
      "body": "Thanks!  I do not have the time ATM.  Feel free to close if you dont care to use it\n",
      "createdAt": "2016-11-01T15:01:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTE3MDc1MjU=",
        "title": "feat(pkg): use resolve-jsdoc-bin",
        "url": "https://github.com/mrjoelkemp/jsdoc3-parser/pull/10"
      },
      "repository": {
        "nameWithOwner": "mrjoelkemp/jsdoc3-parser"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1ODI4ODQzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1ODI4ODQzMw==",
      "body": "if anyone knows of any off hand, a url would be great!\n",
      "createdAt": "2016-11-03T22:05:52Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcxMjc2ODM=",
        "title": "refs to example projects availability",
        "url": "https://github.com/frctl/fractal/issues/174"
      },
      "repository": {
        "nameWithOwner": "frctl/fractal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1ODQ0Njk4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1ODQ0Njk4OQ==",
      "body": "no sweat!\n\nOn Fri, Nov 4, 2016 at 4:55 AM, Mark Perkins notifications@github.com\nwrote:\n\n> @cdaringe https://github.com/cdaringe I'll try and dig up some URLs for\n> you, some people have linked to theirs in the past - there is no 'official'\n> demo site up yet unfortunately :-(\n> \n> One i know of offhand is https://ubisend.medium.io/ - it doesn't have any\n> docs but has quite a few components. I'll try and collect some other links\n> and add them to the docs when I can.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/frctl/fractal/issues/174#issuecomment-258412911, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AA9O_SVcSrmFDYNYOn-fJnDoHK5y8RBVks5q6x0egaJpZM4KopSq\n> .\n",
      "createdAt": "2016-11-04T14:32:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcxMjc2ODM=",
        "title": "refs to example projects availability",
        "url": "https://github.com/frctl/fractal/issues/174"
      },
      "repository": {
        "nameWithOwner": "frctl/fractal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1ODUwOTAyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1ODUwOTAyNA==",
      "body": "& `patternplate-transform-react`, `patternplate-transform-react-mount`, `patternplate-transform-react-to-markup`\n",
      "createdAt": "2016-11-04T18:17:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxODczOTkxNjg=",
        "title": "fails to run on fresh install",
        "url": "https://github.com/patternplate/patternplate/issues/110"
      },
      "repository": {
        "nameWithOwner": "patternplate/patternplate"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1ODU1MzI3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1ODU1MzI3Nw==",
      "body": "can the addons not fill this role somehow already?\n",
      "createdAt": "2016-11-04T21:34:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcwNTk5MzM=",
        "title": "style guide generation, react-styleguidist integration?",
        "url": "https://github.com/storybookjs/storybook/issues/602"
      },
      "repository": {
        "nameWithOwner": "storybookjs/storybook"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1ODU3NjY0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1ODU3NjY0Mg==",
      "body": ">  i'm registering then decorating the stories per the books\n\n... as evidenced by the NOTES plugin rendering successfully :) _?_\n",
      "createdAt": "2016-11-05T00:11:26Z",
      "issue": {
        "id": "MDU6SXNzdWUxODc0NjM0NDU=",
        "title": "knobStore is null, and crashes",
        "url": "https://github.com/storybook-eol/storybook-addon-knobs/issues/72"
      },
      "repository": {
        "nameWithOwner": "storybook-eol/storybook-addon-knobs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1ODU4NTk5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1ODU4NTk5OA==",
      "body": "oh i gotcha!  thanks!  works :) \n",
      "createdAt": "2016-11-05T02:36:27Z",
      "issue": {
        "id": "MDU6SXNzdWUxODc0NjM0NDU=",
        "title": "knobStore is null, and crashes",
        "url": "https://github.com/storybook-eol/storybook-addon-knobs/issues/72"
      },
      "repository": {
        "nameWithOwner": "storybook-eol/storybook-addon-knobs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1ODkwNDY5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1ODkwNDY5Ng==",
      "body": "we're probably getting ahead of ourselves with that.  no, i don't think anyone has reached out recently.  the 3-4 of us who have done some continued work in this project haven't gone to great lengths to re-request name rights.\n\nin regards to @ecoleman's remark about updating the docs, great point.  filing it as a separate issue, #32\n",
      "createdAt": "2016-11-07T17:35:51Z",
      "issue": {
        "id": "MDU6SXNzdWUxODEzMDM0NzA=",
        "title": "improve package visibility",
        "url": "https://github.com/node-swig/swig-templates/issues/30"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1OTA3Mzc3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1OTA3Mzc3Ng==",
      "body": "no sweat.\n\ni took your exact template (sans \"...\" sets) and did the following.\n\n``` js\n// test.js\n'use strict'\nconst swig = require('swig-templates')\nconst output = swig.renderFile('./test.swig', {\n  collections: {\n    posts: [ { date: new Date() }, { date: new Date() } ]\n  }\n})\nconsole.log(output)\n```\n\n``` html\n{% for post in collections.posts %}\n    <span class=\"post-date\">{{ post.date | date('d M Y') }}</span>\n{% endfor %}\n```\n\n``` html\n$ node test.js\n    <span class=\"post-date\">08 Nov 2016</span>\n\n    <span class=\"post-date\">08 Nov 2016</span>\n```\n\nmy guess is that you copied and pasted your `date` filter from somewhere, and some bogus characters ended up in your clipboard that your editor isn't rendering\n",
      "createdAt": "2016-11-08T08:20:58Z",
      "issue": {
        "id": "MDU6SXNzdWUxODc4NjY0NDg=",
        "title": "problem with date",
        "url": "https://github.com/node-swig/swig-templates/issues/34"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1OTA3NDA5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1OTA3NDA5Ng==",
      "body": "http://www.ascii.cl/htmlcodes.htm\n\nare you running in the browser or on node?\n",
      "createdAt": "2016-11-08T08:22:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxODc4NjY0NDg=",
        "title": "problem with date",
        "url": "https://github.com/node-swig/swig-templates/issues/34"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1OTIwNDE0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1OTIwNDE0OQ==",
      "body": "okee doke.  yep, i test the above in node.  _something else_ is likely the matter.  feel free to bounce more ideas off of us\n",
      "createdAt": "2016-11-08T17:34:51Z",
      "issue": {
        "id": "MDU6SXNzdWUxODc4NjY0NDg=",
        "title": "problem with date",
        "url": "https://github.com/node-swig/swig-templates/issues/34"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1OTIzODM0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1OTIzODM0NA==",
      "body": "hmmm... that sounds peculiar.  just to be thorough, i converted mine to `.md` and it still went ok.  something peculiar is still afoot possibly.  regardless, both of our _things_™ are in motion!\n",
      "createdAt": "2016-11-08T19:42:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxODc4NjY0NDg=",
        "title": "problem with date",
        "url": "https://github.com/node-swig/swig-templates/issues/34"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1OTQ5NDAxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1OTQ5NDAxNQ==",
      "body": "@wraithgar had worked on this some time ago.  it was so long ago that I don't recall the issue!  by this point there's surely a way to get all our CI alive again :$\n",
      "createdAt": "2016-11-09T18:53:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg4NDkxMzA=",
        "title": "Enable remove animation for empty view",
        "url": "https://github.com/AmpersandJS/ampersand-collection-view/pull/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1OTQ5NDE3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1OTQ5NDE3OA==",
      "body": "+1\n",
      "createdAt": "2016-11-09T18:54:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg4NDkxMzA=",
        "title": "Enable remove animation for empty view",
        "url": "https://github.com/AmpersandJS/ampersand-collection-view/pull/46"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-collection-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1OTgwMjA0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1OTgwMjA0OQ==",
      "body": "WAT!  get out of town!  Cool :)\n",
      "createdAt": "2016-11-10T20:43:53Z",
      "issue": {
        "id": "MDU6SXNzdWUxODg1OTM5Mjk=",
        "title": "RFC: import lodash modules explicitly, vs _ import",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/830"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI1OTg5ODAzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI1OTg5ODAzNw==",
      "body": "cool! thanks again!\n",
      "createdAt": "2016-11-11T07:28:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxODg2NjYxMjU=",
        "title": "button in Form.Group size not honored",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/834"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3Mw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://8529cef6-5f4e-45c1-a072-791709c0460b.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.7.3/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-13T18:27:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTE0ODg5Nzg=",
        "title": "redux-logger@2.7.3 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/21"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3NA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://be0b5ec9-71c5-4962-a030-052ef670c18d.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.7.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-13T18:27:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTE0NDYyOTk=",
        "title": "redux-logger@2.7.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/20"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3NQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://6538f855-8932-4d61-8b80-dd6b0910b493.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.7.4/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-13T18:27:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTE0ODkwNjk=",
        "title": "redux-logger@2.7.4 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/22"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3Ng==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://89b75dea-a941-4bfc-b4bf-8dedc908353c.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.7.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-13T18:27:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTE0NDI4MjE=",
        "title": "redux-logger@2.7.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/19"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDIwMjc3Nw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://3fd7133c-cad8-4f3b-8753-3be8874d54b3.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-router-3.0.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-13T18:27:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA3MzI4Mzg=",
        "title": "Update react-router to version 3.0.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/18"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDMyMTI2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDMyMTI2Nw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://ea6deb07-8b41-408a-99ad-9ce69a9510a5.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-redux-4.4.6/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-14T12:19:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTM1NTY2ODY=",
        "title": "react-redux@4.4.6 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/24"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDc4MTc2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDc4MTc2OQ==",
      "body": "even if's unofficial, does anyone else in the community have a strategy for this?\n",
      "createdAt": "2016-11-15T21:53:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxODQwMjc0ODU=",
        "title": "support for LTS, multiple majors, or service patches?",
        "url": "https://github.com/semantic-release/semantic-release/issues/320"
      },
      "repository": {
        "nameWithOwner": "semantic-release/semantic-release"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDkyNjk2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDkyNjk2OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://80c09e64-8cb0-459b-bea4-29d24eef9c88.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.30.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-16T11:48:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTM5NTA5Nzc=",
        "title": "@kadira/storybook@2.30.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/25"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDk4MTY4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDk4MTY4Mg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://c51b5df9-85a1-4237-bf9d-aabc8b7f0371.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-15.4.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-16T15:50:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTM5OTE5NTk=",
        "title": "react@15.4.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/26"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MDk4Mzg4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MDk4Mzg4Ng==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://574b2902-a555-4a28-9d24-32596f0acc77.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-dom-15.4.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-16T15:57:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTM5OTM1Njg=",
        "title": "react-dom@15.4.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/27"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTA3MzAyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTA3MzAyNw==",
      "body": "10, 10+, borderrrliiinnnnnne 11! 🎉 \n",
      "createdAt": "2016-11-16T21:11:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg1MjIxNzg=",
        "title": "Log levels",
        "url": "https://github.com/lerna/lerna/pull/367"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTA3NDQ2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTA3NDQ2MQ==",
      "body": "@ndelvalle, most likely, your `coverage/lcov.info` is empty\n",
      "createdAt": "2016-11-16T21:16:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDUzMDMwNDI=",
        "title": "Jest --coverage : help",
        "url": "https://github.com/nickmerwin/node-coveralls/issues/126"
      },
      "repository": {
        "nameWithOwner": "nickmerwin/node-coveralls"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTEyNjc0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTEyNjc0Ng==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://aaa2844c-7fc8-4697-aafb-8a3548c460b6.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-gh-pages-0.12.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-17T01:23:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTQwODUyODU=",
        "title": "Update gh-pages to version 0.12.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/28"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTEzMTExMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTEzMTExMg==",
      "body": "https://gist.github.com/boennemann/54042374e49c7ade8910\n",
      "createdAt": "2016-11-17T01:51:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxODQwMjgzMjU=",
        "title": "consider supporting `ripcord release --force-version=X.Y.Z`",
        "url": "https://github.com/cdaringe/ripcord/issues/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTIwOTQwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTIwOTQwNg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://72a9135b-fe59-494a-8a76-dabdf57aad9c.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.30.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-17T10:20:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTQxMzg2NzE=",
        "title": "@kadira/storybook@2.30.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/29"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTQwMjA4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTQwMjA4MA==",
      "body": "@cpojer, i can confirm this is still an issue.\n- [here](https://github.com/cdaringe/octagon/blob/master/package.json#L75) you will see that coverage is requested. on `npm test`, indeed, jest shows the coverage report\n- the report in stdout shows 100% coverage, yet the `coverage/lcov*` and `coverage/*.xml` show as 0% coverage.  hence, there is an easily reproducible discrepancy between outputs\n\njest 17.x.  thx!\n",
      "createdAt": "2016-11-17T23:24:07Z",
      "issue": {
        "id": "MDU6SXNzdWU5NDk4MDI0OQ==",
        "title": "Empty coverage",
        "url": "https://github.com/jestjs/jest/issues/433"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTQzODYxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTQzODYxMQ==",
      "body": "Awesome!\n",
      "createdAt": "2016-11-18T03:15:27Z",
      "issue": {
        "id": "MDU6SXNzdWUxODUyNTYxMDQ=",
        "title": "--silent doesn't silence --progress as well",
        "url": "https://github.com/npm/npm/issues/14413"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTY2NTYxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTY2NTYxOA==",
      "body": "this was problematic because I was under the impression that the test had been started, when in fact, it never had\n",
      "createdAt": "2016-11-18T23:07:02Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTA0NDMyNzA=",
        "title": "accurate but confusing testing error state messages",
        "url": "https://github.com/tape-testing/tape/issues/332"
      },
      "repository": {
        "nameWithOwner": "tape-testing/tape"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTcyODA2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTcyODA2NQ==",
      "body": "i agree. \n\nconsider, which is the test?\n- `t => t.equals(fruit(), 'bananas')`, or\n- `tape('fruit', t => t.equals(fruit(), 'bananas'))`\n\nmost correctly (harness + assertions), the latter.  practically, the former.  it's this subtle ambiguity that leads to my periodic confusion.\n\nall of this isn't really a big deal, per se.  however, the error message naturally makes me think, \"oh, i forgot a t.end() or t.plan(...) or something.\"  well no, i didn't.  it's just that the error messages resemble a symptom of the failure, not the cause, which is detectable in our case.\n\nhere's what could have been cool:\n\n```\n# a\nnot ok 1 test errored unexpectedly\n  ---\n    operator: fail\n  ...\nnot ok 2 test skipped due to upstream test errors\n  ---\n    operator: fail\n  ...\n\n1..2\n# tests 2\n# pass  0\n# fail  2\n```\n\nre-open if you think any of my remarks are worthy of further investigation/discussion.  thx!\n",
      "createdAt": "2016-11-19T17:43:19Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTA0NDMyNzA=",
        "title": "accurate but confusing testing error state messages",
        "url": "https://github.com/tape-testing/tape/issues/332"
      },
      "repository": {
        "nameWithOwner": "tape-testing/tape"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MTc0NzQ4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MTc0NzQ4OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://231e9b4d-3d44-4226-bbbf-409fc0f33c1a.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.31.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_\n",
      "createdAt": "2016-11-19T23:41:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTQ1MDAzOTM=",
        "title": "@kadira/storybook@2.31.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/30"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MjAxODYyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MjAxODYyOQ==",
      "body": "Ya that makes sense!  Im wondering if a different lib however is also backwards compatible and well behaved",
      "createdAt": "2016-11-21T18:07:14Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTA0NDM2OTI=",
        "title": "consider dropping es6-promise",
        "url": "https://github.com/snyk/resolve-deps/issues/27"
      },
      "repository": {
        "nameWithOwner": "snyk/resolve-deps"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MjEwNzc2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MjEwNzc2Ng==",
      "body": "i suppose this may? be impossible to resolve in the current implementation.  the resultant dep report comes back in a POJO, keyed by module names.  if conflicting module names exist in deps/devDeps, one must take precedence.  i've been re-keying things in my reports by `${name}${delim}${version}` s.t. all cases can be considered.\r\n\r\nhmm.",
      "createdAt": "2016-11-22T00:06:50Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTA4Njg5MDI=",
        "title": "incorrect depType being reported",
        "url": "https://github.com/snyk/resolve-deps/issues/28"
      },
      "repository": {
        "nameWithOwner": "snyk/resolve-deps"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MjEyNDk5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MjEyNDk5Mg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://dd1a0543-9a83-4a47-9356-5057b0ab6ede.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.32.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-11-22T01:53:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTQ3MzM5Nzc=",
        "title": "@kadira/storybook@2.32.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/31"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MjEzNzYwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MjEzNzYwOA==",
      "body": "It would be nice to expose the nested modules all the way up the dep tree, that way I don't need to explicitly install the sub-modules (and worry about package deduping) or do naughty implicit requires.  Would you be ok with that?\r\n\r\nLitter opinions could go without saying.",
      "createdAt": "2016-11-22T03:24:58Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTA4NDczNDk=",
        "title": "feature: consider memoization extenstion",
        "url": "https://github.com/sindresorhus/package-up/issues/2"
      },
      "repository": {
        "nameWithOwner": "sindresorhus/package-up"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MjM3NjMyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MjM3NjMyNw==",
      "body": "hi all,\r\n\r\ni unexpectedly encountered this too.\r\n\r\n@ahejlsberg, can you clarify on your remarks further?  the discussion in #3095 seems to be focusing more on the declaration collisions, which is all said and good.\r\n\r\n@clavecoder, i don't fully see the rationale you point to. `Interface`s aren't valid ecmascript either, so why shed convention?\r\n\r\nthese remarks are (of course) stated in a cordial tone.  however, this decision feels very counterintuitive to me",
      "createdAt": "2016-11-22T21:50:46Z",
      "issue": {
        "id": "MDU6SXNzdWU3NzQ0MzE1Nw==",
        "title": "Export default on interface not allowed",
        "url": "https://github.com/microsoft/TypeScript/issues/3194"
      },
      "repository": {
        "nameWithOwner": "microsoft/TypeScript"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MjM5Njg2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MjM5Njg2NQ==",
      "body": "oh i see!  thanks.  i'll follow on over there.",
      "createdAt": "2016-11-22T23:27:35Z",
      "issue": {
        "id": "MDU6SXNzdWU3NzQ0MzE1Nw==",
        "title": "Export default on interface not allowed",
        "url": "https://github.com/microsoft/TypeScript/issues/3194"
      },
      "repository": {
        "nameWithOwner": "microsoft/TypeScript"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MjQyMzA5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MjQyMzA5NQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://065af154-d2eb-440c-a6bf-b491753aaf37.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-dom-15.4.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-11-23T02:40:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTQ5MzY3ODE=",
        "title": "react-dom@15.4.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/32"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MjQyNjk5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MjQyNjk5OQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://5cda77d4-4235-4490-af6d-37bba8891540.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-15.4.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-11-23T03:20:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTQ5Mzk2MjU=",
        "title": "react@15.4.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/33"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MjYwNDE4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MjYwNDE4Mg==",
      "body": "Nice!  Ya for sure.  Maybe we can just rename this project to swig-templates-extras to follow our current single package convention!",
      "createdAt": "2016-11-23T19:05:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTQ5ODE3NTc=",
        "title": "Use node-swig/swig-templates fork",
        "url": "https://github.com/node-swig/swig-extras/pull/1"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-extras"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MzAxMDA1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MzAxMDA1Nw==",
      "body": "+1",
      "createdAt": "2016-11-25T18:45:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTUzMzU2MzA=",
        "title": "Use the last argument of lodash.result for the ajaxConfig fallback value",
        "url": "https://github.com/AmpersandJS/ampersand-sync/pull/78"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-sync"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MzA0NjE3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MzA0NjE3NA==",
      "body": "sure!  that was a little confusing, so apologies there.\r\n\r\nessentially i'm asking for:\r\n\r\n```js\r\nconst readPkgUp = require('read-pkg-up')\r\nreadPkgUp.findUp // <== to be a thing\r\n...\r\nconst memReadPkgUp = mem(readPkgUp.findUp)\r\n```\r\n_versus_\r\n\r\n```js\r\nconst readPkgUp = require('read-pkg-up')\r\nconst findUp = mem(require('find-up'))\r\n// ^^ the key difference is the require vs the exposed findUp function.  this is\r\n// because i dont want to have to worry about `findUp` being _the_ correct findUp instance.\r\n// it's not a huge deal, but exposing findUp directly keeps me from worrying about incomplete\r\n// deduping / my dependency tree permitting a singleton `find-up` package. it's\r\n// important that i get the correct findUp s.t. I can reliably memoize.\r\n// also, it keeps my dep count down :) !\r\n```\r\n\r\nfood for thought\r\n",
      "createdAt": "2016-11-26T05:57:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTA4NDczNDk=",
        "title": "feature: consider memoization extenstion",
        "url": "https://github.com/sindresorhus/package-up/issues/2"
      },
      "repository": {
        "nameWithOwner": "sindresorhus/package-up"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MzE1NzE5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MzE1NzE5NQ==",
      "body": "@swashcap, looks great!  looks like it took forever! :shipit: ",
      "createdAt": "2016-11-27T23:51:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTU0MjA4ODQ=",
        "title": "🛀 Upgrade everything!",
        "url": "https://github.com/trendscenter/coins-browser-test/pull/8"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coins-browser-test"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MzE4ODczOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MzE4ODczOA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://5da35c45-b140-47fa-bcc6-54a5ed768394.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.32.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-11-28T05:50:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTU0NDE3NjA=",
        "title": "@kadira/storybook@2.32.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/34"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MzIxNjc0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MzIxNjc0OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://f65ebd20-e013-4899-bf79-1ddd5210fb56.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.33.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-11-28T09:01:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTU0NTkzMDU=",
        "title": "@kadira/storybook@2.33.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/35"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MzM3NTUyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MzM3NTUyNA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://cfaebda6-3308-4d99-8a71-625d8389b840.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-storybook-host-1.0.8/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-11-28T19:52:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTU1NjUyMzY=",
        "title": "storybook-host@1.0.8 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/36"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2MzQyNDQ1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2MzQyNDQ1Ng==",
      "body": "💣 Boom!  nice @weinand, you're the man!",
      "createdAt": "2016-11-28T23:09:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxMTk4OTc2NTI=",
        "title": "blackbox/ignore modules for debugging in node",
        "url": "https://github.com/microsoft/vscode-node-debug/issues/16"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode-node-debug"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2Mzk2NzEyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2Mzk2NzEyNg==",
      "body": "hi @levithomason, sorry for the lack of clarity.  yes, the codepen does render everything correctly (though the service appears to be partially down, ATM?), it's just I wanted the \"BLAH BLAH\" `<Segment />` to expand to have the same height as it's neighbor, or similarly, the same height as the parent element.\r\n\r\ni'm wondering what the best way is in order to make an `Element` do something similar to `height: 100%` to fill it's parent container, without writing my own CSS.\r\n\r\ni do realize it's somewhat a chicken before the egg problem, where the container expands to accommodate its children's height, but similarly, I want \"shorter children\" to fill the parent's height if they would be shorter.  i've got a feeling this is a flexbox only thing--unsure if SUI has that baked in or not!",
      "createdAt": "2016-11-30T19:17:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTI0Njk2MDY=",
        "title": "vertically expand component support?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/960"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDAwMTcxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDAwMTcxMQ==",
      "body": "thanks @layershifter, but that's for filling `width`, not `height`",
      "createdAt": "2016-11-30T21:31:31Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTI0Njk2MDY=",
        "title": "vertically expand component support?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/960"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDAwMjE4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDAwMjE4MA==",
      "body": "i guess there's actually a little bit of a discrepancy in the docs page.  the top table says height, but the example says width",
      "createdAt": "2016-11-30T21:33:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTI0Njk2MDY=",
        "title": "vertically expand component support?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/960"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDAwMjQxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDAwMjQxNQ==",
      "body": "ohhhh nm. i was mixing Grid & Grid.Row.  thx! i'll try this out",
      "createdAt": "2016-11-30T21:34:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTI0Njk2MDY=",
        "title": "vertically expand component support?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/960"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDAwNTExNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDAwNTExNg==",
      "body": "thanks again for your time guys.  let me ask one more tip on the matter:\r\n\r\n```jsx\r\n<Grid.Row stretched>\r\n    <Grid.Column>\r\n        <Segment> {/* <== yes, i expand to fill the vertical space */}\r\n          {/*\r\n              but say here lands another component, e.g another Segment... can I grow vertically too?\r\n              i could load in _more_ Grid DOM, but im looking for a shortcut!\r\n              */}\r\n        </Segment>\r\n      </Grid.Column>\r\n  </Grid.Row>\r\n```",
      "createdAt": "2016-11-30T21:44:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTI0Njk2MDY=",
        "title": "vertically expand component support?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/960"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDAwNTc5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDAwNTc5Mw==",
      "body": "http://codepen.io/cdaringe/pen/oYozjd",
      "createdAt": "2016-11-30T21:46:52Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTI0Njk2MDY=",
        "title": "vertically expand component support?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/960"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDA2MzQzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDA2MzQzOA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://cb7d2776-d8c9-4715-902e-b5ffbb933884.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.33.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-01T02:43:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTYwMTY0MjI=",
        "title": "@kadira/storybook@2.33.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/37"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDIzMTUxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDIzMTUxMQ==",
      "body": "Oh whoops!  Thanks so much!  I'll publish shortly.  Im only testing in node ATM.  I should really be doing a browser build and testing there too",
      "createdAt": "2016-12-01T17:06:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTYxMTEwNTI=",
        "title": "Fix parsing errors in UglifyJS",
        "url": "https://github.com/cdaringe/pouchy/pull/133"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDI0MTU0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDI0MTU0MA==",
      "body": "published as `11.0.3`",
      "createdAt": "2016-12-01T17:43:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTYxMTEwNTI=",
        "title": "Fix parsing errors in UglifyJS",
        "url": "https://github.com/cdaringe/pouchy/pull/133"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDMyODg2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDMyODg2OA==",
      "body": "this bit me too.  i feel like the more tolerant ruling here is more accommodating?  that is, can we disable https://github.com/blakeembrey/tslint-config-standard/blob/master/tslint.js#L46?",
      "createdAt": "2016-12-01T23:33:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzc0MjE0ODU=",
        "title": "Braces may be omitted for single line if statements ",
        "url": "https://github.com/blakeembrey/tslint-config-standard/issues/2"
      },
      "repository": {
        "nameWithOwner": "blakeembrey/tslint-config-standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDMzNTg5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDMzNTg5Mg==",
      "body": "sure, but the goal of this project is to apply _standardjs_ linting, however this rule declares my valid standardjs formatted code as invalid.",
      "createdAt": "2016-12-02T00:12:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzc0MjE0ODU=",
        "title": "Braces may be omitted for single line if statements ",
        "url": "https://github.com/blakeembrey/tslint-config-standard/issues/2"
      },
      "repository": {
        "nameWithOwner": "blakeembrey/tslint-config-standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDM1MDIzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDM1MDIzOQ==",
      "body": "whoops, wrong git hook. nm!",
      "createdAt": "2016-12-02T01:41:54Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTMwMTE0NDI=",
        "title": "commit message is from my previous commit",
        "url": "https://github.com/conventional-changelog-archived-repos/validate-commit-msg/issues/51"
      },
      "repository": {
        "nameWithOwner": "conventional-changelog-archived-repos/validate-commit-msg"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDM2MjA0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDM2MjA0Ng==",
      "body": "yea, debugging can be... a pain because of all of the node internals that have caught errors.  good news however, i did make a feature request to the VSCode guys, and they are cutting a debug blackboxing feature in an upcoming release!  yahoo!  i did end up tracing it to a plugin anyway.\r\n\r\nit may be nice in the plugin loader to do an assertion that the error is an `Error`, otherwise report the naughty plugin to the user!\r\n\r\nthanks!",
      "createdAt": "2016-12-02T03:06:51Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTIxNDU1NjE=",
        "title": "webpack compiler errors with string instance, vs Error",
        "url": "https://github.com/webpack/webpack/issues/3388"
      },
      "repository": {
        "nameWithOwner": "webpack/webpack"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDY0ODE5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDY0ODE5Ng==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://3ff02ce0-669e-4aad-ac5c-958f4a2ef9af.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.8.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-03T16:08:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTY0MDE4Mzc=",
        "title": "Update react-scripts to version 0.8.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/38"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDY5MjU1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDY5MjU1NA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://e43458a8-7f1c-403c-8fc6-fb2d7a2f5506.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.8.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-04T09:08:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTY0MjY1ODM=",
        "title": "Update react-scripts to version 0.8.1 🚀",
        "url": "https://github.com/dino-dna/donut/pull/39"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDczNjg0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDczNjg0Mw==",
      "body": "any motion on this?  thanks!",
      "createdAt": "2016-12-04T22:30:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg4Nzk0MjA=",
        "title": ":art: dockerify.",
        "url": "https://github.com/kkemple/greenkeeper-keeper/pull/32"
      },
      "repository": {
        "nameWithOwner": "kkemple/greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NDgxMjczNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NDgxMjczNA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://eea2a0c1-ac17-478b-bfe1-67dc9272dc64.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.34.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-05T10:01:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTY0OTkwNTg=",
        "title": "@kadira/storybook@2.34.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/40"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NTAzMDM2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NTAzMDM2MQ==",
      "body": "@chrisinajar, thanks for the `less`.\r\n\r\ncan someone provide a practical example where\r\n\r\n```js\r\n<root>\r\n   <a class=\"shows only when mobile or tablet\" />\r\n   <b class=\"shows only when computer or larger\" />\r\n   <!-- e.g. toggle a & b! -->\r\n</root>\r\n```\r\n\r\nusing the above css?",
      "createdAt": "2016-12-06T01:10:02Z",
      "issue": {
        "id": "MDU6SXNzdWU0MzYzMDY0MQ==",
        "title": "[UI] Add Responsive Helper Classes",
        "url": "https://github.com/Semantic-Org/Semantic-UI/issues/1114"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NTAzMTMxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NTAzMTMxOQ==",
      "body": "nm, got it\r\n\r\n```jsx\r\n<root>\r\n   <a class=\"tablet or lower hidden\" />\r\n   <b class=\"mobile tablet only\" />\r\n</root>\r\n```",
      "createdAt": "2016-12-06T01:15:53Z",
      "issue": {
        "id": "MDU6SXNzdWU0MzYzMDY0MQ==",
        "title": "[UI] Add Responsive Helper Classes",
        "url": "https://github.com/Semantic-Org/Semantic-UI/issues/1114"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NTMzNDY2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NTMzNDY2NQ==",
      "body": "hey @jbaruch, i'm getting 406's on publish w/ artifactory 4.12.0.1.  it looks like on `npm publish` a GET /to/my/npm/repo/is/made, and 406's are yielded.  the URI is confirmed valid, & gives me 200's on browser visit.  can you give me a hot tip on where to start diagnosing?  thanks!",
      "createdAt": "2016-12-07T02:09:33Z",
      "issue": {
        "id": "MDU6SXNzdWU0NTg3MzgyNg==",
        "title": "http status 406(not accepted) with artifactory",
        "url": "https://github.com/npm/npm/issues/6486"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NTU4MDc2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NTU4MDc2NA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://ff696b9b-73a3-495c-a9de-4ff57068165f.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.8.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-07T21:36:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTcwMTIxMTM=",
        "title": "Update react-scripts to version 0.8.2 🚀",
        "url": "https://github.com/dino-dna/donut/pull/41"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NTc3MzczMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NTc3MzczMg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://5b0594bf-f0db-459b-80b5-3cb5567078a5.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.8.3/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-08T15:49:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTcxNDcwMTg=",
        "title": "Update react-scripts to version 0.8.3 🚀",
        "url": "https://github.com/dino-dna/donut/pull/42"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NjI3NzgyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NjI3NzgyMg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://937a88f9-824c-46fc-af76-bdcb26f1ed48.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.8.4/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-11T11:55:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTc0NTY2NDc=",
        "title": "Update react-scripts to version 0.8.4 🚀",
        "url": "https://github.com/dino-dna/donut/pull/43"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NjkyNjI3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NjkyNjI3MA==",
      "body": "biff city.  was a bogus `subscribe.store(...)` statement, rerendering the full app.",
      "createdAt": "2016-12-14T02:37:36Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTU0MTMxNDc=",
        "title": "barebones consumption of the lib results in a maximum callstack exceeded error",
        "url": "https://github.com/redux-form/redux-form/issues/2277"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2Njk0MzMxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2Njk0MzMxOA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://7cb42b7a-a9fc-487c-a3f7-a4916950b66d.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-redux-5.0.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-14T05:00:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTc4ODc4NzY=",
        "title": "Update react-redux to version 5.0.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/44"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzEzNDYxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzEzNDYxOA==",
      "body": "yes, you can do it.  the docs already sufficiently explain how redux-form is agnostic to _whatever_ components you want to use. \r\n\r\nhere's an example that i've done w/ it: https://github.com/MRN-Code/coinstac/blob/master/packages/coinstac-ui/app/render/components/form-signup.js#L29",
      "createdAt": "2016-12-14T19:40:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTU1ODI3Mzk=",
        "title": "integrating react-bootstrap with redux form",
        "url": "https://github.com/redux-form/redux-form/issues/2282"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzIxMzU5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzIxMzU5Mg==",
      "body": "boom! 💣 \r\n\r\nhere's a very easy to digest demo.  i used the `asyncValidation` example, although, please keep in mind that this isn't about asyncValidation.  :).  simple `npm start`, fill out the form, and hit SUBMIT.\r\n\r\nhere's the commit than can be cloned and run: https://github.com/cdaringe/redux-form/commit/837e66faad1925247a83cf2988650aef9764af07 .  this commit is the only **diff** from the default example to reveal error.\r\n\r\nit would seem that using the `{ _error: '...' }` property in SubmissionError without other valid property names may have something to do with it!",
      "createdAt": "2016-12-15T01:49:49Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTU2OTE2NTQ=",
        "title": "bug: `valid` set to false on SubmissionError even if fields are in fact valid",
        "url": "https://github.com/redux-form/redux-form/issues/2290"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzIxNDY4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzIxNDY4NQ==",
      "body": "very similar to #2271. perhaps a more \"hands-off-make-everybody-happy\" is a props arg that does a `{...props}` on the `<div ... />`, so you can use `{ id: ..., className: ..., style: ...}`.\r\n\r\none-off'ing property support probably isn't a super scalable concise approach?  just thinkin out loud :)",
      "createdAt": "2016-12-15T01:56:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTc3MDQ5ODE=",
        "title": "Add FormSection styling via className",
        "url": "https://github.com/redux-form/redux-form/pull/2274"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzI0NjU0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzI0NjU0Mg==",
      "body": "yep!  here's my use case just for supporting infos/datas.  i use lerna and have a mono repo:\r\n\r\n```\r\n🛰  salsa$ tree -L 1 packages\r\npackages\r\n├── senor-salsa-api\r\n├── senor-salsa-common\r\n├── senor-salsa-db\r\n└── senor-salsa-ui\r\n```\r\n\r\ngiven that these are private packages, I don't want to publish them, so my `package.json`s look like this\r\n\r\n```js\r\n{\r\n   ...\r\n   dependencies: {\r\n     \"senor-salsa-common\": \"../senor-salsa-common\"\r\n   }\r\n}\r\n```\r\n\r\nand finally, the error:\r\n\r\n```\r\n🛰  senor-salsa-api$ yarn\r\nyarn install v0.16.1\r\ninfo No lockfile found.\r\n[1/4] 🔍  Resolving packages...\r\nerror Couldn't find package \"senor-salsa-common\" on the \"npm\" registry.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.\r\n```",
      "createdAt": "2016-12-15T06:03:15Z",
      "issue": {
        "id": "MDU6SXNzdWUxODc0OTQ3ODA=",
        "title": "Yarn cannot resolve a relative path, fails to install the project",
        "url": "https://github.com/yarnpkg/yarn/issues/1698"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzQ2MTMxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzQ2MTMxNQ==",
      "body": "here's some additional information. it is evident that `reduxForm` is **stripping** valueable keys.\r\n\r\nget this.  suppose i have TWO components: `Parent` and `Child`\r\n\r\nsuppose that we `reduxForm({ form: 'blah' })(Child)`\r\n\r\nnow, if we `connect( ... getSyncErrors ...)(Parent)`, then have something like\r\n\r\n```jsx\r\n// Parent.js\r\nrender () {\r\n  const { syncErrors } = this.props\r\n  console.log(syncErrors) // <== is an object! is defined!\r\n  return <Child syncErrors={syncErrors} />\r\n}\r\n```\r\n\r\n```jsx\r\n// Child.js\r\nrender () {\r\n  const { syncErrors } = this.props\r\n  console.log(syncErrors) // <== is `undefined`\r\n  return <Form > { ... } </Form>\r\n}\r\n```\r\n\r\nit's evident that `reduxForm` is preventing access to those keys.  in my example above, if i change `syncErrors` to `errorz` or something, the props get passed down the `Child` per expectation.\r\n\r\n💣 ",
      "createdAt": "2016-12-15T22:20:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTU5Mjc0MjE=",
        "title": "no access to required state, even with `reduxForm(...)` + `connect(...)` wrapping",
        "url": "https://github.com/redux-form/redux-form/issues/2299"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzQ5NjQyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzQ5NjQyOA==",
      "body": "released [reduxify-form](https://www.npmjs.com/package/reduxify-form) as a helper to get me what i need for now!  if i return those values i want under a nested key, it all works.  this little package makes the dual connecting a single call, and provides some nice default state data that I always need in my app!",
      "createdAt": "2016-12-16T01:46:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTU5Mjc0MjE=",
        "title": "no access to required state, even with `reduxForm(...)` + `connect(...)` wrapping",
        "url": "https://github.com/redux-form/redux-form/issues/2299"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzUxNDY3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzUxNDY3NA==",
      "body": "> Name collision is a problem ... in general. ... what's needed is to document ... that must not be used on reduxForm\r\n\r\ninteresting.  good to know.\r\n\r\n>  your library is connecting the whole form state and that isn't a good idea\r\n\r\nnot all of it, _just_ values and errors for _just_ the specified form.  [ref](https://github.com/cdaringe/reduxify-form/blob/master/src/index.js#L10)\r\n\r\n> ... get the errors from meta prop\r\n\r\n`meta` is undefined even when my form has fields with `syncErrors`.  using `<Fields .../>` could work for some circumstances, but in fact i need info on my `syncErrors` to tag my `<root>` component.\r\n\r\nthank for your input! i still think the issue stands, however.  at the least the API could use some massaging to get what I need.  double `connect`ing (well ...counting `reduxForm` as one `connect`), seems like it could be dropped down to one, and adjusting property names could be eliminated entirely.",
      "createdAt": "2016-12-16T04:30:05Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTU5Mjc0MjE=",
        "title": "no access to required state, even with `reduxForm(...)` + `connect(...)` wrapping",
        "url": "https://github.com/redux-form/redux-form/issues/2299"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzUxNTQyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzUxNTQyMA==",
      "body": "@adrianbon, i cordially recommend you [give this a read](https://medium.com/@thejameskyle/dear-javascript-7e14ffcae36c#.12vjhp546).\r\n\r\nwith that said, there are a lot of open issues.  perhaps the lead maintainer could open the doors to a core dev team and working group.",
      "createdAt": "2016-12-16T04:38:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTU1NzgzMDg=",
        "title": "[v6.3.0] Trying to understand why async validation is not included in Field Level Validation",
        "url": "https://github.com/redux-form/redux-form/issues/2280"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzUxNTkwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzUxNTkwNw==",
      "body": "hey @rajanand02, i think there may be a misunderstanding.  `syncErrors` are never intended to be updated with a bogus network request.\r\n\r\n`syncErrors` ==> `clientSideErrors`\r\n`SubmissionError({ ...fields })` ==> `serverSideErrors`\r\n\r\nif you want to handle them both the same way, you could do `finalErrors = Object.assign(syncErrors, whateverPropHoldsTheSubmissionErrorsThatImBlankingOutOnAtTheMoment)`",
      "createdAt": "2016-12-16T04:44:14Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTQ5NTQ5NTg=",
        "title": "How to show errors on initial render?",
        "url": "https://github.com/redux-form/redux-form/issues/2267"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzUxNjI1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzUxNjI1NA==",
      "body": "are you confident that your form looks like...\r\n\r\n`<Form onSubmit={handleSubmit(doAsyncSubmit} />`\r\n\r\nvs\r\n\r\n`<Form onSubmit={doAsyncSubmit} />`?",
      "createdAt": "2016-12-16T04:48:20Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTQ3OTYzMjQ=",
        "title": "submitSucceeded is set on redux-form/STOP_SUBMIT",
        "url": "https://github.com/redux-form/redux-form/issues/2260"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzUxNjQ2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzUxNjQ2MQ==",
      "body": "@arolson101, i have the same need.  i'm sure we can find a better way to do this in the future, however, i did write https://www.npmjs.com/package/reduxify-form for this same issue.",
      "createdAt": "2016-12-16T04:50:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTQ2OTM2MTE=",
        "title": "current values?",
        "url": "https://github.com/redux-form/redux-form/issues/2253"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzUxNzUwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzUxNzUwNg==",
      "body": "hmm. ya--in one of the older APIs you could get the state of whether it was focused or not.  it may be worth dropping a PR to add `shouldValidate` at the field level as well as the form level.  that would help ya, iff you could also get the focus state.  another strategy would be to do `<Field onClick={maybeValidate} />`, and you could `_.throttle` your validations?  not exactly what you're looking for. shucks.  this should definitely be a thing.  of course, using `{touched && error}` as inputs to whether or not to show the error in most cases is enough.  that of course assume your validation isn't _too_ heavy of lifting :)",
      "createdAt": "2016-12-16T05:01:51Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTQyMzczNjA=",
        "title": "Disable validation on keypress event?",
        "url": "https://github.com/redux-form/redux-form/issues/2240"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzUyNDI3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzUyNDI3OQ==",
      "body": "ah, looks like both syntaxes are equivalent, http://redux-form.com/6.3.1/docs/api/ReduxForm.md .  anyway, bummer!",
      "createdAt": "2016-12-16T06:07:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTQ3OTYzMjQ=",
        "title": "submitSucceeded is set on redux-form/STOP_SUBMIT",
        "url": "https://github.com/redux-form/redux-form/issues/2260"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzczMDgzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzczMDgzMQ==",
      "body": "yikes.  surprised this hasn't ~~come up before~~ had more heat applied to it. i see that react-scripts creates a jest config in mem.  i wrote that config to disk, updated the targetEnvironment to `jsdom` instead of node, then ran:\r\n\r\n`node --debug-brk ./node_modules/.bin/jest --config jest-config.json --runInBand -i --no-cache src/__test__/<my-file>.test.js`\r\n\r\nand in fact it honored my `debugger` but it was super mangled (e.g. no source maps) :/",
      "createdAt": "2016-12-17T00:54:17Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzUyNzM5OTI=",
        "title": "Document how to debug unit tests ",
        "url": "https://github.com/facebook/create-react-app/issues/594"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzczNTMyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzczNTMyMw==",
      "body": "@orta, can you share your config, too?  my source shows up all babel mangled",
      "createdAt": "2016-12-17T01:52:05Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzU4ODMwNDY=",
        "title": "debugger; and breakpoints don't work with node --inspect",
        "url": "https://github.com/jestjs/jest/issues/1652"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2NzgwNDkyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2NzgwNDkyMA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://dd498726-1720-486f-9e04-d3ff4274dcca.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.35.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-18T05:50:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTg0NjU1ODI=",
        "title": "@kadira/storybook@2.35.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/45"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2ODA0MjExNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2ODA0MjExNg==",
      "body": "thanks!",
      "createdAt": "2016-12-19T18:37:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTg1ODgxMzE=",
        "title": "Update README.md",
        "url": "https://github.com/node-swig/swig-templates/pull/35"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2ODEyMjI2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2ODEyMjI2NQ==",
      "body": "doh! great catch!  thanks @toddrun ",
      "createdAt": "2016-12-20T00:50:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTg2NjI4MzA=",
        "title": "Update README.md",
        "url": "https://github.com/node-swig/swig-templates/pull/36"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2ODIwMjU2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2ODIwMjU2MQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://cd4f86cb-cac1-42a1-9bfc-40fc80bef175.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.35.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-20T09:59:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTg3MTc4MTY=",
        "title": "@kadira/storybook@2.35.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/46"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2ODg3NjcwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2ODg3NjcwOQ==",
      "body": "in retrospect, this is an _uglifyjs_ error.  the lib is not compiled down to es5. hmm...",
      "createdAt": "2016-12-22T19:50:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTcyNTIzMzA=",
        "title": "`npm start` builds source successfully but `npm run build` crashes",
        "url": "https://github.com/facebook/create-react-app/issues/1314"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2ODkyNDc0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2ODkyNDc0OA==",
      "body": "@kentcdodds, did you ever resolve this?",
      "createdAt": "2016-12-23T01:14:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjQ3MDQ2MzQ=",
        "title": "Scoped Package failing to publish release notes",
        "url": "https://github.com/semantic-release/semantic-release/issues/257"
      },
      "repository": {
        "nameWithOwner": "semantic-release/semantic-release"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2ODkyNDkyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2ODkyNDkyMQ==",
      "body": "oh... that's weird. i just tagged on [another commit](https://github.com/Tripwire/octagon/commit/b890a683f40fda8b08fc8209e491e451bdbec1ef) that made it work.  maybe is was that i was not in the proper directory?  go figure.",
      "createdAt": "2016-12-23T01:16:08Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjQ3MDQ2MzQ=",
        "title": "Scoped Package failing to publish release notes",
        "url": "https://github.com/semantic-release/semantic-release/issues/257"
      },
      "repository": {
        "nameWithOwner": "semantic-release/semantic-release"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2OTA2MzI3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2OTA2MzI3NQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://5bf64497-334f-4a80-b820-d03f71ea1cc1.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-storybook-host-1.0.9/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2016-12-24T01:44:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTkyOTIxOTg=",
        "title": "storybook-host@1.0.9 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/47"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2OTM3ODMzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2OTM3ODMzMw==",
      "body": "here is the offending line: https://github.com/igorprado/react-notification-system/blob/master/src/NotificationItem.jsx#L193.  it would be great to have that _not_ specify a `height: <some-value>px` k-v pair.\r\n\r\nthere's another offending line, which were it solved, would probably also mitigate my issue, but still leave me vulnerable to the same failure mode.\r\n\r\n`render` tests for [overrideStyle](https://github.com/igorprado/react-notification-system/blob/master/src/NotificationItem.jsx#L261), which is **always** defined, even if i didn't specify any style overrides.  this should be `null` or `undefined`. because of this, it enters into the first offending line, described above.\r\n",
      "createdAt": "2016-12-27T20:27:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTc3NDQwMzg=",
        "title": "fixed height set on notification with varying height content",
        "url": "https://github.com/igorprado/react-notification-system/issues/77"
      },
      "repository": {
        "nameWithOwner": "igorprado/react-notification-system"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2OTU0ODUxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2OTU0ODUxMQ==",
      "body": "for those who just stumble onto this issue, the downloads do often take a while as discussed above.  to confirm that your downloads are still in transit, you can:\r\n\r\n- `vagrant ssh c1` (or other nodes in your cluster)\r\n- look at the kubelets log, `journalctl -u kubelet`.  look at the bottom for a download progress update!",
      "createdAt": "2016-12-28T22:05:10Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTQ2NTEyNzY=",
        "title": "The connection to the server 172.17.4.101:443 was refused",
        "url": "https://github.com/coreos/coreos-kubernetes/issues/479"
      },
      "repository": {
        "nameWithOwner": "coreos/coreos-kubernetes"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2OTU4NzYyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2OTU4NzYyOA==",
      "body": "nm! false alarm.",
      "createdAt": "2016-12-29T06:27:34Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTc5NTk4MDM=",
        "title": "build is not es5 compliant",
        "url": "https://github.com/igorprado/react-notification-system/issues/78"
      },
      "repository": {
        "nameWithOwner": "igorprado/react-notification-system"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2OTY2OTQxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2OTY2OTQxMQ==",
      "body": "More info please",
      "createdAt": "2016-12-29T18:09:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTgwMjYzNzY=",
        "title": "split filter",
        "url": "https://github.com/node-swig/swig-templates/issues/38"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2OTY3NDA5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2OTY3NDA5NA==",
      "body": "no, i'm not. there's just a code snippet and links.  what's the point of this issue?  respectfully, please don't make us guess.\r\n\r\ni'm assuming this is a feature request.",
      "createdAt": "2016-12-29T18:43:55Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTgwMjYzNzY=",
        "title": "split filter",
        "url": "https://github.com/node-swig/swig-templates/issues/38"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI2OTczMDEwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI2OTczMDEwNg==",
      "body": "you should work without having to do sudo! ;)",
      "createdAt": "2016-12-30T04:07:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTgwNzc0NzM=",
        "title": "sudo cleanup for coins-cli",
        "url": "https://github.com/trendscenter/coins-cli/issues/21"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coins-cli"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MDA0NTg2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MDA0NTg2MQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://ce3208aa-2748-4850-ae3f-bf6b186d9faf.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.35.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-03T03:10:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTk5MDYxMjc=",
        "title": "@kadira/storybook@2.35.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/48"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MDI2MDY5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MDI2MDY5NQ==",
      "body": "cool.  thanks for following up @levithomason, you're great!",
      "createdAt": "2017-01-04T00:02:33Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTg1Njc2MTY=",
        "title": "Steps overflow container when cummulative step width exceeds container width",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/1114"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MDQ4MzY5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MDQ4MzY5Mw==",
      "body": "This looks awesome!",
      "createdAt": "2017-01-04T20:54:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTI5Nzk5Mjc=",
        "title": "feat(Transition): Add component",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/813"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MDQ5MDEyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MDQ5MDEyNQ==",
      "body": "looks like live edit in the docs crash the app when you remove children from the Transition:\r\n\r\n![transition-live-edit-biff mov](https://cloud.githubusercontent.com/assets/1003261/21659622/da3e0648-d288-11e6-9a3b-2451cad58faf.gif)\r\n",
      "createdAt": "2017-01-04T21:21:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTI5Nzk5Mjc=",
        "title": "feat(Transition): Add component",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/813"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MDQ5MTAyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MDQ5MTAyMg==",
      "body": "it also seems to be unfriendly to the case if you use plaintext, vs a DOMElement/Component as a child",
      "createdAt": "2017-01-04T21:25:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTI5Nzk5Mjc=",
        "title": "feat(Transition): Add component",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/813"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MDQ5MzM3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MDQ5MzM3MA==",
      "body": "my last interruption on your PR for the day--the SUI transition docs aren't loading for me ATM (on a plane).  i'm observing that the slide Transition here _retains its node size_.  i expected on slide-out for the width or height to go to 0. is an intended supported use case to actually dynamically shrink/remove the node?",
      "createdAt": "2017-01-04T21:35:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTI5Nzk5Mjc=",
        "title": "feat(Transition): Add component",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/813"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MDc0OTAzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MDc0OTAzOQ==",
      "body": "+1!",
      "createdAt": "2017-01-05T20:30:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwMjQyNTM2",
        "title": "Update deps",
        "url": "https://github.com/AmpersandJS/ampersand-dom-bindings/pull/55"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-dom-bindings"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MDk2MDY0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MDk2MDY0Mw==",
      "body": "can anyone furnish a successful workflow debugging via react-scripts with source maps?",
      "createdAt": "2017-01-06T17:48:10Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzUyNzM5OTI=",
        "title": "Document how to debug unit tests ",
        "url": "https://github.com/facebook/create-react-app/issues/594"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MDk3NzQ3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MDk3NzQ3MA==",
      "body": "i would love to do that once i get it to work! :)",
      "createdAt": "2017-01-06T18:59:33Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzUyNzM5OTI=",
        "title": "Document how to debug unit tests ",
        "url": "https://github.com/facebook/create-react-app/issues/594"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTAwNTAwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTAwNTAwNw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://061ef558-c81b-42fb-ba82-13140742ce7f.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-dom-15.4.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-06T21:01:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTI0Njg3",
        "title": "react-dom@15.4.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/49"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTAxNjE2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTAxNjE2OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://8df31c65-6e12-43d5-b471-0a7598b3394d.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-15.4.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-06T21:44:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTMwNzk3",
        "title": "react@15.4.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/50"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTA0ODE0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTA0ODE0Mg==",
      "body": "got it, PR comin' in hot!",
      "createdAt": "2017-01-07T00:46:59Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzUyNzM5OTI=",
        "title": "Document how to debug unit tests ",
        "url": "https://github.com/facebook/create-react-app/issues/594"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTA1NzIzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTA1NzIzNA==",
      "body": "i'm a little puzzled w/ the CI error.  it fails on being unable to locate a file, but only on some node versions.  maybe a caching thing?  can someone weigh in or re- kick it off?",
      "createdAt": "2017-01-07T02:40:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTUxNTIz",
        "title": "feature/add-first-class-debugging-support-for-tests",
        "url": "https://github.com/facebook/create-react-app/pull/1360"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTA3MjgzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTA3MjgzMA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://2653f39a-a710-4136-9478-4b0deb11aab0.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-storybook-host-1.0.10/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-07T09:23:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTYzODM0",
        "title": "storybook-host@1.0.10 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/51"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTExMDk0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTExMDk0Nw==",
      "body": "thanks @tuchk4, @EnoahNetzach.  i dropped the editor ignore commit, rebased w/ patches to restore the build. should be g2g now, post review :)",
      "createdAt": "2017-01-07T21:19:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTUxNTIz",
        "title": "feature/add-first-class-debugging-support-for-tests",
        "url": "https://github.com/facebook/create-react-app/pull/1360"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTExODIxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTExODIxOQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://8c81e2e5-8268-462a-ae46-5fa3473abb52.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-storybook-host-1.0.11/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-07T23:41:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTg2Mjgy",
        "title": "storybook-host@1.0.11 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/52"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTExODgxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTExODgxNQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://2130ef96-48a6-4c37-987d-d3f910904bb3.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-storybook-host-1.0.12/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-07T23:54:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTg2NTkx",
        "title": "storybook-host@1.0.12 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/53"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTEyMTI1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTEyMTI1NQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://d56ba7e2-b714-4008-8ab7-bdf0ebe38521.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-storybook-host-1.0.13/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-08T00:53:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTg3ODcy",
        "title": "storybook-host@1.0.13 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/54"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTE2NDM5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTE2NDM5Nw==",
      "body": "Are there not CLI flags your can pass to npm test to handle this?  ARGS after npm test -- ... are passed to jest.  There's also a custom config file you can use, https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/utils/createJestConfig.js#L18",
      "createdAt": "2017-01-08T17:13:48Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTY3ODMzMDk=",
        "title": "Ability to add folders to have jest ignore",
        "url": "https://github.com/facebook/create-react-app/issues/1299"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTE3MjUxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTE3MjUxNg==",
      "body": "@orboan, i haven't read anything that infers that your use case is supported out-of-the-box, unfortunately.  you'd probably have to add a patch to this project",
      "createdAt": "2017-01-08T19:22:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTQ3OTcwMTI=",
        "title": "Simple question",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/657"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTE3MzE1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTE3MzE1Nw==",
      "body": "- rebased, dropped the .gitignore content\r\n\r\n> ...complicate your intentions with your PR\r\n\r\n- no sir!  this little guy will still work fine.  previously i was copying specific dirs, like `plugins/` but i simplified it.  it would work fine w/ your changes ",
      "createdAt": "2017-01-08T19:32:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg4Nzk0MjA=",
        "title": ":art: dockerify.",
        "url": "https://github.com/kkemple/greenkeeper-keeper/pull/32"
      },
      "repository": {
        "nameWithOwner": "kkemple/greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTE4NTA3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTE4NTA3NA==",
      "body": "hey guys, useful dialog. thanks.\r\n\r\ni have my registry setup here: https://registry.cdaringe.me/v2/_catalog\r\n\r\nas you can see, it works when browsing thru the UI, SSL included.  however on `docker login <my-registry-url>`, irregardless of credentials, i receive: `Get https://registry.cdaringe.me/v1/users/: x509: certificate signed by unknown authority`\r\n\r\nFor example:\r\n\r\n```sh\r\n$ docker login registry.cdaringe.me\r\nUsername: bananas\r\nPassword:\r\nError response from daemon: Get https://registry.cdaringe.me/v1/users/: x509: certificate signed by unknown authority\r\n```\r\n\r\nmy conf is pretty straightforward:\r\n\r\n```yml\r\n# docker-compose.yml\r\nversion: '2'\r\nservices:\r\n  nginx-proxy:\r\n    image: jwilder/nginx-proxy\r\n    container_name: nginx-proxy\r\n    ports:\r\n      - \"80:80\"\r\n      - \"443:443\"\r\n    volumes:\r\n      - /www/registry/auth:/etc/nginx/htpasswd\r\n      - /www/certs:/etc/nginx/certs\r\n      - /var/run/docker.sock:/tmp/docker.sock:ro\r\n    environment:\r\n      - DEFAULT_HOST=$HOSTNAME\r\n    restart: always\r\n\r\n  docker_registry:\r\n    image: registry:2\r\n    expose:\r\n      - 5000\r\n    restart: unless-stopped\r\n    environment:\r\n      - VIRTUAL_HOST=registry.$HOSTNAME\r\n      - VIRTUAL_PORT=5000\r\n      - CERT_NAME=server\r\n```\r\n\r\nany tips would be great!  i opened an issue earlier trying to solve this over @ #672.  Close!",
      "createdAt": "2017-01-08T22:33:42Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDAyMDMyMDg=",
        "title": "Port Mapping freaking me out",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/387"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTE4NTM5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTE4NTM5OQ==",
      "body": "ah, my docker-engine didn't trust letsencrypt certs i guess?  i added my registry to insecure registries as a workaround for now.\r\n\r\n> Since there's an htpasswd file with the vhost name, it uses that to provide authentication as well\r\n\r\nthis was the bit that I simply didn't get at first.  now it makes sense!",
      "createdAt": "2017-01-08T22:38:54Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDAyMDMyMDg=",
        "title": "Port Mapping freaking me out",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/387"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTIxMzEyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTIxMzEyMA==",
      "body": "the solution was to use Basic Authentication support and authenticate at the proxy and _not_ run an authenticated registry.",
      "createdAt": "2017-01-09T05:24:02Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTk0MzYyNjQ=",
        "title": "help: proxy to secured docker registry container",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/672"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTIyNDY0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTIyNDY0NQ==",
      "body": "sure thing.  i may not get to it for a bit, but this week i intend to do a build.  i'll test it and update the image onsuccess",
      "createdAt": "2017-01-09T07:37:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg4Nzk0MjA=",
        "title": ":art: dockerify.",
        "url": "https://github.com/kkemple/greenkeeper-keeper/pull/32"
      },
      "repository": {
        "nameWithOwner": "kkemple/greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTMyMjAzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTMyMjAzMg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://28ad7ca7-9e5d-45bd-82c1-dfdad934fd7e.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.8.5/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-09T15:56:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNzA5MzYw",
        "title": "Update react-scripts to version 0.8.5 🚀",
        "url": "https://github.com/dino-dna/donut/pull/55"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTQxODEyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTQxODEyNw==",
      "body": "FYI, to reviewers, this also only accepts _one_ flag as written.  that is `--debug-brk --inspect` won't work, but we can do a follow up to add that support later.  i'd love for someone to test it out on their box too to validate!",
      "createdAt": "2017-01-09T21:48:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTUxNTIz",
        "title": "feature/add-first-class-debugging-support-for-tests",
        "url": "https://github.com/facebook/create-react-app/pull/1360"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTQzMzM5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTQzMzM5MA==",
      "body": "right, `getComputedStyle` was exactly what I was thinking.  in our app, we use `<SomeSUIRComponent color='blue'>` for those components that support it, but then also want to use `blue` in other components too.  trouble is, it's not readily available.  i can definitely add a palette to my app and getComputedStyles such that I can get that information, **however**, finding  what `blue` to use seems like a good fit for _the library that is aware of the theme_.  my app, by means of using SUI, attempts to be theme-styles-knowledge agnostic.  SUIR gives me prestyled components s.t. I don't need theme/CSS knowledge.  i still think it would be nice sugar for SUIR to provide!",
      "createdAt": "2017-01-09T22:50:48Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTk2MjQ2MDY=",
        "title": "Expose palette feature?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/1138"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTQ1MTAxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTQ1MTAxNQ==",
      "body": "fixed in ~0.22.2~ 0.22.3. it's hacky, but it works ;)",
      "createdAt": "2017-01-10T00:27:39Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTk2Nzg4MTI=",
        "title": "global install error",
        "url": "https://github.com/cdaringe/ripcord/issues/57"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTY1ODcwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTY1ODcwOQ==",
      "body": "rebuilt, tested, and image updated on docker hub!",
      "createdAt": "2017-01-10T18:36:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg4Nzk0MjA=",
        "title": ":art: dockerify.",
        "url": "https://github.com/kkemple/greenkeeper-keeper/pull/32"
      },
      "repository": {
        "nameWithOwner": "kkemple/greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTY1OTUyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTY1OTUyNw==",
      "body": "only 83Mb too.  pretty small overall",
      "createdAt": "2017-01-10T18:39:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg4Nzk0MjA=",
        "title": ":art: dockerify.",
        "url": "https://github.com/kkemple/greenkeeper-keeper/pull/32"
      },
      "repository": {
        "nameWithOwner": "kkemple/greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTY2NDEzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTY2NDEzMA==",
      "body": "🎉 ",
      "createdAt": "2017-01-10T18:56:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODg4Nzk0MjA=",
        "title": ":art: dockerify.",
        "url": "https://github.com/kkemple/greenkeeper-keeper/pull/32"
      },
      "repository": {
        "nameWithOwner": "kkemple/greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTY4MTg1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTY4MTg1Ng==",
      "body": "this was working per intent in the same code base as shown over in the screen cast at https://github.com/facebookincubator/create-react-app/pull/1360\r\n\r\ngotta🚶 for a bit.  maybe it will come to me :)",
      "createdAt": "2017-01-10T20:01:41Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTk5MTY5OTA=",
        "title": "source maps interpretation inconsistent",
        "url": "https://github.com/microsoft/vscode/issues/18373"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTc1NTg0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTc1NTg0MQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://28686250-f837-4978-af0c-b9757f931ef2.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-redux-5.0.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-11T01:54:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwOTkwMDA1",
        "title": "Update react-redux to version 5.0.2 🚀",
        "url": "https://github.com/dino-dna/donut/pull/56"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTk1NzU0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTk1NzU0Mw==",
      "body": "maybe detect http/https diffs in _tagPackages",
      "createdAt": "2017-01-11T18:45:36Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDAxNzQ4OTM=",
        "title": "improve UX by detecting and warning about ARTIFACTORY_SRC & pkg resolved URIs",
        "url": "https://github.com/cdaringe/ripcord/issues/64"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MTk2Njk4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MTk2Njk4OQ==",
      "body": "it's difficult when switching context between between registries (i know, I'm 1% use case). `npm install` grabs things from the cache, which creates a headache when you're doing things like `npm shrinkwrap`.  shrink-wrapped content can now mix registries, which is often taboo",
      "createdAt": "2017-01-11T19:20:16Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjk3MzI1NDY=",
        "title": "Disabling cache completely",
        "url": "https://github.com/npm/npm/issues/11338"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MjAxMTI2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MjAxMTI2Ng==",
      "body": "looks like 20 ==> https://github.com/babel/babel-preset-env/pull/56  which merged.\r\n\r\n- what do you think we should document as a consequence?\r\n- do we need to update anything for `babel-preset-env`?  https://github.com/facebookincubator/create-react-app/blob/master/packages/babel-preset-react-app/index.js#L74\r\n\r\nat this point, reading through the issues, i'm not sure where we stand with what is supported and what is not.  i see that my app crashes for lack of Symbol support in IE11, so clearly we haven't included that polyfill yet.  I'd be happy to write some docs, but I figure the maintainers probably have a better grip on where this stands as it is, ATM",
      "createdAt": "2017-01-11T22:08:58Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTE4NzUyODU=",
        "title": "Include polyfill.io in HTML by default",
        "url": "https://github.com/facebook/create-react-app/issues/1104"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MjE4MDQyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MjE4MDQyMg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://7d1724e0-ad0b-461f-be13-2773efd12ab8.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-router-3.0.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-12T14:43:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAxMjcxNjc4",
        "title": "Update react-router to version 3.0.1 🚀",
        "url": "https://github.com/dino-dna/donut/pull/57"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MjMwMTExNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MjMwMTExNw==",
      "body": "for those who landed here for a similar issue, if you are `shrinkwrap`ing, make sure your shrinkwrap file is zen with all resolved URIs pointing to their intended place.  we were transitioning registry URIs and ended up in an inconsistent state (especially with local caching issues!).  trashing your shrinkwrap, re-installing, and re-shrinkwrapping showed me that i had a bunch of mismatches, and resolved my `UNABLE_TO_GET_ISSUER_CERT_LOCALLY` error.  makes sense after those realizations are made.",
      "createdAt": "2017-01-12T22:14:56Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDYzMjc3NzM=",
        "title": "UNABLE_TO_GET_ISSUER_CERT_LOCALLY",
        "url": "https://github.com/npm/npm/issues/9580"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MjM1NzAzNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MjM1NzAzNQ==",
      "body": "hey @npotier, my code is private _ATM_, so maybe i could slap something together later, but pretty much just run the registry insecurely (don't configure any SSL or auth bits), and follow https://github.com/jwilder/nginx-proxy#basic-authentication-support",
      "createdAt": "2017-01-13T04:15:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTk0MzYyNjQ=",
        "title": "help: proxy to secured docker registry container",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/672"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MjM1NzI4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MjM1NzI4Mg==",
      "body": "what i _dont_ like about this strategy is that if you misplace or misconfigure your `someservice.domain`'s `htpsswd`, then your registry gets exposed wide open.  it would be nice if we could add to this package a `FORCE_BASIC_AUTH` flag that redundantly exposure in the event of a misconfig.  I feel like given the ease of making a mistake, a failsafe is warranted",
      "createdAt": "2017-01-13T04:17:53Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTk0MzYyNjQ=",
        "title": "help: proxy to secured docker registry container",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/672"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MjU1NzE5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MjU1NzE5NA==",
      "body": "I know everyone is real busy, and I can appreciate that.  However, a friendly ping for anyone willing to attempt to shed some tips & knowledge!",
      "createdAt": "2017-01-13T21:49:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTgyMDc5NTM=",
        "title": "Cluster Services Not Available Within Pod Containers",
        "url": "https://github.com/kubernetes/kubernetes/issues/39329"
      },
      "repository": {
        "nameWithOwner": "kubernetes/kubernetes"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MjU4NDk0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MjU4NDk0NQ==",
      "body": "wait WAT!  how... are... you... even! :)\r\n\r\nwhere exactly are dependencies getting re-injected into `package.json`s?  Immediately pre-publish, only temporarily?  This is _exciting_ stuff. 👍\r\n\r\n",
      "createdAt": "2017-01-14T00:36:09Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjk5NTAzMjg=",
        "title": "Remove Lerna",
        "url": "https://github.com/pouchdb/pouchdb/issues/5545"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MjY2ODU3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MjY2ODU3OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://64dbe637-ccf8-4301-bfe4-61cb3923bcde.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-@kadira/storybook-2.35.3/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-15T02:20:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAxNTgyMTE4",
        "title": "@kadira/storybook@2.35.3 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/58"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MzI3ODQ1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MzI3ODQ1NQ==",
      "body": ":shipit: +1",
      "createdAt": "2017-01-17T19:47:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAxOTI4MDkx",
        "title": "Update build command",
        "url": "https://github.com/trendscenter/coinstac/pull/124"
      },
      "repository": {
        "nameWithOwner": "trendscenter/coinstac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MzM5NDAyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MzM5NDAyMg==",
      "body": "I didn't include a caveat section in #1404 because I'm not sure how to generate a deterministic set of features that _don't_ get transpiled or polyfilled.  if i was able to generate that list, its value is still limited without a supporting cross-ref table showing those features against a can-i-use inspired table of browsers.  that would be saaawweeet 🌮.  too much effort ATM!\r\n",
      "createdAt": "2017-01-18T06:20:14Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTE4NzUyODU=",
        "title": "Include polyfill.io in HTML by default",
        "url": "https://github.com/facebook/create-react-app/issues/1104"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MzQyMzk1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MzQyMzk1MQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://09c494fd-91d1-4a16-8242-50ca50a61b1d.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-thunk-2.1.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-18T09:21:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAyMDI1ODk2",
        "title": "redux-thunk@2.1.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/59"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MzQyNDY4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MzQyNDY4OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://05e02427-26f5-4f1b-8545-88622b9497e7.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-thunk-2.2.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-18T09:24:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAyMDI2NDI5",
        "title": "redux-thunk@2.2.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/60"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MzU0OTIxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MzU0OTIxNQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://fdacf61c-1907-4d75-b761-b76c20090b91.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-router-3.0.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-18T17:52:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAyMTE2Njc2",
        "title": "Update react-router to version 3.0.2 🚀",
        "url": "https://github.com/dino-dna/donut/pull/61"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3MzYyNDE1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3MzYyNDE1Ng==",
      "body": "I also have this error, and I can reproduce it reliably across nodejs versions (well, 6.x - 7.x at least).\r\n\r\n`npm install -S lowercase-stream-transform@1.0.0` // passes\r\n`npm install -S lowercase-stream-transform@1.0.1` // fails\r\n\r\ni just re-published `1.0.3` and it worked.  i will note that `1.0.1` was published with yarn, and `1.0.2` with npm.  regardless, it seems as though the error in this case is specific to a corrupted package of sorts, perhaps?",
      "createdAt": "2017-01-18T22:36:22Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTgwMDMxMzE=",
        "title": "npm ERR! cb() never called!",
        "url": "https://github.com/npm/npm/issues/15344"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NDk1MjA1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NDk1MjA1MQ==",
      "body": "i use `artifactory` and I **also** get `401`s installing _new_ packages.  if the packages already exist on the registry, however, it seems to work pretty reliably!  agreed, works fine with `npm`.  i'd love to give people a working thing™ to test against, but am new to the `yarn` and `artifactory` scene",
      "createdAt": "2017-01-24T21:57:17Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDI3Nzg2MDk=",
        "title": "Yarn can not use private registries",
        "url": "https://github.com/yarnpkg/yarn/issues/2541"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NTgyMDYyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NTgyMDYyNA==",
      "body": "nm",
      "createdAt": "2017-01-28T02:22:39Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDM3NzUwODA=",
        "title": "counter intuitive serialization strategy for ajax POST",
        "url": "https://github.com/ReactiveX/rxjs/issues/2310"
      },
      "repository": {
        "nameWithOwner": "ReactiveX/rxjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NTg5NTQ1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NTg5NTQ1Ng==",
      "body": "yes, i also have this issue.  on my host i did:\r\n\r\n```\r\n  docker run --entrypoint htpasswd registry:2 -Bbn $UN $PW > /www/registry/auth/registry.$DOMAIN\r\n  docker-compose up # which brings up nginx-proxy:latest and registry:2\r\n```\r\n\r\nthe full message from the container is:\r\n\r\n```\r\nnginx_proxy        | nginx.1    | 2017/01/29 05:40:33 [crit] 19#19: *1 crypt_r() failed (22: Invalid argument), client: 73.25.92.242, server: registry.<my-domain>, request: \"GET / HTTP/1.1\", host: \"registry.<my-domain>\"\r\n```",
      "createdAt": "2017-01-29T05:44:43Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTIwNDU5MDk=",
        "title": "problem with nginx and bcrypt for htpasswd",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/643"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NTg5NTk4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NTg5NTk4Mg==",
      "body": "i also tried using `htpsswd` from within the nginx container to gen the pw. after apache-utils were installed, i generated the content and confirmed, still no dice",
      "createdAt": "2017-01-29T06:02:12Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTIwNDU5MDk=",
        "title": "problem with nginx and bcrypt for htpasswd",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/643"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NTg5NjM5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NTg5NjM5NA==",
      "body": "eeek. both links are dead",
      "createdAt": "2017-01-29T06:14:08Z",
      "issue": {
        "id": "MDU6SXNzdWU5MDA0OTg5Ng==",
        "title": "Docker registry - basic authentication with htpasswd",
        "url": "https://github.com/distribution/distribution/issues/655"
      },
      "repository": {
        "nameWithOwner": "distribution/distribution"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NTg5NjYwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NTg5NjYwOQ==",
      "body": "good news, if you use `jwilder/nginx-proxy:alpine`, hey. it works. :/ :)",
      "createdAt": "2017-01-29T06:21:03Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTIwNDU5MDk=",
        "title": "problem with nginx and bcrypt for htpasswd",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/643"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NTk1NTQyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NTk1NTQyMw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://54810272-4047-41da-b9ec-05b3a6a52e31.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-storybook-host-1.0.14/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-01-29T23:31:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAzNjY1MjQz",
        "title": "storybook-host@1.0.14 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/62"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NTk2MTAwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NTk2MTAwMA==",
      "body": "Awwwww yeya!  Standard baby!",
      "createdAt": "2017-01-30T01:00:50Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDM4OTQyNzQ=",
        "title": "request: use traditional node style callbacks",
        "url": "https://github.com/actionhero/browser_fingerprint/issues/9"
      },
      "repository": {
        "nameWithOwner": "actionhero/browser_fingerprint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NjI5MDkzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NjI5MDkzMQ==",
      "body": "it would appear that the fix has still not made it into an official release, at the time of writing.\r\n\r\ni just pulled http://releases.ansible.com/ansible/ansible-latest.tar.gz down and:\r\n\r\n```\r\n$ ~/Downloads/ansible-2.2.1.0/bin/ansible-galaxy install angstwad.docker_ubuntu\r\n [WARNING]: - angstwad.docker_ubuntu was NOT installed successfully: Failed to get data from the API server (https://galaxy.ansible.com/api/): a bytes-like object is required,\r\nnot 'str'\r\n\r\nERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.\r\ncdieringer@tw-cdaringe 🛰  cdaringe-provision$ ~/Downloads/ansible-2.2.1.0/bin/ansible-galaxy --version\r\nansible-galaxy 2.2.0.0\r\n  config file =\r\n  configured module search path = Default w/o overrides\r\n```",
      "createdAt": "2017-01-31T07:10:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxODg0NTIzNDU=",
        "title": "Cannot install role via ansible-galaxy on Mac OS ",
        "url": "https://github.com/ansible/ansible/issues/18446"
      },
      "repository": {
        "nameWithOwner": "ansible/ansible"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NjI5MTI3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NjI5MTI3Ng==",
      "body": "in fact, even on ~~https://github.com/ansible/ansible/releases/tag/v2.1.4.0-1~~ https://github.com/ansible/ansible/releases/tag/v2.2.1.0-1 i still see the same issue",
      "createdAt": "2017-01-31T07:12:52Z",
      "issue": {
        "id": "MDU6SXNzdWUxODg0NTIzNDU=",
        "title": "Cannot install role via ansible-galaxy on Mac OS ",
        "url": "https://github.com/ansible/ansible/issues/18446"
      },
      "repository": {
        "nameWithOwner": "ansible/ansible"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NjI5MjcwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NjI5MjcwNA==",
      "body": "sorry for so many posts.  i just pulled the latest `devel` branch as well.  same same. :/",
      "createdAt": "2017-01-31T07:23:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxODg0NTIzNDU=",
        "title": "Cannot install role via ansible-galaxy on Mac OS ",
        "url": "https://github.com/ansible/ansible/issues/18446"
      },
      "repository": {
        "nameWithOwner": "ansible/ansible"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NjY0ODc1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NjY0ODc1Mw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://184e039c-00e4-4ca0-9a1b-677993d4d06c.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.8.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-01T12:45:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA0MTI5Mjg4",
        "title": "redux-logger@2.8.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/63"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3Njk3MzYxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3Njk3MzYxOQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://f001a97e-931b-4372-9f13-b85dac031740.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.8.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-02T14:34:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA0MzQ4ODUz",
        "title": "redux-logger@2.8.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/64"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NzEwODIzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NzEwODIzNA==",
      "body": "cancellation is really cleanly implemented with observers.  it would probably mean a couple more light deps, but worth consideration",
      "createdAt": "2017-02-02T22:41:41Z",
      "issue": {
        "id": "MDU6SXNzdWUxODY3OTIyNDk=",
        "title": "Make ajax a fetch polyfill",
        "url": "https://github.com/pouchdb/pouchdb/issues/5835"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3NzQwNzY4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3NzQwNzY4MA==",
      "body": "The tests looks really good!",
      "createdAt": "2017-02-04T01:38:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTQ0OTQxMDM=",
        "title": "[feature] duration format in core moment",
        "url": "https://github.com/moment/moment/pull/3615"
      },
      "repository": {
        "nameWithOwner": "moment/moment"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3ODk4NTMxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3ODk4NTMxNQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://6ac1d7a6-bd20-4a47-9652-c3b7305f01c9.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-router-redux-4.0.8/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-10T16:08:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA1NjU2NDEw",
        "title": "react-router-redux@4.0.8 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/65"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3OTExODI2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3OTExODI2NQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://1723daf8-c1f1-49a8-ba67-b5c78b9019b3.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.9.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-11T03:38:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA1NzQwMDI1",
        "title": "Update react-scripts to version 0.9.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/66"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3OTE5MjUxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3OTE5MjUxNQ==",
      "body": "i'm not entirely in love with the implementation, especially now that `--inspect` is essentially mainstream.  feel free to be harsh",
      "createdAt": "2017-02-12T02:44:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTUxNTIz",
        "title": "feature/add-first-class-debugging-support-for-tests",
        "url": "https://github.com/facebook/create-react-app/pull/1360"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI3OTc1NjE5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI3OTc1NjE5Nw==",
      "body": "Wow thanks!",
      "createdAt": "2017-02-14T16:22:24Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDczMTYyNjE=",
        "title": "make .childProcess part of the public API",
        "url": "https://github.com/zentrick/cross-spawn-promise/issues/50"
      },
      "repository": {
        "nameWithOwner": "zentrick/cross-spawn-promise"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDE4MjMxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDE4MjMxNQ==",
      "body": "awesome, excited about this!",
      "createdAt": "2017-02-15T23:57:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2NDIxNjYw",
        "title": "feat(stories): add initial components and scaffolding for import from…",
        "url": "https://github.com/Tripwire/octagon/pull/3"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDE5NDQwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDE5NDQwMA==",
      "body": "it would be nice if this would stub those `git` user values on our behalf!",
      "createdAt": "2017-02-16T00:57:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxMDc2NTA1NTk=",
        "title": "Travis-CI support",
        "url": "https://github.com/tschaub/gh-pages/issues/22"
      },
      "repository": {
        "nameWithOwner": "tschaub/gh-pages"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDE5NTExMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDE5NTExMQ==",
      "body": "`plugin` is also a 1st class citizen:\r\n\r\nhttps://github.com/cdaringe/pouchy/blob/56a23c4298293fba6b7572ceb38473d1b3a02aaa/src/index.js#L578\r\n\r\n`Pouchy.plugin` also works.",
      "createdAt": "2017-02-16T01:01:09Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDc5Mzk5MDU=",
        "title": "What about authentication?",
        "url": "https://github.com/cdaringe/pouchy/issues/149"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDIzMjU4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDIzMjU4OA==",
      "body": "i made an [example here](https://github.com/cdaringe/react-scripts-source-map-wonky-isms/tree/babel-test), only to realize that of course pure babel is ok--its babel-loader w/ uglify that warrant these difficult source maps.  i also did an [example with babili](https://github.com/cdaringe/react-scripts-source-map-wonky-isms/tree/babili-test).  all is green 🍏, but it's a biased test because babel & babili are maintaining my symbol names. ",
      "createdAt": "2017-02-16T05:07:14Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDc2MDA0ODA=",
        "title": "sourcemaps and runtime variables misaligned, yielding difficult debugging",
        "url": "https://github.com/facebook/create-react-app/issues/1557"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDIzNTI2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDIzNTI2NA==",
      "body": "nm babili is mangling some stuff & its busted per the same failure mode.\r\n\r\npure babili example above:\r\n![screen shot 2017-02-15 at 9 22 42 pm](https://cloud.githubusercontent.com/assets/1003261/23008564/4467d42e-f3c5-11e6-8b70-cbd64e8ea494.png)\r\n\r\ncheck out that wild local var!\r\n\r\n",
      "createdAt": "2017-02-16T05:30:07Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDc2MDA0ODA=",
        "title": "sourcemaps and runtime variables misaligned, yielding difficult debugging",
        "url": "https://github.com/facebook/create-react-app/issues/1557"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDQzMDY2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDQzMDY2Ng==",
      "body": "https://github.com/Semantic-Org/Semantic-UI-LESS",
      "createdAt": "2017-02-16T19:19:59Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTcyNDU5Mzk=",
        "title": "port the semantic source out of our package",
        "url": "https://github.com/Tripwire/octagon/issues/2"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDQ0NTYzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDQ0NTYzNg==",
      "body": "i agree, @gr2m's strategy is valid. closing",
      "createdAt": "2017-02-16T20:13:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTk0OTg5MjI=",
        "title": "Can't change ajax parameters on-the-fly",
        "url": "https://github.com/pouchdb/pouchdb/issues/5322"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDQ0Njc0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDQ0Njc0NQ==",
      "body": "then the first example should suffice :).  however, theres no bundler or uglification/mangling w/ pure babel, so no reason for the failure mode described above to affect it.",
      "createdAt": "2017-02-16T20:17:46Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDc2MDA0ODA=",
        "title": "sourcemaps and runtime variables misaligned, yielding difficult debugging",
        "url": "https://github.com/facebook/create-react-app/issues/1557"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDc1MjE4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDc1MjE4Nw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://07949707-0faf-4cc9-b54f-157906c75e58.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/tidy/pkg/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-17T20:02:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODAyMzQw",
        "title": "Tidy/pkg",
        "url": "https://github.com/Tripwire/octagon/pull/7"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDc4NDU0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDc4NDU0MA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://1833c0fe-ffcb-4327-948f-fb02a6199975.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/slcomponents/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-17T22:30:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2NDIxNjYw",
        "title": "feat(stories): add initial components and scaffolding for import from…",
        "url": "https://github.com/Tripwire/octagon/pull/3"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDgwMjcwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDgwMjcwNg==",
      "body": "@eddier, let's discuss a merge strategy.  this PR keeps expanding & will be increasingly difficult to review if we dont merge soon!\r\n\r\nmay we:\r\n\r\n- port 3rd party code out (sans sui, unless you want to own that too!)\r\n- set precedence for subsequent PRs.  can we work towards small PRs on next wave s.t. we can review w/ greater ease?\r\n  - i added a storybook plugin for PRs so that our UX folks can get their eyes 👀  on inbound stories!  they probably like story specific PRs",
      "createdAt": "2017-02-18T00:23:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2NDIxNjYw",
        "title": "feat(stories): add initial components and scaffolding for import from…",
        "url": "https://github.com/Tripwire/octagon/pull/3"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDgwNzE3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDgwNzE3OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://68369a9d-4490-451a-b636-1821d951bdea.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/fix/ripcord-opt-in-rules/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-18T01:01:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODM5NjI1",
        "title": "fix(pkg): limit ripcord rules",
        "url": "https://github.com/Tripwire/octagon/pull/11"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDg2OTExMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDg2OTExMQ==",
      "body": "thanks @eddier! i added some follow up commits which tidy the build/docs/lint/etc",
      "createdAt": "2017-02-18T19:30:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2NDIxNjYw",
        "title": "feat(stories): add initial components and scaffolding for import from…",
        "url": "https://github.com/Tripwire/octagon/pull/3"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDg2OTE0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDg2OTE0OQ==",
      "body": "closed by #3 ",
      "createdAt": "2017-02-18T19:31:40Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDg1OTA4OTQ=",
        "title": "namespace SUIR components vs. custom components",
        "url": "https://github.com/Tripwire/octagon/issues/8"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDg3MTA2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDg3MTA2OA==",
      "body": "closed by #3",
      "createdAt": "2017-02-18T20:04:14Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDc5NjQxMDg=",
        "title": "make a programmatic pallette",
        "url": "https://github.com/Tripwire/octagon/issues/4"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDg3MTEwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDg3MTEwMQ==",
      "body": "or update the linter to handle both",
      "createdAt": "2017-02-18T20:05:06Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDg1OTA5MTY=",
        "title": "jsx => js",
        "url": "https://github.com/Tripwire/octagon/issues/9"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDg3Njk4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDg3Njk4OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://38dfe732-fe93-4b01-8e82-343b109a5f83.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/pagination/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-18T21:38:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODc3NjYw",
        "title": "feat(controls): add pagination controls",
        "url": "https://github.com/Tripwire/octagon/pull/12"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDg3NzM3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDg3NzM3Nw==",
      "body": "whoo hoooo\r\n",
      "createdAt": "2017-02-18T21:45:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDg2NTc2Mjk=",
        "title": "fauxton add new document fails",
        "url": "https://github.com/pouchdb/pouchdb-server/issues/186"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb-server"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDk0MDk0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDk0MDk0NQ==",
      "body": "yea, that must be it.  we bake in the http adapter by default for when we use URLs, but we cannot reliably pick browser default adapters (memory/websql/indexeddb/etc).\r\n\r\nalso, we now do browser tests + node tests 🎉 ",
      "createdAt": "2017-02-19T19:13:39Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDg3MTM1MTk=",
        "title": "Invalid Adapter: undefined",
        "url": "https://github.com/cdaringe/pouchy/issues/150"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDk0MDk5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDk0MDk5Mw==",
      "body": "closing for now but feel free to reopen or ask more questions",
      "createdAt": "2017-02-19T19:14:22Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDg3MTM1MTk=",
        "title": "Invalid Adapter: undefined",
        "url": "https://github.com/cdaringe/pouchy/issues/150"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MDk0Njg3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MDk0Njg3MQ==",
      "body": "@scne, still working around it, or find another way?",
      "createdAt": "2017-02-19T20:37:16Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDMwOTg3Mzk=",
        "title": "Error: cannot import name IPAMConfig with docker_service module",
        "url": "https://github.com/ansible/ansible/issues/20634"
      },
      "repository": {
        "nameWithOwner": "ansible/ansible"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTQyNjU5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTQyNjU5Mg==",
      "body": "oh, nice call. thx @jhegg!",
      "createdAt": "2017-02-21T18:05:12Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDkyMjM2NDE=",
        "title": "Storybook usage instructions slightly incorrect",
        "url": "https://github.com/Tripwire/octagon/issues/13"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTQyNzQ0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTQyNzQ0Mg==",
      "body": "tagging as bug because lint intent is out-of-sync",
      "createdAt": "2017-02-21T18:08:16Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDg1OTA5MTY=",
        "title": "jsx => js",
        "url": "https://github.com/Tripwire/octagon/issues/9"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTQyNzQ4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTQyNzQ4MQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://3f1429a7-81e2-410c-a37e-fdd26c105fc4.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/fix-storybook-startup-instructions/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-21T18:08:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA3MjQ2MzA1",
        "title": "fix(pkg): storybook instructions in docs",
        "url": "https://github.com/Tripwire/octagon/pull/15"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTQyNzcwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTQyNzcwOA==",
      "body": "+1",
      "createdAt": "2017-02-21T18:09:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA3MjQ2MzA1",
        "title": "fix(pkg): storybook instructions in docs",
        "url": "https://github.com/Tripwire/octagon/pull/15"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTQzMjQyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTQzMjQyMA==",
      "body": "hey @eddier, looks good.\r\n\r\n- i had a few remarks.  will you 👀 at those?\r\n- can you see the build error messages?  will want to 💚 that little guy pre merge!\r\n- on the Pagination component,\r\n  - i was clicking the page buttons and the text kept selecting/highlighting (because of my aggressivf clicking!).  [maybe we can drop these on?](http://caniuse.com/#feat=user-select-none)?  what do you think?\r\n  - were things like \"jump to end/start\" or \"select items per page\" requirements?  just askin!\r\n\r\nthanks!  this is cool stuff!  @antoinejuhel, 👀 storybook\r\n",
      "createdAt": "2017-02-21T18:26:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODc3NjYw",
        "title": "feat(controls): add pagination controls",
        "url": "https://github.com/Tripwire/octagon/pull/12"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTQzMzA0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTQzMzA0NA==",
      "body": "oh, and, https://github.com/semantic-release/semantic-release#default-commit-message-format .  dont worry about rebasing.  were still learning it too!",
      "createdAt": "2017-02-21T18:28:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODc3NjYw",
        "title": "feat(controls): add pagination controls",
        "url": "https://github.com/Tripwire/octagon/pull/12"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTUyMjM1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTUyMjM1Mg==",
      "body": "cool.  hmm.  the project should be open. i just double checked.  do you have an acct?  looks like the linter isnt happy atm",
      "createdAt": "2017-02-21T23:57:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODc3NjYw",
        "title": "feat(controls): add pagination controls",
        "url": "https://github.com/Tripwire/octagon/pull/12"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTUyMjUyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTUyMjUyNw==",
      "body": "& yep, we'll wire in the API calls. thx!",
      "createdAt": "2017-02-21T23:58:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODc3NjYw",
        "title": "feat(controls): add pagination controls",
        "url": "https://github.com/Tripwire/octagon/pull/12"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTU2MDI5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTU2MDI5Nw==",
      "body": "Access granted.  Sorry for the delay\n\nOn Tue, Feb 21, 2017 at 4:51 PM, Edward Raffaele <notifications@github.com>\nwrote:\n\n> Thanks Josh! Didn't realize the .stories.js files were in scope of the\n> linter.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/Tripwire/octagon/pull/12#issuecomment-281532045>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AA9O_Q1EkXQV5U5AUPT4uKy6L1SnwyRgks5re4aagaJpZM4MFRAZ>\n> .\n>\n",
      "createdAt": "2017-02-22T03:42:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODc3NjYw",
        "title": "feat(controls): add pagination controls",
        "url": "https://github.com/Tripwire/octagon/pull/12"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTc1MTYwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTc1MTYwOQ==",
      "body": "@patotoma, that sounds great.  can you share?",
      "createdAt": "2017-02-22T18:06:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxODc0OTQ3ODA=",
        "title": "Yarn cannot resolve a relative path, fails to install the project",
        "url": "https://github.com/yarnpkg/yarn/issues/1698"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTc4MDUxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTc4MDUxOA==",
      "body": "a workaround, `rm -rf ~/.config/yarn/global/*` + redo, :)",
      "createdAt": "2017-02-22T19:44:07Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1NTY1OTc=",
        "title": "yarn global add <pkg> is using the wrong repo & bogus manifest",
        "url": "https://github.com/yarnpkg/yarn/issues/2757"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTc4OTM3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTc4OTM3OQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://948cab5c-35df-4cb6-8c9c-ae211f71ef49.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/icons/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-22T20:15:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA3NDg4OTA4",
        "title": "feat(icons): support for elegant icons",
        "url": "https://github.com/Tripwire/octagon/pull/18"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTg0NzM3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTg0NzM3NQ==",
      "body": "I will definitely follow commits on such a thing.  **very** interested!",
      "createdAt": "2017-02-23T00:09:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcwNTk5MzM=",
        "title": "style guide generation, react-styleguidist integration?",
        "url": "https://github.com/storybookjs/storybook/issues/602"
      },
      "repository": {
        "nameWithOwner": "storybookjs/storybook"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MTg0NzU4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MTg0NzU4MQ==",
      "body": "this would be toooo raaaad, https://github.com/storybooks/react-storybook/issues/602",
      "createdAt": "2017-02-23T00:10:40Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1MjI5MTk=",
        "title": "where shall we document component usage",
        "url": "https://github.com/Tripwire/octagon/issues/16"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjA5MzU0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjA5MzU0OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://86db3f36-9f5f-4834-b977-eb6ab791fe9f.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-redux-5.0.3/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-23T19:24:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA3Njk0MTA3",
        "title": "Update react-redux to version 5.0.3 🚀",
        "url": "https://github.com/dino-dna/donut/pull/67"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjE5MTcxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjE5MTcxNw==",
      "body": "hey @eddier, that looks saweeeet.  very interested!  lets try it youre down!",
      "createdAt": "2017-02-24T03:08:32Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1MjI5MTk=",
        "title": "where shall we document component usage",
        "url": "https://github.com/Tripwire/octagon/issues/16"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjE5MTgwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjE5MTgwNQ==",
      "body": "sorry for the lagged responses again, FYI. busy day!",
      "createdAt": "2017-02-24T03:09:13Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1MjI5MTk=",
        "title": "where shall we document component usage",
        "url": "https://github.com/Tripwire/octagon/issues/16"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjE5MTk0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjE5MTk0Mw==",
      "body": "+1!  nice!",
      "createdAt": "2017-02-24T03:10:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA3NDg4OTA4",
        "title": "feat(icons): support for elegant icons",
        "url": "https://github.com/Tripwire/octagon/pull/18"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjM1NTExOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjM1NTExOA==",
      "body": "no response, just closed?",
      "createdAt": "2017-02-24T17:42:25Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDkzNDgxMjc=",
        "title": "how & why should i use this package?",
        "url": "https://github.com/Tripwire/tripwire-open-source/issues/17"
      },
      "repository": {
        "nameWithOwner": "Tripwire/tripwire-open-source"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjQxMTQ4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjQxMTQ4Ng==",
      "body": "it launched & ran _great!_  lets discuss paths forward. i see a few options.\r\n\r\n- no storybook, just styleguidist.\r\n  - this ostracizes UX, who is a first class customer & needs viz as the lib changes\r\n    - i.e. there isnt a \"storybook-hub\" tool for styleguidist to integrate them into the reviews easily\r\n- no styleguidist, just storybook\r\n  - lose out on interactivity & rich API docs\r\n    - those API docs are too good to lose!\r\n  - still could benefit from the component docs because of https://github.com/kadirahq/babel-plugin-react-docgen\r\n- use both\r\n  - still get the benefits of both, but have a duplicate build temporarily to serve developers\r\n\r\nim in favor of using both (option 3), with the intent to drop the standalone styleguidist in the high hopes that the storybook integration becomes a thing™.\r\n\r\nthoughts? @Tripwire/octagonners @jhegg ",
      "createdAt": "2017-02-24T21:37:36Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1MjI5MTk=",
        "title": "where shall we document component usage",
        "url": "https://github.com/Tripwire/octagon/issues/16"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjQxNjYwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjQxNjYwNQ==",
      "body": "one idea is a styleguidist loader.\r\n\r\nin that regard, storybook doesn't even need awareness of styleguidist.  you just:\r\n\r\n```js\r\n.add('widget', require('styleguidist!./my-widget.md'))\r\n```\r\n\r\nthe loader would return the root react `Component` for the styleguide and blamo, we're on our way!\r\n\r\n@sapegin, thoughts?",
      "createdAt": "2017-02-24T21:57:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcwNTk5MzM=",
        "title": "style guide generation, react-styleguidist integration?",
        "url": "https://github.com/storybookjs/storybook/issues/602"
      },
      "repository": {
        "nameWithOwner": "storybookjs/storybook"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjQxODgzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjQxODgzMg==",
      "body": "@eddier , `undefined`s are a little strange\r\n\r\n```\r\n$ yarn run styleguide\r\nyarn run v0.21.0\r\n$ styleguidist server\r\nStyle guide server started at:\r\nhttp://localhost:3000\r\n\r\n\r\nsrc/styles/components/pagination-control.css\r\nundefined [undefined]\r\n\r\n\r\nsrc/styles/components/favorite-button.css\r\nundefined [undefined]\r\n\r\n\r\nsrc/styles/app.css\r\nundefined [undefined]\r\nundefined [undefined]\r\nundefined [undefined]\r\nundefined [undefined]\r\n\r\nCompiled successfully!\r\n```",
      "createdAt": "2017-02-24T22:07:49Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1MjI5MTk=",
        "title": "where shall we document component usage",
        "url": "https://github.com/Tripwire/octagon/issues/16"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjUyNzM3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjUyNzM3MQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://4b8acb7a-b017-48f8-9b27-9f68a422fa25.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.9.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-26T02:18:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA3OTg2NjEw",
        "title": "Update react-scripts to version 0.9.1 🚀",
        "url": "https://github.com/dino-dna/donut/pull/68"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjUzNjczMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjUzNjczMg==",
      "body": "sorry, my remarks didn't add clarity.  lets fix that!  your original thoughts were ~~accurate.\r\n\r\n- babel, **without ES2015 module imports, works fine** with sourcemaps.\r\n- babel, **with ES2015 module imports, does _not_ work** w/ sourcemaps\r\n\r\ntherefore there should be a followup in babel-land on this.  this can be easily demonstrated by cloning & running [this tiny example](https://github.com/cdaringe/react-scripts-source-map-wonky-isms/tree/babel-test).  because we wanted a webpack-free example, i stub in a `window.require` that simply returns `React`.  the example uses a pure babel build (using CRA's babel config) w/ a fake require.  Again, Chrome cannot show in-scope imports, such as `Component`.",
      "createdAt": "2017-02-26T06:37:39Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDc2MDA0ODA=",
        "title": "sourcemaps and runtime variables misaligned, yielding difficult debugging",
        "url": "https://github.com/facebook/create-react-app/issues/1557"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjU1NzQ5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjU1NzQ5OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://90298b36-3798-49e4-b7c6-ccde0c5977ab.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.9.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-26T13:55:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4MDA1NTg1",
        "title": "Update react-scripts to version 0.9.2 🚀",
        "url": "https://github.com/dino-dna/donut/pull/69"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjYwMTM2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjYwMTM2NQ==",
      "body": "hey @thomasleveil, thanks!  i see that you added some comments to the template.  there are, however, no runtime changes to the image, correct?  that is, your new template doesnt emit more log info, right?",
      "createdAt": "2017-02-27T00:19:16Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTAzNTk5MDk=",
        "title": "how to increase log level for debugging?",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/746"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjYwMjI2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjYwMjI2NA==",
      "body": "FWIW, this also happens to me when using the single container mode.  empty upstream!  ~stubbing `bridge` in was an OK work around~ (see below)\r\n",
      "createdAt": "2017-02-27T00:32:24Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcxMDIxNzM=",
        "title": "upstreams are empty when using docker compose with separate containers for nginx and dockergen",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/622"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjYzNDk4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjYzNDk4NA==",
      "body": "oh gotcha.  i get it now.  sorry, i wasnt registering that those comments show up in the dynamic config. thx!",
      "createdAt": "2017-02-27T05:58:09Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTAzNTk5MDk=",
        "title": "how to increase log level for debugging?",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/746"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MjYzNTg4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MjYzNTg4Nw==",
      "body": "the xcf file lives in `img/`!",
      "createdAt": "2017-02-27T06:05:00Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTAzNTk4OTg=",
        "title": "Logo rework/redesign",
        "url": "https://github.com/dino-dna/tagadactyl/issues/2"
      },
      "repository": {
        "nameWithOwner": "dino-dna/tagadactyl"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4Mjg0OTIwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4Mjg0OTIwNA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://3ca38417-3ebc-4705-8e4e-d4aedb23a73c.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/datatables/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-27T20:52:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4MTk4NzE2",
        "title": "Datatables",
        "url": "https://github.com/Tripwire/octagon/pull/19"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzEyNzIzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzEyNzIzMA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://37d1ab39-4707-4f8d-8e21-4cac3410fd41.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.9.3/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-28T18:47:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4MzgzNjUx",
        "title": "Update react-scripts to version 0.9.3 🚀",
        "url": "https://github.com/dino-dna/donut/pull/70"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzE1NTMzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzE1NTMzMg==",
      "body": "s3 is down... nooooo _!!!_  i cant upload my gif!\r\n@eddier @antoinejuhel, the story for `Table` acts a little funky on a smaller res.  Can you advise?  Theres an extra node at the top that i'm not sure is per expectation.\r\n\r\n",
      "createdAt": "2017-02-28T20:45:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4MTk4NzE2",
        "title": "Datatables",
        "url": "https://github.com/Tripwire/octagon/pull/19"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzE1NTQxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzE1NTQxNQ==",
      "body": "otherwise, looks good! :)",
      "createdAt": "2017-02-28T20:45:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4MTk4NzE2",
        "title": "Datatables",
        "url": "https://github.com/Tripwire/octagon/pull/19"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzE1OTk4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzE1OTk4Nw==",
      "body": "@jbovenschen, it would load only the content as defined by `./my-widget.md`, so just the one styleguidist story, or set of stories defined therein.  loading a full build probably wouldnt provide much value, IMHO",
      "createdAt": "2017-02-28T21:05:04Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcwNTk5MzM=",
        "title": "style guide generation, react-styleguidist integration?",
        "url": "https://github.com/storybookjs/storybook/issues/602"
      },
      "repository": {
        "nameWithOwner": "storybookjs/storybook"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzE2MTEwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzE2MTEwMQ==",
      "body": "i see.  in our case, should we not also make the collapsed `thead` inverted colors?  because right now its just an empty box.  white bg + white text :X",
      "createdAt": "2017-02-28T21:08:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4MTk4NzE2",
        "title": "Datatables",
        "url": "https://github.com/Tripwire/octagon/pull/19"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzE3OTQ3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzE3OTQ3Mg==",
      "body": "> Then what’s the difference with running Styleguidist separately if you still have to write docs in Styleguidist format?\r\n\r\ngreat point, i dont know what i was thinking. my head's on straight now!  perhaps a better approach would be an addon, providing a styleguidist wrapper thingy™:\r\n\r\n```js\r\nimport { styleguidist } from 'storybook-styleguidist'\r\nimport Button from './path/to/button'\r\n.add('Button', styleguidist(\r\n  Button,  // tells which props to inject into addon pane\r\n  () => { /* story 1 */ }, // renders normal styleguidist experience\r\n  () => { /* story 2 */ }\r\n)\r\n```\r\n\r\nmaybe not ideal, because in that approach, all stories share the same viewer. instead...\r\n\r\n```js\r\nimport { styleguidist } from 'storybook-styleguidist'\r\nimport Button from './path/to/button'\r\n.add(styleguidist(\r\n  Button,\r\n  'story1', () => { /* story 1 */ },\r\n  'story2', () => { /* story 2 */ }\r\n)\r\n```\r\n\r\n^^ would load the props documentation into the story1 & story2 \"styleguidist\" addon panes, & the stories would be laid out per the below in the storybook:\r\n\r\n```\r\n├── Button\r\n│   ├── story1\r\n│   ├── story2\r\n```",
      "createdAt": "2017-02-28T22:18:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcwNTk5MzM=",
        "title": "style guide generation, react-styleguidist integration?",
        "url": "https://github.com/storybookjs/storybook/issues/602"
      },
      "repository": {
        "nameWithOwner": "storybookjs/storybook"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzE4ODM5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzE4ODM5OQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://117da7cf-1902-40ca-bd00-3914fe937b30.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/greenkeeper-update-all/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-02-28T22:56:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NDMwNDM0",
        "title": "Update all dependencies 🌴",
        "url": "https://github.com/Tripwire/octagon/pull/20"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzQwNTg2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzQwNTg2Mg==",
      "body": "sure, but i also want to serve it for download (i can blob it, but would rather URL to it) and in some cases, actually use it as a component too!  it's nutty! :)\r\n\r\nim okay `// eslint-disable-line`ing for now.",
      "createdAt": "2017-03-01T17:15:45Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTA5NTk4OTk=",
        "title": "Permit Loader Specification Or Relax ESLint webpack loader rule",
        "url": "https://github.com/facebook/create-react-app/issues/1686"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzQwNzY3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzQwNzY3Nw==",
      "body": "definitely.  i have moderate confidence that webpack will be in here for a while & that file & url loaders will be sticking around too, so im gettin wild and taking a risk!",
      "createdAt": "2017-03-01T17:21:50Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTA5NTk4OTk=",
        "title": "Permit Loader Specification Or Relax ESLint webpack loader rule",
        "url": "https://github.com/facebook/create-react-app/issues/1686"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzQwNzc2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzQwNzc2NQ==",
      "body": "#tests",
      "createdAt": "2017-03-01T17:22:06Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTA5NTk4OTk=",
        "title": "Permit Loader Specification Or Relax ESLint webpack loader rule",
        "url": "https://github.com/facebook/create-react-app/issues/1686"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzQyNTg1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzQyNTg1MA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://5cd74366-d572-4a2d-8202-558bc4b7ff17.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/styleguide/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-01T18:26:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NTk5Mjk2",
        "title": "Styleguide",
        "url": "https://github.com/Tripwire/octagon/pull/21"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzQ1MzYyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzQ1MzYyMw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://340db2d5-bf97-4b62-9fb0-84d4b795fbe0.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/formcontrol/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-01T20:04:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NjE3Mzky",
        "title": "Radio/Checkboxes",
        "url": "https://github.com/Tripwire/octagon/pull/22"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzUxNzgwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzUxNzgwOQ==",
      "body": "![storybook-merge](https://cloud.githubusercontent.com/assets/1003261/23487706/b27bcf4c-fe9c-11e6-9526-999f7695dfed.gif)\r\n",
      "createdAt": "2017-03-02T00:32:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NTk5Mjk2",
        "title": "Styleguide",
        "url": "https://github.com/Tripwire/octagon/pull/21"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzUyNzUxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzUyNzUxOQ==",
      "body": "2cool.",
      "createdAt": "2017-03-02T01:29:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4MTk4NzE2",
        "title": "Datatables",
        "url": "https://github.com/Tripwire/octagon/pull/19"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzUyODIyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzUyODIyNw==",
      "body": "the slider isnt symmetric. any clue, @eddier?\r\n![radio](https://cloud.githubusercontent.com/assets/1003261/23489059/27ab4c86-fea5-11e6-8f0c-411c9f7f8a68.gif)\r\n",
      "createdAt": "2017-03-02T01:33:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NjE3Mzky",
        "title": "Radio/Checkboxes",
        "url": "https://github.com/Tripwire/octagon/pull/22"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzU2NzQ2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzU2NzQ2OA==",
      "body": "there are some fonts in the tripwire theme... maybe those are them?",
      "createdAt": "2017-03-02T06:21:56Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTEyOTgwMzY=",
        "title": "ElegantIcons module not found when importing semantic.css",
        "url": "https://github.com/Tripwire/octagon/issues/23"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzU2Nzc0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzU2Nzc0Ng==",
      "body": "hmm, i thought i saw them before. guess not? xref: https://github.com/Tripwire/octagon/pull/18/files",
      "createdAt": "2017-03-02T06:24:13Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTEyOTgwMzY=",
        "title": "ElegantIcons module not found when importing semantic.css",
        "url": "https://github.com/Tripwire/octagon/issues/23"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzYxODU1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzYxODU1OQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://62d27bc0-833d-45c1-b834-567245a8ce48.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.8.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-02T10:39:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NzMxMDM2",
        "title": "redux-logger@2.8.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/71"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzcwNDQ2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzcwNDQ2Ng==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://adada99c-30eb-4353-8396-4a84ecbee3f1.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/menutabs/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-02T16:33:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4Nzk4Mzg5",
        "title": "Menutabs",
        "url": "https://github.com/Tripwire/octagon/pull/24"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzcyNjk5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzcyNjk5Nw==",
      "body": "+1",
      "createdAt": "2017-03-02T17:49:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NjE3Mzky",
        "title": "Radio/Checkboxes",
        "url": "https://github.com/Tripwire/octagon/pull/22"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzcyOTAyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzcyOTAyNQ==",
      "body": "@eddier,\r\n- i accidentally trashed a few stories that were non-SUIR related from the stories dir. ill take a look at that soon\r\n- the last thing i want to do is inject our CSS into SUIR iframe.  then, no more SUIR stories necessary",
      "createdAt": "2017-03-02T17:57:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NTk5Mjk2",
        "title": "Styleguide",
        "url": "https://github.com/Tripwire/octagon/pull/21"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzcyOTIxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzcyOTIxOA==",
      "body": "+1",
      "createdAt": "2017-03-02T17:58:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4Nzk4Mzg5",
        "title": "Menutabs",
        "url": "https://github.com/Tripwire/octagon/pull/24"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4MzczOTczNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4MzczOTczNQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://197154f5-9053-4a9d-826d-49820a8322d1.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/fonts/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-02T18:37:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4ODIzMTU5",
        "title": "Font Dependencies",
        "url": "https://github.com/Tripwire/octagon/pull/25"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4Mzc3NzUxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4Mzc3NzUxOA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://8d6627f3-646c-4a89-a316-7c5042e46e6f.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/iconexamples/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-02T20:56:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4ODQ5MDgw",
        "title": "Update icon examples",
        "url": "https://github.com/Tripwire/octagon/pull/27"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4Mzc4MTEwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4Mzc4MTEwNA==",
      "body": "help me get caught up here.  is the issue that the build process will need to manually move some font assets?",
      "createdAt": "2017-03-02T21:10:30Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTEyOTgwMzY=",
        "title": "ElegantIcons module not found when importing semantic.css",
        "url": "https://github.com/Tripwire/octagon/issues/23"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4Mzc4MjA4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4Mzc4MjA4NA==",
      "body": "see https://github.com/Tripwire/octagon/issues/26. just adding an xref",
      "createdAt": "2017-03-02T21:12:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4Nzk4Mzg5",
        "title": "Menutabs",
        "url": "https://github.com/Tripwire/octagon/pull/24"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDAzNDg3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDAzNDg3Ng==",
      "body": "thanks for the super detailed response!\r\n\r\n> Component Explorer\r\n\r\nyup.  its _fantastic_ ™.\r\n\r\n> Themes\r\n\r\ni'm super in favor of a pure, native web-app.  however, themes cannot be applied _completely_ in this strategy because non-CSS assets do not have a way of being _reliably_ loaded.  we added on some extra fonts & imgs that integrate w/ SUIR components for example, that I consider key to our experience.  maybe that's _too_ much to ask to support!  regardless, the only way I see my use case working is a means to essentially run a build on your docs w/ my content.  a little webservice attached to the webapp could also facilitate that, but *bleck*, that's a lot of work!",
      "createdAt": "2017-03-03T18:39:24Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTEyNzAwMTc=",
        "title": "\"Your docs are so great that I want a build of them w/ my theme\" tips",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/1410"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDA5NjYzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDA5NjYzMQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://4b98cdb6-15f6-4970-8d24-5eef4e33fe45.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/fix/fonts/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-03T23:12:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5MDc0NTc3",
        "title": "fix(fonts): drop dupelicate font ref",
        "url": "https://github.com/Tripwire/octagon/pull/29"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDA5OTA0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDA5OTA0NQ==",
      "body": "closed by #25",
      "createdAt": "2017-03-03T23:27:01Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTE1NjEwNjY=",
        "title": "NotificationItem refers to css with relative path that breaks as library",
        "url": "https://github.com/Tripwire/octagon/issues/28"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDA5OTIyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDA5OTIyMA==",
      "body": "closed by #25",
      "createdAt": "2017-03-03T23:28:07Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTEyOTgwMzY=",
        "title": "ElegantIcons module not found when importing semantic.css",
        "url": "https://github.com/Tripwire/octagon/issues/23"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDA5OTM0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDA5OTM0Ng==",
      "body": "closed by #21.  eager closing",
      "createdAt": "2017-03-03T23:28:56Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDgyOTY0NzI=",
        "title": "document in <Welcome /> preferential usage",
        "url": "https://github.com/Tripwire/octagon/issues/5"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDEwNzIyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDEwNzIyOQ==",
      "body": "closing in light of #16 ",
      "createdAt": "2017-03-04T00:23:34Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDgzMDQ3ODg=",
        "title": "Consolidate Tech Docs & Add Stories for all Components",
        "url": "https://github.com/Tripwire/octagon/issues/6"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDExNDE1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDExNDE1MA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://b6dfd44e-3deb-4eae-963c-b5512b2439fe.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/tidy/styles/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-04T01:21:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5MDg2MDMw",
        "title": "chore(styles): remove unused & duplicate styles",
        "url": "https://github.com/Tripwire/octagon/pull/31"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDE4NDQ1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDE4NDQ1MQ==",
      "body": "other than increased visibility, the proposal probably doesn't add a ton of value, IMHO, both as a contributor & as a user.  if entry into the `community` umbrella is coupled w/ BKMs/contracts/etc, then there could be value to be had, but probably _only_  to those libs that are addons/mixins.  `pouchy` wraps PouchDB, and hence wouldn't fit the mold.  it's possible im not seeing the big picture from a cursory glance",
      "createdAt": "2017-03-04T21:35:48Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDc2NDc3MTY=",
        "title": "RFC: Proposal to make community contributions maintainable with a pouchdb-community org",
        "url": "https://github.com/pouchdb/pouchdb/issues/6237"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDI3MjI0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDI3MjI0Nw==",
      "body": "cool, that's helpful.  i may need to automate that in our CI build!",
      "createdAt": "2017-03-05T23:22:40Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTEyNzAwMTc=",
        "title": "\"Your docs are so great that I want a build of them w/ my theme\" tips",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/1410"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDI3ODQyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDI3ODQyOA==",
      "body": "nm, using `bridge` borks inter container networking gained by using compose.",
      "createdAt": "2017-03-06T00:52:06Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcxMDIxNzM=",
        "title": "upstreams are empty when using docker compose with separate containers for nginx and dockergen",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/622"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDU0Njk2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDU0Njk2OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://d4bf6ada-cd5b-4e19-b981-e53689340d47.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/microcard/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-06T21:58:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5MzU4NDcx",
        "title": "<wip> microcard feeback",
        "url": "https://github.com/Tripwire/octagon/pull/32"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDU1NDcwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDU1NDcwNw==",
      "body": "nice!  this is on the money 🤑 \r\n\r\n- would `<Card micro />` `<Card jumbo />` be achievable vs two separate components?\r\n- prefer direct imports vs imports from suir directly\r\n\r\nanyway, this is exactly what i was hoping for!",
      "createdAt": "2017-03-06T22:27:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5MzU4NDcx",
        "title": "<wip> microcard feeback",
        "url": "https://github.com/Tripwire/octagon/pull/32"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDU1OTcyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDU1OTcyMg==",
      "body": "> Since the components have unique fragments it might be better to keep them separated rather than rather than the unified \"Card\" parent component.\r\n\r\nalrighty!\r\n\r\n> Can you explain what you mean or use an example to illustrate point 2 to make sure we're talking about the same thing?\r\n\r\nyea, that couldnt have been more unclear.\r\n`import Blah from 'suir/comps/blah'` 👍 \r\nvs\r\n`import { Blah } from 'suir'` 👎 ",
      "createdAt": "2017-03-06T22:47:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5MzU4NDcx",
        "title": "<wip> microcard feeback",
        "url": "https://github.com/Tripwire/octagon/pull/32"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDU2NTQxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDU2NTQxMA==",
      "body": "yea looks like it's missin!\r\n\r\ni installed the npm package:\r\n\r\n```\r\n$ tree node_modules/font-awesome/fonts/\r\nnode_modules/font-awesome/fonts/\r\n├── FontAwesome.otf\r\n├── fontawesome-webfont.eot\r\n├── fontawesome-webfont.svg\r\n├── fontawesome-webfont.ttf\r\n├── fontawesome-webfont.woff\r\n└── fontawesome-webfont.woff2\r\n```\r\n\r\n@eddier, I dont recall what the import should look like.  its not in site.overrides or icon.overrides.  https://github.com/Tripwire/octagon/blob/master/semantic/src/themes/tripwire/globals/site.overrides .  if you can advise as to what the font import statement is, i can update the build script?",
      "createdAt": "2017-03-06T23:11:37Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTIyNjQzMjk=",
        "title": "fontawesome is referenced in icon.overrides, yet missing",
        "url": "https://github.com/Tripwire/octagon/issues/33"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDYwNDE1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDYwNDE1OA==",
      "body": "doh! thx :)",
      "createdAt": "2017-03-07T02:42:04Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTIyNjQzMjk=",
        "title": "fontawesome is referenced in icon.overrides, yet missing",
        "url": "https://github.com/Tripwire/octagon/issues/33"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDYxNTg0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDYxNTg0Nw==",
      "body": "![untitled mov](https://cloud.githubusercontent.com/assets/1003261/23641334/d3a87fe4-02a7-11e7-8a72-19dda743cc4d.gif)\r\n\r\nalright, new strategy is in.  `styleguidist` is now a first class citizen, storybook is a 2nd class citizen.  in dev, just use styleguidist (`yarn start`).  storybook still delivers the cloud build, so lets continue w/ it for that functionality only.",
      "createdAt": "2017-03-07T04:04:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NTk5Mjk2",
        "title": "Styleguide",
        "url": "https://github.com/Tripwire/octagon/pull/21"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDYxNjU3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDYxNjU3MQ==",
      "body": "this PR is huuuge, so lets sit down together for a review!",
      "createdAt": "2017-03-07T04:11:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA4NTk5Mjk2",
        "title": "Styleguide",
        "url": "https://github.com/Tripwire/octagon/pull/21"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NDk3MjQ5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NDk3MjQ5Ng==",
      "body": "hello. it hangs for me in both browsers :/ chrome & ff",
      "createdAt": "2017-03-08T07:57:17Z",
      "issue": {
        "id": "MDU6SXNzdWU3OTkyMTI5MA==",
        "title": "Sometimes not exiting",
        "url": "https://github.com/hughsk/smokestack/issues/44"
      },
      "repository": {
        "nameWithOwner": "hughsk/smokestack"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTEwOTI1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTEwOTI1OA==",
      "body": "design voided",
      "createdAt": "2017-03-08T17:30:43Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTIyODQ0MjA=",
        "title": "start stop button are different sizes",
        "url": "https://github.com/Tripwire/octagon/issues/35"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTEwOTgzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTEwOTgzMg==",
      "body": "design noted wontfix :/",
      "createdAt": "2017-03-08T17:32:37Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDkyMjY2MzI=",
        "title": "button height variations",
        "url": "https://github.com/Tripwire/octagon/issues/14"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTE2MzM3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTE2MzM3Ng==",
      "body": "This thread should be locked, IMHO.  Non value add remarks like the above come off as rude.  We are grateful for your hard work and offerings, GK team.",
      "createdAt": "2017-03-08T20:44:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzUyNTM4MzY=",
        "title": "Respect package.json in sub-folders",
        "url": "https://github.com/greenkeeperio/greenkeeper/issues/139"
      },
      "repository": {
        "nameWithOwner": "greenkeeperio/greenkeeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTE3MTE2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTE3MTE2MQ==",
      "body": "confirmed, no flex sppt in phantom 2.x. bummer!",
      "createdAt": "2017-03-08T21:14:12Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1MjQyMzQ=",
        "title": "define test strategy",
        "url": "https://github.com/Tripwire/octagon/issues/17"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTE3NzY1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTE3NzY1MA==",
      "body": "https://github.com/jonathantneal/flexibility ?",
      "createdAt": "2017-03-08T21:38:05Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1MjQyMzQ=",
        "title": "define test strategy",
        "url": "https://github.com/Tripwire/octagon/issues/17"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTE4ODU3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTE4ODU3MA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://79512c4c-2fb3-4419-8771-c11acb3fd550.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/Tripwire/octagon/branch/feature/testing/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-08T22:20:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5Nzk3NjQ3",
        "title": "Feature/testing",
        "url": "https://github.com/Tripwire/octagon/pull/37"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTIwMDk3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTIwMDk3NA==",
      "body": "![screen shot 2017-03-08 at 3 07 46 pm](https://cloud.githubusercontent.com/assets/1003261/23728435/9bebe62a-0411-11e7-9724-3795e27dd9b9.png)\r\n\r\nso this is nuts.  the phantom rendering in CI looks notably different than in osx\r\n",
      "createdAt": "2017-03-08T23:12:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5Nzk3NjQ3",
        "title": "Feature/testing",
        "url": "https://github.com/Tripwire/octagon/pull/37"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTIwMzkzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTIwMzkzMw==",
      "body": "im not sure i'm following this thread full well, but i have a similar problem.\r\n\r\nthe phantomjs on my ci server behaves differently than on my MBP.\r\n\r\n![screen shot 2017-03-08 at 3 25 31 pm](https://cloud.githubusercontent.com/assets/1003261/23728800/7d68b168-0413-11e7-9222-c9eaad6a2275.png)\r\n\r\n```\r\nReport: {\r\n  \"isSameDimensions\": false,\r\n  \"dimensionDifference\": {\r\n    \"width\": 0,\r\n    \"height\": 1\r\n  },\r\n  \"misMatchPercentage\": \"0.00\",\r\n  \"getDiffImage\": null\r\n}\r\nThreshold: 1\r\n```\r\n\r\neven w/ a mistmatch of `50`, this still tanks.  im going for a rough pass here, so im willing to be a little sloppy.  does someone see what im missing?\r\n\r\nThx!",
      "createdAt": "2017-03-08T23:27:11Z",
      "issue": {
        "id": "MDU6SXNzdWUxODI0NjU2Njg=",
        "title": "Components failing tests when mismatch percent is near zero.",
        "url": "https://github.com/garris/BackstopJS/issues/313"
      },
      "repository": {
        "nameWithOwner": "garris/BackstopJS"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTIwNDA0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTIwNDA0Nw==",
      "body": "https://github.com/garris/BackstopJS/issues/313#issuecomment-285203933",
      "createdAt": "2017-03-08T23:27:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5Nzk3NjQ3",
        "title": "Feature/testing",
        "url": "https://github.com/Tripwire/octagon/pull/37"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTIxMjY5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTIxMjY5NA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://28018dbf-956e-4261-a5a8-6dc1a3652794.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/feat/test-netlify/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-09T00:13:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5ODEzODY1",
        "title": "docs(Donut): dummy change",
        "url": "https://github.com/dino-dna/donut/pull/72"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTM5Mzc1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTM5Mzc1Ng==",
      "body": "@Primajin, thx!\r\n\r\n> compare | ERROR { size: isDifferent, content: 0.00%, threshold: 50% }: Octagon \\<huge-filename>.png\r\n   See: /\\<ci-root>/\\<huge-filename>.png\r\n\r\n@jtuds, looks cool, and close to being merged :)\r\n",
      "createdAt": "2017-03-09T16:01:42Z",
      "issue": {
        "id": "MDU6SXNzdWUxODI0NjU2Njg=",
        "title": "Components failing tests when mismatch percent is near zero.",
        "url": "https://github.com/garris/BackstopJS/issues/313"
      },
      "repository": {
        "nameWithOwner": "garris/BackstopJS"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTQ4NzUwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTQ4NzUwMg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://41694058-06cd-4f54-9dac-63d22901caaa.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.9.4/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-09T21:22:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEwMDA4NTky",
        "title": "react-scripts@0.9.4 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/73"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTQ4NzYxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTQ4NzYxNA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://259b66de-e4f3-4da9-b1ac-5a36dd3e50a4.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-scripts-0.9.5/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-09T21:23:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEwMDA4NjY4",
        "title": "react-scripts@0.9.5 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/74"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTU2Mjc3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTU2Mjc3NQ==",
      "body": "@eddier reopen or create new when ready!",
      "createdAt": "2017-03-10T03:23:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5MzU4NDcx",
        "title": "<wip> microcard feeback",
        "url": "https://github.com/Tripwire/octagon/pull/32"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTcxODgxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTcxODgxOQ==",
      "body": "counting guy's +1!",
      "createdAt": "2017-03-10T16:41:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5ODAyODU5",
        "title": "chore(pkg): kick storybook",
        "url": "https://github.com/Tripwire/octagon/pull/38"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTc4MjIyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTc4MjIyMg==",
      "body": "@eddier, is that a +1 here for merge?",
      "createdAt": "2017-03-10T20:56:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEwMTcwODM3",
        "title": "fix(pkg): lint. closes #9",
        "url": "https://github.com/Tripwire/octagon/pull/40"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTc4MzMxMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTc4MzMxMw==",
      "body": "eager closing in light of #41",
      "createdAt": "2017-03-10T21:00:37Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTI4MjA1NDY=",
        "title": "re visit docs post stylegudist",
        "url": "https://github.com/Tripwire/octagon/issues/36"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NTgzNzE4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NTgzNzE4MA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://f2a3d5b2-7fc2-4a07-9fac-de1d4d9e8d25.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-router-4.0.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-11T03:06:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEwMjQzOTgx",
        "title": "Update react-router to version 4.0.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/75"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjE5NTY5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjE5NTY5Mg==",
      "body": "backstop agreed upon.  chasing that independently in #37",
      "createdAt": "2017-03-13T18:14:31Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1MjQyMzQ=",
        "title": "define test strategy",
        "url": "https://github.com/Tripwire/octagon/issues/17"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjE5NjA2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjE5NjA2OA==",
      "body": "coverage badge removed.  coverage too meta to implement w/ pure visual test strategy.",
      "createdAt": "2017-03-13T18:15:44Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTcyNDU3NzM=",
        "title": "coverage reports 0",
        "url": "https://github.com/Tripwire/octagon/issues/1"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjE5NjQwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjE5NjQwNA==",
      "body": "`semantic-ui` does update its source _in our project_.  although its counter conventional as done now, we benefit from their build tooling & workflows, so lets keep it in for now",
      "createdAt": "2017-03-13T18:16:50Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTcyNDU5Mzk=",
        "title": "port the semantic source out of our package",
        "url": "https://github.com/Tripwire/octagon/issues/2"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjIwMTUyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjIwMTUyMA==",
      "body": "merged!",
      "createdAt": "2017-03-13T18:33:33Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDk1MjI5MTk=",
        "title": "where shall we document component usage",
        "url": "https://github.com/Tripwire/octagon/issues/16"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjIwMjM5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjIwMjM5NQ==",
      "body": "using thumbs up on opening post as approval +1. let me know otherwise!",
      "createdAt": "2017-03-13T18:36:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEwMTcwODM3",
        "title": "fix(pkg): lint. closes #9",
        "url": "https://github.com/Tripwire/octagon/pull/40"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjIxMTUwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjIxMTUwMA==",
      "body": "@jtuds, if you need help finishing up the addition change requests, let me know.",
      "createdAt": "2017-03-13T19:07:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTE0MDEyNTk=",
        "title": "Make isSameDimensions optional [Fixes #313]",
        "url": "https://github.com/garris/BackstopJS/pull/331"
      },
      "repository": {
        "nameWithOwner": "garris/BackstopJS"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjI2NjUyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjI2NjUyMw==",
      "body": "sauce errors are unhelpful.  it was actually an account setting oh sauce that i customer support needed to act on",
      "createdAt": "2017-03-13T22:41:42Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTM0ODU0NjU=",
        "title": "simple example out of testem documentation fails",
        "url": "https://github.com/johanneswuerbach/saucie/issues/66"
      },
      "repository": {
        "nameWithOwner": "johanneswuerbach/saucie"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjI5MTQ4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjI5MTQ4OA==",
      "body": "i tried running `testem ci --port 4445`, but the same failure mode occurs :/",
      "createdAt": "2017-03-14T01:07:58Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTM5Mzk4MTI=",
        "title": "sauce connect not proxying back properly",
        "url": "https://github.com/johanneswuerbach/saucie/issues/67"
      },
      "repository": {
        "nameWithOwner": "johanneswuerbach/saucie"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjI5MjMzNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjI5MjMzNQ==",
      "body": "for what its worth, i'm using codeship.  it could have something to do w/ their network config?",
      "createdAt": "2017-03-14T01:14:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTM5Mzk4MTI=",
        "title": "sauce connect not proxying back properly",
        "url": "https://github.com/johanneswuerbach/saucie/issues/67"
      },
      "repository": {
        "nameWithOwner": "johanneswuerbach/saucie"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjI5NDQ0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjI5NDQ0Ng==",
      "body": "son of a gun, i found this text in the testem automated test jobs: 'Sauce Connect Proxy Disabled'",
      "createdAt": "2017-03-14T01:28:24Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTM5Mzk4MTI=",
        "title": "sauce connect not proxying back properly",
        "url": "https://github.com/johanneswuerbach/saucie/issues/67"
      },
      "repository": {
        "nameWithOwner": "johanneswuerbach/saucie"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjI5NzQwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjI5NzQwMg==",
      "body": "does `saucie` need to specify the tunnel for each test to use on-run?",
      "createdAt": "2017-03-14T01:48:50Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTM5Mzk4MTI=",
        "title": "sauce connect not proxying back properly",
        "url": "https://github.com/johanneswuerbach/saucie/issues/67"
      },
      "repository": {
        "nameWithOwner": "johanneswuerbach/saucie"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjI5ODcxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjI5ODcxMA==",
      "body": "ah ha!  in CI, i set `CI_BUILD_NUMBER=''` and it worked!! something is borked w/ assigning a tunnel ID to jobs.",
      "createdAt": "2017-03-14T01:56:57Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTM5Mzk4MTI=",
        "title": "sauce connect not proxying back properly",
        "url": "https://github.com/johanneswuerbach/saucie/issues/67"
      },
      "repository": {
        "nameWithOwner": "johanneswuerbach/saucie"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4Njg3NjIwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4Njg3NjIwOQ==",
      "body": "waka waka 🎉 .  thanks.  this is a neat module, all jest aside.",
      "createdAt": "2017-03-15T20:55:33Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDU3Njc1MDk=",
        "title": "package too hilarious, unable to focus on real work",
        "url": "https://github.com/max-mapper/toiletdb/issues/6"
      },
      "repository": {
        "nameWithOwner": "max-mapper/toiletdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NjkxNjk4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NjkxNjk4OA==",
      "body": "in the latest kibana, when i embed the dashboard, the little spy arrow doesnt render.  however, in the dashboard view, before i embed it, it _does_ render.\r\n\r\ncan someone assist in how I can get that little guy rendering?  maybe a link to some docs on how I can configure that embed query?",
      "createdAt": "2017-03-15T23:57:35Z",
      "issue": {
        "id": "MDU6SXNzdWU3NTY1MjE3OQ==",
        "title": "Hide spy panel in Embed view",
        "url": "https://github.com/elastic/kibana/issues/3820"
      },
      "repository": {
        "nameWithOwner": "elastic/kibana"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NzI0OTkzNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NzI0OTkzNQ==",
      "body": "@antoinejuhel, check out the `ThinCard`.  see @wa11-e's post above.\r\n\r\n@eddier nice!  this is cool stuff!  I had a few remarks above.  I have additional remarks here:\r\n\r\n1. In your search what did you find about Styleguides docs on static members?  I ask because I'm not fully understanding this bit:\r\n<img width=\"940\" alt=\"screen shot 2017-03-16 at 7 25 25 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/24026438/5e5023ee-0a7e-11e7-97c9-89e31c988e0a.png\">\r\n1. `ThinCardWidget`.  I hate to complain about names (I really genuinely do) but I'm not understanding what the Widget is for/does?  He didn't have an example to look at.\r\n\r\nWhat are your thoughts?  Thx!",
      "createdAt": "2017-03-17T02:29:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5OTY0NTYz",
        "title": "Thin Card",
        "url": "https://github.com/Tripwire/octagon/pull/39"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NzQxMzI3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NzQxMzI3OQ==",
      "body": "im cool w/ merging this soon, but the class typo should probably be 👀 'd at first.\r\n\r\nspit balling on names (which have to happen here):\r\n\r\n- `<ThinCard.Stat[istic] label={label} value={value} />` :)\r\n- `<ThinCard.Column key={key} value={value} />` :/\r\n- `<ThinCard.KeyValue ... />` :/\r\n\r\nnaming stuff stinks.",
      "createdAt": "2017-03-17T17:04:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5OTY0NTYz",
        "title": "Thin Card",
        "url": "https://github.com/Tripwire/octagon/pull/39"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NzQyOTA0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NzQyOTA0OQ==",
      "body": "alrighty then.  in @eddier we trust! :)",
      "createdAt": "2017-03-17T18:04:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5OTY0NTYz",
        "title": "Thin Card",
        "url": "https://github.com/Tripwire/octagon/pull/39"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4NzQ2MjE2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4NzQ2MjE2OA==",
      "body": "I have preference to not.  Do you feel like its too difficult otherwise?  I figure the nav could exist on its own w/out any `Link`s.  Then as we add nav items, we could bind those in our app code to routes",
      "createdAt": "2017-03-17T20:26:05Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTQ4NTUwODE=",
        "title": "Left Navigation",
        "url": "https://github.com/Tripwire/octagon/issues/46"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODA1NTczNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODA1NTczNg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://7fbcb380-c9fb-4a1a-a27b-74b65351bc9e.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.9.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-21T11:53:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTExNzYwNTQ1",
        "title": "redux-logger@2.9.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/76"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODA2MzQzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODA2MzQzNA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://63e0a45c-d0f1-4e21-babf-0cb435201cc2.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.9.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-21T12:27:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTExNzY2NTc5",
        "title": "redux-logger@2.9.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/77"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODA3Nzg3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODA3Nzg3NA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://ae1450f2-9d73-4047-885c-df8e7f278931.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.10.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-21T13:29:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTExNzc3NzEw",
        "title": "redux-logger@2.10.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/78"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODIyODk5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODIyODk5Nw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://89de8fa8-0adc-4c07-aae8-d2382eb3baed.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.10.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-21T21:45:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTExODg2ODUy",
        "title": "redux-logger@2.10.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/79"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODMxMTA2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODMxMTA2NA==",
      "body": "@emexelem, `traefik` is... incredible! thanks!",
      "createdAt": "2017-03-22T06:34:40Z",
      "issue": {
        "id": "MDU6SXNzdWUxODcxMDIxNzM=",
        "title": "upstreams are empty when using docker compose with separate containers for nginx and dockergen",
        "url": "https://github.com/nginx-proxy/nginx-proxy/issues/622"
      },
      "repository": {
        "nameWithOwner": "nginx-proxy/nginx-proxy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODM1MTY3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODM1MTY3Nw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://a2dcdd87-0e8b-4cf6-a23e-0d89c4fba5ac.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-2.10.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-22T10:04:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTExOTcwNTM1",
        "title": "redux-logger@2.10.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/80"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODUwMjI4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODUwMjI4Nw==",
      "body": "@eddier can you baby step us through this? maybe a phone call? we want to learn! 3PM?",
      "createdAt": "2017-03-22T18:51:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEyMDU4NDE2",
        "title": "Leftnav",
        "url": "https://github.com/Tripwire/octagon/pull/54"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODUzMDYyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODUzMDYyNA==",
      "body": "pulling this now to finish the work",
      "createdAt": "2017-03-22T20:35:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTE0MDEyNTk=",
        "title": "Make isSameDimensions optional [Fixes #313]",
        "url": "https://github.com/garris/BackstopJS/pull/331"
      },
      "repository": {
        "nameWithOwner": "garris/BackstopJS"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODU1MDExMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODU1MDExMw==",
      "body": "i pulled it, only to find that it looks like the follow ups were already addressed. are we g2g on this?",
      "createdAt": "2017-03-22T21:46:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTE0MDEyNTk=",
        "title": "Make isSameDimensions optional [Fixes #313]",
        "url": "https://github.com/garris/BackstopJS/pull/331"
      },
      "repository": {
        "nameWithOwner": "garris/BackstopJS"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODU1MTEyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODU1MTEyNA==",
      "body": "for whatever reason, wa11-e could't find this PR to post back to. surgereview23652563.surge.sh",
      "createdAt": "2017-03-22T21:50:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTExOTI2Mjc0",
        "title": "Enable relative positioning for Large Card",
        "url": "https://github.com/Tripwire/octagon/pull/53"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODcyMDUzNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODcyMDUzNQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://34ff182f-5ad2-423b-9ef6-60d8fb19ed5f.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-3.0.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-23T13:34:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEyMjM4NTI5",
        "title": "Update redux-logger to version 3.0.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/81"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODg2NzA0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODg2NzA0OQ==",
      "body": "one idea i have here @ggascoigne is that we make something like `rest` props that is the set difference between passed props and propTypes keys.\r\n\r\n- `var rest = without(this.props, Object.keys(ClassName.propTypes))`\r\n- then, `<MyComponent {...rest} />`,  similar to what we saw in the SUIR code\r\n\r\nwe would probably want some first class logic for things like className, that way classNames get added vs squashed?   not confident on the last bit, but it feels sane",
      "createdAt": "2017-03-23T21:33:27Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTYyMjgxMjc=",
        "title": "components do not pass down unhandled props",
        "url": "https://github.com/Tripwire/octagon/issues/57"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODg3MDI2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODg3MDI2NA==",
      "body": "ya, maybe so maybe so...",
      "createdAt": "2017-03-23T21:45:47Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTYyMjgxMjc=",
        "title": "components do not pass down unhandled props",
        "url": "https://github.com/Tripwire/octagon/issues/57"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODg4NTE2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODg4NTE2Ng==",
      "body": "this was addressed in some 0.25.x version",
      "createdAt": "2017-03-23T22:55:05Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTk2Nzg3MzI=",
        "title": "local installation error",
        "url": "https://github.com/cdaringe/ripcord/issues/56"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODg4OTQ1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODg4OTQ1MA==",
      "body": "hmmm, the styleguidist example on leftnav isnt rendering. is it rendering for you?",
      "createdAt": "2017-03-23T23:19:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEyMDU4NDE2",
        "title": "Leftnav",
        "url": "https://github.com/Tripwire/octagon/pull/54"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4ODg5MzQ4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4ODg5MzQ4MQ==",
      "body": "🚢 ",
      "createdAt": "2017-03-23T23:43:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEyMzI2OTMw",
        "title": "Support for custom x axis label size",
        "url": "https://github.com/Tripwire/octagon/pull/58"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4OTE3MzEzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4OTE3MzEzMQ==",
      "body": "wooo hoo!",
      "createdAt": "2017-03-25T00:24:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEyNTYyNjg5",
        "title": "feat(LargeCard): add title property",
        "url": "https://github.com/Tripwire/octagon/pull/62"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4OTU0NTQ3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4OTU0NTQ3NA==",
      "body": "surgereview23793815.surge.sh",
      "createdAt": "2017-03-27T18:39:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEyNzQ3NjQ5",
        "title": "Add TopNav Component",
        "url": "https://github.com/Tripwire/octagon/pull/64"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4OTU0OTA4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4OTU0OTA4Nw==",
      "body": "ah, its back, sorry!  the `maxHeight: '200px'` threw me off a little bit too, but its not really an issue.  i did have some other remarks. let me know what you think?",
      "createdAt": "2017-03-27T18:51:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEyMDU4NDE2",
        "title": "Leftnav",
        "url": "https://github.com/Tripwire/octagon/pull/54"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI4OTYwODE2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI4OTYwODE2Nw==",
      "body": "this is not repeatable enough.\r\n\r\n- phantom isn't rendering well enough system to system\r\n- the flexbox thing\r\n\r\ni cant get it to work, and im done fighting it. will consider a saucelabs alternative",
      "createdAt": "2017-03-27T22:44:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTA5Nzk3NjQ3",
        "title": "Feature/testing",
        "url": "https://github.com/Tripwire/octagon/pull/37"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MDIyNTQ2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MDIyNTQ2OA==",
      "body": "hey @clarkbw,\r\n\r\n1. you rock!\r\n2. if you see the readme, im not using this repo anymore :(.  i migrated it to gitlab so i could use their built in pipelining for a bunch of OSs\r\n  - would you be willing to move updates to there?  ill purge this repos content in the interim",
      "createdAt": "2017-03-29T21:04:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEzMjgyOTM1",
        "title": "Testing the Windows path resolve",
        "url": "https://github.com/cdaringe/parse-yarn-lock/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/parse-yarn-lock"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MDI4OTkxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MDI4OTkxNw==",
      "body": "I'd put my bet on the `which` module not returning the correct path.  I picked it because I thought it might be better xplatform but TBH I didn't actually RTD",
      "createdAt": "2017-03-30T03:11:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEzMjgyOTM1",
        "title": "Testing the Windows path resolve",
        "url": "https://github.com/cdaringe/parse-yarn-lock/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/parse-yarn-lock"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MDQ2NDM1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MDQ2NDM1MA==",
      "body": "we'd probably need to pull my image down and have your CI push one up to keep it fresh?  id have no qualms with that.\r\n\r\nalso, the reference instance has no docs yet--should we hold off until those fill up?",
      "createdAt": "2017-03-30T16:23:59Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTgwNjY4MjY=",
        "title": "docker image out of date",
        "url": "https://github.com/greenkeeper-keeper/meta/issues/3"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/meta"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MDQ4NzEzNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MDQ4NzEzNQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://f02004b8-bffc-4260-ab02-c6250e8d0aba.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-3.0.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-03-30T17:43:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEzNDg1MzYw",
        "title": "Update redux-logger to version 3.0.1 🚀",
        "url": "https://github.com/dino-dna/donut/pull/82"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MTAwNzUxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MTAwNzUxOQ==",
      "body": "this should be closed, ya?",
      "createdAt": "2017-04-02T19:08:20Z",
      "issue": {
        "id": "MDU6SXNzdWUxODYzMzY4OTM=",
        "title": "Wild card for docker",
        "url": "https://github.com/OptimalBits/redbird/issues/74"
      },
      "repository": {
        "nameWithOwner": "OptimalBits/redbird"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MTM3OTU3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MTM3OTU3OQ==",
      "body": "Whoops, sorry for the delay!  Looks good",
      "createdAt": "2017-04-04T02:50:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEyNzQ3NjQ5",
        "title": "Add TopNav Component",
        "url": "https://github.com/Tripwire/octagon/pull/64"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MTcxNTU2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MTcxNTU2MQ==",
      "body": "how did i miss this too? \r\n\r\nbummer on the findings!\r\n\r\n> Chris how do you want to end up handling this?\r\n\r\n> \"Another option is to add an examples file for the MenuItem component itself.\"\r\n\r\nya, lets just do _that_ for now then!\r\n\r\nthanks @eddier ",
      "createdAt": "2017-04-05T02:07:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEyMDU4NDE2",
        "title": "Leftnav",
        "url": "https://github.com/Tripwire/octagon/pull/54"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MTk3OTM3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MTk3OTM3Mg==",
      "body": "+1",
      "createdAt": "2017-04-05T19:59:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0NDQ1OTg3",
        "title": "Remove unused variable and regex",
        "url": "https://github.com/AmpersandJS/ampersand-view/pull/189"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjA2Mzg4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjA2Mzg4Ng==",
      "body": "hi all.  i just got x-reffed here after suffering the following error `endY is out of range`.  i also see that it's been open a while.  can i help in any way to get it movin?",
      "createdAt": "2017-04-06T04:10:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwOTcwNTYy",
        "title": "Fix: Do not complain when endY is bigger than document height",
        "url": "https://github.com/zinserjan/wdio-screenshot/pull/54"
      },
      "repository": {
        "nameWithOwner": "zinserjan/wdio-screenshot"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjA2NDEwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjA2NDEwMA==",
      "body": "ah, & i should have asked earlier... is there a temp workaround?",
      "createdAt": "2017-04-06T04:12:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwOTcwNTYy",
        "title": "Fix: Do not complain when endY is bigger than document height",
        "url": "https://github.com/zinserjan/wdio-screenshot/pull/54"
      },
      "repository": {
        "nameWithOwner": "zinserjan/wdio-screenshot"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjM4MjI3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjM4MjI3MQ==",
      "body": "Different projects, different lerna versions.  Iirc some lerna versions make sure that the running version matches that listed in the lerna.json.  peace of mind that the version that is running is always what is declared regardless of what shenanigans I'm doing globally.  I've always loved that feature of webpack",
      "createdAt": "2017-04-07T00:55:21Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjAwMjU2OTk=",
        "title": "use local lerna if global lerna used as entry point",
        "url": "https://github.com/lerna/lerna/issues/735"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjQzMjgwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjQzMjgwMQ==",
      "body": "remove `run/` from commits, & rebase",
      "createdAt": "2017-04-07T04:28:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0NzQxNjQx",
        "title": "feat(test): testing implementation",
        "url": "https://github.com/Tripwire/octagon/pull/68"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjYxNzU0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjYxNzU0Mw==",
      "body": "arg, i need to move on to another project and come back to this.  i can't get it to work in CI?\r\n\r\n@jhegg, if you have time sometime soon, will you pull this branch & `yarn test`? it works on my machine.  you need sauce creds.  i can get those to you",
      "createdAt": "2017-04-07T18:35:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0NzQxNjQx",
        "title": "feat(test): testing implementation",
        "url": "https://github.com/Tripwire/octagon/pull/68"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjYxNzY4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjYxNzY4Mw==",
      "body": "i got desperate and SO'd http://stackoverflow.com/questions/43284281/sauceconnect-on-codeship",
      "createdAt": "2017-04-07T18:35:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0NzQxNjQx",
        "title": "feat(test): testing implementation",
        "url": "https://github.com/Tripwire/octagon/pull/68"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjY2MTAxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjY2MTAxOQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://18d43d20-9552-426e-b89e-c305265d1d5d.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-dom-15.5.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-07T21:53:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0OTA3NzU5",
        "title": "react-dom@15.5.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/83"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjY2MzE4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjY2MzE4NA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://da0ec7c3-88e7-4493-acfd-5b1840201e88.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-15.5.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-07T22:05:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0OTA5NTUy",
        "title": "react@15.5.0 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/84"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjY2MzYwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjY2MzYwOQ==",
      "body": "does this affect:\r\n\r\n- support requests?  if we use a bundle, the trace may be less helpful in the generated log file\r\n- debug-ability?\r\n\r\nw/ how many issues are open ATM, it would make sense to me that support take precedence over these perf improvements (which do look great, btw).\r\n\r\njust sharing my opinion!",
      "createdAt": "2017-04-07T22:07:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTEzNzk0NjI4",
        "title": "Use standalone .js bundle in dist tarball rather than individual JS files",
        "url": "https://github.com/yarnpkg/yarn/pull/3030"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjY3MDYwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjY3MDYwNw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://146a8db3-e0d2-4bf4-a3aa-795962519980.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-dom-15.5.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-07T22:54:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0OTE1MTk4",
        "title": "react-dom@15.5.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/85"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjY3NTgxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjY3NTgxNg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://6f974f9a-5107-4f9f-ba50-89251e3185da.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-15.5.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-07T23:34:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0OTE4OTYy",
        "title": "react@15.5.1 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/86"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjY4Njk0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjY4Njk0OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://fb5128c6-dd95-413f-8c16-342da71ec477.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-dom-15.5.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-08T01:51:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0OTI2NDAz",
        "title": "react-dom@15.5.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/87"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjY4NzU2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjY4NzU2Mg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://e61269bc-b53c-44af-8fcc-901b8f3cac33.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-15.5.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-08T02:02:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0OTI2OTY0",
        "title": "react@15.5.2 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/88"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjY5Mzg4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjY5Mzg4Nw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://35a95f42-90f0-4e5a-9729-d07eade13da1.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-dom-15.5.3/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-08T04:22:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0OTMwOTc4",
        "title": "react-dom@15.5.3 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/89"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjY5NDM2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjY5NDM2OQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://6eef51a4-86a9-4f6a-a7e5-81f7494ff787.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-15.5.3/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-08T04:33:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0OTMxNDQz",
        "title": "react@15.5.3 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/90"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5Mjc4NzMwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5Mjc4NzMwMQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://1955575b-2dbe-46df-9fd3-dcb2336468c1.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-redux-5.0.4/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-09T13:55:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0OTg2OTA5",
        "title": "react-redux@5.0.4 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/91"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjgyNDI3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjgyNDI3Mg==",
      "body": "hmm. i just booted up `Charles`.  i see http traffic in and out, but not my https npm traffic. have any xrefs to get going a little quicker?  my guess and check method here isn't proving terribly fruitful",
      "createdAt": "2017-04-10T00:24:01Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjAzNDY1MTU=",
        "title": "auth credentials are not sent in the same fashion as npm",
        "url": "https://github.com/yarnpkg/yarn/issues/3077"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MjgyOTY3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MjgyOTY3Ng==",
      "body": "hey @Daniel15, thanks for the tips.  Can you advise even further, perhaps?\r\n\r\n- enabling SSL clearly worked when driving thru the browser\r\n- ive enabled SSL for npmjs.org (& will for the yarn reg too)\r\n- ive trusted the cert Charles installed into OSX\r\n\r\n- all webbrowser traffic shows up in Charles, yet ` NODE_TLS_REJECT_UNAUTHORIZED=0 npm i -D <pkg> --verbose` still generates no traffic in Charles. nor does `curl https://asana.com` for that matter, yet i get a response.\r\n\r\ni have only one connected NIC, my wifi, and it shows that charles has its attention (see screenshots below).\r\n\r\nwhat else could i be missing?\r\n\r\nssl proxy enabled:\r\n<img width=\"704\" alt=\"screen shot 2017-04-09 at 6 21 40 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/24842914/5460cbc2-1d52-11e7-9ab8-000bca1bf9fa.png\">\r\n\r\ntrusted cert:\r\n<img width=\"206\" alt=\"screen shot 2017-04-09 at 6 27 21 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/24842915/54730d64-1d52-11e7-8b3d-c9cf52fc524a.png\">\r\n\r\nnetwork proxy settings:\r\n<img width=\"608\" alt=\"screen shot 2017-04-09 at 6 32 18 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/24842962/f08e8c3c-1d52-11e7-9922-45b0cb61145c.png\">\r\n",
      "createdAt": "2017-04-10T01:35:08Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjAzNDY1MTU=",
        "title": "auth credentials are not sent in the same fashion as npm",
        "url": "https://github.com/yarnpkg/yarn/issues/3077"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5Mjk5OTQ4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5Mjk5OTQ4NA==",
      "body": "> or would it be better to be part of the reference instance repo within this org?\r\n\r\nit will have to live here or i would have to be a member of the gkk org, otherwise the githooks can't be wired up between services.  what a great feature dockerhub offers!\r\n\r\nthe dockerfile is:\r\n\r\n```dockerfile\r\nFROM node:alpine\r\nENV NODE_ENV=production\r\nRUN mkdir -p /app\r\nWORKDIR /app\r\nCOPY . /app\r\nEXPOSE 8080\r\nRUN npm install --prod\r\nCMD [\"npm\", \"start\"]\r\n```\r\n\r\nso it should stand on its own pretty well i think!",
      "createdAt": "2017-04-10T16:15:19Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTgwNjY4MjY=",
        "title": "docker image out of date",
        "url": "https://github.com/greenkeeper-keeper/meta/issues/3"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/meta"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MzA4MzE1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MzA4MzE1Ng==",
      "body": "> On that note, I'd like to see support for strictly --inspect ^ --inspect-brk.\r\n\r\ntotally.  in agreement.\r\n\r\n> Also, we should make sure it supports the port syntax --inspect=4321.\r\n\r\nyep. agreed.\r\n\r\n> Additionally, I'd like to not extract logic to other files yet as it adds unnecessary review complexity (e.g. babelJestDefault tab, babelJestDebug tab).\r\n\r\nif you can find a way around it, that'd be great!\r\n\r\ni'm swamped for a few weeks--i wont be getting to it anytime soon. :(",
      "createdAt": "2017-04-10T21:22:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTUxNTIz",
        "title": "feature/add-first-class-debugging-support-for-tests",
        "url": "https://github.com/facebook/create-react-app/pull/1360"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MzEwNzI0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MzEwNzI0OA==",
      "body": "ya this is a tricky one.  its as though something in the `onBlur` is preventing the click event from propagating. i dont see in the `onBlur` code anything that would prevent the click event from reaching its original target's handler. 🤔 ",
      "createdAt": "2017-04-10T23:27:38Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTA5ODA1OTY=",
        "title": "Leaving a form takes two clicks",
        "url": "https://github.com/redux-form/redux-form/issues/860"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MzMyNTUxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MzMyNTUxMg==",
      "body": "@cvillerm, agreed.  i figured that's why they have (had?) the \"allowLargeRepository\" feature. \r\n VSCode was traditionally able to grok ~it~ my large parent project.  that is, i have a `.git` dir in `~/`. it is very restrictive about what files to track.\r\n\r\n**confirmed**, per @chrmarti & @cvillerm, the issue seems to pertain to a local vs ancestral `.git` dir.",
      "createdAt": "2017-04-11T16:50:21Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTk3NzI3OTM=",
        "title": "Extension host terminated unexpectedly. Please reload the window to recover. (Huge repo)",
        "url": "https://github.com/microsoft/vscode/issues/23976"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MzM2ODE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MzM2ODE4NQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://d2727272-ef69-412c-b2b2-5388a8c8fc3e.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-router-4.1.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-11T19:02:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE1MzkxNDA5",
        "title": "Update react-router to version 4.1.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/92"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MzM3ODc3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MzM3ODc3OA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://2351383e-0f93-4a08-9be7-32efab189753.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-15.5.4/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-11T19:44:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE1Mzk5MTg1",
        "title": "react@15.5.4 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/93"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MzM4OTAzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MzM4OTAzOQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://db88e530-2520-4063-b94c-129a022a060d.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-dom-15.5.4/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-11T20:23:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE1NDA2NjU3",
        "title": "react-dom@15.5.4 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/94"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5MzY4MjYxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5MzY4MjYxNw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://388c6e44-f44c-4e65-876f-dd32774beb93.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-router-4.1.1/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-04-12T19:28:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE1NjE3NjEx",
        "title": "Update react-router to version 4.1.1 🚀",
        "url": "https://github.com/dino-dna/donut/pull/95"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5NDA0MzgwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5NDA0MzgwOQ==",
      "body": "+1!",
      "createdAt": "2017-04-13T23:05:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE1ODUxMTc5",
        "title": "feat(util): allow custom attributes on components",
        "url": "https://github.com/Tripwire/octagon/pull/69"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5NDI1NjQ0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5NDI1NjQ0NA==",
      "body": "looks fine to me! +1",
      "createdAt": "2017-04-14T23:41:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE2MDAzNjc1",
        "title": "fix(MicrCard): use external attributes",
        "url": "https://github.com/Tripwire/octagon/pull/72"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5NDYyMDE2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5NDYyMDE2Mg==",
      "body": "emailed!",
      "createdAt": "2017-04-17T23:01:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE0NzQxNjQx",
        "title": "feat(test): testing implementation",
        "url": "https://github.com/Tripwire/octagon/pull/68"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5NTg5Mjc3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5NTg5Mjc3NA==",
      "body": "rad!  should we just close this and focus _over there_?  this conversation really is a sub-discussion (i think) of #419 as this topic must be addressed transitively to complete #419.",
      "createdAt": "2017-04-20T20:22:38Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjMxNjQ4MTc=",
        "title": "Discussion: Abstract out prop mapping to independent lib",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/1601"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5NTk1MDk1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5NTk1MDk1MA==",
      "body": "- @hallister, in your example, should `styles` perhaps also receive first class treatment? `stlyes={defaultsDeep({}, props.styles, componentStyles)}`\r\n- i'm still grokking `handledProps` ([xref](https://github.com/layershifter/babel-plugin-transform-react-handled-props/issues/9)).  i'm wondering why it's a build time process step to generate those vs having a fixed set of prop keys that are supported to be passed down the tree vs a runtime step?  a runtime step would be really rad to increase portability, if at all possible",
      "createdAt": "2017-04-20T22:47:07Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzI1ODgwNDQ=",
        "title": "RFC: Base component",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/419"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5NjA1MTE2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5NjA1MTE2MA==",
      "body": "confirmed--it's working great! thx!",
      "createdAt": "2017-04-21T04:05:25Z",
      "issue": {
        "id": "MDU6SXNzdWUxODE0ODY2MzQ=",
        "title": "stepping over breakpoint appears to resume execution fully, vs stepping.",
        "url": "https://github.com/microsoft/vscode/issues/13306"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5Nzg3MzEyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5Nzg3MzEyOQ==",
      "body": "ah, good call",
      "createdAt": "2017-04-28T00:13:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjQ5MTA3OTM=",
        "title": "BarChart warning/error icons show up at different/strange vertical positions",
        "url": "https://github.com/Tripwire/octagon/issues/80"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5Nzg3MzQ2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5Nzg3MzQ2Mg==",
      "body": "yes, it does.  the full space allocated to each bar we should make hoverable, on behalf of the tiny bar!",
      "createdAt": "2017-04-28T00:15:46Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjQ5MDg2NDM=",
        "title": "BarChartToolTip mouseover area needs to be larger",
        "url": "https://github.com/Tripwire/octagon/issues/78"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5Nzg3MzUwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5Nzg3MzUwMw==",
      "body": "bummer!",
      "createdAt": "2017-04-28T00:16:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjQ5MDcyMTg=",
        "title": "BarChartToolTip renders off-screen with large y-axis values",
        "url": "https://github.com/Tripwire/octagon/issues/77"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5Nzk0Mzg3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5Nzk0Mzg3NQ==",
      "body": "moving to https://github.com/facebookincubator/create-react-app/pull/2041",
      "createdAt": "2017-04-28T08:47:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTUxNTIz",
        "title": "feature/add-first-class-debugging-support-for-tests",
        "url": "https://github.com/facebook/create-react-app/pull/1360"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5ODA4NjQ3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5ODA4NjQ3NA==",
      "body": "+1",
      "createdAt": "2017-04-28T19:28:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE2MDM5MTc2",
        "title": "fix(ThinCard): use external attributes",
        "url": "https://github.com/Tripwire/octagon/pull/75"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5ODE4NDI0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5ODE4NDI0Ng==",
      "body": "back at cha",
      "createdAt": "2017-04-29T17:56:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE4MTA2MjQy",
        "title": ":art: add first class debugging support",
        "url": "https://github.com/facebook/create-react-app/pull/2041"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5ODI4Mzk3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5ODI4Mzk3MA==",
      "body": "good news!  debugging is working reliably!  good enough where i think we should ship, after any polish requested is applied.\r\n\r\nbad news, `--inspect*` is _no bueno_.  essentially facebook/jest#1652 prevents us from using JSDom in jest & the inspector protocol simultaneously.  i'm not enough of a jest+JSDOM wizard to figure that out.\r\n  - the code has been annotated, and `--debug-brk` still works great :), even in watch mode!\r\n    - note, jest in watch mode in master is really, painfully slow on OSX for whatever reason.  unrelated to this PR, but woof!\r\n\r\n~i'm not sure when react-scripts is targeting another release, but i would really like to be able to bump my projects and start debugging asap!~ 0.10.0  go team ⚽️ ",
      "createdAt": "2017-05-01T04:23:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE4MTA2MjQy",
        "title": ":art: add first class debugging support",
        "url": "https://github.com/facebook/create-react-app/pull/2041"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5ODQ2NDU5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5ODQ2NDU5OQ==",
      "body": "BTW, I think the build needs to be kicked started again.  I don't think my pathes are the source of failure. An extra set of :eyes: would be appreciated",
      "createdAt": "2017-05-02T00:05:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE4MTA2MjQy",
        "title": ":art: add first class debugging support",
        "url": "https://github.com/facebook/create-react-app/pull/2041"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5ODQ3NzQ0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5ODQ3NzQ0Mg==",
      "body": "thanks @agustif.  i did end up finding an OK solution.  i do a SUI theme build, & pull in the theme into a `react-styleguidist` build.  we went styleguidist because our lib takes SUIR + theme-overrides as input, and provides SUIR & _our own additional components as output_, thus wanted the documentation engine that storybook just doesn't quite yet have yet.  here's a [ref](https://tripwire.github.io/octagon/#suir-native).  the caveat to our strategy is that we dont get all of SUIR examples which help make this project so great, and have to manually backfill them!\r\n\r\ni also wrote a little package, [surge-review](https://www.npmjs.com/package/surge-review), that makes the workflow really great.  once our CI builds the docs site on each pull request, `surge-review` posts the static build to surge (CDN), and then updates our PRs with a link the the documentation build. woo hoo 🎉 ",
      "createdAt": "2017-05-02T01:46:53Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTEyNzAwMTc=",
        "title": "\"Your docs are so great that I want a build of them w/ my theme\" tips",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/1410"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5ODQ5NzQxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5ODQ5NzQxNQ==",
      "body": "@capaj, did you find a solution?",
      "createdAt": "2017-05-02T04:57:11Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTYxMzE2MTM=",
        "title": "TypeError: Cannot read property '_location' of null on ubuntu 16.10",
        "url": "https://github.com/jsdom/jsdom/issues/1783"
      },
      "repository": {
        "nameWithOwner": "jsdom/jsdom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5ODY4MTYyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5ODY4MTYyMw==",
      "body": "This library IMHO should be context free.  I'd prefer MP to have their own implementation in that codebase than muddy the waters.  Why not make the inputs into the tooltip flexible and keep the generic",
      "createdAt": "2017-05-02T16:07:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE4NDUwMzgy",
        "title": "Feature: Operations histogram tooltip with data buckets",
        "url": "https://github.com/Tripwire/octagon/pull/83"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDI5OTc0Njc1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDI5OTc0Njc1MA==",
      "body": "hovers look fine in the site preview. +1",
      "createdAt": "2017-05-08T00:25:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE5MzYwMDg2",
        "title": "feat(buttons): update button colors to match style guide",
        "url": "https://github.com/Tripwire/octagon/pull/84"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMDAwMjA4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMDAwMjA4NA==",
      "body": "@Timer @gaearon,\r\n\r\n- why is node's flag deprecation a threat?  i don't see any risk here.  we only add value/capability in this PR.  there's zero loss to stakeholders.  we can rev react-scripts later when the jest team gets this sorted out.\r\n  - i do not think there's a hack to make `--inspect` work in the interim, unfortunately :(\r\n- i'm not sure what more we need to figure out.  there's a known open issue against our dependency stack, but there is a reliable, non-hacky workaround--just limit usage to the older, but well tested & supported protocol.\r\n\r\ndebug capability, IMHO, is super important, & this is the 2nd time I've implemented it.  i'm not upset, but i do not want to have to do it a 3rd time.  can you speak more to why you feel we shouldn't get this in sooner?",
      "createdAt": "2017-05-08T21:54:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE4MTA2MjQy",
        "title": ":art: add first class debugging support",
        "url": "https://github.com/facebook/create-react-app/pull/2041"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMDA1MDAyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMDA1MDAyNw==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://598c7eae-6d3e-4fe7-838a-58e110792c56.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-gh-pages-1.0.0/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-05-09T03:15:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE5NTc1ODYy",
        "title": "Update gh-pages to version 1.0.0 🚀",
        "url": "https://github.com/dino-dna/donut/pull/96"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMDA2NTM3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMDA2NTM3NA==",
      "body": "sorry for the delay.  ya, this looks great!  on first publish i'll roll my own instance to pull from the image",
      "createdAt": "2017-05-09T05:31:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE2MDM4MzI0",
        "title": "build(dockerfile): added an initial dockerfile",
        "url": "https://github.com/greenkeeper-keeper/reference-instance/pull/43"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/reference-instance"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMDA2ODM0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMDA2ODM0OA==",
      "body": "actually, we're missing a `npm run build` step",
      "createdAt": "2017-05-09T05:54:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE2MDM4MzI0",
        "title": "build(dockerfile): added an initial dockerfile",
        "url": "https://github.com/greenkeeper-keeper/reference-instance/pull/43"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/reference-instance"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMDI4MTMzNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMDI4MTMzNQ==",
      "body": "> We could run the build step first and copy over the built files to the image rather than running the build on instance startup\r\n\r\njust to be clear, we are aligned that we don't build on container run, yes?  we build only on _image_ build.  there may be some optimizations.  the way its done now is definitely safest.  in ~1/2 my personal projects I build external of the ~container~ image-build-process and copy built assets in so i dont have to suffer thru the install times.  however, there can be risks w/ that too. `¯\\_(ツ)_/¯`",
      "createdAt": "2017-05-09T19:49:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE5NTkzNDY5",
        "title": "fix(Docker): transpile onbuild",
        "url": "https://github.com/greenkeeper-keeper/reference-instance/pull/48"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/reference-instance"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMDMxOTYxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMDMxOTYxOA==",
      "body": "> so, if thats already the case with this approach, i'm fully on board\r\n\r\nyep! thats the case\r\n\r\n> did the build ... end up working\r\n\r\nTBD.  did that get pushed to dockerhub?\r\n\r\nwhen you're dev testing, what do you use to send a mock request to the service?",
      "createdAt": "2017-05-09T22:26:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE5NTkzNDY5",
        "title": "fix(Docker): transpile onbuild",
        "url": "https://github.com/greenkeeper-keeper/reference-instance/pull/48"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/reference-instance"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMDk5OTk3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMDk5OTk3OA==",
      "body": "@travi, you're already doin sem-rel style commits--why not wire in semantic-release?  it handles tagging on its own.    in ampersand-js, we always used this convention, which was pretty good too: https://github.com/AmpersandJS/ampersand-view/blob/master/package.json#L53\r\n\r\n...aaaannd after writing all of that, im realizing maybe i misinterpreted the issue.  is the goal to pair up `reference-instances`'s git tags w/ `hapi-greenkeeper-keeper`s, such that there is always 1:1 parity between them?",
      "createdAt": "2017-05-12T07:01:04Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjc1NTkyMDg=",
        "title": "add git tag when hapi-greenkeeper-keeper version changes",
        "url": "https://github.com/greenkeeper-keeper/reference-instance/issues/49"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/reference-instance"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTIyNTIzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTIyNTIzMw==",
      "body": "looking into it now",
      "createdAt": "2017-05-13T04:53:59Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjgzNTUyMTk=",
        "title": "Broken with Yarn 0.24",
        "url": "https://github.com/cdaringe/parse-yarn-lock/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/parse-yarn-lock"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTIyODI2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTIyODI2OA==",
      "body": "oh nnoooooo, i forgot, they _build_ the latest yarn. more tricksss required :)\r\n",
      "createdAt": "2017-05-13T06:10:54Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjgzNTUyMTk=",
        "title": "Broken with Yarn 0.24",
        "url": "https://github.com/cdaringe/parse-yarn-lock/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/parse-yarn-lock"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTI2ODM0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTI2ODM0Mw==",
      "body": "i put up https://github.com/yarnpkg/yarn/pull/3397 for this.  also, i flipped a bit on gitlab, so hopefully issues work there now? kind of annoying that those werent enabled by default. sorry about that",
      "createdAt": "2017-05-13T19:06:05Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjgzNTUyMTk=",
        "title": "Broken with Yarn 0.24",
        "url": "https://github.com/cdaringe/parse-yarn-lock/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/parse-yarn-lock"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTI3MTc2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTI3MTc2OA==",
      "body": "i wasnt very clear. \"yes, kinda\" to the smoke testing.  really i just want to fire some dummy payloads at the container, some from `gk` and some not from gk.  do you have a dummy payload example i can send?  ideally i could wire your integration tests to point at it, but its kind of hieroglyphics to me",
      "createdAt": "2017-05-13T20:08:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE5NTkzNDY5",
        "title": "fix(Docker): transpile onbuild",
        "url": "https://github.com/greenkeeper-keeper/reference-instance/pull/48"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/reference-instance"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTMzMzYxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTMzMzYxMA==",
      "body": "hey @Daniel15, ya, that would make me a happy camper :).  i do wonder how many other tasks would be great to drive programmatically.  this PR is admittedly a cheap fix.  the result of this PR is simple enablement, albeit w/ debatably awkward ergonomics.",
      "createdAt": "2017-05-14T19:18:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIwNDU5NTY1",
        "title": "feat-fix(pkg): restore partial export of internal APIs",
        "url": "https://github.com/yarnpkg/yarn/pull/3397"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTUzMjE4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTUzMjE4Mw==",
      "body": "ya you can add me in 👍 ",
      "createdAt": "2017-05-15T16:41:55Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTgwNjY4MjY=",
        "title": "docker image out of date",
        "url": "https://github.com/greenkeeper-keeper/meta/issues/3"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/meta"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTUzMjYzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTUzMjYzMQ==",
      "body": "anyway, i've tested the _new_ reference image.  it seems to be behaving normally, or at least consistently w/ the last.\r\n\r\ntruth be told, in the old image _and_ the new image, i'm seeing this:\r\n\r\n\"An attempt to merge this PR failed. Error: Not Found\"\r\n\r\nhttps://github.com/cdaringe/3d-adjacency/pull/13#issuecomment-301399930\r\n\r\nAny clue there?",
      "createdAt": "2017-05-15T16:43:30Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTgwNjY4MjY=",
        "title": "docker image out of date",
        "url": "https://github.com/greenkeeper-keeper/meta/issues/3"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/meta"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTUzMzg0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTUzMzg0Mg==",
      "body": "@wasifhyder, nice!  i haven't tested it, but if you're confident, you should drop a PR down on `babel-preset-react-app`",
      "createdAt": "2017-05-15T16:48:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDc2MDA0ODA=",
        "title": "sourcemaps and runtime variables misaligned, yielding difficult debugging",
        "url": "https://github.com/facebook/create-react-app/issues/1557"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTYwODIyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTYwODIyNA==",
      "body": "rebased!",
      "createdAt": "2017-05-15T21:20:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIwNDU5NTY1",
        "title": "feat-fix(pkg): restore partial export of internal APIs",
        "url": "https://github.com/yarnpkg/yarn/pull/3397"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTY4MjEyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTY4MjEyNA==",
      "body": "thanks :)  i moved the convo over to https://github.com/greenkeeper-keeper/hapi-greenkeeper-keeper/issues/140!",
      "createdAt": "2017-05-16T05:49:33Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTgwNjY4MjY=",
        "title": "docker image out of date",
        "url": "https://github.com/greenkeeper-keeper/meta/issues/3"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/meta"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMTY4MjU0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMTY4MjU0MQ==",
      "body": "anyway, im confident we're shipping the new bits just fine!  i deprecated my old image: https://hub.docker.com/r/cdaringe/greenkeeper-keeper/. this issue is g2g",
      "createdAt": "2017-05-16T05:52:41Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTgwNjY4MjY=",
        "title": "docker image out of date",
        "url": "https://github.com/greenkeeper-keeper/meta/issues/3"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/meta"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjA1OTE1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjA1OTE1NQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://27a38982-405e-43c6-9e4e-bf386b2c905f.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-3.0.2/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-05-17T11:12:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMDMxNDI5",
        "title": "Update redux-logger to version 3.0.2 🚀",
        "url": "https://github.com/dino-dna/donut/pull/97"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjA2NzM5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjA2NzM5Ng==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://15de8296-d538-44ae-896c-1a91ed4a4062.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-3.0.3/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-05-17T11:54:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMDM4Nzc4",
        "title": "Update redux-logger to version 3.0.3 🚀",
        "url": "https://github.com/dino-dna/donut/pull/98"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjExMTU4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjExMTU4MA==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://27877e61-a800-4953-b3fe-d0155cc0b260.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-3.0.4/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-05-17T14:39:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMDc0NDYy",
        "title": "Update redux-logger to version 3.0.4 🚀",
        "url": "https://github.com/dino-dna/donut/pull/99"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjEyNzE0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjEyNzE0MQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://f1cbd684-6334-4153-b4d0-e56e05660e92.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-3.0.5/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-05-17T15:28:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMDg2ODg3",
        "title": "Update redux-logger to version 3.0.5 🚀",
        "url": "https://github.com/dino-dna/donut/pull/100"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjEyOTI5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjEyOTI5Mg==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://f9b8bcaf-42e4-44d3-bfba-4ddcd5b0e9d3.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-redux-logger-3.0.6/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-05-17T15:35:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMDg4NDMy",
        "title": "Update redux-logger to version 3.0.6 🚀",
        "url": "https://github.com/dino-dna/donut/pull/101"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjI1ODY4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjI1ODY4Mg==",
      "body": "can't do this until we bump webpack.  damn webpack.",
      "createdAt": "2017-05-17T23:26:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMTcyNjA2",
        "title": "Update dependencies to enable Greenkeeper 🌴",
        "url": "https://github.com/Tripwire/octagon/pull/93"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjI5ODUwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjI5ODUwOQ==",
      "body": "**[Storybook Hub](https://hub.getstorybook.io/)** is building storybooks for every commit in this PR.\n\n**Latest Storybook: https://13e1f157-98e8-4faa-b66e-a2cfe3300a95.sbook.io/**\n<sub>( Visit [here](https://hub.getstorybook.io/app/github.com/dino-dna/donut/branch/greenkeeper-react-redux-5.0.5/) for more info )</sub>\n\n> _This comment is automatically added by Storybook Hub_",
      "createdAt": "2017-05-18T04:39:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMTk5NzI3",
        "title": "react-redux@5.0.5 untested ⚠️",
        "url": "https://github.com/dino-dna/donut/pull/102"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjMwMTc1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjMwMTc1NQ==",
      "body": "per the semver spec:\r\n\r\n> Precedence for two pre-release versions with the same major, minor, and patch version MUST be determined by comparing each dot separated identifier from left to right until a difference is found as follows: identifiers consisting of only digits are compared numerically **and identifiers with letters or hyphens are compared lexically in ASCII sort order**. Numeric identifiers always have lower precedence than non-numeric identifiers. A larger set of pre-release fields has a higher precedence than a smaller set, if all of the preceding identifiers are equal. Example: 1.0.0-alpha < 1.0.0-alpha.1 < 1.0.0-alpha.beta < 1.0.0-beta < 1.0.0-beta.2 < 1.0.0-beta.11 < 1.0.0-rc.1 < 1.0.0.\r\n\r\ntherefore, `e280254d` is > `c82c4f05`, which makes some amount of sense.  the hash is still treated like a version number, so long as everything preceding is a match.",
      "createdAt": "2017-05-18T05:07:41Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjg5NjUwNzk=",
        "title": "Public Beta Testing of react-scripts@1.0.0",
        "url": "https://github.com/facebook/create-react-app/issues/2172"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjQ4NDcxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjQ4NDcxOQ==",
      "body": "surgereview25248322.surge.sh",
      "createdAt": "2017-05-18T17:32:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMTc0MTM2",
        "title": "feat(all): upgrade to react 15.5",
        "url": "https://github.com/Tripwire/octagon/pull/94"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjQ4OTc1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjQ4OTc1Ng==",
      "body": "reviewed by ggp, over the shoulder :)",
      "createdAt": "2017-05-18T17:53:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMzQxNTkx",
        "title": "fix(ci): add publish verbosity",
        "url": "https://github.com/Tripwire/octagon/pull/95"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwMjc2ODE4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwMjc2ODE4Mw==",
      "body": "ah man, conflicts again?  bummer!  @Daniel15, if I rebase again, can we merge pronto?  I dont believe the Travis build was failing due to change, but rather just some flakiness",
      "createdAt": "2017-05-19T17:48:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIwNDU5NTY1",
        "title": "feat-fix(pkg): restore partial export of internal APIs",
        "url": "https://github.com/yarnpkg/yarn/pull/3397"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwNDc3OTg2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwNDc3OTg2MQ==",
      "body": "why?\r\n\r\nin fairness, i stopped using node 6 sometime ago and havent seen the issue since",
      "createdAt": "2017-05-30T05:40:37Z",
      "issue": {
        "id": "MDU6SXNzdWUxNTYzNjQ2Mjc=",
        "title": "node debugger complains `problem with reqLookup` on tab complete",
        "url": "https://github.com/nodejs/node/issues/6936"
      },
      "repository": {
        "nameWithOwner": "nodejs/node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwNTU0NDUxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwNTU0NDUxNA==",
      "body": "Im super excited about this.  I haven't written c/c++ since college, but I'd be willing to at least pair as a sounding board for anyone who can keep this going! ",
      "createdAt": "2017-06-01T16:17:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0OTA4MjcxNjI=",
        "title": "inspector: add contexts when using vm module",
        "url": "https://github.com/nodejs/node/pull/9272"
      },
      "repository": {
        "nameWithOwner": "nodejs/node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwNTY1ODYyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwNTY1ODYyMw==",
      "body": "My support hath been cast!",
      "createdAt": "2017-06-02T00:45:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE4MTA2MjQy",
        "title": ":art: add first class debugging support",
        "url": "https://github.com/facebook/create-react-app/pull/2041"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwNTk1MDc0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwNTk1MDc0OA==",
      "body": "friendly and coordial bump!  @Daniel15, will you take a peek at my last comment?  thx",
      "createdAt": "2017-06-03T04:40:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIwNDU5NTY1",
        "title": "feat-fix(pkg): restore partial export of internal APIs",
        "url": "https://github.com/yarnpkg/yarn/pull/3397"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwNTk1MTgzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwNTk1MTgzNA==",
      "body": "in `3.4.3`:\r\n\r\n- class methods are showing up in the global namespace\r\n- they will show up in the class namespace IFF `export default` is removed\r\n\r\neither way, i as well am observing issues with this",
      "createdAt": "2017-06-03T05:07:41Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTY1NjU1MzA=",
        "title": "Members of ES6 classes not showing in documentation",
        "url": "https://github.com/jsdoc/jsdoc/issues/1301"
      },
      "repository": {
        "nameWithOwner": "jsdoc/jsdoc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwNjM3NzQwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwNjM3NzQwOA==",
      "body": "@jpmckearin @jakubroztocil @jgornick, did you find anything?  Where'd you land?",
      "createdAt": "2017-06-06T04:17:05Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzgxNDk0MA==",
        "title": "Parse and transform cron expressions",
        "url": "https://github.com/jkbrzt/rrule/issues/51"
      },
      "repository": {
        "nameWithOwner": "jkbrzt/rrule"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwNjY4MzcwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwNjY4MzcwMQ==",
      "body": "hey @bestander, no sweat man.  thx for getting back.\r\n\r\n> IMHO the change in cli/index.js becomes fragile this way because this file now has dual usage.\r\n\r\nyup.\r\n\r\n> And using \"yarn as a lib\" seems like a temporary hack.\r\n\r\nyup.  total hack\r\n\r\n> I may be wrong here but maybe we could achieve this another way?\r\n\r\nwe could have webpack dump 2 builds, one for `yarn` and one for `yarn/lib`, but then we're double distributing, and people surely eventually (if not immediately) won't like that either.\r\n\r\n> From the top of my head we were discussing splitting Yarn source code into workspaces, i.e. packages and then the lockfile parser could be a standalone package.\r\n\r\ndefinitely ideal.  yarn24 just really cut us off hard w/ that parser, especially when dependency reports are so key to legal processes for those of us who aggressively make sure we are always shipping compliant/approved things.\r\n\r\nwould you be OK letting it in with a big disclaimer, perhaps `console.warn` when that env var is set, denoting its soon deprecation, but at least re-enabling the functionality in the interim.  im thinking a big evil banner at the top of the file too :)",
      "createdAt": "2017-06-07T04:31:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIwNDU5NTY1",
        "title": "feat-fix(pkg): restore partial export of internal APIs",
        "url": "https://github.com/yarnpkg/yarn/pull/3397"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwNzU0MjY4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwNzU0MjY4OA==",
      "body": "thanks @jpmckearin. for others, i did find [_this_](https://jira.terracotta.org/jira/browse/QTZ-252).  it looks pretty promising as something that takes `RRule`s as input and _does something_ on rule ticks.  its not quite what this thread was all about, but close enough.  Olivier's code wasn't merged, but it looks moderately robust and tested from a cursory view :)",
      "createdAt": "2017-06-10T04:55:27Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzgxNDk0MA==",
        "title": "Parse and transform cron expressions",
        "url": "https://github.com/jkbrzt/rrule/issues/51"
      },
      "repository": {
        "nameWithOwner": "jkbrzt/rrule"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwOTMwNTg1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwOTMwNTg1Mg==",
      "body": "hi @devrafalko, yes.  no difference.",
      "createdAt": "2017-06-18T22:01:20Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzY3NDM5ODE=",
        "title": "npm ls does not report out logical dependency tree",
        "url": "https://github.com/npm/npm/issues/17298"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwOTMyNzcxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwOTMyNzcxMA==",
      "body": "I haven't pin-pointed it, but i'm with @locomotif--for me the single change that either creates or eliminates the failure is the `src` attribute on the image tag.\r\n\r\nit's not a minimum viable example, but it is _rather small_--almost === CRA barebones. if one:\r\n\r\n- [clones this snapshot](https://github.com/dino-dna/truth.lol/tree/ccdc21b3a901f176e0cf8af205a7a35ebc4d58c1/packages/ui)\r\n- runs `yarn && yarn start`, you can see the error\r\n- fiddle with the `<App />` component's image to see it get weird.\r\n",
      "createdAt": "2017-06-19T03:02:48Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDcyMDM2NzI=",
        "title": "React 15.0.1 Updates causing issues with DOM",
        "url": "https://github.com/facebook/react/issues/6472"
      },
      "repository": {
        "nameWithOwner": "facebook/react"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMwOTMyOTMwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMwOTMyOTMwNA==",
      "body": "it appears that `rootNode` isn't guaranteed to be mounted on the DOM after calling `getNodeFromInstance` from within `findParent`.\r\n\r\nconsequently, sniffing for `rootNode`'s `.parentNode` yields `null`.\r\n\r\n<img width=\"837\" alt=\"screen shot 2017-06-18 at 8 15 24 pm\" src=\"https://user-images.githubusercontent.com/1003261/27268205-f972c092-5462-11e7-9e7d-187f4a947433.png\">\r\n\r\nmissing from above, `rootNode.id === 'id'`",
      "createdAt": "2017-06-19T03:19:33Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDcyMDM2NzI=",
        "title": "React 15.0.1 Updates causing issues with DOM",
        "url": "https://github.com/facebook/react/issues/6472"
      },
      "repository": {
        "nameWithOwner": "facebook/react"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMTM5NzYwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMTM5NzYwNg==",
      "body": "i picked quartz.  there are RRULE classes to enable job triggers/etc for RRULEs defined here: https://jira.terracotta.org/jira/browse/QTZ-252\r\n",
      "createdAt": "2017-06-27T15:38:04Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzM3OTA3MTE=",
        "title": "what FOSS schedulers support RRULE output?",
        "url": "https://github.com/jkbrzt/rrule/issues/175"
      },
      "repository": {
        "nameWithOwner": "jkbrzt/rrule"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMTUxMDI4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMTUxMDI4OA==",
      "body": "i'm not sure why CI didn't run.  anyway, added an empty commit which we can drop out post proof of OK-ness :)",
      "createdAt": "2017-06-27T23:04:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI3MzA1NDk4",
        "title": "fix(button) removed 'tripwire' from styles and markup and tweaked sty…",
        "url": "https://github.com/Tripwire/octagon/pull/103"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMTUxMTA1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMTUxMTA1OQ==",
      "body": "Woohoo! new surge deployment available for viewing! :tada: surgereview26369537.surge.sh",
      "createdAt": "2017-06-27T23:08:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI3MzA1NDk4",
        "title": "fix(button) removed 'tripwire' from styles and markup and tweaked sty…",
        "url": "https://github.com/Tripwire/octagon/pull/103"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMTcxMDcyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMTcxMDcyMg==",
      "body": "+1",
      "createdAt": "2017-06-28T16:15:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI3MzA1NDk4",
        "title": "fix(button) removed 'tripwire' from styles and markup and tweaked sty…",
        "url": "https://github.com/Tripwire/octagon/pull/103"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMTcxMzE3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMTcxMzE3MQ==",
      "body": "@ggascoigne, you content w/ this?",
      "createdAt": "2017-06-28T16:24:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI3MzA1NDk4",
        "title": "fix(button) removed 'tripwire' from styles and markup and tweaked sty…",
        "url": "https://github.com/Tripwire/octagon/pull/103"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMTczMTE4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMTczMTE4Mg==",
      "body": "hey @beck, truth be told, in &js-land, i never used router practically in prod.  we always shimmed it into existing apps w/ routing infrastructure in place.  i regret to inform that i've checked out of active &js maintenance for the most part",
      "createdAt": "2017-06-28T17:30:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIyNTQzOTk5",
        "title": "Kill `null` arg sent to all route handlers",
        "url": "https://github.com/AmpersandJS/ampersand-router/pull/54"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-router"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMTgzODkyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMTgzODkyOA==",
      "body": "@andrewleyva, i just noticed `fix(...) ...` needs to be `fix(...): ...`.  will you rebase or amend the commit and re `push -f`?",
      "createdAt": "2017-06-29T01:44:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI3MzA1NDk4",
        "title": "fix(button) removed 'tripwire' from styles and markup and tweaked sty…",
        "url": "https://github.com/Tripwire/octagon/pull/103"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMjc3NjM4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMjc3NjM4Ng==",
      "body": "@hegemonic, is there donation thing for this project?  it's not much, but i'd like to slap a few bucks in this project's direction.  i searched the README and issues looking for prior discussion",
      "createdAt": "2017-07-04T04:13:32Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTY1NjU1MzA=",
        "title": "Members of ES6 classes not showing in documentation",
        "url": "https://github.com/jsdoc/jsdoc/issues/1301"
      },
      "repository": {
        "nameWithOwner": "jsdoc/jsdoc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMzcxOTYwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMzcxOTYwOA==",
      "body": "@kylefarris, added you as a collab.  merge whenever you're ready",
      "createdAt": "2017-07-07T15:48:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI5NDMzNjI2",
        "title": "Added the ability to reset datatables when collection is reset ",
        "url": "https://github.com/cdaringe/ampersand-collection-jquery-datatable/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ampersand-collection-jquery-datatable"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMzcyOTg3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMzcyOTg3OA==",
      "body": "> Awaiting kylefarris' response\r\n\r\ndid you see the msg in your email?",
      "createdAt": "2017-07-07T16:29:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI5NDMzNjI2",
        "title": "Added the ability to reset datatables when collection is reset ",
        "url": "https://github.com/cdaringe/ampersand-collection-jquery-datatable/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ampersand-collection-jquery-datatable"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMzc4MDI3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMzc4MDI3Mw==",
      "body": "i added you on NPM!",
      "createdAt": "2017-07-07T20:06:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI5NDMzNjI2",
        "title": "Added the ability to reset datatables when collection is reset ",
        "url": "https://github.com/cdaringe/ampersand-collection-jquery-datatable/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ampersand-collection-jquery-datatable"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxMzc4MTc5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxMzc4MTc5NQ==",
      "body": "ya sure thing!  my old team is still using it :)",
      "createdAt": "2017-07-07T20:13:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI5NDMzNjI2",
        "title": "Added the ability to reset datatables when collection is reset ",
        "url": "https://github.com/cdaringe/ampersand-collection-jquery-datatable/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ampersand-collection-jquery-datatable"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNDYwMzI2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNDYwMzI2Mg==",
      "body": "@zxqfox, same error as above",
      "createdAt": "2017-07-11T23:48:54Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDIxMjUyMjc=",
        "title": "No docs on how to publish public scoped packages",
        "url": "https://github.com/lerna/lerna/issues/914"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNDk3MTM5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNDk3MTM5MA==",
      "body": "woo hoo!  thx",
      "createdAt": "2017-07-13T05:02:08Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDIyMzg0MDI=",
        "title": "How to set default response from route handler to 200 w/ body as promise fulfilled value",
        "url": "https://github.com/koajs/koa/issues/1022"
      },
      "repository": {
        "nameWithOwner": "koajs/koa"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNTQ5MDc1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNTQ5MDc1OQ==",
      "body": "i want to vocalize my support of this.  dependency reports are so important!  if we don't expose the parser soon, can we at least expose a command in the short term to do a JSON dump?  that should be cheap and non invasive.\r\n\r\n`yarn lockfile --json` or `yarn dependencyReport`, etc?",
      "createdAt": "2017-07-14T23:31:27Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDE2MDE3ODE=",
        "title": "Publish lockfile parser as separate npm package",
        "url": "https://github.com/yarnpkg/yarn/issues/3879"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNTUwODA4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNTUwODA4MA==",
      "body": "i really want this, but i'm not sure how to do it effectively.  i see a few options:\r\n\r\n- we expose the loader, or at least passively permit people to `raw!./thing`\r\n  - fear not @gaearon, i assume thats a 👎  😉 \r\n- some file naming convention\r\n- leverage the env\r\n  - `REACT_APP_RAW=csv,of,files,or,glob`\r\n\r\ni'm liking the 3rd option.  thoughts?",
      "createdAt": "2017-07-15T04:09:49Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjAwNzc2NzA=",
        "title": "Static asset in-lining",
        "url": "https://github.com/facebook/create-react-app/issues/1944"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNTkyNzk3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNTkyNzk3Mg==",
      "body": "i suppose we could do that, @Timer, it just feels a little funky to _not_ use webpack for the single source of asset aggregation.  even tho i love node, seeing `fs` in UI code looks a little wonky, but who knows, maybe that's a good visual trigger!  under the same logic about \"we shouldn't expose the build system\" to the user, maybe not exposing the _build system's runtime_ falls under the same argument?\r\n\r\ni'm not powerfully swayed one way or the other, but continuing to use webpack + an ENV var feels like it may render less friction ",
      "createdAt": "2017-07-18T01:03:21Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjAwNzc2NzA=",
        "title": "Static asset in-lining",
        "url": "https://github.com/facebook/create-react-app/issues/1944"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNjg3NTUyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNjg3NTUyMg==",
      "body": "mine was on an Ubuntu box not RHEL.  I did try on Ubuntu latest and the\nproblem vanished. :/\n\nOn Jul 20, 2017 11:05 AM, \"Ergin Babani\" <notifications@github.com> wrote:\n\n> Closed #1311 <https://github.com/concourse/concourse/issues/1311>.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/concourse/concourse/issues/1311#event-1172613774>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AA9O_XFbfammXmba5qndphXTORvS4I3Oks5sP5bIgaJpZM4OBwEm>\n> .\n>\n",
      "createdAt": "2017-07-21T01:25:35Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzc3MTg0MjM=",
        "title": "Fresh Run of ConcourseCI in docker compose yields error w/ Hello World",
        "url": "https://github.com/concourse/concourse/issues/1311"
      },
      "repository": {
        "nameWithOwner": "concourse/concourse"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNjkxOTMyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNjkxOTMyOA==",
      "body": "i need to run to the airport and will be in late tomorrow, but, i took a first stab. a new build should kick out soon.  i'll definitely test tomorrow, so dont feel obligated to be the guinea pig.  just FYI!",
      "createdAt": "2017-07-21T06:49:29Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDQ0NDU4MjM=",
        "title": "Webpack 2 breaks ripcord",
        "url": "https://github.com/cdaringe/ripcord/issues/150"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNzIxMjg0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNzIxMjg0OQ==",
      "body": "Fixed in 3.0.1",
      "createdAt": "2017-07-22T21:53:08Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDQ0NDU4MjM=",
        "title": "Webpack 2 breaks ripcord",
        "url": "https://github.com/cdaringe/ripcord/issues/150"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNzU1MzE1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNzU1MzE1Nw==",
      "body": "bump!",
      "createdAt": "2017-07-24T21:00:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI3MzA1NDk4",
        "title": "fix(button) removed 'tripwire' from styles and markup and tweaked sty…",
        "url": "https://github.com/Tripwire/octagon/pull/103"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNzU1NTU2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNzU1NTU2MA==",
      "body": "two surge deployments happened because i rebased ;)",
      "createdAt": "2017-07-24T21:09:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTMyMTQ0NTkw",
        "title": "fix(Radio): patch broken export",
        "url": "https://github.com/Tripwire/octagon/pull/105"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNzU1NzY4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNzU1NzY4MA==",
      "body": "eager merging.  ping me if any issues!",
      "createdAt": "2017-07-24T21:16:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTMyMTQ0NTkw",
        "title": "fix(Radio): patch broken export",
        "url": "https://github.com/Tripwire/octagon/pull/105"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNzU5MjI5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNzU5MjI5OQ==",
      "body": "example added of the adjacent buttons in the example section of the demo deployment above",
      "createdAt": "2017-07-25T00:23:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTMyMTcyMTIy",
        "title": "feat(Buttons): space adjacent button",
        "url": "https://github.com/Tripwire/octagon/pull/106"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNzg5MjgzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNzg5MjgzMw==",
      "body": "verbal approval received from UX & guy (thru antoine).  @antoinejuhel & @ggascoigne, feel free to send +1's after the fact! ;) thx!",
      "createdAt": "2017-07-25T22:34:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTMyMTcyMTIy",
        "title": "feat(Buttons): space adjacent button",
        "url": "https://github.com/Tripwire/octagon/pull/106"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNzk0MTUzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNzk0MTUzNw==",
      "body": "No kidding.  We used the example pipeline as a guiding reference, and didn't see it in there.  We didn't see it in the docs either.  How can we use it?  Well send a README or :)",
      "createdAt": "2017-07-26T04:04:54Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDU0Nzk0OTA=",
        "title": "Support for POSTing back target_url for statuses?",
        "url": "https://github.com/jtarchie/github-pullrequest-resource/issues/86"
      },
      "repository": {
        "nameWithOwner": "jtarchie/github-pullrequest-resource"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxNzk0MTU3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxNzk0MTU3Ng==",
      "body": "PR*",
      "createdAt": "2017-07-26T04:05:11Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDU0Nzk0OTA=",
        "title": "Support for POSTing back target_url for statuses?",
        "url": "https://github.com/jtarchie/github-pullrequest-resource/issues/86"
      },
      "repository": {
        "nameWithOwner": "jtarchie/github-pullrequest-resource"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxODUxNzAyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxODUxNzAyMg==",
      "body": "need this now, so see #109 ",
      "createdAt": "2017-07-27T23:46:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI3MzA1NDk4",
        "title": "fix(button) removed 'tripwire' from styles and markup and tweaked sty…",
        "url": "https://github.com/Tripwire/octagon/pull/103"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxODUxNzQ2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxODUxNzQ2Mg==",
      "body": "see #109 ",
      "createdAt": "2017-07-27T23:48:50Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjY5MDkxMjE=",
        "title": "remove tripwire from class names",
        "url": "https://github.com/Tripwire/octagon/issues/85"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxODc3NDE5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxODc3NDE5Mg==",
      "body": "@antoinejuhel, pinging just for vis.  IIRC you and yung already approved these changes too!",
      "createdAt": "2017-07-28T22:13:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTMzMDU5NTMz",
        "title": "feat(Button): hack button spacing & colors to be Connect friendly",
        "url": "https://github.com/Tripwire/octagon/pull/110"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxOTI2ODYyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxOTI2ODYyOA==",
      "body": "Hey man, I'll check tomorrow and write back.  Would you accept a README PR for specifying it?",
      "createdAt": "2017-08-01T05:04:29Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDU0Nzk0OTA=",
        "title": "Support for POSTing back target_url for statuses?",
        "url": "https://github.com/jtarchie/github-pullrequest-resource/issues/86"
      },
      "repository": {
        "nameWithOwner": "jtarchie/github-pullrequest-resource"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxOTQ0Mjg2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxOTQ0Mjg2Ng==",
      "body": "@jtarchie, there's no `base_url`, but `api_endpoint` is a thing--we are using GHE vs github.com.  did we miss something here?\r\n\r\n```yml\r\nresource_types:\r\n- name: pull-request\r\n  type: docker-image\r\n  source:\r\n    repository: jtarchie/pr\r\n\r\nresources:\r\n- name: project\r\n  type: git\r\n  source:\r\n    uri: git@ourgithub:group/project.git\r\n    branch: master\r\n    private_key: ((github-private-key))\r\n\r\n- name: project-pr\r\n  type: pull-request\r\n  source:\r\n    repo: group/project\r\n    uri: git@ourgithub:group/project.git\r\n    api_endpoint: ((github-api-endpoint))\r\n    access_token: ((github-access-token))\r\n    private_key: ((github-private-key))\r\n...\r\n```",
      "createdAt": "2017-08-01T17:39:25Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDU0Nzk0OTA=",
        "title": "Support for POSTing back target_url for statuses?",
        "url": "https://github.com/jtarchie/github-pullrequest-resource/issues/86"
      },
      "repository": {
        "nameWithOwner": "jtarchie/github-pullrequest-resource"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxOTUyODc5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxOTUyODc5OA==",
      "body": "indeed, adding `base_url` fixed it",
      "createdAt": "2017-08-01T23:53:44Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDU0Nzk0OTA=",
        "title": "Support for POSTing back target_url for statuses?",
        "url": "https://github.com/jtarchie/github-pullrequest-resource/issues/86"
      },
      "repository": {
        "nameWithOwner": "jtarchie/github-pullrequest-resource"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMxOTU4NjY2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMxOTU4NjY2NQ==",
      "body": "it would seem likely so!  i'll close this in hopes that _that_ 7.x resolves it, and open back up later as needed.  thx",
      "createdAt": "2017-08-02T07:04:30Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTU5Mjc0MjE=",
        "title": "no access to required state, even with `reduxForm(...)` + `connect(...)` wrapping",
        "url": "https://github.com/redux-form/redux-form/issues/2299"
      },
      "repository": {
        "nameWithOwner": "redux-form/redux-form"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMDczNDg3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMDczNDg3NA==",
      "body": "It's super old on the react-scripts time scale, I wouldn't expect it to",
      "createdAt": "2017-08-07T17:57:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTUxNTIz",
        "title": "feature/add-first-class-debugging-support-for-tests",
        "url": "https://github.com/facebook/create-react-app/pull/1360"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMDc0NzA0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMDc0NzA0Mw==",
      "body": "actually, i found that `onClick` seems to be honored in the `action` API.  is it stable/safe to use?",
      "createdAt": "2017-08-07T18:43:59Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDg0OTY4Nzc=",
        "title": "Unclear Input action API",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/1944"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMDg0Njg2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMDg0Njg2NA==",
      "body": "@ljharb, fair concerns. although it's unconventional for non-`node_modules/`-contained effects to occur oninstall of a package, the purpose of this package is precisely that side-effect.  it's explicit opt-in.  there's some danger, but the risk is the same risk as trusting whatever tarball comes down the line per usual, no?  further, it only happens in dev mode, so prod shipments are unaffected.\r\n\r\n@typicode, what i'd be interested in seeing is some indexing into the `.git/hooks/pre-commit` file.\r\n\r\nthat is, with the following structure:\r\n\r\n```bash\r\n/.git\r\n/packages/A/...\r\n/packages/B/...\r\n```\r\n\r\nexecute the following psuedocode:\r\n\r\n- if no `pre-commit` file, generate one\r\n- if a pre-commit file, add an easily identifiable include: `. ./husky-pre-commit` (+ whatever malarkey windows needs)\r\n- do all activities in `husky-pre-commit`\r\n- on husky install from `A | B`\r\n  - detect path to `A | B`\r\n  - add entry into `husky-pre-commit` pointing to A | B\r\n  - perform all existing husky workflows for each entry\r\n\r\nin this fashion:\r\n\r\n- there's no clobbering\r\n- multi-project support works\r\n- single project support works\r\n- single project w/ weird structuring works\r\n\r\nand everybody is happy!  🎉  thoughts?",
      "createdAt": "2017-08-08T04:27:56Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjAzMTI4OTE=",
        "title": "Don't pollute enclosing project hooks",
        "url": "https://github.com/typicode/husky/issues/36"
      },
      "repository": {
        "nameWithOwner": "typicode/husky"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMTQ2NjY0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMTQ2NjY0MQ==",
      "body": "in the interim, i've updated https://www.npmjs.com/package/parse-yarn-lock. it now delivers a webpacked and es5 friendly build of _just_ the parser (+ it's deps) for each prod version of yarn.\r\n\r\nthat is the `parse-yarn-lock@0.28.4` tarball has a single .js file that exports the parser for that version.",
      "createdAt": "2017-08-10T06:50:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM0NTczMjgw",
        "title": "Begin separating lockfile into its own npm package.",
        "url": "https://github.com/yarnpkg/yarn/pull/4114"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMTQ2NjkwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMTQ2NjkwMA==",
      "body": "for increased vis, im cross posting for interested parties.\r\n\r\nI have an interim solution in place for those who need parsing now.  see https://github.com/yarnpkg/yarn/pull/4114#issuecomment-321466641",
      "createdAt": "2017-08-10T06:51:35Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDE2MDE3ODE=",
        "title": "Publish lockfile parser as separate npm package",
        "url": "https://github.com/yarnpkg/yarn/issues/3879"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMTkyOTU5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMTkyOTU5MQ==",
      "body": "hi all.  love the project--you're doing great work.\r\n\r\ni'd really love to dodge the transpile step _for at least my source_ s.t. debugging is less roundabout:\r\n\r\n- i can edit my files in the same window during the test (vs closing the transpiled src and nav'ing to my old file)\r\n- ...and i can use built in break points!\r\n\r\ni _think_ this could be as simple as getting some config to babel to _ignore my stuff_.  wow-wee that'd be incredible!  is that something you're open to?",
      "createdAt": "2017-08-11T22:07:33Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTkxNjYwNDA=",
        "title": "How to use Ava with Node v7.7+ native async..await",
        "url": "https://github.com/avajs/ava/issues/1338"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMTk0MjUzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMTk0MjUzNA==",
      "body": "good news! its seem as though the system _doesn't_ transpile code if you use pure runtime goodies! woo hoo!  now, i have a native debug experience in VSCode\r\n\r\n![screen shot 2017-08-11 at 4 56 44 pm](https://user-images.githubusercontent.com/1003261/29235700-135d7dc6-7eb6-11e7-96b3-a07ce0f164f5.png)\r\n",
      "createdAt": "2017-08-11T23:57:24Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTkxNjYwNDA=",
        "title": "How to use Ava with Node v7.7+ native async..await",
        "url": "https://github.com/avajs/ava/issues/1338"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjAyMTgwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjAyMTgwNQ==",
      "body": "greetings!\r\n\r\nindeed, the cache is there (`<root>/packages/counsel/node_modules/.cache`), and not in `<root>/node_modules/.cache`.  clearing the cache doesn't resolve it.  the fact that i `rm -rf`'d my whole project, re-cloned the source, and the issue still happened, im wondering it there are _other_ caches on disk used?",
      "createdAt": "2017-08-13T04:51:00Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDk4MzI0MzI=",
        "title": "Old removed files seem to stay cached in reports",
        "url": "https://github.com/istanbuljs/nyc/issues/644"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjAyMjM3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjAyMjM3Mg==",
      "body": "a hint, but not the key, is that I had a require statement that still looked like `require('./project')` vs `require('./Project')`.  it as though the report uses the value parsed from the require statement vs the actual resolved file basename.",
      "createdAt": "2017-08-13T05:12:47Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDk4MzI0MzI=",
        "title": "Old removed files seem to stay cached in reports",
        "url": "https://github.com/istanbuljs/nyc/issues/644"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjIyODE3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjIyODE3Nw==",
      "body": "hello, `swig` doesn't do caching on it's own.  that is--rendering is just a normal function.  most likely, some other layer on your server is reading in the template, caching it, and not updating on save.  good luck!",
      "createdAt": "2017-08-14T15:49:39Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDk5MTgyOTU=",
        "title": "¿Why do I need to restart express server when I make a change to a swig template?",
        "url": "https://github.com/node-swig/swig-templates/issues/43"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjIyODY4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjIyODY4Nw==",
      "body": "i don't use express, otherwise i'd lend more tips!",
      "createdAt": "2017-08-14T15:51:18Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDk5MTgyOTU=",
        "title": "¿Why do I need to restart express server when I make a change to a swig template?",
        "url": "https://github.com/node-swig/swig-templates/issues/43"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjU1NjE1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjU1NjE1NQ==",
      "body": "![indent-loco mov](https://user-images.githubusercontent.com/1003261/29331146-5501269a-81b0-11e7-9b13-ca985b51a843.gif)\r\n\r\nwatch me shift these lines down. ^. it expected that these lines _do not_ get indented on shift.\r\n\r\ndoh!  is this the correct place for this report, @mjbvz, or shall i add my GIF elsewhere?\r\n\r\nthx :)\r\n",
      "createdAt": "2017-08-15T18:54:35Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDM3MjU0ODA=",
        "title": "JavaScript if block without brackets indentation",
        "url": "https://github.com/microsoft/vscode/issues/30933"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjg1NDg3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjg1NDg3Nw==",
      "body": "thx guys.\r\n\r\n`node --inspect --inspect-brk node_modules/.bin/react-scripts test --env=jsdom --runInBand`\r\n\r\n^ will not work because `react-scripts` runs the `test` command in a child_process, therefore, the `jest` process is _not exposed_ to the `--inspect --inspect-brk` flags.  \r\n\r\n`./node_modules/.bin/react-scripts --inspect --inspect-brk test --env=jsdom --runInBand`\r\n\r\n^ will not work because of the way `react-scripts.js` parses args. yields `\"Unknown script \"--inspect\".`\r\n\r\na :rotating_light: _hack_ :rotating_light: is to modify `react-scripts.js`:\r\n\r\nfrom:\r\n```js\r\n  case 'test': {\r\n    const result = spawn.sync(\r\n      'node',\r\n      [require.resolve('../scripts/' + script)].concat(args),\r\n      { stdio: 'inherit' }\r\n    );\r\n```\r\n\r\nto:\r\n```js\r\n  case 'test': {\r\n    const result = spawn.sync(\r\n      'node',\r\n      ['--inspect', '--inspect-brk', require.resolve('../scripts/' + script)].concat(args),\r\n      { stdio: 'inherit' }\r\n    );\r\n```\r\n\r\nnow, you can run:\r\n\r\n`./node_modules/.bin/react-scripts --inspect --inspect-brk test --env=jsdom --runInBand`\r\n\r\n![debug_hack mov](https://user-images.githubusercontent.com/1003261/29378375-b0b57018-8273-11e7-988b-683b3b154fe8.gif)\r\n",
      "createdAt": "2017-08-16T18:13:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzUyNzM5OTI=",
        "title": "Document how to debug unit tests ",
        "url": "https://github.com/facebook/create-react-app/issues/594"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjg1NTI5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjg1NTI5NQ==",
      "body": "PS, i dont recommend the hack--i recommend someone pick up #2041, but it's a useful unblocker!",
      "createdAt": "2017-08-16T18:14:53Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzUyNzM5OTI=",
        "title": "Document how to debug unit tests ",
        "url": "https://github.com/facebook/create-react-app/issues/594"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjg1NjAzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjg1NjAzMA==",
      "body": "@simonl65 \r\n\r\n> ALT + downArrow?\r\n\r\nyep!\r\n\r\n> I don't get that in a javascript file either \r\n\r\njavascript language setting.",
      "createdAt": "2017-08-16T18:17:18Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDM3MjU0ODA=",
        "title": "JavaScript if block without brackets indentation",
        "url": "https://github.com/microsoft/vscode/issues/30933"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjg2MjEyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjg2MjEyNA==",
      "body": "i did not! i tested on `1.0.10`! :)\r\n\r\ni see [what you're up to now](https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/bin/react-scripts.js#L16-L19). nice!",
      "createdAt": "2017-08-16T18:39:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxNzUyNzM5OTI=",
        "title": "Document how to debug unit tests ",
        "url": "https://github.com/facebook/create-react-app/issues/594"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyMjg5MjYyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyMjg5MjYyMA==",
      "body": "@dchambers, see https://github.com/facebookincubator/create-react-app/issues/594#issuecomment-322842515.  make sure you're using version 1.0.11+",
      "createdAt": "2017-08-16T20:41:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTE4MTA2MjQy",
        "title": ":art: add first class debugging support",
        "url": "https://github.com/facebook/create-react-app/pull/2041"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNTkzNDg2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNTkzNDg2Mw==",
      "body": "I will give you publish rights, send your npm username",
      "createdAt": "2017-08-30T09:23:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM4MzUwNzE0",
        "title": "Update package.json",
        "url": "https://github.com/cdaringe/ampersand-state-mixin-datatype-iso-date/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ampersand-state-mixin-datatype-iso-date"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNjA1ODU0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNjA1ODU0Ng==",
      "body": "Done!\n\nOn Aug 30, 2017 4:33 AM, \"Carlo Bertini\" <notifications@github.com> wrote:\n\n> https://www.npmjs.com/~waydotnet\n>\n> —\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cdaringe/ampersand-state-mixin-datatype-iso-date/pull/2#issuecomment-325963651>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA9O_V4zyUXaqPhaa6I_ESPFC0vXZDsbks5sdUiQgaJpZM4PG87Z>\n> .\n>\n",
      "createdAt": "2017-08-30T17:14:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM4MzUwNzE0",
        "title": "Update package.json",
        "url": "https://github.com/cdaringe/ampersand-state-mixin-datatype-iso-date/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ampersand-state-mixin-datatype-iso-date"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNjQyMjc0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNjQyMjc0Nw==",
      "body": "i have seen this before, i was just mistaken, so please forgive that remark.\r\n\r\ni suppose what is necessary is a default margin that compensates for the shadow overflow?  @andrewleyva  may have input here",
      "createdAt": "2017-08-31T21:16:01Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTQ0NjcxNDA=",
        "title": "active borders overflow on icon buttons",
        "url": "https://github.com/Tripwire/octagon/issues/117"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNjQyMzc4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNjQyMzc4Nw==",
      "body": "thx!",
      "createdAt": "2017-08-31T21:20:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM4NzYwNDQz",
        "title": "Feat/export label",
        "url": "https://github.com/Tripwire/octagon/pull/116"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNjQzNDg3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNjQzNDg3Nw==",
      "body": "opening the codepen results in an infinite reload loop from me. not sure if it's your code or codepen.  also having Popup issues today",
      "createdAt": "2017-08-31T22:15:05Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTQ0MjUyNDY=",
        "title": "Popup - displays empty content, bug?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/2032"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNjQzNjgwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNjQzNjgwNg==",
      "body": "i'm not sure _why_, but a hack is to wrap the target Popup content component in some basic JSX, https://codepen.io/cdaringe/pen/vJbYjK",
      "createdAt": "2017-08-31T22:25:34Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTQ0ODUzOTU=",
        "title": "Popup does not render content for externally defined component",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/2033"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNjQ1NTA0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNjQ1NTA0Mg==",
      "body": "Yup, sounds great.  There may be cases where such an effect would be undesirable when it generally is desirable.  Maybe exposing a `shouldClose` hook that accepts a function to let the user decide would be an elegant, simple API to support all of the use cases.  I may be over complicating it, but I can see that function firing on mouseout, click, etc.  For instance, if my popup has a clickable submenu in it, I may want to keep it open to expand that submenu.\r\n\r\nJust thinkin out loud :)",
      "createdAt": "2017-09-01T00:29:10Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTQ0OTAxNzI=",
        "title": "Feature Request: Support Popup close onClick when hoverable",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/2034"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNjQ3NDIzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNjQ3NDIzNA==",
      "body": "ya, looks like it was probably a codepen bug.  it works now!",
      "createdAt": "2017-09-01T02:51:27Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTQ0MjUyNDY=",
        "title": "Popup - displays empty content, bug?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/2032"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNjQ3OTkyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNjQ3OTkyNQ==",
      "body": "in retrospect, i could always just `evt.stopPropagation()` for those things that I don't want to auto-close the popup with.  disregard my latter proposal!",
      "createdAt": "2017-09-01T03:46:03Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTQ0OTAxNzI=",
        "title": "Feature Request: Support Popup close onClick when hoverable",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/2034"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNzMyMTAyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNzMyMTAyMQ==",
      "body": "woo hoo. test & linting fixed!",
      "createdAt": "2017-09-05T22:25:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM4ODE2MTU5",
        "title": "feat(Popup): add closeOnClickInside support",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/2037"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNzY5MTg1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNzY5MTg1Mg==",
      "body": "ah, you're killing me codeship:\r\n\r\n> Chromy requires Chrome ver.61 or later. Please install latest version Chrome.\r\n",
      "createdAt": "2017-09-07T05:35:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM5NzE3ODI5",
        "title": "Feature/testing",
        "url": "https://github.com/Tripwire/octagon/pull/118"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyNzg0NjEzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyNzg0NjEzNA==",
      "body": "@ggascoigne, note, CI will fail until codeship gets chrome v61, released into stable 2-3 days ago?  i will disable CI tests, for now--but they run locally. will re-enable them soon when codeship updates",
      "createdAt": "2017-09-07T16:05:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM5NzE3ODI5",
        "title": "Feature/testing",
        "url": "https://github.com/Tripwire/octagon/pull/118"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyODIzNTE1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyODIzNTE1NQ==",
      "body": "hi all.  thx for the leads.  whilst this was a configuration bug, the error message presented is arguably also a bug, from a UX perspective.  we ought consider detecting that bad state and throwing an expected error",
      "createdAt": "2017-09-08T23:17:42Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDk3NjA5OTc=",
        "title": "TypeError on any lerna command when using workspaces",
        "url": "https://github.com/lerna/lerna/issues/969"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyODI5MTM3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyODI5MTM3OA==",
      "body": "formatting changes completed and pushed",
      "createdAt": "2017-09-09T17:20:08Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM4ODE2MTU5",
        "title": "feat(Popup): add closeOnClickInside support",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/2037"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyOTM2MzgxMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyOTM2MzgxMw==",
      "body": "this implementation still triggers a full refresh for me, vs component swap",
      "createdAt": "2017-09-14T03:59:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTMxOTUyNjA0",
        "title": "fixed migrating to create react app doc",
        "url": "https://github.com/gaearon/react-hot-loader/pull/614"
      },
      "repository": {
        "nameWithOwner": "gaearon/react-hot-loader"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyOTM2NDc0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyOTM2NDc0Mg==",
      "body": "still doing full refreshes on me with these changes, but i am using webpack@latest (v3.x)",
      "createdAt": "2017-09-14T04:06:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTI0MDIyMzY4",
        "title": "Update readme about create-react-app migration",
        "url": "https://github.com/gaearon/react-hot-loader/pull/576"
      },
      "repository": {
        "nameWithOwner": "gaearon/react-hot-loader"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyOTY4Mzc0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyOTY4Mzc0OQ==",
      "body": "thanks @aventurella!\r\n\r\n@Tyriar, ready for it?  https://github.com/chalk/supports-color/blob/master/browser.js\r\n\r\nboom.  when chalk creates its config, it asks supports-color, which returns `false` for the browser.",
      "createdAt": "2017-09-15T05:16:42Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTEwOTMxNDk=",
        "title": "How to use with \"colors\" lib?",
        "url": "https://github.com/xtermjs/xterm.js/issues/895"
      },
      "repository": {
        "nameWithOwner": "xtermjs/xterm.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyOTgyMzY3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyOTgyMzY3Mg==",
      "body": "@Tyriar, correct, im talking via a browser bundler [ref](https://github.com/chalk/supports-color/blob/master/package.json#L52).  to clarify, my remark wasn't to highlight any issue with this package, rather, to just help drive further understanding :)",
      "createdAt": "2017-09-15T15:55:44Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTEwOTMxNDk=",
        "title": "How to use with \"colors\" lib?",
        "url": "https://github.com/xtermjs/xterm.js/issues/895"
      },
      "repository": {
        "nameWithOwner": "xtermjs/xterm.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyOTk5MzU4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyOTk5MzU4NA==",
      "body": "IIRC, fixing the require statement to match the updated file casing of `Project.js` did not resolve the issue",
      "createdAt": "2017-09-16T20:41:17Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDk4MzI0MzI=",
        "title": "Old removed files seem to stay cached in reports",
        "url": "https://github.com/istanbuljs/nyc/issues/644"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMyOTk5MzY5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMyOTk5MzY5NQ==",
      "body": "I know this isn't super actionable without a reproducible thing.  As noted above I did try to repo and I cannot.  That's why I was wondering if there was any other caching at play?  If you think there are some things you could check that would be rad.  If not and you care to close the issue, I understand too.  Thx!",
      "createdAt": "2017-09-16T20:43:26Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDk4MzI0MzI=",
        "title": "Old removed files seem to stay cached in reports",
        "url": "https://github.com/istanbuljs/nyc/issues/644"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMDExMDgxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMDExMDgxNQ==",
      "body": "Sorry for the delay.  I ended up just using the open plus onClick props.\nI'm wondering if it's even necessary.  It is nice for quick prototyping.\nSorry for the headache!  What do you think?\n\nOn Sep 17, 2017 6:18 PM, \"Levi Thomason\" <notifications@github.com> wrote:\n\n> @layershifter <https://github.com/layershifter> / @cdaringe\n> <https://github.com/cdaringe> any thoughts on the above? If I don't hear\n> back, I may go ahead with the rename at the next release (after today's\n> release).\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/Semantic-Org/Semantic-UI-React/pull/2037#issuecomment-330108212>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA9O_VJ38-WyX_7eWZ8m6AlVByZs4e4Iks5sjcT-gaJpZM4PJtSE>\n> .\n>\n",
      "createdAt": "2017-09-18T01:54:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM4ODE2MTU5",
        "title": "feat(Popup): add closeOnClickInside support",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/2037"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMDEzMzM1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMDEzMzM1OA==",
      "body": "i also reproduced @dwblair's claim on my xubu vm tonight.  looks like [onImportFiles](https://github.com/beakerbrowser/beaker/blob/master/app/builtin-pages/views/library.js#L343) expects `archiveInfo`, but is not passed one.  therefore, `cannot read property 'url' of undefined` is yielded on [L643](https://github.com/beakerbrowser/beaker/blob/4cedb3d26a10ca2e15715291ce3ad2859a318788/app/builtin-pages/views/library.js#L643).  im not sure what the convention is in this codebase yet for binding that missing var.\r\n\r\n> I'll put some time into a solution for this that deals with the folders/files situation\r\n\r\nya, it's a real bummer.  i see this documented in the electron docs too.  it's almost as though we need two seperate buttons--import files, import folders.  i'm not optimistic about other meaningful UX hacks that would meet the need.",
      "createdAt": "2017-09-18T05:45:57Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTIwOTE0MjQ=",
        "title": "Linux doesn't support import both files & folders at the same time",
        "url": "https://github.com/beakerbrowser/beaker/issues/668"
      },
      "repository": {
        "nameWithOwner": "beakerbrowser/beaker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMDEzNTg0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMDEzNTg0NA==",
      "body": "i'll try this on my 2nd screen tomorrow.\r\n\r\nsure enough, pfrazee has [already written code to handle exactly this](https://github.com/beakerbrowser/beaker/commit/8410b3d6aade5651f4e038a7f89e1e4c5db5a07b#diff-123d7d4687874aac4b56ce08f94bf61cR25), ~1 yr ago.\r\n\r\ni just wrote some basic assertions against it--they seem to pass?  something more must be at play.  hard to test w/out that 2nd monitor :$\r\n\r\n```js\r\nvar assert = require('assert')\r\n\r\nfunction windowWithinBounds (windowState, bounds) {\r\n  return windowState.x >= bounds.x &&\r\n    windowState.y >= bounds.y &&\r\n    windowState.x + windowState.width <= bounds.x + bounds.width &&\r\n    windowState.y + windowState.height <= bounds.y + bounds.height\r\n}\r\n\r\nassert(windowWithinBounds({ x: 0, width: 100, y: 0, height: 100 }, { x: 0, y: 0, width: 100, height: 100 }))\r\nassert(windowWithinBounds({ x: -1, width: 100, y: 0, height: 100 }, { x: 0, y: 0, width: 100, height: 100 }) == false)\r\nassert(windowWithinBounds({ x: 0, y: 0, width: 101, height: 100 }, { x: 0, y: 0, width: 100, height: 100 }) == false)\r\nassert(windowWithinBounds({ x: 0, y: 0, width: 100, height: 101 }, { x: 0, y: 0, width: 100, height: 100 }) == false)\r\n```\r\n\r\n",
      "createdAt": "2017-09-18T06:12:40Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDgyNTUxNjQ=",
        "title": "Centered modals and dual monitors",
        "url": "https://github.com/beakerbrowser/beaker/issues/643"
      },
      "repository": {
        "nameWithOwner": "beakerbrowser/beaker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMDEzNjY4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMDEzNjY4MQ==",
      "body": "> Also we should handle archives that don't have titles\r\n\r\nalmosted missed that little guy!  move it to the top! :)",
      "createdAt": "2017-09-18T06:20:41Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDM5MTY0NzY=",
        "title": "Permissions dropdown doesn't scroll",
        "url": "https://github.com/beakerbrowser/beaker/issues/611"
      },
      "repository": {
        "nameWithOwner": "beakerbrowser/beaker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMDEzNzE5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMDEzNzE5OA==",
      "body": "works for me too, 0.7.5",
      "createdAt": "2017-09-18T06:25:35Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTgwNzE4ODA=",
        "title": "Endless redirect bug, only in beaker (not chrome)",
        "url": "https://github.com/beakerbrowser/beaker/issues/232"
      },
      "repository": {
        "nameWithOwner": "beakerbrowser/beaker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMDU5NzcxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMDU5NzcxNQ==",
      "body": "thx guys. i'll do some more profiling then re-raise it, here or there",
      "createdAt": "2017-09-19T16:35:00Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTg3MTcwOTY=",
        "title": "child_process shell invocation doesn't honor PATH as specified in process.env per expectation",
        "url": "https://github.com/nodejs/help/issues/829"
      },
      "repository": {
        "nameWithOwner": "nodejs/help"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMTUyODQyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMTUyODQyNQ==",
      "body": "donezo calrisian!",
      "createdAt": "2017-09-22T18:40:00Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTMwMTgzMjM=",
        "title": "use husky instead of existing git *hook code!",
        "url": "https://github.com/cdaringe/counsel/issues/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/counsel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMTU0MjAxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMTU0MjAxMQ==",
      "body": "iirc, none of this really follows the guideline right? i thought the guideline was Yung's theme?",
      "createdAt": "2017-09-22T19:41:01Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTk4ODQwMzQ=",
        "title": "Update to use current UX defined Palette",
        "url": "https://github.com/Tripwire/octagon/issues/121"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMTcyNjI4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMTcyNjI4Ng==",
      "body": "hi @steevhise!  we might be open to that.  however, my gut impression is that file collection/aggregation is something of a pre-processing step.\r\n\r\n@paulcpederson @Lochlan thoughts?",
      "createdAt": "2017-09-24T17:42:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjAwMDI2MDY=",
        "title": "Add \"includeDirs\" option to Swig Options object",
        "url": "https://github.com/node-swig/swig-templates/issues/45"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMTcyNjcyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMTcyNjcyMA==",
      "body": "similar to #45, i somewhat think this is a preprocessing concern.  im not super against it, but im having a little bit of skepticism seeing it as swig's responsibility.  maybe you can paint a use case where it really helps/would-help to sell it?",
      "createdAt": "2017-09-24T17:48:50Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjAwMDIzNzk=",
        "title": "make 'ignore missing' an option on Swig Options object",
        "url": "https://github.com/node-swig/swig-templates/issues/44"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMTc5MDI3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMTc5MDI3NA==",
      "body": "woo wee, that took forever to figure out why my `commit`s weren't \"working\" as expected.\r\n\r\n@thaJeztah, or anyone else really, i am not necessarily seeking to commit a volume, but _remove_ the volume declaration, and perhaps recreate it later?\r\n\r\nfor instance, [couchdb ships with a VOLUME declared](https://github.com/klaemo/docker-couchdb/blob/29ed69965ed616a9d0df9a6ffa081773d86c78bc/1.6.1/Dockerfile#L100).  my objective is to ship a container with some _prebaked data in it_, but i can't run any migrations and recommit them because of this volume.\r\n\r\nif there is a recipe for the operation, i'd love to hear it.",
      "createdAt": "2017-09-25T06:41:12Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzczODAxMg==",
        "title": "docker commit data container with VOLUME",
        "url": "https://github.com/moby/moby/issues/6999"
      },
      "repository": {
        "nameWithOwner": "moby/moby"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMjU3NDY0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMjU3NDY0OQ==",
      "body": "Oh nice!  Thx!",
      "createdAt": "2017-09-27T16:13:58Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjMyMDA4MDk=",
        "title": "library concepts not fully defined",
        "url": "https://github.com/layershifter/babel-plugin-transform-react-handled-props/issues/9"
      },
      "repository": {
        "nameWithOwner": "layershifter/babel-plugin-transform-react-handled-props"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMjk4MjE0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMjk4MjE0Mw==",
      "body": "@philohelp, im _so_ sorry!  i can't believe i didn't see this!  i monitor my issues fairly closely, but somehow didn't catch this!\r\n\r\ni tried to fire something up to help debug this, but the deps in your stack don't transpile to es5, and i don't have experience deploying react native stuff.\r\n\r\nanyway, i'm almost _certain_ that this error is rooted in the `pouchdb-adapter-react-native-sqlite` package, or it's interop with Pouch.  my get tells me you probably also saw this with PouchDB direct (which you can use by just calling `Pouchy.PouchDB(...normal-pouch-args)`, bypassing Pouchy entirely.  My guess is that whatever device you ran this on doesn't have the Buffer API exposed, and that lib should have provided an implementation.\r\n\r\ndid you find a way to get it to buck?",
      "createdAt": "2017-09-28T22:33:35Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzE5NzkxNjk=",
        "title": "Can't find variable: Buffer",
        "url": "https://github.com/cdaringe/pouchy/issues/173"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMzA1MDE1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMzA1MDE1Nw==",
      "body": "#python #leveldown #codeship.  The venv is all bonkers on the build box",
      "createdAt": "2017-09-29T07:15:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTQzNzg3MTM3",
        "title": "[Snyk Update] New fixes for 1 vulnerable dependency path",
        "url": "https://github.com/cdaringe/pouchy/pull/174"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMzM4ODQwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMzM4ODQwOA==",
      "body": "this is all still a little meta for me to grok, so... pictures!  suppose we're doing concurrent dev the following:\r\n\r\n```\r\na:master\r\n├── b:new_feature\r\n│   └── c:master\r\n└── d:master\r\n    └── f:new_feature\r\n```\r\n\r\nare we talking about a pipeline that automatically templates from the default, then looks to optimistically match against `new_feature`?  if so, that would be raaaad!  it would solve the need to run full system integration tests w/ new bits all the way up your software system",
      "createdAt": "2017-10-01T16:30:26Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjk0NTAxNjE=",
        "title": "Multi-branch workflows",
        "url": "https://github.com/concourse/concourse/issues/1172"
      },
      "repository": {
        "nameWithOwner": "concourse/concourse"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzMzg2NjM3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzMzg2NjM3MA==",
      "body": "I'll reopen when i hit it again :). Thx!",
      "createdAt": "2017-10-03T14:49:16Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDk4MzI0MzI=",
        "title": "Old removed files seem to stay cached in reports",
        "url": "https://github.com/istanbuljs/nyc/issues/644"
      },
      "repository": {
        "nameWithOwner": "istanbuljs/nyc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDIzNTcxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDIzNTcxMQ==",
      "body": "did you check to see if indeed the file is a sibling?  if so, sounds like one of your loaders is going haywire.  im skeptical that this is a concern of this lib.  the css file existed and worked before you upgraded, no?",
      "createdAt": "2017-10-04T17:46:57Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjI2MTk4NzU=",
        "title": "./large-card.css missing",
        "url": "https://github.com/Tripwire/octagon/issues/123"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDM0MjEzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDM0MjEzMg==",
      "body": "doh!\r\n\r\n- secondary border width is wrong\r\n- secondary text color is wrong\r\n- commit is missing BREAKING CHANGE. will patch later",
      "createdAt": "2017-10-05T02:32:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTQ0ODExMjIx",
        "title": "refactor(Button): make default button _actually_ default",
        "url": "https://github.com/Tripwire/octagon/pull/124"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDUzMDM2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDUzMDM2OA==",
      "body": "thank you! 🎉 ",
      "createdAt": "2017-10-05T17:09:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTQ0OTcwODg3",
        "title": "fix(large-card): put css in right place",
        "url": "https://github.com/Tripwire/octagon/pull/125"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDUzMDQzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDUzMDQzMg==",
      "body": "closed by #125 ",
      "createdAt": "2017-10-05T17:09:42Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjI2MTk4NzU=",
        "title": "./large-card.css missing",
        "url": "https://github.com/Tripwire/octagon/issues/123"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDU5NDgyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDU5NDgyMA==",
      "body": "+1. Is it onboard?",
      "createdAt": "2017-10-05T21:17:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTQ0OTgxNjM5",
        "title": "fix(color): Slight tweak to color palette",
        "url": "https://github.com/Tripwire/octagon/pull/126"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDYyNjkxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDYyNjkxNA==",
      "body": "https://github.com/facebookincubator/create-react-app/blob/master/packages/react-error-overlay/package.json#L40-L41\r\n\r\nThese need to be `peerDependencies`!",
      "createdAt": "2017-10-06T00:22:34Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjEwMTYzMjk=",
        "title": "warning deduped! on yarn check! yarn 1.1.0 node 8.6.0 npm 5.4.1",
        "url": "https://github.com/facebook/create-react-app/issues/3205"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDYyNzA2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDYyNzA2Ng==",
      "body": "...or do they.  probably?",
      "createdAt": "2017-10-06T00:23:44Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjEwMTYzMjk=",
        "title": "warning deduped! on yarn check! yarn 1.1.0 node 8.6.0 npm 5.4.1",
        "url": "https://github.com/facebook/create-react-app/issues/3205"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDYzMTU5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDYzMTU5Nw==",
      "body": "When I get around to upgrading, maybe i will! :)\n\nOn Thu, Oct 5, 2017 at 5:24 PM, Joe Haddad <notifications@github.com> wrote:\n\n> Nope, they need to be dependencies! Everything is bundled now, though --\n> so if that was the problem we can fix that to be *strictly* 16.\n>\n> Wanna send a PR?\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebookincubator/create-react-app/issues/3205#issuecomment-334627153>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA9O_a32q-Aw1k7A_P1N1BapEH-pSxyiks5spXNLgaJpZM4Pl8yG>\n> .\n>\n",
      "createdAt": "2017-10-06T00:57:27Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjEwMTYzMjk=",
        "title": "warning deduped! on yarn check! yarn 1.1.0 node 8.6.0 npm 5.4.1",
        "url": "https://github.com/facebook/create-react-app/issues/3205"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDg2MzQyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDg2MzQyMg==",
      "body": "+1. fire in the 🕳 ",
      "createdAt": "2017-10-06T20:35:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTQ1MjM1MTc2",
        "title": "fix(deps): Move react into a peer dependency",
        "url": "https://github.com/Tripwire/octagon/pull/129"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNDkwOTE3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNDkwOTE3NA==",
      "body": "https://gist.github.com/stephenparish/9941e89d80e2bc58a153 search for \"format\".  That's not the official but it's the angular commit conventions",
      "createdAt": "2017-10-07T04:16:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTQ1Mjc1NjQ1",
        "title": "⏫ Upgrade dependencies",
        "url": "https://github.com/dino-dna/donut/pull/112"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNTA1NDAwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNTA1NDAwNg==",
      "body": "I single it up but don't care.  Whatever you prefer do long as lint doesn't barf!  +1",
      "createdAt": "2017-10-09T01:45:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTQ1MzU3OTky",
        "title": "💅 Donuts component styling",
        "url": "https://github.com/dino-dna/donut/pull/113"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNTU3NzcyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNTU3NzcyNA==",
      "body": "greetings! 🍻 \r\n\r\n> rm -rf node_modules && npm install in the container root directories would be sufficient\r\n\r\nin my use case, i'm _not_ publishing packages.  therefore, `npm install` fails.  instead, my private packages exist _exclusively_ in `packages/`.\r\n\r\nis it out of lerna scope to install all dependencies into a package, even if some of them are otherwise local/linked during bootstrap?\r\n\r\n> and will likely never support direct application bundling and whatnot\r\n\r\nof course.  agreed.\r\n\r\n<hr />\r\n\r\nbundling is an option, but not one i actually considered until you mentioned it.  i just want to run `install` and have my package stand alone, even if dependencies are sourced locally and from the registry.\r\n\r\ndid i clarify/confuse any usage?  if so, does your response change?  thx!\r\n",
      "createdAt": "2017-10-10T19:13:13Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjQwNjEyNzM=",
        "title": "feature: no hoisting, no symlinking bootstrap",
        "url": "https://github.com/lerna/lerna/issues/1061"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNTY5MDk0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNTY5MDk0NQ==",
      "body": "> There is no shame in relative path imports.\r\n\r\nsure. agreed.\r\n\r\n> I don't see any reason to use lerna in your case.\r\n\r\ni could `link` all of the things manually (youch--i have ~10 pkgs), but dep reduction (hoisting+workspaces) & auto linking are still very much value add.  it a definite \"why not?\" situation at development time.\r\n\r\n> I would definitely separate the bundling \r\n\r\njust to be clear, i'm not talking about bundling.  you've mentioned it twice now, but i'm not sure why.  perhaps we have different interpretations on what \"bundling\" means?  when in hear it, i assume it implies something like rollup/webpack with target ~= node.  is that your intent w/ it too?",
      "createdAt": "2017-10-11T05:54:11Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjQwNjEyNzM=",
        "title": "feature: no hoisting, no symlinking bootstrap",
        "url": "https://github.com/lerna/lerna/issues/1061"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNTg3MTAxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNTg3MTAxMg==",
      "body": "what command causes the failure?",
      "createdAt": "2017-10-11T16:38:54Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjQzOTU2MTk=",
        "title": "Odd CI error using ripcord",
        "url": "https://github.com/cdaringe/ripcord/issues/171"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNjIyODY1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNjIyODY1OA==",
      "body": "If I was competent and could our CI yo obey my wishes this would be done ;)\n\nOn Oct 11, 2017 9:53 AM, \"ggascoigne\" <notifications@github.com> wrote:\n\n> Looks like it's just doing a yarn install:\n>\n> [14:54:00][:ui:yarnInstall] Running node v8.6.0 (npm v1.3.6)\n> [14:54:02][:ui:yarnInstall] yarn install v0.19.1\n> [14:54:02][:ui:yarnInstall] [1/4] Resolving packages...\n> [14:54:02][:ui:yarnInstall] [2/4] Fetching packages...\n> [14:54:03][:ui:yarnInstall] info If you think this is a bug, please open a\n> bug report with the information provided in \"/var/lib/buildAgent/work/\n> ceb72f51983ceaee/ui/yarn-error.log\".\n> [14:54:03][:ui:yarnInstall] info Visit https://yarnpkg.com/en/docs/\n> cli/install for documentation about this command.\n> [14:54:03][:ui:yarnInstall] error An unexpected error occurred: \"EACCES:\n> permission denied, rmdir '/home/scm/.cache/yarn/npm-ripcord-4.0.0-\n> eb168c66643a4fe0d7bf2f84652a2c47ea251986/.git/objects/pack'\".\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cdaringe/ripcord/issues/171#issuecomment-335875223>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA9O_dzdI-YjAwx8G9aUyfffzolx16jVks5srPKDgaJpZM4P0qKo>\n> .\n>\n",
      "createdAt": "2017-10-12T18:40:36Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjQzOTU2MTk=",
        "title": "Odd CI error using ripcord",
        "url": "https://github.com/cdaringe/ripcord/issues/171"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ripcord"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNjY0NDMxMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNjY0NDMxMw==",
      "body": "Ya I think you're right.  Thx!",
      "createdAt": "2017-10-14T15:56:38Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjUxMjY1Nzk=",
        "title": "browserify running transforms specified by child dependency unexpectedly",
        "url": "https://github.com/browserify/browserify/issues/1768"
      },
      "repository": {
        "nameWithOwner": "browserify/browserify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNjY1Mjk0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNjY1Mjk0Ng==",
      "body": "@trxcllnt, that's a nice play.  i ended up doing a similar, but much simpler/less-robust strategy that meets the same intent.\r\n\r\ni see maybe a package coming out of this exercise.  `lerna-delink`/`lerna-debootstrap`/`lerna-isolate`/etc.\r\n\r\nthx @evocateur @trxcllnt.",
      "createdAt": "2017-10-14T18:06:37Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjQwNjEyNzM=",
        "title": "feature: no hoisting, no symlinking bootstrap",
        "url": "https://github.com/lerna/lerna/issues/1061"
      },
      "repository": {
        "nameWithOwner": "lerna/lerna"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNjY4MDk5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNjY4MDk5Mw==",
      "body": "#yolo",
      "createdAt": "2017-10-15T02:15:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTQ2NjMwNTQw",
        "title": "Feat/regression",
        "url": "https://github.com/dino-dna/donut/pull/118"
      },
      "repository": {
        "nameWithOwner": "dino-dna/donut"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzNjk4Nzc5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzNjk4Nzc5Ng==",
      "body": "i see i can use `postshrinkwrap`.  maybe a new task, `postlockfile`, would be helpful/more-clear",
      "createdAt": "2017-10-16T18:36:04Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjQ3OTY1Nzg=",
        "title": "npm postinstall hook runs before package-lock.json flushed to disk",
        "url": "https://github.com/npm/npm/issues/18798"
      },
      "repository": {
        "nameWithOwner": "npm/npm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDMzOTEzMTgxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDMzOTEzMTgxNw==",
      "body": "it took me a sec to figure out what's going on in the `Sidebar` code.\r\n\r\n- in the link provided, the `MenuItem` component is never used--only `Menu.Item`\r\n  - `MenuItem` uses `NavLink`, but is dead code\r\n- https://github.com/Semantic-Org/Semantic-UI-React/blob/master/docs/app/Components/Sidebar/Sidebar.js#L119-L126 on the other hand is what to :eyes: at!",
      "createdAt": "2017-10-24T21:08:28Z",
      "issue": {
        "id": "MDU6SXNzdWUxODQyOTM0OTc=",
        "title": "Menu.Item as={Link} breaks react-router (v4)?",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/709"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MDEyNzIwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MDEyNzIwNw==",
      "body": "@andrewleyva (& @ggascoigne) updates!\r\n\r\n- i moved the tmp build dir to a true sys-wise tmp dir\r\n- given your CSS build is pretty fast and because i parallelized a lot of the steps, i was able to drop `less-loader`, and just do a full CSS rebuild on every change from `src/semantic-ui-theme`, vs watching the temp dir less file.  if it becomes problematic, no worries, let's port it back.  it honestly is probably a little slower, _but_, it's simpler.  \"changed theme? then new theme dumped into lib\"\r\n\r\ntake a look at the static styleguide from @wa11-e (yours, or mine).\r\n\r\n- it looks like the icon on the sortable table isn't rendering.\r\n- if you run `npm install && npm test` in the latest branch, there are some actual diffs im observing too.  not much! just some smallies.  we need to loosen the image diff threshold in the test :$\r\n  - button padding-left|right maybe have both increased?  we should see what's up w/ that.",
      "createdAt": "2017-10-28T00:42:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTQ3ODU0MTg0",
        "title": "WIP: Upgrade Semantic Ui to use Semantic-UI-Less",
        "url": "https://github.com/Tripwire/octagon/pull/130"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MDkzNjA5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MDkzNjA5Ng==",
      "body": "```sh\r\nbackstop_1      | BackstopJS v3.0.26\r\nbackstop_1      | Loading config:  /src/backstop.json\r\nbackstop_1      |\r\nbackstop_1      | COMMAND | Executing core for `test`\r\nbackstop_1      | createBitmaps | Selected 1 of 1 scenarios.\r\nbackstop_1      |\r\nbackstop_1      | Running CasperJS with:  [ '/usr/local/lib/node_modules/backstopjs/capture/genBitmaps.js',\r\nbackstop_1      |   '--engine=slimerjs',\r\nbackstop_1      |   '--captureConfigFileName=/tmp/capture/8b6d155b141e131ced4ccb87e68a5a44bc7dbfdd.json' ]\r\nbackstop_1      | CasperJS:  Using screen size 1920x1080\r\nbackstop_1      | CasperJS:  Ready event received.\r\nbackstop_1      | CasperJS:  Current location is http://staticserver:3333\r\nbackstop_1      | CasperJS:  SCENARIO > Octagon\r\nbackstop_1      | CasperJS:  Capturing screenshots for desktop (1600x900)\r\nbackstop_1      | CasperJS:  Comparison config file updated.\r\nbackstop_1      |\r\n```\r\n\r\n^ it says it has a big screen... but all my images have a clear, truncated width",
      "createdAt": "2017-10-31T23:23:49Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzAxNDg4MDI=",
        "title": "docker image screen resolution always small",
        "url": "https://github.com/garris/BackstopJS/issues/586"
      },
      "repository": {
        "nameWithOwner": "garris/BackstopJS"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MDkzOTAzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MDkzOTAzNA==",
      "body": "hmmm. it looks like casper/ff is not rendering my app (react-styleguidist) properly.  heres a snap using selector `document`: https://static.cdaringe.com/img/casper-truncated-view.png\r\n\r\nit doesn't render for me in all my versions of FF otherwise.  it is precisely this web-app: https://tripwire.github.io/octagon/",
      "createdAt": "2017-10-31T23:42:54Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzAxNDg4MDI=",
        "title": "docker image screen resolution always small",
        "url": "https://github.com/garris/BackstopJS/issues/586"
      },
      "repository": {
        "nameWithOwner": "garris/BackstopJS"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MTQ4MDAyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MTQ4MDAyNw==",
      "body": "+1 looks good to me.  confirmed Lato is still always still applied (at least in chrome!)",
      "createdAt": "2017-11-02T16:32:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTUwMTgyOTIy",
        "title": "Upgraded Lato Fonts to version 3.",
        "url": "https://github.com/Tripwire/octagon/pull/132"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MTU5NDUxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MTU5NDUxNA==",
      "body": "+1.  @antoinejuhel, look good to you?",
      "createdAt": "2017-11-03T00:11:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTUwNDI5NDM0",
        "title": "Fixed Hover Colors on Thin Card",
        "url": "https://github.com/Tripwire/octagon/pull/133"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MTg1MTU3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MTg1MTU3Mw==",
      "body": "@timdorr, will you please consider a re-open?  i made those considerations already, and have enhanced the example to demonstrate so.\r\n\r\nit looks like the version of `location` that gets injected is somehow _stale_.  i updated my codepen, and you can see in `BasicComponent::render` that when doing time-travel with redux-devtools, `location` keeps `console.log`ging the _same old location object_, so of course the route isn't changing.",
      "createdAt": "2017-11-03T23:30:05Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjk3NzQ1MDA=",
        "title": "react-router-redux doesn't render routes on state change via devtools",
        "url": "https://github.com/remix-run/react-router/issues/5670"
      },
      "repository": {
        "nameWithOwner": "remix-run/react-router"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MTg2MjcxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MTg2MjcxNA==",
      "body": "Respectfully, I followed the instructions and it doesn't work.  I call that a bug.  You replied originally with \"try this\" which I already had, and the dysfunction still stands.\r\n\r\nThe readme says \"this is beta software\" and that it needs people to try it and find bugs.  I believe I'm still doing this.",
      "createdAt": "2017-11-04T01:35:29Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjk3NzQ1MDA=",
        "title": "react-router-redux doesn't render routes on state change via devtools",
        "url": "https://github.com/remix-run/react-router/issues/5670"
      },
      "repository": {
        "nameWithOwner": "remix-run/react-router"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MjY3NDg0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MjY3NDg0OQ==",
      "body": "ah ha!  see: https://chromedevtools.github.io/devtools-protocol/tot/Page/#type-VisualViewport\r\n\r\nconfirmed, pup's clip values need to be patched",
      "createdAt": "2017-11-08T00:58:53Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzIwMzgzNjA=",
        "title": "elementHandle.screenshot clip object uses wrong y value",
        "url": "https://github.com/puppeteer/puppeteer/issues/1315"
      },
      "repository": {
        "nameWithOwner": "puppeteer/puppeteer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MjY3NDk0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MjY3NDk0Mg==",
      "body": "... https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-captureScreenshot \r\n\r\n^^ would be handy too :)",
      "createdAt": "2017-11-08T00:59:18Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzIwMzgzNjA=",
        "title": "elementHandle.screenshot clip object uses wrong y value",
        "url": "https://github.com/puppeteer/puppeteer/issues/1315"
      },
      "repository": {
        "nameWithOwner": "puppeteer/puppeteer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MjY3NTAyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MjY3NTAyNQ==",
      "body": "debugged this. see https://github.com/GoogleChrome/puppeteer/issues/1315",
      "createdAt": "2017-11-08T00:59:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTUxMTI4OTM5",
        "title": "Test screenshot of element that needs to be scrolled into view",
        "url": "https://github.com/puppeteer/puppeteer/pull/1304"
      },
      "repository": {
        "nameWithOwner": "puppeteer/puppeteer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MjY3NzQ4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MjY3NzQ4MQ==",
      "body": "rather than being a productive citizen and landing a patch here (which i should :(), i'll at least share the hack fix:\r\n\r\n```js\r\n    // get the full height of the document\r\n    var height = await page.evaluate(function () {\r\n      var body = document.body\r\n      var html = document.documentElement\r\n      var height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight)\r\n      return height\r\n    })\r\n    // set the viewport to be the full height of the document\r\n    await page.setViewport({\r\n      width, // whatever it may be\r\n      height\r\n    })\r\n```\r\n\r\n^^ this _only works_ if you're always starting from the top of the document to begin with.",
      "createdAt": "2017-11-08T01:13:39Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzIwMzgzNjA=",
        "title": "elementHandle.screenshot clip object uses wrong y value",
        "url": "https://github.com/puppeteer/puppeteer/issues/1315"
      },
      "repository": {
        "nameWithOwner": "puppeteer/puppeteer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MjY3Nzk0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MjY3Nzk0NQ==",
      "body": "ohh i never squash and merge!  it you do, you loose valuable semantic release commit messages!!",
      "createdAt": "2017-11-08T01:16:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTUwNjIyMTA4",
        "title": "feat(pkg): updgrade styleguide",
        "url": "https://github.com/Tripwire/octagon/pull/134"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MjY4MDQzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MjY4MDQzOA==",
      "body": "otherwise, sounds fine to me!",
      "createdAt": "2017-11-08T01:30:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTUxMjcxMTcy",
        "title": "fix(button): Fix the borders on the icon button. Currently they appear to overlap",
        "url": "https://github.com/Tripwire/octagon/pull/135"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0Mjg5MDA4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0Mjg5MDA4MQ==",
      "body": "working on a PR now",
      "createdAt": "2017-11-08T17:21:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzIwMzgzNjA=",
        "title": "elementHandle.screenshot clip object uses wrong y value",
        "url": "https://github.com/puppeteer/puppeteer/issues/1315"
      },
      "repository": {
        "nameWithOwner": "puppeteer/puppeteer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MjkxMTg0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MjkxMTg0MA==",
      "body": "see #1323",
      "createdAt": "2017-11-08T18:27:28Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzIwMzgzNjA=",
        "title": "elementHandle.screenshot clip object uses wrong y value",
        "url": "https://github.com/puppeteer/puppeteer/issues/1315"
      },
      "repository": {
        "nameWithOwner": "puppeteer/puppeteer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0Mjk1MTQ2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0Mjk1MTQ2Mg==",
      "body": "no harm no foul, but @andrewleyva, our teams have an unexplicit policy of needing re-approval before merge.  also, i didnt see any follow up on the spacing question.  i'm betting the active shadow uses `px`--i'm not asserting, but thinking, that the margins should mirror those?",
      "createdAt": "2017-11-08T20:37:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTUxMjcxMTcy",
        "title": "fix(button): Fix the borders on the icon button. Currently they appear to overlap",
        "url": "https://github.com/Tripwire/octagon/pull/135"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MzQwNjU0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MzQwNjU0MA==",
      "body": "you must read and understand the docker remote api, referrenced at the top of the repo.  example\r\n\r\n```js\r\n    var staticServer = await docker.createContainer({\r\n      Hostname: 'static',\r\n      Image: 'node',\r\n      Cmd: ['node', '/adapter/node_modules/.bin/httpster', '-d', '/static'],\r\n      HostConfig: {\r\n        AutoRemove: true,\r\n        Binds: [\r\n          `${projectRoot}:/adapter`,\r\n          `${tempStaticDir}:/static`\r\n        ]\r\n      },\r\n      ExposedPorts: {\r\n        '3333/tcp': {}\r\n      },\r\n      NetworkingConfig: {\r\n        EndpointsConfig: {\r\n          [networkName]: {\r\n            Aliases: [\r\n              'static'\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    })\r\n```",
      "createdAt": "2017-11-10T08:21:08Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzI4NTE2NjQ=",
        "title": "Sample for setting volumes,ports when create container is required",
        "url": "https://github.com/apocas/dockerode/issues/413"
      },
      "repository": {
        "nameWithOwner": "apocas/dockerode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MzU4MDg4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MzU4MDg4OQ==",
      "body": "I signed it!",
      "createdAt": "2017-11-10T20:43:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTUxNDU4Nzc3",
        "title": "Fix/element screenshot",
        "url": "https://github.com/puppeteer/puppeteer/pull/1323"
      },
      "repository": {
        "nameWithOwner": "puppeteer/puppeteer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0MzYwOTQ4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0MzYwOTQ4Ng==",
      "body": "mmm, interesting.  fair. \r\n\r\n- `Page.captureScreenshot` in the protocol expects a `Viewport` object.  this seems correct.  it locates and defines a rectangle relative to the document.\r\n- `getBoundingClientRect` is paired to the corresponding browser method, and returns a [DOMRect](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect), which also seems correct for its use case.  it's x & y are relative to the current viewport.\r\n\r\nthe only thing i'm seeing as a viable change is expanding the `Viewport` protocol to be relative or absolute positioning aware.  however, i dont think they could use the exact same format w/out breaking backwards compatibility--one is relative, one is absolute.  thoughts?",
      "createdAt": "2017-11-10T23:00:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTUxNDU4Nzc3",
        "title": "Fix/element screenshot",
        "url": "https://github.com/puppeteer/puppeteer/pull/1323"
      },
      "repository": {
        "nameWithOwner": "puppeteer/puppeteer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0NTE0MzgwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0NTE0MzgwMg==",
      "body": "hi @cosmo0920,\r\n\r\nthanks very much for the response.\r\n\r\n- `emit_invalid_record_to_error` could work, but it's not really an error--it's a mixed type field.  because of this, i felt as though i should flip on [suppress_parse_error_log](https://docs.fluentd.org/v0.12/articles/filter_parser#suppress_parse_error_log) and still try n get the message thru.\r\n  - it still doesn't make sense to me that the file still gets the log, but this plugin does not\r\n  - maybe this is not supported at all by `filter`? perhaps [fluent-plugin-multi-format-parser](https://github.com/repeatedly/fluent-plugin-multi-format-parser) would be a better fit?\r\n- thx for the buffer tip ;)\r\n\r\n\r\n",
      "createdAt": "2017-11-17T04:41:17Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzQ2OTMyNzM=",
        "title": "messages dropped from sending to ES when upstream filter fails",
        "url": "https://github.com/uken/fluent-plugin-elasticsearch/issues/320"
      },
      "repository": {
        "nameWithOwner": "uken/fluent-plugin-elasticsearch"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0NTQxNjMxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0NTQxNjMxMg==",
      "body": "oh, i understand.  i will close now and re-open if needed.  thx again",
      "createdAt": "2017-11-18T03:57:52Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzQ2OTMyNzM=",
        "title": "messages dropped from sending to ES when upstream filter fails",
        "url": "https://github.com/uken/fluent-plugin-elasticsearch/issues/320"
      },
      "repository": {
        "nameWithOwner": "uken/fluent-plugin-elasticsearch"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0NTQxNjM0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0NTQxNjM0MA==",
      "body": "yes, that is good :)",
      "createdAt": "2017-11-18T03:58:32Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzM2NDAyNjk=",
        "title": "logger.end unsupported in winston transport",
        "url": "https://github.com/fluent/fluent-logger-node/issues/86"
      },
      "repository": {
        "nameWithOwner": "fluent/fluent-logger-node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0NTk0MTk1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0NTk0MTk1Nw==",
      "body": "that may actually be that you have an old slimer executable, unrelated to this lib",
      "createdAt": "2017-11-21T07:37:56Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzg0Mjk1Njc=",
        "title": "Using with latest Firefox",
        "url": "https://github.com/MangoTools/node-slimerjs/issues/7"
      },
      "repository": {
        "nameWithOwner": "MangoTools/node-slimerjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0NjE2NzM0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0NjE2NzM0NA==",
      "body": "in our docker setup (w/ ~no customization), we are running 6.x of ES & Kibana.\r\n\r\nwe tried:\r\n\r\n- deleting the index and rebooting the things, yet the error persists\r\n- doing the manual migration, yet the error persists\r\n\r\n![screen shot 2017-11-21 at 1 28 00 pm](https://user-images.githubusercontent.com/1003261/33097755-ff9696b0-cebf-11e7-84a3-f01564ba856d.png)\r\n\r\nwe are mounting our data--our other indices are picked by ES w/out issue.  any idea?",
      "createdAt": "2017-11-21T21:30:25Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzM3NzE5MTQ=",
        "title": "Your Kibana index is out of date, reset it or use the X-Pack upgrade assistant.",
        "url": "https://github.com/elastic/kibana/issues/14934"
      },
      "repository": {
        "nameWithOwner": "elastic/kibana"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0NjE2ODU5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0NjE2ODU5NQ==",
      "body": "in fact, or ES shows the new index and alias are zen, too:\r\n\r\n```\r\n$ curl -XGET 'localhost:9200/_cat/indices?v&pretty' | grep kib\r\n\r\ngreen  open   .kibana-6                                                     qC75ww_-QTO6f8FmnPPmQg   1   0         81            0       50kb           50kb\r\n\r\n$ curl -XGET 'localhost:9200/_cat/aliases?v&pretty' | grep kib\r\n.kibana                                             .kibana-6                                                     -      -             -\r\n```\r\n\r\nyet kibana 6.0.0 still complains 🤔",
      "createdAt": "2017-11-21T21:35:21Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzM3NzE5MTQ=",
        "title": "Your Kibana index is out of date, reset it or use the X-Pack upgrade assistant.",
        "url": "https://github.com/elastic/kibana/issues/14934"
      },
      "repository": {
        "nameWithOwner": "elastic/kibana"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0NjE3MTc4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0NjE3MTc4NA==",
      "body": "sorry to keep spamming, but... more info:\r\n\r\n```\r\nelasticsearch_1  | [2017-11-21T21:44:40,962][INFO ][o.e.c.m.MetaDataCreateIndexService] [hyEjDLC] [.kibana-6] creating index, cause [api], templates [not_analyzed_template], shards [1]/[0], mappings [_default_, doc]\r\nelasticsearch_1  | [2017-11-21T21:44:41,092][INFO ][o.e.c.r.a.AllocationService] [hyEjDLC] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[.kibana-6][0]] ...]).\r\nkibana_1         | {\"type\":\"log\",\"@timestamp\":\"2017-11-21T21:44:41Z\",\"tags\":[\"status\",\"plugin:elasticsearch@6.0.0\",\"error\"],\"pid\":1,\"state\":\"red\",\"message\":\"Status changed from yellow to red - Your Kibana index is out of date, reset it or use the X-Pack upgradeassistant.\",\"prevState\":\"yellow\",\"prevMsg\":\"No existing Kibana index found\"}\r\n```\r\n\r\n- kibana inits a `.kibana-6` index to ES\r\n- ES boots it successfully\r\n- kibana complains about it",
      "createdAt": "2017-11-21T21:46:53Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzM3NzE5MTQ=",
        "title": "Your Kibana index is out of date, reset it or use the X-Pack upgrade assistant.",
        "url": "https://github.com/elastic/kibana/issues/14934"
      },
      "repository": {
        "nameWithOwner": "elastic/kibana"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0NjE4MzkwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0NjE4MzkwNg==",
      "body": "we did some debugging:\r\n\r\nkibana decides if your indicies have been migrated by testing the length of `currentTypes`, [right here](https://github.com/elastic/kibana/blob/852fa9c6a965fa4bd59158be5caf68b7a82f1c03/src/core_plugins/elasticsearch/lib/patch_kibana_index.js#L82).\r\n\r\nfor instance, here are our `currentTypes` pre migration:\r\n\r\n```js\r\n[ 'config',\r\n  'visualization',\r\n  'server',\r\n  'timelion-sheet',\r\n  'dashboard',\r\n  '_default_',\r\n  'index-pattern',\r\n  'search',\r\n  'graph-workspace',\r\n  'url' ]\r\n```\r\n\r\nafter [running the migration process](https://www.elastic.co/guide/en/kibana/6.0/migrating-6.0-index.html#migrating-6.0-index), our `currentTypes` yield:\r\n\r\n```js\r\n[ 'doc', '_default_' ]\r\n```\r\n\r\nit would seem that `_default_` is probably OK to be present?  we dont know enough about ES internals to comment.  however, it's clear that either:\r\n\r\n- this check is invalid, or,\r\n- ES mapping creation is invalid.\r\n\r\nhope this helps!",
      "createdAt": "2017-11-21T22:35:40Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzM3NzE5MTQ=",
        "title": "Your Kibana index is out of date, reset it or use the X-Pack upgrade assistant.",
        "url": "https://github.com/elastic/kibana/issues/14934"
      },
      "repository": {
        "nameWithOwner": "elastic/kibana"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0ODM3MTcxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0ODM3MTcxNQ==",
      "body": "im struggling with this as well!  did you come to any conclusion?\r\n\r\nalpine doesn't ship a `plpython` for postgres `9.5.x`/`9.5.10`, and im struggling to find documentation on how to load it.\r\n\r\ni even downloaded the 9.5 source and compiled it, but still not clear which artifacts are relevant and where they go!",
      "createdAt": "2017-12-01T01:08:57Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjU5ODQ1NTM=",
        "title": "PL/* language packages are not installed",
        "url": "https://github.com/docker-library/postgres/issues/114"
      },
      "repository": {
        "nameWithOwner": "docker-library/postgres"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0ODU2Mzg5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0ODU2Mzg5Ng==",
      "body": "whoops, i commented in the wrong issue.  this issue is essentially closed (rejected) w/ the closure of #115",
      "createdAt": "2017-12-01T17:57:58Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjU5ODQ1NTM=",
        "title": "PL/* language packages are not installed",
        "url": "https://github.com/docker-library/postgres/issues/114"
      },
      "repository": {
        "nameWithOwner": "docker-library/postgres"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM0ODczMDUyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM0ODczMDUyMA==",
      "body": "@tylersmalley, just following up.  as described above, there is some sort breach-of-contract between ES & Kibana.  It is unclear if ES or Kibana is the offender.\r\n\r\nthis issue was started by a user using kibana 7.x, but in fact, we experience this issue w/ 6.x kibana and 6.x ES.  let me know if I should move it to a separate issue or not.",
      "createdAt": "2017-12-03T00:21:50Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzM3NzE5MTQ=",
        "title": "Your Kibana index is out of date, reset it or use the X-Pack upgrade assistant.",
        "url": "https://github.com/elastic/kibana/issues/14934"
      },
      "repository": {
        "nameWithOwner": "elastic/kibana"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MDgyMjE4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MDgyMjE4Ng==",
      "body": "@tylersmalley, it would seem so, from kibana itself.\r\n\r\n```sh\r\n$ curl http://localhost:9200/_template | jq '.[\"default_kibana_template\"][\"mappings\"][\"_default_\"]'\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   866  100   866    0     0  73714      0 --:--:-- --:--:-- --:--:-- 78727\r\n{\r\n  \"dynamic_templates\": [\r\n    {\r\n      \"strings\": {\r\n        \"match_mapping_type\": \"string\",\r\n        \"mapping\": {\r\n          \"fields\": {\r\n            \"keyword\": {\r\n              \"ignore_above\": 256,\r\n              \"type\": \"keyword\"\r\n            }\r\n          },\r\n          \"type\": \"text\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n",
      "createdAt": "2017-12-11T18:57:49Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzM3NzE5MTQ=",
        "title": "Your Kibana index is out of date, reset it or use the X-Pack upgrade assistant.",
        "url": "https://github.com/elastic/kibana/issues/14934"
      },
      "repository": {
        "nameWithOwner": "elastic/kibana"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MjU3NzgxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MjU3NzgxMg==",
      "body": "hi @jasontedor, thanks for the xref. \r\n\r\nhowever, i did in fact see #22103.  you can see the the errors i present and the errors they present are similar, but different.  same objective, but perhaps _slightly_ different failure mode.\r\n\r\nin the docker context, it's not abundantly clear where to set those policies values that you articulated in that issue.\r\n\r\n```sh\r\n[root@94d395433e1e elasticsearch]# grep -irn RuntimePermission\r\nplugins/ingest-geoip/plugin-security.policy:26:  permission java.lang.RuntimePermission \"accessDeclaredMembers\";\r\nmodules/lang-mustache/plugin-security.policy:22:  permission java.lang.RuntimePermission \"accessDeclaredMembers\";\r\nmodules/lang-painless/plugin-security.policy:22:  permission java.lang.RuntimePermission \"accessDeclaredMembers\";\r\nmodules/lang-expression/plugin-security.policy:22:  permission java.lang.RuntimePermission \"accessDeclaredMembers\";\r\n```\r\n\r\ni tried updating ^^^ listed policy files, but alas, the issue persists.  can you lend a hand and point me to where those settings would go?",
      "createdAt": "2017-12-18T22:25:45Z",
      "issue": {
        "id": "MDU6SXNzdWUyODI5OTYzODE=",
        "title": "bug: logging via log4j2 JsonLayout fails with log4j security error",
        "url": "https://github.com/elastic/elasticsearch/issues/27874"
      },
      "repository": {
        "nameWithOwner": "elastic/elasticsearch"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MjYwNjE3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MjYwNjE3OA==",
      "body": "circleci outputs artifacts.  you can see that [this](https://25-77168631-gh.circle-artifacts.com/0/home/circleci/repo/snaps/run/1513644238911-diff/report/a-PaginationControl-disabled-pagination-chrome.png) !== [that](https://25-77168631-gh.circle-artifacts.com/0/home/circleci/repo/snaps/run/1513644238911-diff/report/a-PaginationControl-enabled-pagination-chrome.png).  it also outputs the webapp diff report. maybe ill get to having wall-e push the report to this thread too.",
      "createdAt": "2017-12-19T00:58:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTU5MDMwNTY0",
        "title": "feat(pagination): Created pagination control according to UX spec",
        "url": "https://github.com/Tripwire/octagon/pull/139"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MjYwODYwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MjYwODYwNQ==",
      "body": "more things:\r\n\r\n1. you can't delete `1` of the pagination input.  what if i wanted to jump to page 20?\r\n1. the text doesn't seem centered in the input control. \r\n    1. is the input per UX desires?  i haven't seen this pattern out in the wild\r\n1. what is the expected behavior if i tab out of the text w/out hitting enter?",
      "createdAt": "2017-12-19T01:11:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTU5MDMwNTY0",
        "title": "feat(pagination): Created pagination control according to UX spec",
        "url": "https://github.com/Tripwire/octagon/pull/139"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MjYyMTg0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MjYyMTg0OQ==",
      "body": "@andrewleyva how did you pull master into your branch?  generally if you do just a `git merge master` in your feature branch it shows up as a merge commit.  looks like github isn't filtering those commits out that are already present",
      "createdAt": "2017-12-19T02:34:58Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTU5MDMwNTY0",
        "title": "feat(pagination): Created pagination control according to UX spec",
        "url": "https://github.com/Tripwire/octagon/pull/139"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1Mjg3NTAxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1Mjg3NTAxMQ==",
      "body": "Yes, it completely helps! :)  Thx!\r\n\r\nFor those who are in docker-land and want to see how i overcame it, i use the following assets to build my ES json logging docker image:\r\n\r\n```Dockerfile\r\n# Dockerfile\r\nARG FROM\r\n# eg. elasticsearch:6.1.0\r\nFROM $FROM\r\nCOPY setup-json-logging.sh .\r\nRUN bash setup-json-logging.sh clean-jackson-jars\r\n# squash log4j properties outright, as there's no great way to unset\r\n# existing log configuration values.\r\nCOPY log4j2.properties /usr/share/elasticsearch/config/log4j2.properties\r\n# build/libs/*.jar expands to the jackson core, annotations, and databind jars\r\nCOPY build/libs/*.jar /usr/share/elasticsearch/lib/\r\nRUN chown 1000:0 /usr/share/elasticsearch/config/log4j2.properties && \\\r\n  chmod 0664 /usr/share/elasticsearch/config/log4j2.properties & \\\r\n  chown -R 1000:0 /usr/share/elasticsearch/lib/ && \\\r\n  bash setup-json-logging.sh update-jvm-perms\r\n```\r\n\r\n```sh\r\n#! /bin/bash\r\n# setup-json-logging.sh\r\nDEPENDENCY_JAR_GLOBS=(\"*jackson-core*.jar\" \"*jackson-databind*.jar\" \"*jackson-annotations*.jar\")\r\n\r\n# purge jackson jars, bring our own\r\nif [ \"$1\" == \"clean-jackson-jars\" ]\r\nthen\r\n  echo cleaning jackson jars\r\n  for glob in ${DEPENDENCY_JAR_GLOBS[@]}\r\n  do\r\n    echo testing for $glob\r\n    find . -name \"$glob\" | while read -r line;\r\n    do\r\n      printf \"\\tpurging $line\\n\"\r\n      rm -f $line\r\n    done\r\n  done\r\nfi\r\n\r\n# loosen the JVM perms so we can configure our own logger\r\n# {@see https://github.com/elastic/elasticsearch/issues/22103}\r\nif [ \"$1\" == \"update-jvm-perms\" ]\r\nthen\r\n  read -d '' JAVA_POLICY << EOF\r\ngrant {\r\n  permission java.lang.RuntimePermission \"accessDeclaredMembers\";\r\n  permission java.lang.reflect.ReflectPermission \"suppressAccessChecks\";\r\n};\r\nEOF\r\n  echo \"$JAVA_POLICY\" > .java.policy\r\nfi\r\n```\r\n\r\n```properties\r\n# log4j2.properties\r\nstatus = error\r\ndest = err\r\nname = PropertiesConfig\r\n\r\nappender.console.type = Console\r\nappender.console.name = STDOUT\r\nappender.console.layout.type = JsonLayout\r\nappender.console.layout.compact= true\r\nappender.console.layout.eventEol= true\r\nappender.console.layout.locationInfo= true\r\nappender.console.layout.stacktraceAsString= true\r\n\r\nrootLogger.level = info\r\nrootLogger.appenderRef.stdout.ref = STDOUT\r\n```",
      "createdAt": "2017-12-19T20:20:26Z",
      "issue": {
        "id": "MDU6SXNzdWUyODI5OTYzODE=",
        "title": "bug: logging via log4j2 JsonLayout fails with log4j security error",
        "url": "https://github.com/elastic/elasticsearch/issues/27874"
      },
      "repository": {
        "nameWithOwner": "elastic/elasticsearch"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MjkxMDg0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MjkxMDg0MA==",
      "body": "https://github.com/Tripwire/octagon/compare/master...pagination\r\n\r\nnice, tests pass! :)\r\n\r\nlet's kick the stateless-ification to a subsequent PR.  @andrewleyva , can you bite that off?",
      "createdAt": "2017-12-19T22:49:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTU5MDMwNTY0",
        "title": "feat(pagination): Created pagination control according to UX spec",
        "url": "https://github.com/Tripwire/octagon/pull/139"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MjkyMzI0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MjkyMzI0OQ==",
      "body": "looks like @wa11-e didn't post per expectation.  i think i resolved it, but hold off until we get a message back from him here.",
      "createdAt": "2017-12-19T23:58:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTU5MjkzNzE0",
        "title": "Feat/send static site from circle",
        "url": "https://github.com/Tripwire/octagon/pull/141"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MjkyMzg4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MjkyMzg4MQ==",
      "body": "this was not ready to be merged.\r\n\r\n@andrewleyva, my review is a 🔴 x still, as shown above.  indentation is still not per standard spec in the examples.",
      "createdAt": "2017-12-20T00:02:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTU5MDMwNTY0",
        "title": "feat(pagination): Created pagination control according to UX spec",
        "url": "https://github.com/Tripwire/octagon/pull/139"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MjkzMDMzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MjkzMDMzNg==",
      "body": "nice.  circle let's you SSH into their builds.  i hacked around and found a bad env var.  this next commit should produce a pristine post.  if it does, ready to review formally.  apologies all on the tagging for review, then the silent build failure.\r\n\r\nlooks like GH doesn't have a way to remove reviewers, otherwise i would have pulled y'all off while i was debugging.",
      "createdAt": "2017-12-20T00:40:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTU5MjkzNzE0",
        "title": "Feat/send static site from circle",
        "url": "https://github.com/Tripwire/octagon/pull/141"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1MjkzNDAyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1MjkzNDAyMQ==",
      "body": "@andrewleyva @ggascoigne, seeking re-approval from new commits.",
      "createdAt": "2017-12-20T01:04:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTU5MjkzNzE0",
        "title": "Feat/send static site from circle",
        "url": "https://github.com/Tripwire/octagon/pull/141"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NDU5MTM1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NDU5MTM1OA==",
      "body": "if you want your renderer process to use actual node or electron APIs, you'll need something like [this](https://www.npmjs.com/package/electron-renderer-react-scripts-target)",
      "createdAt": "2017-12-31T08:16:57Z",
      "issue": {
        "id": "MDU6SXNzdWUyODA4MzIyNTM=",
        "title": "How to use react-scripts in combination with electron?",
        "url": "https://github.com/facebook/create-react-app/issues/3575"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NTE5MTc2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NTE5MTc2OQ==",
      "body": "You don't work, and it's your fault!! ;) jk thx\n\nOn Wed, Jan 3, 2018 at 4:51 PM, Josh Sleeper <notifications@github.com>\nwrote:\n\n> problem\n>\n> windows is like... nah.\n> [image: image]\n> <https://user-images.githubusercontent.com/849941/34546067-4e92fe4a-f0a6-11e7-8380-f5be8e4fc8b0.png>\n> solution\n>\n> ask it nicely? idk\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dino-dna/clipster/issues/1>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA9O_S2aY7DJCU2Dg1mCVMXC2dnedWrRks5tHCCFgaJpZM4RSchi>\n> .\n>\n",
      "createdAt": "2018-01-04T03:39:40Z",
      "issue": {
        "id": "MDU6SXNzdWUyODU4NTI3MDc=",
        "title": "it ain't work",
        "url": "https://github.com/dino-dna/clipster/issues/1"
      },
      "repository": {
        "nameWithOwner": "dino-dna/clipster"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NTE5NTQ5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NTE5NTQ5OQ==",
      "body": "fixed in 5171f63",
      "createdAt": "2018-01-04T04:18:42Z",
      "issue": {
        "id": "MDU6SXNzdWUyODU4NTI3MDc=",
        "title": "it ain't work",
        "url": "https://github.com/dino-dna/clipster/issues/1"
      },
      "repository": {
        "nameWithOwner": "dino-dna/clipster"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NTM0NjM3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NTM0NjM3MQ==",
      "body": "or, port the general purpose change emitter (including stateful bits) into the neon/rust impl",
      "createdAt": "2018-01-04T17:32:00Z",
      "issue": {
        "id": "MDU6SXNzdWUyODYwNTg1NzY=",
        "title": "todo: improved osx clipboard change detection",
        "url": "https://github.com/dino-dna/clipster/issues/3"
      },
      "repository": {
        "nameWithOwner": "dino-dna/clipster"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NTQ2NTAwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NTQ2NTAwNg==",
      "body": "thanks @Aldekein!",
      "createdAt": "2018-01-05T03:35:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODgxNDE5Nzk=",
        "title": "Added rightclick event to tray, that emits giving you ability to act upon it",
        "url": "https://github.com/max-mapper/menubar/pull/143"
      },
      "repository": {
        "nameWithOwner": "max-mapper/menubar"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NjAzNDI2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NjAzNDI2OA==",
      "body": "Hi @doowb, give me a couple hours, I'm at the dr!  Thx for following up",
      "createdAt": "2018-01-08T17:25:52Z",
      "issue": {
        "id": "MDU6SXNzdWUyODY2NzU2MDU=",
        "title": "pure usage swallows my ability to send SIGINT",
        "url": "https://github.com/enquirer/prompt-checkbox/issues/2"
      },
      "repository": {
        "nameWithOwner": "enquirer/prompt-checkbox"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NjA1ODQ3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NjA1ODQ3OQ==",
      "body": "https://github.com/cdaringe/prompt-no-exit",
      "createdAt": "2018-01-08T18:51:28Z",
      "issue": {
        "id": "MDU6SXNzdWUyODY2NzU2MDU=",
        "title": "pure usage swallows my ability to send SIGINT",
        "url": "https://github.com/enquirer/prompt-checkbox/issues/2"
      },
      "repository": {
        "nameWithOwner": "enquirer/prompt-checkbox"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NjA1OTY4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NjA1OTY4Mg==",
      "body": "> Also, which version of node and OS are you using?\r\n\r\nnode@9.3.0\r\nosx@high-sierra",
      "createdAt": "2018-01-08T18:55:50Z",
      "issue": {
        "id": "MDU6SXNzdWUyODY2NzU2MDU=",
        "title": "pure usage swallows my ability to send SIGINT",
        "url": "https://github.com/enquirer/prompt-checkbox/issues/2"
      },
      "repository": {
        "nameWithOwner": "enquirer/prompt-checkbox"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NjA4NjA3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NjA4NjA3NQ==",
      "body": "I meant using this PKG directly vs enquirer.  If you run the example you can see that even after responses are collected (prompt `run()` resolves and I have user input), you can't sigint the process.  I keep the process up artificially with a time out such that a tester can easily verify this.  By the time execution has reached that point, I should be able to sigint out out of node.  Instead, however, the signal is swallowed as a side effect of running the prompt.  I would think such a side effect would be removed by the time the promise resovles and user input is captured",
      "createdAt": "2018-01-08T20:27:48Z",
      "issue": {
        "id": "MDU6SXNzdWUyODY2NzU2MDU=",
        "title": "pure usage swallows my ability to send SIGINT",
        "url": "https://github.com/enquirer/prompt-checkbox/issues/2"
      },
      "repository": {
        "nameWithOwner": "enquirer/prompt-checkbox"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NjA5Mzc1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NjA5Mzc1Nw==",
      "body": "cool, ya, `prompt.ui.close()` was what i was looking for.  thx!\r\n\r\n> I'm open to alternatives if you have suggestions or want to do a pull request\r\n\r\ni'm still digesting this.  part of me feels that when the prompt has finished... it really _should  be finished_ unless explicitly told to do so otherwise.  sounds like `prompt-*` modules were really designed for enquirer interop though, and took defaults that worked for that module's context.\r\n\r\nwe should probably document `ui.close` in the README at the least, as project header states it can be used standalone.  i did not expect it to effect my environment after i finished getting user input.\r\n  ",
      "createdAt": "2018-01-08T20:56:28Z",
      "issue": {
        "id": "MDU6SXNzdWUyODY2NzU2MDU=",
        "title": "pure usage swallows my ability to send SIGINT",
        "url": "https://github.com/enquirer/prompt-checkbox/issues/2"
      },
      "repository": {
        "nameWithOwner": "enquirer/prompt-checkbox"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1Njc4MTAyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1Njc4MTAyNg==",
      "body": "woo hoo! 🎉  +1. thx",
      "createdAt": "2018-01-11T00:10:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTYyMjYxNjA5",
        "title": "fix(Webjerk): Updated markdown file example titles",
        "url": "https://github.com/Tripwire/octagon/pull/150"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1Njg0MTg3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1Njg0MTg3Nw==",
      "body": "i had turned off my gkk instance. i recently revived gk on a ton of projects--ill be firing it back up again soon!  let's close it until i can reproduce. sorry for keepin it open for so long!",
      "createdAt": "2018-01-11T06:46:20Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjg5MjE4MjU=",
        "title": "PRs not merged, instead error reported in comment \"Error: Not Found\"",
        "url": "https://github.com/greenkeeper-keeper/hapi-greenkeeper-keeper/issues/140"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/hapi-greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1Njg0MjMyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1Njg0MjMyNA==",
      "body": "congrats! 👶 ",
      "createdAt": "2018-01-11T06:49:13Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjg5MjE4MjU=",
        "title": "PRs not merged, instead error reported in comment \"Error: Not Found\"",
        "url": "https://github.com/greenkeeper-keeper/hapi-greenkeeper-keeper/issues/140"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/hapi-greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NzA0ODc5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NzA0ODc5MA==",
      "body": "1. the URI above has been moved to: https://docs.pipenv.org/advanced/#custom-virtual-environment-location\r\n1. i know this issue is closed, but @techalchemy, users here have said \"we want this\" and youve said \"no\", but what's missing from the conversation is a compelling \"why we want this\" case.  i want this because i collaborate with a team using a common set of tools and configs.  we often share our development configuration, and we often inspect our site-packages.   a unique location of the env on each system prevents sharing of our config. having the venv local to your project makes collaboration w/ teamsters one step easier (no ENV config), and, adds stupid-simple clarity to exactly which py you're using **and** the state of the env.  the python community seems to be somewhat hostile in my experience to the node community (🤕) but `npm`, `yarn`, etc do this at least w/ dependencies, and it's a really excellent model.  our teams use a smattering of tech stacks, and python's bootstrapping & packaging ergonomics have been a real headache.  pipenv seems like a huge improvement, but little issues like this my peers and i feel add complexity when `PIPENV_VENV_IN_PROJECT=1` seems like a really good dev UX default.  thanks for your time.  keep up the good work ",
      "createdAt": "2018-01-11T20:17:23Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzI1Mzk3MjQ=",
        "title": "How can I get a predictable virtualenv dirname?",
        "url": "https://github.com/pypa/pipenv/issues/1049"
      },
      "repository": {
        "nameWithOwner": "pypa/pipenv"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1NzA5NDU2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1NzA5NDU2OQ==",
      "body": "@joshfriend, my problem is your problem, almost verbatim.  i must have not conveyed that clearly :/\r\n\r\n@techalchemy, thx for the response.  to be clear, i wasn't advocating for additional functionality--rather, i was (apparently poorly 😄 ) advocating a +1 for @joshfriend's claim\r\n\r\n> \"PIPENV_VENV_IN_PROJECT should be default!\"",
      "createdAt": "2018-01-11T23:23:50Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzI1Mzk3MjQ=",
        "title": "How can I get a predictable virtualenv dirname?",
        "url": "https://github.com/pypa/pipenv/issues/1049"
      },
      "repository": {
        "nameWithOwner": "pypa/pipenv"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1ODE3ODY2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1ODE3ODY2NQ==",
      "body": "ya, but isn't an easy and great developer experience important?  \"Go download, install, and learn 3 tools (4 if you rightfully including publishing)  to write a python library\" seems like a tall order.  it seems like the runtime and the package manager alone should suffice.  python tends to be keys included in code only, not in UX.  It seems like pipenv is the perfect place to rectify that",
      "createdAt": "2018-01-17T02:50:44Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzI1Mzk3MjQ=",
        "title": "How can I get a predictable virtualenv dirname?",
        "url": "https://github.com/pypa/pipenv/issues/1049"
      },
      "repository": {
        "nameWithOwner": "pypa/pipenv"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1ODUyMzkxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1ODUyMzkxNg==",
      "body": "Thx for the follow up.  In my example however, there is not a work around.  I had to pick a different implementation.  Do you concur that first presented example is valid DOM?  if so, do you think it should be supported?  I'm not advocating strongly one way, just trying to understand the state-of-the-world",
      "createdAt": "2018-01-18T03:08:26Z",
      "issue": {
        "id": "MDU6SXNzdWUyODkxNzE1ODI=",
        "title": "<path>{children}</path> not rendered, crashes w/ error",
        "url": "https://github.com/choojs/nanohtml/issues/105"
      },
      "repository": {
        "nameWithOwner": "choojs/nanohtml"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1OTA0MDIwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1OTA0MDIwMQ==",
      "body": "Of course. If AFK ATM but I'll provide a complete runnable",
      "createdAt": "2018-01-19T17:49:36Z",
      "issue": {
        "id": "MDU6SXNzdWUyODkxNzE1ODI=",
        "title": "<path>{children}</path> not rendered, crashes w/ error",
        "url": "https://github.com/choojs/nanohtml/issues/105"
      },
      "repository": {
        "nameWithOwner": "choojs/nanohtml"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1OTA5NTYxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1OTA5NTYxOQ==",
      "body": "https://github.com/cdaringe/svg-woes\r\n\r\n^ `npm start`",
      "createdAt": "2018-01-19T21:35:30Z",
      "issue": {
        "id": "MDU6SXNzdWUyODkxNzE1ODI=",
        "title": "<path>{children}</path> not rendered, crashes w/ error",
        "url": "https://github.com/choojs/nanohtml/issues/105"
      },
      "repository": {
        "nameWithOwner": "choojs/nanohtml"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1OTI3Mzg4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1OTI3Mzg4OA==",
      "body": "done, rebased commit",
      "createdAt": "2018-01-21T19:34:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY0MTU5MDgx",
        "title": "docs(debugging): recommend skipFiles",
        "url": "https://github.com/avajs/ava/pull/1644"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1OTg2MzY5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1OTg2MzY5Ng==",
      "body": "woof. thats embarrassing ;)  would you an accept a PR to do a runtime assertion or two on the input to bookshelf?",
      "createdAt": "2018-01-23T17:17:35Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTA3MzAwMzI=",
        "title": "SQL query missing table name and fails",
        "url": "https://github.com/bookshelf/bookshelf/issues/1751"
      },
      "repository": {
        "nameWithOwner": "bookshelf/bookshelf"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM1OTkwOTM3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM1OTkwOTM3Mw==",
      "body": "@antoinejuhel, i'll get in the better habit of tagging UX PRs accordingly.",
      "createdAt": "2018-01-23T19:51:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY0MzkzNjUw",
        "title": "feat(menu): styling for vertical menu",
        "url": "https://github.com/Tripwire/octagon/pull/152"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTAyOTAxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTAyOTAxNw==",
      "body": "@novemberborn, you're an 👼 . can't wait to test this out!",
      "createdAt": "2018-01-28T00:54:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjYyNTY5NjE=",
        "title": "No transpile option",
        "url": "https://github.com/avajs/ava/issues/1556"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTE0MzQzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTE0MzQzMg==",
      "body": "Hmm...\r\n\r\n- i installed the latest commit directly from github,\r\n- ran `yarn` (observed the request hit GH, though the gif below is too fast moving :))\r\n- configured ava\r\n- and ran the test\r\n\r\n```json5\r\n// package.json\r\n  \"ava\": {\r\n    \"options\": {\r\n      \"compileEnhancements\": false\r\n    }\r\n  }\r\n``` \r\n\r\nsure enough, breakpoints still jump around, leading me to think something is still being transpiled (or built, run, and sourcemapped at least)\r\n\r\n![still-transpiling mov](https://user-images.githubusercontent.com/1003261/35494728-75e9b61c-0471-11e8-88d7-dd054e54388c.gif)\r\n",
      "createdAt": "2018-01-29T05:24:44Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjYyNTY5NjE=",
        "title": "No transpile option",
        "url": "https://github.com/avajs/ava/issues/1556"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTM5MDA0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTM5MDA0OQ==",
      "body": "& https://github.com/Tripwire/octagon/pull/159",
      "createdAt": "2018-01-29T21:19:44Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTI1Mjk1NzA=",
        "title": "Octagon not publishing to NPM (only Gh)",
        "url": "https://github.com/Tripwire/octagon/issues/158"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTQyMDY1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTQyMDY1Mw==",
      "body": "as pair w/ @andrewleyva ",
      "createdAt": "2018-01-29T23:17:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY1ODIwNTIz",
        "title": "fix(ci): patch sem-rel",
        "url": "https://github.com/Tripwire/octagon/pull/159"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTQyMjI3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTQyMjI3Mw==",
      "body": "hey @novemberborn, whoops, sorry for that!\r\n\r\neven with\r\n\r\n```js\r\n\"ava\": {\r\n  \"babel\": false,\r\n  \"compileEnhancements\": false\r\n}\r\n```\r\n\r\ni'm still seeing the jumpiness.  is the file still being meddled with or source mapped somehow?",
      "createdAt": "2018-01-29T23:24:28Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjYyNTY5NjE=",
        "title": "No transpile option",
        "url": "https://github.com/avajs/ava/issues/1556"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTQzMjY0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTQzMjY0Ng==",
      "body": "wat! no way! oh man, i've been manually installing it for so long! and copying boilerplate calls directly into it. then again, ive been using 6 majors behind for quite a while...",
      "createdAt": "2018-01-30T00:18:10Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTI2MDUwMDU=",
        "title": "barebones usage in readme",
        "url": "https://github.com/semantic-release/release-notes-generator/issues/59"
      },
      "repository": {
        "nameWithOwner": "semantic-release/release-notes-generator"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTcxNDI3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTcxNDI3MA==",
      "body": "Thx guys.  You rock",
      "createdAt": "2018-01-30T19:54:03Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTI2MDUwMDU=",
        "title": "barebones usage in readme",
        "url": "https://github.com/semantic-release/release-notes-generator/issues/59"
      },
      "repository": {
        "nameWithOwner": "semantic-release/release-notes-generator"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTc3MjUwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTc3MjUwNw==",
      "body": "- 2 hrs/month\r\n- 1-5 complexity commit\r\n \r\nif we want to do organized triage sessions on IRC/gitter/whatever, that would be the most motivating.  i'm not intimate w/ the source, but willing to learn.\r\n",
      "createdAt": "2018-01-30T23:39:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY2MDkxMDQy",
        "title": "Roadmap & guidelines for contributors",
        "url": "https://github.com/winstonjs/winston/pull/1197"
      },
      "repository": {
        "nameWithOwner": "winstonjs/winston"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTg0MzE0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTg0MzE0NQ==",
      "body": "hi @novemberborn, thx for the continued support.  indeed, i was using nyc.  after removing nyc, however, the issue persists.  sorry i was late to see this message.  im out for a few days for surgery but will be back soon.  i'll try and reach out to you on gitter then.",
      "createdAt": "2018-01-31T07:06:33Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjYyNTY5NjE=",
        "title": "No transpile option",
        "url": "https://github.com/avajs/ava/issues/1556"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTg0MzYxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTg0MzYxOQ==",
      "body": "OR, here's a teeny tiny reproduction: https://github.com/cdaringe/vscode-ava-no-transpile-party-time\r\n\r\nit's [wired up](https://github.com/cdaringe/vscode-ava-no-transpile-party-time/blob/master/package.json#L23-L26) per instruction.  clone, `npm i/yarn`, then readme steps!",
      "createdAt": "2018-01-31T07:09:09Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjYyNTY5NjE=",
        "title": "No transpile option",
        "url": "https://github.com/avajs/ava/issues/1556"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MTg0NDU4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MTg0NDU4Nw==",
      "body": "Fixed!",
      "createdAt": "2018-01-31T07:14:59Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTI1Mjk1NzA=",
        "title": "Octagon not publishing to NPM (only Gh)",
        "url": "https://github.com/Tripwire/octagon/issues/158"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MjE0MDE2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MjE0MDE2OQ==",
      "body": "Ah, good call.  Maybe should make that configurable via the env!",
      "createdAt": "2018-02-01T02:39:04Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTMxMzE3NDU=",
        "title": "Universal app run in browser and renderer process.",
        "url": "https://github.com/cdaringe/electron-renderer-react-scripts-target/issues/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/electron-renderer-react-scripts-target"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2Mjk2NTE2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2Mjk2NTE2OA==",
      "body": "thanks :)",
      "createdAt": "2018-02-05T02:27:21Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTExMjMyMjM=",
        "title": "question: proxy to api server in development server mode",
        "url": "https://github.com/choojs/bankai/issues/398"
      },
      "repository": {
        "nameWithOwner": "choojs/bankai"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MzYxMjcyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MzYxMjcyMA==",
      "body": "neat-o. let's move the convo over to #413!",
      "createdAt": "2018-02-07T00:23:46Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTQyNTkxOTY=",
        "title": "feature request: user provided state in bankai SSR",
        "url": "https://github.com/choojs/bankai/issues/410"
      },
      "repository": {
        "nameWithOwner": "choojs/bankai"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MzkyNzE4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MzkyNzE4NA==",
      "body": "woof, ya.  i'm not used to seeing it `.github`.  i generally check the root! sending a patch now...",
      "createdAt": "2018-02-07T22:07:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY3NTIyNTgz",
        "title": "docs(README): clarify how to run tests",
        "url": "https://github.com/bookshelf/bookshelf/pull/1757"
      },
      "repository": {
        "nameWithOwner": "bookshelf/bookshelf"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MzkzMDY4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MzkzMDY4NQ==",
      "body": "easy peasy.  how about that?  better? :)",
      "createdAt": "2018-02-07T22:20:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY3NTIyNTgz",
        "title": "docs(README): clarify how to run tests",
        "url": "https://github.com/bookshelf/bookshelf/pull/1757"
      },
      "repository": {
        "nameWithOwner": "bookshelf/bookshelf"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2MzkzNjA1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2MzkzNjA1NA==",
      "body": "`knex` returns one of many _dialect_ objects, of which there is no common base class/proto.  therefore, a direct type check on the passed `knex` obj isn't an option.   however, all dialects use the same [client](https://github.com/tgriesser/knex/blob/master/src/client.js), which is a robust and easy assertion.",
      "createdAt": "2018-02-07T22:41:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY3NTIwMzUz",
        "title": "feat(constructor): detect knex on construction",
        "url": "https://github.com/bookshelf/bookshelf/pull/1756"
      },
      "repository": {
        "nameWithOwner": "bookshelf/bookshelf"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDE4MjU0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDE4MjU0Mg==",
      "body": "Does not every open folder context have a workspace? For example, I created a workspace settings file, and the above still happens.  Perhaps you imply a multi root workspace?  I will try when I'm back at my keyboard :)",
      "createdAt": "2018-02-08T17:14:34Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTUzOTQ3OTc=",
        "title": "\"Open Workspace Configuration File\" does nothing",
        "url": "https://github.com/microsoft/vscode/issues/43167"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDMwNzY1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDMwNzY1OA==",
      "body": "this looks good!  i feel like a test is warranted for the feature.",
      "createdAt": "2018-02-09T01:35:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY3NjI5OTQ3",
        "title": "Inject server rendered app at mount point.",
        "url": "https://github.com/choojs/bankai/pull/414"
      },
      "repository": {
        "nameWithOwner": "choojs/bankai"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDMwOTM4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDMwOTM4NA==",
      "body": "no harm in eager merging and tidying later no?  this is the _good stuff!_",
      "createdAt": "2018-02-09T01:45:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY2MDU2MTQy",
        "title": "add .github/ dir",
        "url": "https://github.com/choojs/bankai/pull/405"
      },
      "repository": {
        "nameWithOwner": "choojs/bankai"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDMxMDU1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDMxMDU1Ng==",
      "body": "hi amigos, any time to poke at this yet?  i really want to emphasize again that i'm ok with this PR being  throw-away-ready if teamsters have different ideas.  im just eager to get the feature in or on the roadmap!  thx",
      "createdAt": "2018-02-09T01:52:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY3NTYzMTU0",
        "title": "feat(ssr): optionally render with app state",
        "url": "https://github.com/choojs/bankai/pull/413"
      },
      "repository": {
        "nameWithOwner": "choojs/bankai"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDMxOTU5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDMxOTU5NQ==",
      "body": "confirmed, you must have added _another_ folder to the workspace.  im thinking @bpasero intended to imply that you must have a **multi root** w/s ",
      "createdAt": "2018-02-09T02:49:55Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTUzOTQ3OTc=",
        "title": "\"Open Workspace Configuration File\" does nothing",
        "url": "https://github.com/microsoft/vscode/issues/43167"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDMzOTkzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDMzOTkzMA==",
      "body": "ah, this just got me! ",
      "createdAt": "2018-02-09T05:34:40Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzA5MjU5MjE=",
        "title": "Use duck-typing on `pg` objects rather than instanceof",
        "url": "https://github.com/graphile/graphile-engine/issues/114"
      },
      "repository": {
        "nameWithOwner": "graphile/graphile-engine"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDU1MTkyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDU1MTkyOA==",
      "body": ">  we probably need to know the route\r\n\r\nagreed. 👍 \r\n\r\n> `compiler.documents('index.html', { initial: 'state' }, function () {})`\r\n\r\nive been been hacking around on this for a bit now.  im still not sure 100% how to best link all of this up.\r\n\r\nit's as though we want each route that lands in the graph to also have an accompanying `initial-state` member in the graph as well.  if we were to use `compiler.documents(...)` API you suggest, we may have to find a way to tap into the graph and change that `initial-state` Buffer.  additionally, we would need to do something similar with a hook in the compiler options for the user to update that value, then render from the graph data in `graph-document`.  it seems like if bankai wants to render from the graph, we should go full graph, and not have a mixed mode of getting input into the render pipeline, which was what i my PR was originally doing.\r\n\r\ninitial-state ➡️  graph.  that sound right?\r\n\r\nim a little stuck.  maybe a 🚶 will help :)",
      "createdAt": "2018-02-09T20:15:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY3NTYzMTU0",
        "title": "feat(ssr): optionally render with app state",
        "url": "https://github.com/choojs/bankai/pull/413"
      },
      "repository": {
        "nameWithOwner": "choojs/bankai"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDYxMjY2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDYxMjY2Mw==",
      "body": "perhaps as a workaround:\r\n\r\n```sql\r\ncreate function search_topics(search text, off int) {\r\n  ...\r\n  offset off\r\n  limit 100\r\n}\r\n```\r\n\r\n`searchTopics(search: \"c\", off: 5) {`\r\n\r\nmay work.",
      "createdAt": "2018-02-10T01:11:29Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTYwNTg2MTg=",
        "title": "query error on unordered set when using ordered db function",
        "url": "https://github.com/graphile/graphile-engine/issues/155"
      },
      "repository": {
        "nameWithOwner": "graphile/graphile-engine"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDYzNjMyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDYzNjMyMA==",
      "body": "This makes good sense.  Thanks",
      "createdAt": "2018-02-10T08:38:53Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTYwNTg2MTg=",
        "title": "query error on unordered set when using ordered db function",
        "url": "https://github.com/graphile/graphile-engine/issues/155"
      },
      "repository": {
        "nameWithOwner": "graphile/graphile-engine"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NDYzNjUxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NDYzNjUxMg==",
      "body": "Thanks.  I'm coming back to using PG for the first time in probably 2.5-3 years.  Stuff is fuzzy.  Thanks for the breakdown",
      "createdAt": "2018-02-10T08:43:17Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTYwNTI0MDM=",
        "title": "documentation/question: query escaping",
        "url": "https://github.com/graphile/graphile-engine/issues/154"
      },
      "repository": {
        "nameWithOwner": "graphile/graphile-engine"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NTAzOTYzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NTAzOTYzMQ==",
      "body": "Should probably distinguish level versus levelName  too :)",
      "createdAt": "2018-02-12T19:45:34Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTY0OTQwMzU=",
        "title": "log level missing from JSON kibana logger",
        "url": "https://github.com/elastic/kibana/issues/16685"
      },
      "repository": {
        "nameWithOwner": "elastic/kibana"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NTQxMTE2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NTQxMTE2NQ==",
      "body": "im ok with removing `not-allowed` and moving to `initial` or whatever",
      "createdAt": "2018-02-13T21:32:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTY4NzAwMDQ=",
        "title": "The pagination control is misusing the not-allowed cursor",
        "url": "https://github.com/Tripwire/octagon/issues/167"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NTgyNTIzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NTgyNTIzMQ==",
      "body": "i'm not saying it's worth it, but i _wonder_ if it's scripting the addition of the className to all root component nodes is a good idea?  i dont like that there's magic (e.g. a hidden class not shown in code), but it's worth thinking about.",
      "createdAt": "2018-02-15T04:54:08Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY5MjUwODI4",
        "title": "feat(namespacing): Namespace Native Octagon Components to avoid collisions",
        "url": "https://github.com/Tripwire/octagon/pull/168"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NjQxNTQ5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NjQxNTQ5OA==",
      "body": "doh!  upgrade the client.",
      "createdAt": "2018-02-17T04:23:30Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTc5NzcxMTM=",
        "title": "Upgrade to 16.x from 15.x produces networks errors",
        "url": "https://github.com/factoriotools/factorio-docker/issues/132"
      },
      "repository": {
        "nameWithOwner": "factoriotools/factorio-docker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NjQ2NzcxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NjQ2NzcxNw==",
      "body": ":tada:",
      "createdAt": "2018-02-17T20:04:30Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzA5MjU5MjE=",
        "title": "Use duck-typing on `pg` objects rather than instanceof",
        "url": "https://github.com/graphile/graphile-engine/issues/114"
      },
      "repository": {
        "nameWithOwner": "graphile/graphile-engine"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NzA4ODUzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NzA4ODUzMg==",
      "body": "all of these commits need to be rebased/squashed into the semantic-release friendly format",
      "createdAt": "2018-02-20T19:20:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY5MjUwODI4",
        "title": "feat(namespacing): Namespace Native Octagon Components to avoid collisions",
        "url": "https://github.com/Tripwire/octagon/pull/168"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NzE4MTQ0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NzE4MTQ0MQ==",
      "body": "hey andrew, the commits still need the re work.  i suppose id accept \"squash and merge\" from GitHub, but would prefer the commit(s) tidied in advanced",
      "createdAt": "2018-02-21T01:24:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY5MjUwODI4",
        "title": "feat(namespacing): Namespace Native Octagon Components to avoid collisions",
        "url": "https://github.com/Tripwire/octagon/pull/168"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2Nzc5MzAzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2Nzc5MzAzMw==",
      "body": "@andrewleyva, i submitted a bunch of remarks, but they are hidden, attached to old commits.  can you still take a peek and respond to them? ",
      "createdAt": "2018-02-22T19:29:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTcwNjQwNDA3",
        "title": "docs(contributing.md): Added Basic Acceptance Criteria (and some cleanup)",
        "url": "https://github.com/Tripwire/octagon/pull/169"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2NzgxNzA3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2NzgxNzA3NQ==",
      "body": "i queued it up:\r\n\r\n```js\r\n  if (shouldMinify) {\r\n    b.plugin(tinyify)\r\n    b.on('split.pipeline', function (pipeline) {\r\n      tinyify.applyToPipeline(pipeline, b._options)\r\n    })\r\n  } else {\r\n    b.plugin(envify) // i required it in, above\r\n  }\r\n```\r\n\r\nand npm linked it into create choo app.  the issue still occurs.  I confirmed that the envify code block is being hit as well.  any other ideas?",
      "createdAt": "2018-02-22T20:48:35Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTg0NDYwMTk=",
        "title": "envify not wiring in process env vars correctly",
        "url": "https://github.com/choojs/bankai/issues/431"
      },
      "repository": {
        "nameWithOwner": "choojs/bankai"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM2OTI5MDgxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM2OTI5MDgxMQ==",
      "body": ":tada:",
      "createdAt": "2018-02-28T16:13:00Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTg0NDYwMTk=",
        "title": "envify not wiring in process env vars correctly",
        "url": "https://github.com/choojs/bankai/issues/431"
      },
      "repository": {
        "nameWithOwner": "choojs/bankai"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NDY0ODc4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NDY0ODc4Mg==",
      "body": "```js\r\n    io.on('connect', async (ctx, next) => {\r\n```\r\n\r\nthe socket is there in `ctx.socket`",
      "createdAt": "2018-03-20T15:49:36Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDYzMzQ5ODk=",
        "title": "Can't get it to work",
        "url": "https://github.com/LnsooXD/koa-socket.io/issues/6"
      },
      "repository": {
        "nameWithOwner": "LnsooXD/koa-socket.io"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NDgzMjgwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NDgzMjgwOQ==",
      "body": "i am running on PG10 alpine in docker and got it running, 1st try.  that never happens! ;)  @gorbypark, i used this guide for extra info: http://bjorngylling.com/2011-04-13/postgres-listen-notify-with-node-js.html. not sure if you'll find it helpful or not.",
      "createdAt": "2018-03-21T04:43:00Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTgzOTIzMjE=",
        "title": "Connection successful, no events",
        "url": "https://github.com/voxpelli/node-pg-pubsub/issues/17"
      },
      "repository": {
        "nameWithOwner": "voxpelli/node-pg-pubsub"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NTU1MDc1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NTU1MDc1Mw==",
      "body": "maybe something like JSDoc or typings files?",
      "createdAt": "2018-03-23T05:38:25Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDM3NzI2MzY=",
        "title": "More complete API documentation",
        "url": "https://github.com/FHIR/fhir.js/issues/87"
      },
      "repository": {
        "nameWithOwner": "FHIR/fhir.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NTU1NTc1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NTU1NTc1Ng==",
      "body": "greenkeeper-keeper/meta#9 is close enough. closing this issue to consolidate any conversation over there.  apologies for missing that",
      "createdAt": "2018-03-23T06:14:17Z",
      "issue": {
        "id": "MDU6SXNzdWUzMDc1MjU5MDY=",
        "title": "idea: automatically configure webhooks for all users projects",
        "url": "https://github.com/greenkeeper-keeper/hapi-greenkeeper-keeper/issues/471"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/hapi-greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NjMwMzA2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NjMwMzA2Mw==",
      "body": "~closes https://github.com/Tripwire/octagon/issues/172~\r\n\r\npartially fixes #172.  still need to remap examples to the build",
      "createdAt": "2018-03-26T20:36:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTc3NTM3MzQy",
        "title": "Fix Checkbox import path",
        "url": "https://github.com/Tripwire/octagon/pull/173"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NjMwMzA4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NjMwMzA4Mg==",
      "body": "+1",
      "createdAt": "2018-03-26T20:36:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTc3NTM3MzQy",
        "title": "Fix Checkbox import path",
        "url": "https://github.com/Tripwire/octagon/pull/173"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NjMxMTk4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NjMxMTk4NA==",
      "body": "Per team discussion, all examples/tests should pull from shipped artifacts.",
      "createdAt": "2018-03-26T21:07:28Z",
      "issue": {
        "id": "MDU6SXNzdWUzMDUyODM5ODI=",
        "title": "Checkbox SUIR component imported from wrong path",
        "url": "https://github.com/Tripwire/octagon/issues/172"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NjMxNzQ4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NjMxNzQ4MA==",
      "body": "what did you end up using?",
      "createdAt": "2018-03-26T21:27:19Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDA5MDQyMDY=",
        "title": "Use official openjdk alpine image?",
        "url": "https://github.com/wurstmeister/kafka-docker/issues/151"
      },
      "repository": {
        "nameWithOwner": "wurstmeister/kafka-docker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NjMxODQ4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NjMxODQ4NA==",
      "body": "nice.  i see https://github.com/wurstmeister/kafka-docker/pull/290 now too",
      "createdAt": "2018-03-26T21:30:55Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDA5MDQyMDY=",
        "title": "Use official openjdk alpine image?",
        "url": "https://github.com/wurstmeister/kafka-docker/issues/151"
      },
      "repository": {
        "nameWithOwner": "wurstmeister/kafka-docker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NjMxOTcyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NjMxOTcyMw==",
      "body": "i'm not sure how the dockerhub builds are configured, but would this patch over previous release tags?  i use a slightly older version (currently supported from this project), and would want this goodness ASAP, not only on build-forward images.  thx! ",
      "createdAt": "2018-03-26T21:35:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTc3MzY1OTYw",
        "title": "Switch to openJDK (JRE) base image",
        "url": "https://github.com/wurstmeister/kafka-docker/pull/290"
      },
      "repository": {
        "nameWithOwner": "wurstmeister/kafka-docker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NjM2NDQ4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NjM2NDQ4Mw==",
      "body": "It's definitely not a bad practice. I have over 130 modules published in a different technology stack using the combined lib/bin strategy, and it's a wonderful optimization that simplifies development.  It's even all in JSON so I can parse it at runtime if desired, which ends up being incredibly useful frequently.  I ship libs, executables, or often both out of the same declaration file.  I will definitely agree that it's fair to want them separate--that's an opinion.  but a bad practice? I think that's subjective, and I also think it's incorrect.  Having to learn multiple formats  makes python development that much harder.",
      "createdAt": "2018-03-27T01:23:08Z",
      "issue": {
        "id": "MDU6SXNzdWUyODc5MDM1MzU=",
        "title": "documentation/question: package publishing",
        "url": "https://github.com/pypa/pipenv/issues/1288"
      },
      "repository": {
        "nameWithOwner": "pypa/pipenv"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NjM2NTAyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NjM2NTAyMg==",
      "body": "Edit--sorry i misread.  parsing setup probably indeed isn't worth the effort. But supporting some format that supports shipping software in both modalities is probably worth the investment",
      "createdAt": "2018-03-27T01:26:21Z",
      "issue": {
        "id": "MDU6SXNzdWUyODc5MDM1MzU=",
        "title": "documentation/question: package publishing",
        "url": "https://github.com/pypa/pipenv/issues/1288"
      },
      "repository": {
        "nameWithOwner": "pypa/pipenv"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NjkzMjM3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NjkzMjM3MA==",
      "body": "No, all of my react work was paused indefinitel :/",
      "createdAt": "2018-03-28T15:38:03Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjk3NzQ1MDA=",
        "title": "react-router-redux doesn't render routes on state change via devtools",
        "url": "https://github.com/remix-run/react-router/issues/5670"
      },
      "repository": {
        "nameWithOwner": "remix-run/react-router"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NzEyNTQ4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NzEyNTQ4Mw==",
      "body": "@andrewleyva, this issue is getting some heat.  if you have time to dig into it, that'd be very helpful.",
      "createdAt": "2018-03-29T05:24:42Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTcxMzQ1MTk=",
        "title": "Bundle size is too big",
        "url": "https://github.com/Tripwire/octagon/issues/120"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NzEyNjE5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NzEyNjE5Ng==",
      "body": "@youngbob found that his bundle was >100kBs.  i observed that ~~all of lodash and SUIR seem to get bundled just by including, say, a single checkbox.  diagnosing means tracing the import tree.  i believe webpack has some tooling to explain imports that would be helpful.  my `snitch` app also traces the dependency graph and explains imports.",
      "createdAt": "2018-03-29T05:29:26Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTcxMzQ1MTk=",
        "title": "Bundle size is too big",
        "url": "https://github.com/Tripwire/octagon/issues/120"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3NzgyMTExNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3NzgyMTExNw==",
      "body": "not urgent at all.  in fact, a lot of this is opinionated, so i won't be upset if you don't love all the changes.  feel free to modify as seen fit it you like any of it.",
      "createdAt": "2018-04-01T22:18:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTc4NzQ4ODAy",
        "title": "refactor/logging",
        "url": "https://github.com/voxpelli/node-pg-pubsub/pull/18"
      },
      "repository": {
        "nameWithOwner": "voxpelli/node-pg-pubsub"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3ODc2MjQyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3ODc2MjQyNw==",
      "body": "1. in retro, we **shouldn't add test hooks at all**, but we should just enable them.  let the consuming project use what they want.  for instance, we've been using cypress.io, which [likes `data-test`](https://docs.cypress.io/guides/core-concepts/test-runner.html#Uniqueness)\r\n    1. this removes a lot of the complexity you discuss\r\n1. for what you're calling `complex` components either:\r\n    1. our API should take blessed sub-components as children, rather than rendering them directly on behalf of the consumer (see ex1 below), or\r\n    1. make testers use other means (e.g. xpath) to get at what they need.\r\n        1. clearly we need to support testing, but getting a hook on every node is not sustainable\r\n\r\n\r\n```jsx\r\n// ex1\r\n\r\n// preferred, for agility reasons and so now they can put whatever attr's they want on it\r\n<Menu>\r\n  <Menu.Item data-test-hook='bananas'> ...</...>\r\n</Menu>\r\n\r\n// also OK\r\n<Menu items=[<Menu.Item data-test-hook='bananas'> ...</...>, ...] />\r\n\r\n// less preferred\r\n<Menu items=[{ pojo }, ... {} />\r\n```",
      "createdAt": "2018-04-04T22:15:48Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTA5MzM5NDk=",
        "title": "Data-hooks are added inconsistently to Octagon components. We need an agreed upon solution",
        "url": "https://github.com/Tripwire/octagon/issues/175"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3ODc2NDk3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3ODc2NDk3MA==",
      "body": "+1",
      "createdAt": "2018-04-04T22:27:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTc5NTI4Njk0",
        "title": "Revert \"feat(pkg): commonjs => es suir imports\"",
        "url": "https://github.com/Tripwire/octagon/pull/176"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3ODk5NDQ4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3ODk5NDQ4NQ==",
      "body": "Hey that's pretty cool!  That does all sorts of extra stuff beyond lint/formatting I noticed.  For instance I use Ava and don't transpile as part of my workflows.  ",
      "createdAt": "2018-04-05T16:23:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTcxNTY5NzY4",
        "title": "docs(README): suggest standard-damn-it for easy bootstrapping",
        "url": "https://github.com/sheerun/prettier-standard/pull/51"
      },
      "repository": {
        "nameWithOwner": "sheerun/prettier-standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3ODk5NDczMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3ODk5NDczMw==",
      "body": "The tool I suggest only installs configures what this package is already recommending.",
      "createdAt": "2018-04-05T16:24:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTcxNTY5NzY4",
        "title": "docs(README): suggest standard-damn-it for easy bootstrapping",
        "url": "https://github.com/sheerun/prettier-standard/pull/51"
      },
      "repository": {
        "nameWithOwner": "sheerun/prettier-standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3OTAxMDkyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3OTAxMDkyMQ==",
      "body": "ya, that's cool.  i disagree that X is better than Y, and consequently, I don't want it [in my node_modules](https://github.com/sheerun/modern-node/blob/master/package.json#L13).  i also don't want an extra step of indirection, calling into some other tool, versus calling exactly the tool i want (e.g. i don't want to call `modern format`, i want to call `prettier-standard`).  less indirection, less complication.\r\n\r\ni respect your opinion, and think modern node is fine for a lot of folks.  i may even try it sometime.  i've written a similar tool _twice_, [counsel](https://www.npmjs.com/package/counsel) & [shizam](https://www.npmjs.com/package/shizam).\r\n\r\nmy final bit is that your docs show how to install this pkg, and how best to configure it.  that's all this PR's tool does. automate the install & configure the various settings, nothing separate from what the README already recommends.  you're recommending a completely separate tool.  that's fine and good, it's just a different intent than helping users fulfill the recommendations of the README.\r\n\r\nfeel free to re-open as seen fit.",
      "createdAt": "2018-04-05T17:18:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTcxNTY5NzY4",
        "title": "docs(README): suggest standard-damn-it for easy bootstrapping",
        "url": "https://github.com/sheerun/prettier-standard/pull/51"
      },
      "repository": {
        "nameWithOwner": "sheerun/prettier-standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3OTg5NTc4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3OTg5NTc4Mg==",
      "body": "it looks like the ui login `POST`s to `/en-US/account/login`, if its worth anything.",
      "createdAt": "2018-04-09T21:12:49Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTI2ODg0ODE=",
        "title": "examples attempt to authorize against non-existent endpoint",
        "url": "https://github.com/splunk/splunk-sdk-javascript/issues/60"
      },
      "repository": {
        "nameWithOwner": "splunk/splunk-sdk-javascript"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM3OTkwMTQwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM3OTkwMTQwNw==",
      "body": "ah, i see.  thx.  bummer, now `request` is emitting `ECONNRESET`s w/out much context, from w/in the proxy server",
      "createdAt": "2018-04-09T21:35:09Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTI2ODg0ODE=",
        "title": "examples attempt to authorize against non-existent endpoint",
        "url": "https://github.com/splunk/splunk-sdk-javascript/issues/60"
      },
      "repository": {
        "nameWithOwner": "splunk/splunk-sdk-javascript"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4MDMyNjc4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4MDMyNjc4Mw==",
      "body": "Hey folks:\r\n\r\nI want to add support to using the \"Deployments\" strategy.  I was redirected here from #319.  Of the many ideas listed, deployments seems like it could offer the lowest cognitive overhead workflow, whilst maintaining deep capability, especially for those projects **where artifacts are created from multiple CI providers**.  I assume releasing with multiple CI providers _may not be?_ a 1st class support citizen for this project, but `gyp`, `neon`, `electron`, `nexe`, and other-js-projects-with-native-concerns have a lot to gain if it was supported.\r\n\r\nHypothetical workflow:\r\n\r\n- commit lands in GitHub\r\n  - CI providers race on build/tests steps only.  no _publish_ occurrs\r\n- GH app waits for CI GREENness\r\n- GH app computes if next version required, and generates tags when necessary\r\n  - event sent to CI providers, instructing to build/publish artifacts only\r\n  - one provider elected to be \"master\"\r\n    - master does npm publish, generates release notes, etc\r\n  - each provider publishes artifacts\r\n- GH app waits for all artifacts and done signal from master\r\n- GH finalizes the `semantic-release`\r\n\r\nI know that this may not be exactly what was envisioned with the GH application, but it's food for thought. thx!\r\n  ",
      "createdAt": "2018-04-11T04:53:41Z",
      "issue": {
        "id": "MDU6SXNzdWUyODUyODMzMDY=",
        "title": "GitHub app proposal/design/discussion",
        "url": "https://github.com/semantic-release/semantic-release/issues/585"
      },
      "repository": {
        "nameWithOwner": "semantic-release/semantic-release"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4Mjk3MDM2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4Mjk3MDM2Nw==",
      "body": "i have completely stripped react/react-dom from my project, and i still suffer these symptoms.  what debug data can i provide?",
      "createdAt": "2018-04-20T04:18:42Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTE4MzA1OTc=",
        "title": "Preact Compat works on Server Side but not on Client Side",
        "url": "https://github.com/preactjs/preact-compat/issues/416"
      },
      "repository": {
        "nameWithOwner": "preactjs/preact-compat"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4Mjk3MTYzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4Mjk3MTYzNw==",
      "body": "@vladnicula @horodnicdragos @timneutkens, i checked the referenced the preact-compat issue, and they say \"its probably an aliasing issue.\" i stepped thru my config, and confirmed all aliases point to `preact-compat`.  so that's good.  i also confirmed that there's no react* lib in my node_modules--just pure preact goodness.\r\n\r\ndo any of us have a working preact solution?  i also agree w--it's likely unrelated to anything ts.",
      "createdAt": "2018-04-20T04:26:45Z",
      "issue": {
        "id": "MDU6SXNzdWUzMDkwNjA4MzU=",
        "title": "Preact+Typescirpt not working on clean nextjs project (dependencies were not found)",
        "url": "https://github.com/vercel/next-plugins/issues/119"
      },
      "repository": {
        "nameWithOwner": "vercel/next-plugins"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4MzM5NjkxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4MzM5NjkxOA==",
      "body": "oh, nice! i ended up dumping localStorage, but looks like you already did it!  thanks!",
      "createdAt": "2018-04-22T17:11:47Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTY1MzY4OTc=",
        "title": "feature request: export my art in format that can be imported back into the app",
        "url": "https://github.com/jvalen/pixel-art-react/issues/14"
      },
      "repository": {
        "nameWithOwner": "jvalen/pixel-art-react"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4Mzc2MTMyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4Mzc2MTMyOA==",
      "body": "@layershifter, your prototype code was lookin pretty good!",
      "createdAt": "2018-04-24T00:09:14Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTY5NjEyMzA=",
        "title": "Toast/Notification Component",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/2525"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NDAwMDY5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NDAwMDY5MA==",
      "body": "I did a dive into the source, and I don't recall exactly what I saw, but essentially there's an unconfigurable bit that gets toggled.  That may have changed im 6.x/7.x?",
      "createdAt": "2018-04-24T16:43:23Z",
      "issue": {
        "id": "MDU6SXNzdWU3NTY1MjE3OQ==",
        "title": "Hide spy panel in Embed view",
        "url": "https://github.com/elastic/kibana/issues/3820"
      },
      "repository": {
        "nameWithOwner": "elastic/kibana"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NDA4Mjc4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NDA4Mjc4Nw==",
      "body": "@jtratner, sure that looks like it could work.  i may try that soon!\r\n\r\nto achieve the goal of  publishing a library and an executable script, the proposed solution requires **3 tools** and a handful of associated files, where neighboring technology stacks would require **1 tool** and 1 or 2 files.  every time i come back to python i feel lost about what the right tool for the job is.  easy_install, pip, pipenv, ...make, pip_install, venv/virtualenv, pyenv, etc.  they are all sorta kinda related, but all have unique roles.  in node, you need just one thing--`npm` (_debatably_ `nvm` too, but installing deps next to your source makes it much less relevant in comparison to python).  npm has warts, but the consolidation down to one simple tool for library authoring, executable authoring, and build scripts i feel has been underplayed in that community's explosive growth.\r\n\r\ni was hoping that this tool would be the `npm` of python, _and_ have the `[pyenv|nvm|etc]` bit figured out too.    instead, it's a sort of hybrid. in node speak, it's `nvm` + 1/3 of the `npm` client.  i gather from the above remarks that the python community has grown comfortable with what they have--throw more tools at it (with no snark intended).  this all works, but i think the dev experience would be improved by merging/consolidating all of the functionality.",
      "createdAt": "2018-04-24T21:16:32Z",
      "issue": {
        "id": "MDU6SXNzdWUyODc5MDM1MzU=",
        "title": "documentation/question: package publishing",
        "url": "https://github.com/pypa/pipenv/issues/1288"
      },
      "repository": {
        "nameWithOwner": "pypa/pipenv"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NDQ2MzEwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NDQ2MzEwOQ==",
      "body": "good call. thanks, ill amend this commit",
      "createdAt": "2018-04-25T23:16:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg0MTg1MjAx",
        "title": "feat(pkg): bump suir",
        "url": "https://github.com/Tripwire/octagon/pull/178"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NDQ2MzkwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NDQ2MzkwNw==",
      "body": "commit amended. eager merging with ggascoigne's good faith :)",
      "createdAt": "2018-04-25T23:20:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg0MTg1MjAx",
        "title": "feat(pkg): bump suir",
        "url": "https://github.com/Tripwire/octagon/pull/178"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NDQ2NTMzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NDQ2NTMzMw==",
      "body": "GO GO GADGET GREENKEEPER",
      "createdAt": "2018-04-25T23:29:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTIxMTcyNjA2",
        "title": "Update dependencies to enable Greenkeeper 🌴",
        "url": "https://github.com/Tripwire/octagon/pull/93"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NDUxMzI1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NDUxMzI1Mw==",
      "body": "the error on this one is weird.  i may stick a pin in it.  i think i did a deep dive on this once before and pinned it on a bad postcss plugin.",
      "createdAt": "2018-04-26T04:58:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg0MTkyMTE1",
        "title": "Update dependencies to enable Greenkeeper 🌴",
        "url": "https://github.com/Tripwire/octagon/pull/179"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NDUxMzM4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NDUxMzM4NA==",
      "body": "thx!",
      "createdAt": "2018-04-26T04:59:54Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTc3NTgwMjE=",
        "title": "no old tags available on docker hub`",
        "url": "https://github.com/zenato/puppeteer-renderer/issues/4"
      },
      "repository": {
        "nameWithOwner": "zenato/puppeteer-renderer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NTA3MjMxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NTA3MjMxNw==",
      "body": "we should probably rename `externalAttributeFilter` to `handledPropsFilter` or similar at some point.  the name is probably confusing for folks, _especially_ those new to react",
      "createdAt": "2018-04-27T19:34:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg0NzA4NTQ2",
        "title": "fix(TopNav): accept handled props on root nodes",
        "url": "https://github.com/Tripwire/octagon/pull/184"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NTEwMDY0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NTEwMDY0Mg==",
      "body": "@ggascoigne, i don't think `react` has an opinion on it.  i could be mistaken.",
      "createdAt": "2018-04-27T21:36:55Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg0NzA4NTQ2",
        "title": "fix(TopNav): accept handled props on root nodes",
        "url": "https://github.com/Tripwire/octagon/pull/184"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NTI4NzAzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NTI4NzAzNw==",
      "body": "not that opinions are being solicited, here's an opinion from a random guy on the web 🌎 .\r\n\r\ni've started with and injected TS into many projects over the past two years, only to gut it soon after.  it's been a **constant annoyance** with the same emotion you've expressed above.\r\n\r\nmy latest effort however, has been much more fruitful & painless.  my perception is that the community has grown, typings are updated much faster now, and there are provisions now to extend incomplete/broken interfaces so as to unblock users.\r\n\r\nlong-term TS-hater here, now siding on slightly TS positive opinion 👍\r\n\r\nTS editor support is >>  than flow too, which is something to consider!",
      "createdAt": "2018-04-29T22:30:54Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDQxODEyMTU=",
        "title": "How to import postgraphql in a TypeScript project?",
        "url": "https://github.com/graphile/crystal/issues/520"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NTQ3MjMxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NTQ3MjMxMQ==",
      "body": "cool.  im using it in the ExpertOps UI, so actually wanted it to work.",
      "createdAt": "2018-04-30T17:37:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg0NzYxNzM4",
        "title": "fix(LeftNav): remove evil styles, allow class extension",
        "url": "https://github.com/Tripwire/octagon/pull/187"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NTU4MjE3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NTU4MjE3NQ==",
      "body": "You're correct.  I thought I had already landed a patch for that...",
      "createdAt": "2018-05-01T02:11:07Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTkwODkyMTk=",
        "title": "Can still die to fluid/cargo wagons",
        "url": "https://github.com/cdaringe/nice-try-train/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/nice-try-train"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NTgxMTEyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NTgxMTEyNg==",
      "body": "@jayphelps, i landed https://github.com/redux-observable/redux-observable/pull/490 to hopefully check off `redux-form`",
      "createdAt": "2018-05-01T22:37:47Z",
      "issue": {
        "id": "MDU6SXNzdWUxNjg0OTcxMzQ=",
        "title": "Add more recipes",
        "url": "https://github.com/redux-observable/redux-observable/issues/87"
      },
      "repository": {
        "nameWithOwner": "redux-observable/redux-observable"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NTgyNDE0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NTgyNDE0OA==",
      "body": "@andrewleyva, can you review?",
      "createdAt": "2018-05-01T23:54:10Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTkzNjY0MTU=",
        "title": "default ui.button has margin-right applied to it",
        "url": "https://github.com/Tripwire/octagon/issues/189"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NTg2MzAzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NTg2MzAzMg==",
      "body": "Thanks!  Because we intend to execute https://github.com/Tripwire/octagon/issues/185, we are unlikely to pursue this.  The effort is much appreciated--sorry to incur it upon you!",
      "createdAt": "2018-05-02T04:41:29Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTkyNzM2MDg=",
        "title": "Default export missing SUIR components",
        "url": "https://github.com/Tripwire/octagon/issues/188"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjM3ODIyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjM3ODIyMw==",
      "body": "hey @RickButler, yes!  i support this!",
      "createdAt": "2018-05-03T17:43:31Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTk5MjUzNzY=",
        "title": "Looking to become maintainer",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/198"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjM3ODg5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjM3ODg5Mw==",
      "body": "@AmpersandJS/core-team 👀 ",
      "createdAt": "2018-05-03T17:45:46Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTk5MjUzNzY=",
        "title": "Looking to become maintainer",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/198"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjM4Mzc5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjM4Mzc5MA==",
      "body": "@RickButler, thanks for stepping up!  You've been added onto this project.",
      "createdAt": "2018-05-03T18:00:45Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTk5MjUzNzY=",
        "title": "Looking to become maintainer",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/198"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjQyOTUyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjQyOTUyNw==",
      "body": "this may not be super effective for the average consumer until:\r\n\r\n- https://github.com/Semantic-Org/Semantic-UI-React/issues/2589 merges, and\r\n- https://github.com/facebook/create-react-app/pull/4077 merges for CRA users",
      "createdAt": "2018-05-03T20:40:19Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTg1MzU0NzY=",
        "title": "migrate suir to a peer dependency",
        "url": "https://github.com/Tripwire/octagon/issues/185"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjQ0ODU2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjQ0ODU2Mg==",
      "body": "reopening against a different target.  targeting a WIP 11.x branch. staging various breaking changes there",
      "createdAt": "2018-05-03T21:52:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg1ODQ3NjE0",
        "title": "feat(pkg): move semantic-ui-react to peerDependencies",
        "url": "https://github.com/Tripwire/octagon/pull/190"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjQ2NTYwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjQ2NTYwNw==",
      "body": "me too!  now that code splitting is within sight, this will be a big win",
      "createdAt": "2018-05-03T23:21:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg1ODQ3OTcz",
        "title": "feat(pkg): move semantic-ui-react to peerDependencies",
        "url": "https://github.com/Tripwire/octagon/pull/191"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjQ2NTg1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjQ2NTg1Mg==",
      "body": "2a9fc6a is new!  but 9ab129c was in the last PR!",
      "createdAt": "2018-05-03T23:23:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg1ODUxOTcw",
        "title": "feat/tidy",
        "url": "https://github.com/Tripwire/octagon/pull/192"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjY2NDUzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjY2NDUzNw==",
      "body": "will be closed by #191 ",
      "createdAt": "2018-05-04T17:02:26Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTg1MzU0NzY=",
        "title": "migrate suir to a peer dependency",
        "url": "https://github.com/Tripwire/octagon/issues/185"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjY2NTQyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjY2NTQyMA==",
      "body": "this still could be an issue, but given that the theme, sans our customizations, _does this_, there's more that meets the eye.  closing until a more informed understanding is formed",
      "createdAt": "2018-05-04T17:05:56Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTkzNjY0MTU=",
        "title": "default ui.button has margin-right applied to it",
        "url": "https://github.com/Tripwire/octagon/issues/189"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjY2NTg5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjY2NTg5Ng==",
      "body": "this is still a partially open issue, but moving any remaining discussion to #193 now that our babel config supports object-rest-spread",
      "createdAt": "2018-05-04T17:07:59Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTYyMjgxMjc=",
        "title": "components do not pass down unhandled props",
        "url": "https://github.com/Tripwire/octagon/issues/57"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjY2NjMxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjY2NjMxNg==",
      "body": "just adding a cross ref.\r\n\r\nsizes will go down when these issues close: https://github.com/Tripwire/octagon/issues/185#issuecomment-386429527\r\n\r\nand when using 11.x of this lib and newer.  these things will all collectively enable CRA tree-shaking",
      "createdAt": "2018-05-04T17:09:49Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTcxMzQ1MTk=",
        "title": "Bundle size is too big",
        "url": "https://github.com/Tripwire/octagon/issues/120"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjY3MTE3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjY3MTE3MA==",
      "body": "@RickButler, added!  thanks again",
      "createdAt": "2018-05-04T17:28:04Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTk5MjUzNzY=",
        "title": "Looking to become maintainer",
        "url": "https://github.com/AmpersandJS/ampersand-view/issues/198"
      },
      "repository": {
        "nameWithOwner": "AmpersandJS/ampersand-view"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjczMjY2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjczMjY2MA==",
      "body": "@ggascoigne, good news?\r\n\r\nbecause we compile to es5 friendly js modules (meta), these changes + SUIR actually work with jest.  i.e., the resultant built files use `require` statements, which work w/ jest.\r\n\r\nto prove it, here's what i did:\r\n\r\n- created a new CRA app\r\n- install SUIR@latest\r\n- linked the latest and greatest stuff from our `react-octagon@11.x` branch\r\n\r\nand the jest test had no problem running, where i was using components from both libraries!  i think SUIR's latest es modules also are es5-compiled es6 modules.\r\n\r\n```jsx\r\n// App.js\r\nimport React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Input } from 'semantic-ui-react'\r\nimport { LoginPaneUnstable } from 'react-octagon'\r\nimport 'react-octagon/lib/styles/semantic.css'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-intro\">\r\n          <LoginPaneUnstable /> // <== octagon module\r\n          <Input type='text' placeholder='INPUT' /> // <== SUIR module\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n```\r\n\r\ntest results:\r\n```\r\n PASS  src/App.test.js (5.484s)\r\n  ✓ renders without crashing (25ms)\r\n\r\nTest Suites: 1 passed, 1 total\r\nTests:       1 passed, 1 total\r\n```",
      "createdAt": "2018-05-04T20:58:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg2MDM2NzU3",
        "title": "feat(pkg): ship as es module",
        "url": "https://github.com/Tripwire/octagon/pull/194"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjczNTI5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjczNTI5NQ==",
      "body": "approval on #195 transitively approves this (e.g. #195 has all of #194's commits).  merging to get that guy movin!",
      "createdAt": "2018-05-04T21:07:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg2MDM2NzU3",
        "title": "feat(pkg): ship as es module",
        "url": "https://github.com/Tripwire/octagon/pull/194"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NjczNTcyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NjczNTcyMw==",
      "body": "@andrewleyva, i got a blessing on this, but would appreciate your eyes as an additional check! again, these are going into 11.x branch, not master yet!",
      "createdAt": "2018-05-04T21:08:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg2MDM4ODIy",
        "title": "feat/export-unstable-components",
        "url": "https://github.com/Tripwire/octagon/pull/195"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NzIxNTc2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NzIxNTc2Nw==",
      "body": "@pvdlg, thx!  the `recipe` link doesn't specify the minimal set of configuration required in `package.json`.  im not 100% sure what it should be either.  any tips?",
      "createdAt": "2018-05-07T21:41:50Z",
      "issue": {
        "id": "MDU6SXNzdWUyODY1MzkxOTc=",
        "title": "Gitlab CI",
        "url": "https://github.com/semantic-release/semantic-release/issues/597"
      },
      "repository": {
        "nameWithOwner": "semantic-release/semantic-release"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NzIxODEwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NzIxODEwMg==",
      "body": "ah, i dev installed `@semantic-release/gitlab-config` then added:\r\n\r\n```json\r\n  \"release\": {\r\n    \"extends\": \"@semantic-release/gitlab-config\"\r\n  }\r\n```\r\nto my `package.json` and blamo!  in business.  the issue is probably worth closing too, as aforementioned by @pvdlg ",
      "createdAt": "2018-05-07T21:51:14Z",
      "issue": {
        "id": "MDU6SXNzdWUyODY1MzkxOTc=",
        "title": "Gitlab CI",
        "url": "https://github.com/semantic-release/semantic-release/issues/597"
      },
      "repository": {
        "nameWithOwner": "semantic-release/semantic-release"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NzI3MDYyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NzI3MDYyMQ==",
      "body": "hi all,\r\n\r\ni'm on 0.5.6 and still not seeing compression.\r\n\r\n```rs\r\nfn some_file_handler(req: HttpRequest) -> Result<fs::NamedFile> {\r\n    Ok(fs::NamedFile::open(\"./my-favorite-file.json\")?)\r\n}\r\n```\r\n\r\nmy request has: `Accept-Encoding: gzip, deflate, br` (chrome default adds it), and the response is as follows:\r\n\r\n```\r\nHTTP/1.1 200 OK\r\ncontent-type: application/json\r\nlast-modified: Tue, 24 Apr 2018 01:46:34 GMT\r\netag: \"201391eb2:eecb7:5ade8c7a:e2aac1d\"\r\ncontent-encoding: br\r\ntransfer-encoding: chunked\r\ndate: Tue, 08 May 2018 03:02:19 GMT\r\n```\r\n\r\nas you can see, no compression!  did i miss something?\r\n\r\nthanks!",
      "createdAt": "2018-05-08T03:08:24Z",
      "issue": {
        "id": "MDU6SXNzdWUzMDI0Njk5Nzk=",
        "title": "No compression for NamedFile?",
        "url": "https://github.com/actix/actix-web/issues/96"
      },
      "repository": {
        "nameWithOwner": "actix/actix-web"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NzI3MDc4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NzI3MDc4Mw==",
      "body": "whoooops. `br` _is_ brotli.  rookie move! nm :)",
      "createdAt": "2018-05-08T03:09:32Z",
      "issue": {
        "id": "MDU6SXNzdWUzMDI0Njk5Nzk=",
        "title": "No compression for NamedFile?",
        "url": "https://github.com/actix/actix-web/issues/96"
      },
      "repository": {
        "nameWithOwner": "actix/actix-web"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NzQ4ODk2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NzQ4ODk2MA==",
      "body": "#2775 loosely lands the extra few lines requested",
      "createdAt": "2018-05-08T17:58:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTU5MDI1NzM2",
        "title": "fix(Popup) popup appearing in wrong position when open prop is set",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/2389"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NzQ5MjgyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NzQ5MjgyMQ==",
      "body": "thx!",
      "createdAt": "2018-05-08T18:11:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg2MTEyNTky",
        "title": "feat/fast-dev-watch-mode",
        "url": "https://github.com/Tripwire/octagon/pull/196"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4NzU4MTY4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4NzU4MTY4Ng==",
      "body": "thanks greenkeeper! glad you're alive again.",
      "createdAt": "2018-05-09T00:18:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzcyMDg0",
        "title": "Update dependencies to enable Greenkeeper 🌴",
        "url": "https://github.com/Tripwire/octagon/pull/200"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4ODEzMDgwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4ODEzMDgwOQ==",
      "body": "my code looks similar.  the docs definitively used to have this great stuff!",
      "createdAt": "2018-05-10T17:49:12Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTQ4MTE2MzQ=",
        "title": "vanilla js link dead in npm docs",
        "url": "https://github.com/apollographql/apollo-client/issues/3330"
      },
      "repository": {
        "nameWithOwner": "apollographql/apollo-client"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM4ODg5MzQxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM4ODg5MzQxNQ==",
      "body": "hi all, kind and cordial bump!",
      "createdAt": "2018-05-14T17:13:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzA5OTA3",
        "title": "fix(Popup) popup appearing in wrong position when open prop is set ",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/2775"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MDMyNDE4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MDMyNDE4OA==",
      "body": "codecov seems to be all hung up!",
      "createdAt": "2018-05-18T20:32:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzA5OTA3",
        "title": "fix(Popup) popup appearing in wrong position when open prop is set ",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/2775"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MDczNDg0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MDczNDg0NA==",
      "body": "Looks fine to me, but this needs UX input. @johnnylevenson, can you review?",
      "createdAt": "2018-05-21T18:05:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg5NDQ2OTA4",
        "title": "Bugfix/number locale string",
        "url": "https://github.com/Tripwire/octagon/pull/204"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MTA5NDAwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MTA5NDAwMQ==",
      "body": "Whoa, the latest sem rel posts back versions PRs land in?? That's awesome!",
      "createdAt": "2018-05-22T18:28:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzUyMjY1",
        "title": "chore(pkg): migrate to yarn",
        "url": "https://github.com/Tripwire/octagon/pull/198"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MTA5NDk0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MTA5NDk0MA==",
      "body": "Iirc, most bundlers will minify during prod builds.  It would seem to me at dev time, folks actually want the non minified version.",
      "createdAt": "2018-05-22T18:31:35Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjUzNDEzODc=",
        "title": "Minimized css in dist build",
        "url": "https://github.com/Tripwire/octagon/issues/205"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MTA5NTI1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MTA5NTI1OQ==",
      "body": "are you seeing otherwise?  if so, we can add a min",
      "createdAt": "2018-05-22T18:32:37Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjUzNDEzODc=",
        "title": "Minimized css in dist build",
        "url": "https://github.com/Tripwire/octagon/issues/205"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MTg4NzE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MTg4NzE4NQ==",
      "body": "as pair w/ @andrewleyva ",
      "createdAt": "2018-05-24T22:37:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTkwNDI0ODc0",
        "title": "fix(icons): pin unstable dep",
        "url": "https://github.com/Tripwire/octagon/pull/206"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MTk0ODY5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MTk0ODY5MA==",
      "body": "@benjspriggs, can you take a peek?",
      "createdAt": "2018-05-25T05:49:04Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjYzNDUxMjA=",
        "title": "Unexpected PropType violation in LargeCard.KeyValue",
        "url": "https://github.com/Tripwire/octagon/issues/207"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MTk1NzI0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MTk1NzI0Mg==",
      "body": "nice!  ps, if you havent seen already, the latest version of semantic-release auto posts back into PRs what versions PRs get released in. so great!",
      "createdAt": "2018-05-25T06:40:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzA5OTA3",
        "title": "fix(Popup) popup appearing in wrong position when open prop is set ",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/2775"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MjE5ODgxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MjE5ODgxNw==",
      "body": "@robsonkades, did you locate it?",
      "createdAt": "2018-05-25T22:02:13Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzU0Mjk3NDc=",
        "title": "App UI Customization",
        "url": "https://github.com/aws-amplify/amplify-js/issues/7"
      },
      "repository": {
        "nameWithOwner": "aws-amplify/amplify-js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MjE5OTAwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MjE5OTAwMA==",
      "body": "https://aws.github.io/aws-amplify/media/authentication_guide#customize-ui-theme",
      "createdAt": "2018-05-25T22:03:12Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzU0Mjk3NDc=",
        "title": "App UI Customization",
        "url": "https://github.com/aws-amplify/amplify-js/issues/7"
      },
      "repository": {
        "nameWithOwner": "aws-amplify/amplify-js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MjIxMzI3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MjIxMzI3Nw==",
      "body": "build failed because the internet is broken.  cloudflare/yarn issues",
      "createdAt": "2018-05-25T23:30:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTkwNjk0OTU0",
        "title": "Update webpack to the latest version 🚀",
        "url": "https://github.com/Tripwire/octagon/pull/208"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MjIxNzkyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MjIxNzkyMg==",
      "body": "eager merging--unstable component",
      "createdAt": "2018-05-26T00:07:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTkwNzE1MTcx",
        "title": "Feat/unstable login compact",
        "url": "https://github.com/Tripwire/octagon/pull/209"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MjI5MTk1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MjI5MTk1Mw==",
      "body": "i'm not 100% of this was legit?\r\n\r\n1) `import hoistStatics from 'hoist-non-react-statics'`\r\n\r\nyields:\r\n\r\n`[ts] Module ''hoist-non-react-statics'' has no default export.`\r\n\r\n\r\n2) `import * as hoistStatics from 'hoist-non-react-statics'`\r\n\r\nyields\r\n\r\n`[ts] Module ''hoist-non-react-statics'' resolves to a non-module entity and cannot be imported using this construct.`\r\n\r\nwhat is the prescription? i defaulted to good ol:\r\n\r\n`const hoistNonReactStatics = require('hoist-non-react-statics')`",
      "createdAt": "2018-05-26T22:28:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTM3MTYxOTkw",
        "title": "modify index.d.ts for typescript module",
        "url": "https://github.com/mridgway/hoist-non-react-statics/pull/39"
      },
      "repository": {
        "nameWithOwner": "mridgway/hoist-non-react-statics"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MjMwODIwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MjMwODIwMg==",
      "body": "this happens when you don't set:\r\n\r\n```js\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n```\r\n\r\nin fetch.",
      "createdAt": "2018-05-27T06:23:45Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTk3NzkyOTg=",
        "title": "variables must be a object",
        "url": "https://github.com/choojs/nanographql/issues/7"
      },
      "repository": {
        "nameWithOwner": "choojs/nanographql"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MjMwODIxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MjMwODIxMQ==",
      "body": "otherwise, it's all zen.",
      "createdAt": "2018-05-27T06:23:55Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTk3NzkyOTg=",
        "title": "variables must be a object",
        "url": "https://github.com/choojs/nanographql/issues/7"
      },
      "repository": {
        "nameWithOwner": "choojs/nanographql"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MjM0NDg4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MjM0NDg4Mw==",
      "body": "Thx!",
      "createdAt": "2018-05-27T16:24:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTkwNzk0MzIw",
        "title": "Fix comment typos in index.js",
        "url": "https://github.com/cdaringe/electron-renderer-react-scripts-target/pull/5"
      },
      "repository": {
        "nameWithOwner": "cdaringe/electron-renderer-react-scripts-target"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5Mjg4NzEwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5Mjg4NzEwMw==",
      "body": "the yarn registry was down last week--otherwise this should build and pass just fine.  can someone give it a bump?",
      "createdAt": "2018-05-29T18:30:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTkwNzA4Mjk4",
        "title": "fix(AmplifyUI): enable component className extension",
        "url": "https://github.com/aws-amplify/amplify-js/pull/920"
      },
      "repository": {
        "nameWithOwner": "aws-amplify/amplify-js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5MzM1Njk4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5MzM1Njk4MA==",
      "body": "eager merging, unstable widget",
      "createdAt": "2018-05-30T23:59:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTkxNjEwMzE3",
        "title": "feat(LoginPane): enable unstable thirdPartyAuth prop",
        "url": "https://github.com/Tripwire/octagon/pull/213"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5Mzk3MDE5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5Mzk3MDE5Ng==",
      "body": "man, this was painful.  thanks all.  ",
      "createdAt": "2018-06-01T18:28:45Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTg0NzU1Nzc=",
        "title": "refresh container.attrs",
        "url": "https://github.com/docker/docker-py/issues/1375"
      },
      "repository": {
        "nameWithOwner": "docker/docker-py"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5Mzk3MDc4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5Mzk3MDc4Nw==",
      "body": "actually, `reload` doesn't get the 'HostConfig' up-to-date.  i still do not see my exposed ports",
      "createdAt": "2018-06-01T18:31:01Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTg0NzU1Nzc=",
        "title": "refresh container.attrs",
        "url": "https://github.com/docker/docker-py/issues/1375"
      },
      "repository": {
        "nameWithOwner": "docker/docker-py"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5NDgwODEyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5NDgwODEyNA==",
      "body": "@trevorriles, i didn't :(",
      "createdAt": "2018-06-05T18:12:52Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjAzNDY1MTU=",
        "title": "auth credentials are not sent in the same fashion as npm",
        "url": "https://github.com/yarnpkg/yarn/issues/3077"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5NTI4ODA0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5NTI4ODA0Mw==",
      "body": "i am still seeing the following, per download on this site:\r\n\r\n<img width=\"422\" alt=\"screen shot 2018-06-06 at 9 18 21 pm\" src=\"https://user-images.githubusercontent.com/1003261/41078060-322ae72a-69cf-11e8-9d51-e2783f1aa19e.png\">\r\n\r\nthis is counter to \"not required\" message in the README.  is this expected?",
      "createdAt": "2018-06-07T04:19:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY4MTUyODIz",
        "title": "Update 1.4 (2017-01-11) files, direct from OEM website",
        "url": "https://github.com/adrianmihalko/ch340g-ch34g-ch34x-mac-os-x-driver/pull/9"
      },
      "repository": {
        "nameWithOwner": "adrianmihalko/ch340g-ch34g-ch34x-mac-os-x-driver"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5NzQzMTM1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5NzQzMTM1NQ==",
      "body": "feel free to merge and we can just fix that file later",
      "createdAt": "2018-06-14T20:41:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk0NzI3MTM1",
        "title": "able to print bollinger bands with SPY",
        "url": "https://github.com/dino-dna/go-broke/pull/1"
      },
      "repository": {
        "nameWithOwner": "dino-dna/go-broke"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5NzUxNjk4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5NzUxNjk4NA==",
      "body": "thanks for reporting.\r\n\r\nthere was definitely a path issue, now fixed in `2.0.5`.  IIRC, windows & old node auto-appended `.cmd` or something onto node_modules/.bin/<executable> files, but im not sure if it still does so?\r\n\r\n1. 2.0.5. should fix serve on _most_ systems. can you confirm?\r\n1. run it with `--verbose`.  you will see some constants outputted, most importantly the `REVEAL_DIR`.  if for some reason it still doesn't work, confirm the contents of `node_modules/reveal.js/node_modules/.bin`, and see if it is that `.cmd` file issue.\r\n\r\nthx again",
      "createdAt": "2018-06-15T05:23:47Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzI1NzU2MzM=",
        "title": "Error on Windows",
        "url": "https://github.com/cdaringe/revealer/issues/48"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5NzUxNzA0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5NzUxNzA0Nw==",
      "body": "...it worked for me and my team for so long because we all had `grunt` installed globally :)",
      "createdAt": "2018-06-15T05:24:14Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzI1NzU2MzM=",
        "title": "Error on Windows",
        "url": "https://github.com/cdaringe/revealer/issues/48"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDM5Nzg1MTI3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDM5Nzg1MTI3NQ==",
      "body": "> never been an issue \r\n\r\nfor most things i think you're correct, but the subprocess module i believe is less forgiving, especially when i was passing it a relative path internally!\r\n\r\nv2.1.3 adds `.cmd` when on windows!",
      "createdAt": "2018-06-17T03:01:21Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzI1NzU2MzM=",
        "title": "Error on Windows",
        "url": "https://github.com/cdaringe/revealer/issues/48"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMDIwNDE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMDIwNDE4NQ==",
      "body": "Sure, that's definitely an option.  I'm not in favor of it personally.  I'm not sure if there are any significant advantages to isolating those props, only to shim them right back into the root node.  In fact, it makes it harder to distinguish between handled and unhandled props.  It's also an extra API to maintain.  Passing on the unhandled props gives a great user experience, IMHO, and adds ~nil complexity.  If I do `<Thing id=\"best_id\" />`, it feels like working with the DOM directly, and has natural imference.",
      "createdAt": "2018-06-26T07:13:08Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk3MjczODM1",
        "title": "feat(StyleGuideRenderer): support StyleGuideRenderer composition",
        "url": "https://github.com/styleguidist/react-styleguidist/pull/1027"
      },
      "repository": {
        "nameWithOwner": "styleguidist/react-styleguidist"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMDM4MTU4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMDM4MTU4MQ==",
      "body": "I respect these points, but disagree with them for the following reasons:\r\n\r\n> You may have more than one HTML element that you want to modify.\r\n\r\nIf that is necessary, than that other element should also be exposed.  SUIR, for example, often hangs related elements off of a root element for this reason. in [this  example](https://react.semantic-ui.com/collections/form), you can see they have things like `<Form.Button />` & `<Form.XYZ />` to use instead of the defaults, if you want to override internal components with other props/goodies.\r\n\r\nIt's also worth noting that SUIR use a similar pattern to that which I've proposed, but do so via a babel plugin [ref1](https://github.com/Semantic-Org/Semantic-UI-React/blob/c8fabc7805ad23eeeaed9ec37c128ca4d508a3aa/package.json#L92) [ref2](https://www.npmjs.com/package/babel-plugin-transform-react-handled-props).\r\n\r\nThis plugin based approach is a more advanced solution, which is probably also worth considering.  In the PR'd case, this component is a functional stateless component, so the benefits of the plugin approach are less, but still valid--especially if we have `Component`/`PureComponent`s in RSGs component tree!\r\n\r\n> You won't accidentally leak undesired props to DOM (resting all props is dangerous).\r\n\r\nI respectfully don't think that this carries much weight.  If one has leaked a prop, he/she has done it upstream, and the bug still exists.\r\n\r\n> The API is much more clear.\r\n\r\nThe API IMHO is much less clear because it's an entirely new API to find and use.  By making it a separate API, you can't just add props to your node, like you would naturally with any other HTML tag.\r\n\r\n\r\nAnyway, thanks for having this discussion.  I'm not trying to be stubborn/ill-willed/etc, just advocating.  I'd still be happy to use `containerProps` over _nothing_.",
      "createdAt": "2018-06-26T16:38:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk3MjczODM1",
        "title": "feat(StyleGuideRenderer): support StyleGuideRenderer composition",
        "url": "https://github.com/styleguidist/react-styleguidist/pull/1027"
      },
      "repository": {
        "nameWithOwner": "styleguidist/react-styleguidist"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMDc2NjAwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMDc2NjAwNw==",
      "body": "unstable namespaced code only, eager merging",
      "createdAt": "2018-06-27T17:29:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk3ODAxMDk1",
        "title": "refactor(unstable): layout",
        "url": "https://github.com/Tripwire/octagon/pull/229"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMDg1Njc1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMDg1Njc1NQ==",
      "body": "woo hoo!",
      "createdAt": "2018-06-27T23:04:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk2OTE1MzMw",
        "title": "xrefactor(props): improve handled props with spread op & classnames",
        "url": "https://github.com/Tripwire/octagon/pull/226"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMTk2NDM5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMTk2NDM5Mw==",
      "body": "i ran into this today.  the docs offer a `graphiqlRoute` option, which to me, implied i could do such a thing.\r\n\r\ni did similar tracing and landed on the same results.  can we review what stands in our way from enabling this?\r\n\r\n- update the `middleware` to always be on some `/sub/path` for all `_postgraphile` assets\r\n- reconcile all consumers of `_postgraphile` to use requested subpath\r\n\r\nperhaps an api change is warranted, where we don't allow `graphqlRoute` + `graphiqlRoute`. instead--maybe just `graphqlRoute`, which can be nested, and `graphiqlRoute` follows the nesting? just thinking out loud.",
      "createdAt": "2018-07-02T23:10:27Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjA2NDMwMjA=",
        "title": "Feature request: add support for mounting PostGraphile's GraphiQL under an express route e.g. `/subdir/graphql`",
        "url": "https://github.com/graphile/crystal/issues/753"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMTk2NDkzNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMTk2NDkzNQ==",
      "body": "context: i previously had multiple koa apps mounted to my node server.  e.g. one to `/public`, which is a static fileserver, and one to `/api`.  in the presence of this issue, i now just mount `/api` instead to `/`, and prefix all routes w/ `/api`. ",
      "createdAt": "2018-07-02T23:13:33Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjA2NDMwMjA=",
        "title": "Feature request: add support for mounting PostGraphile's GraphiQL under an express route e.g. `/subdir/graphql`",
        "url": "https://github.com/graphile/crystal/issues/753"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMjMxNzIwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMjMxNzIwMg==",
      "body": "Whatever works.  I like the idea of being able to provide a function to modify it.",
      "createdAt": "2018-07-03T23:10:31Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzgwNzM2NDI=",
        "title": "Introduce a way for extending Webpack configurations",
        "url": "https://github.com/halfzebra/create-elm-app/issues/265"
      },
      "repository": {
        "nameWithOwner": "halfzebra/create-elm-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMjkwMDE1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMjkwMDE1Ng==",
      "body": "yes.  certain `grant all` commands only work against the current state of the database.  instead of duplicating `grant all [...perms to role]` cmds repeatedly in new migration files as new migrations roll in (e.g. new tables created), i want to simple exec it every time at the end of the migration stream.  in this regard, i write the content once.  currently, i have my migration with filename/data `20990101....ts` to force it to always run last, but i don't have a great hook to forcibly rerun that migration every time a migration runs.\r\n\r\niow, i want the same functionality as `runAlways` from http://www.liquibase.org/documentation/changeset.html",
      "createdAt": "2018-07-06T01:42:00Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzg3MzMyNzE=",
        "title": "support migration conditions api",
        "url": "https://github.com/knex/knex/issues/2689"
      },
      "repository": {
        "nameWithOwner": "knex/knex"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzEyNjE3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzEyNjE3Mw==",
      "body": "@andrewleyva, can you bite this one off next?",
      "createdAt": "2018-07-06T19:29:18Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzEzMjIxNzM=",
        "title": "Update to SUIR 0.81 and SUI CSS 2.3",
        "url": "https://github.com/Tripwire/octagon/issues/221"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzE0NzkyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzE0NzkyNg==",
      "body": "@youngbob noted that this upgrade affected Dimmer and Modal.  maybe we can test some examples of those with such a PR?\r\n",
      "createdAt": "2018-07-06T21:11:03Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzEzMjIxNzM=",
        "title": "Update to SUIR 0.81 and SUI CSS 2.3",
        "url": "https://github.com/Tripwire/octagon/issues/221"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzE2MzQ0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzE2MzQ0Ng==",
      "body": "i confess to not being an a11y expert, so this is awesome.  `title` certainly makes sense to me.\r\n\r\nill try to get cosy with the FF plugin soon",
      "createdAt": "2018-07-06T22:39:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5ODU3MDAx",
        "title": "feat(a11y): Accessibility for pagination control",
        "url": "https://github.com/Tripwire/octagon/pull/238"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzE2Mzc4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzE2Mzc4NA==",
      "body": "now that we more rigorously proxy props thru, this issue is entirely on consumers.  closing for now.  re-open if y'all feel like we need to have further discussion",
      "createdAt": "2018-07-06T22:41:22Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTA5MzM5NDk=",
        "title": "Data-hooks are added inconsistently to Octagon components. We need an agreed upon solution",
        "url": "https://github.com/Tripwire/octagon/issues/175"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzE2MzgxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzE2MzgxOA==",
      "body": "agreed.",
      "createdAt": "2018-07-06T22:41:34Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjAxNTk0MDQ=",
        "title": "drop externalAttributeFilter.js now that we have experimental babel support",
        "url": "https://github.com/Tripwire/octagon/issues/193"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzE2NzQwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzE2NzQwNA==",
      "body": "yep, dedupe is borked.\r\n\r\n**here's a short, simple example to grok**:\r\n\r\ni have two packages that allow for a common dep, but do not use a common dep.  this breaks runtime type checking (e.g. `instanceof` checks).\r\n\r\n```\r\n\"graphql@>= 0.10 <1.0.0\":\r\n  version \"0.13.2\"\r\n  resolved \"https://registry.yarnpkg.com/graphql/-/graphql-0.13.2.tgz#4c740ae3c222823e7004096f832e7b93b2108270\"\r\n  dependencies:\r\n    iterall \"^1.2.1\"\r\n\r\n\"graphql@>=0.6 <0.13\":\r\n  version \"0.12.3\"\r\n  resolved \"https://registry.yarnpkg.com/graphql/-/graphql-0.12.3.tgz#11668458bbe28261c0dcb6e265f515ba79f6ce07\"\r\n  dependencies:\r\n    iterall \"1.1.3\"\r\n```\r\n\r\nin ^ example, `0.12.3` would have been fine for both, and 0.13.2 should not be present.\r\n\r\nto replicate on `yarn@1.6.0`, simply install `\"postgraphile\": \"^4.0.0-rc.1\"` and `\"@gql2ts/from-schema\": \"^1.8.0\"`, and blamo, non-depuped.\r\n\r\ni'm on OSX.",
      "createdAt": "2018-07-06T23:08:47Z",
      "issue": {
        "id": "MDU6SXNzdWUyODkwNzI0NTk=",
        "title": "Not deduping child dependencies",
        "url": "https://github.com/yarnpkg/yarn/issues/5236"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzE2ODMwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzE2ODMwMQ==",
      "body": "same occurs on `yarn@1.7.0`",
      "createdAt": "2018-07-06T23:15:46Z",
      "issue": {
        "id": "MDU6SXNzdWUyODkwNzI0NTk=",
        "title": "Not deduping child dependencies",
        "url": "https://github.com/yarnpkg/yarn/issues/5236"
      },
      "repository": {
        "nameWithOwner": "yarnpkg/yarn"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzE3NjczNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzE3NjczNA==",
      "body": "TS can autogenerate typings for us.  why not flip `allowJs` to false and just use the autogenerated typings?  i was able to build the latest successfully w/ typings (i had to update one single export), and linked it successfully.  it even found that i was incorrectly using `watch` instead of `watchPg`!\r\n\r\n```json5\r\n# change to tsconfig.json\r\n    \"declaration\": true,                   /* Generates corresponding '.d.ts' file. */\r\n    \"declarationDir\": \"./build\",\r\n    \"allowJs\": false,\r\n```\r\n\r\nmore testing to come...",
      "createdAt": "2018-07-07T00:41:41Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDQxODEyMTU=",
        "title": "How to import postgraphql in a TypeScript project?",
        "url": "https://github.com/graphile/crystal/issues/520"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzE4NTM3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzE4NTM3Ng==",
      "body": "nice! glad to find this!  was coming to see if someone hadn't already landed such a PR :)",
      "createdAt": "2018-07-07T03:34:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5ODcxNDY2",
        "title": "Fix Cannot read property replace of null",
        "url": "https://github.com/npm/hosted-git-info/pull/36"
      },
      "repository": {
        "nameWithOwner": "npm/hosted-git-info"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzIyNjcxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzIyNjcxMg==",
      "body": "I was a little naive--there is a bit more to it, but not obscenely more.  What to do about -core's typings is still unclear.  I'm not sure if there's a way to ship those as part of this build effectively.  I'd rather move those to -core itself personally",
      "createdAt": "2018-07-07T16:24:06Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDQxODEyMTU=",
        "title": "How to import postgraphql in a TypeScript project?",
        "url": "https://github.com/graphile/crystal/issues/520"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzI0OTA0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzI0OTA0NQ==",
      "body": "a net -1K LOC!  i say that's a win :)",
      "createdAt": "2018-07-07T23:17:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
        "title": "feat(types): ship automatic TypeScript typings",
        "url": "https://github.com/graphile/crystal/pull/794"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzI0OTA5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzI0OTA5MQ==",
      "body": "folks, critique and/or contribute to #794 if you can",
      "createdAt": "2018-07-07T23:18:22Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDQxODEyMTU=",
        "title": "How to import postgraphql in a TypeScript project?",
        "url": "https://github.com/graphile/crystal/issues/520"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzMwOTE1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzMwOTE1Nw==",
      "body": "alright, i need to jet for the day, but hopefully this last commit brings CI to green.  almost all talking points were addressed with the exception of:\r\n\r\n- extra js artifacts included in the build\r\n- the `showStack` bool vs string option",
      "createdAt": "2018-07-08T19:04:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
        "title": "feat(types): ship automatic TypeScript typings",
        "url": "https://github.com/graphile/crystal/pull/794"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzY4MjM0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzY4MjM0MA==",
      "body": "i'm a koa user, so koa support is important to me :) good news--koa tests are turned on and 💚!",
      "createdAt": "2018-07-10T02:47:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
        "title": "feat(types): ship automatic TypeScript typings",
        "url": "https://github.com/graphile/crystal/pull/794"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzg2NTM1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzg2NTM1MQ==",
      "body": "We could add some assertions, sure.  Is that a value add test though?  Part of me says we're testing Koa by that point not postgraphile.  The postgraphile integration point is a call to app.use, a middleware just like the any others.  I'm willing to add some, but I'd be prone to keep it rather light.",
      "createdAt": "2018-07-10T15:30:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
        "title": "feat(types): ship automatic TypeScript typings",
        "url": "https://github.com/graphile/crystal/pull/794"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwMzkwODMzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwMzkwODMzOQ==",
      "body": "one test added in a693a77",
      "createdAt": "2018-07-10T17:45:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
        "title": "feat(types): ship automatic TypeScript typings",
        "url": "https://github.com/graphile/crystal/pull/794"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNDAwNTQxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNDAwNTQxOA==",
      "body": "Whoops--info on the override*",
      "createdAt": "2018-07-11T00:18:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjAwNTQ2NzE5",
        "title": "feat(update): Update to SUIR 0.81 and SUI CSS 2.3 and test Styleguide",
        "url": "https://github.com/Tripwire/octagon/pull/241"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNDIwODQ1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNDIwODQ1Mw==",
      "body": "I am not.  I wish to, but I'm channeling my FOSS cycles to another project ATM",
      "createdAt": "2018-07-11T15:19:50Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzg3MzMyNzE=",
        "title": "support migration conditions api",
        "url": "https://github.com/knex/knex/issues/2689"
      },
      "repository": {
        "nameWithOwner": "knex/knex"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNTMxOTc1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNTMxOTc1NA==",
      "body": "Merged latest master to this feature branch.  Friday's changes introduced a few conflicts.  Resolved.  Any outstanding blockers?",
      "createdAt": "2018-07-16T17:14:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
        "title": "feat(types): ship automatic TypeScript typings",
        "url": "https://github.com/graphile/crystal/pull/794"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNjMzNDk2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNjMzNDk2Mg==",
      "body": "hey @benjie, i know you & i both have day jobs, so no pressure, but it would be cool if we could talk about getting this in before the next set of _other_ features.  it'd be great to not have to chase master.  i think this is ready-to-roll",
      "createdAt": "2018-07-19T16:21:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
        "title": "feat(types): ship automatic TypeScript typings",
        "url": "https://github.com/graphile/crystal/pull/794"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNjY5MTI3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNjY5MTI3NA==",
      "body": "Cool!  Ya, sorry it blew up. `allowJs` being false really took this from an easy win to beast.",
      "createdAt": "2018-07-20T18:38:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
        "title": "feat(types): ship automatic TypeScript typings",
        "url": "https://github.com/graphile/crystal/pull/794"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNjc1Mzg2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNjc1Mzg2OA==",
      "body": "here's [the full declaration](https://gist.github.com/cdaringe/028789e0aeb6317ee350fd6586b62a80) file",
      "createdAt": "2018-07-20T23:58:18Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDMyNzY1NjY=",
        "title": "ts complains about generated duplicate enum values",
        "url": "https://github.com/amount/gql2ts/issues/204"
      },
      "repository": {
        "nameWithOwner": "amount/gql2ts"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNjc1NTg1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNjc1NTg1OA==",
      "body": "this is some sort of TS config bug.  it makes no sense. moving it to a diff proj works?  no clue.  if you have any idea, let me know!",
      "createdAt": "2018-07-21T00:16:51Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDMyNzY1NjY=",
        "title": "ts complains about generated duplicate enum values",
        "url": "https://github.com/amount/gql2ts/issues/204"
      },
      "repository": {
        "nameWithOwner": "amount/gql2ts"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNjgxMzgwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNjgxMzgwMQ==",
      "body": "> but I don't think that's being referenced by the build\r\n\r\nit's being referenced by the build, but not being _included in it_.  based on your remark in #520, i think you already figured it out [:)](https://github.com/sheerun/prettier-standard)\r\n\r\nthanks for taking to the time to get back over all of this!",
      "createdAt": "2018-07-21T18:11:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
        "title": "feat(types): ship automatic TypeScript typings",
        "url": "https://github.com/graphile/crystal/pull/794"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNzExMTI2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNzExMTI2MA==",
      "body": "No concern from me :)",
      "createdAt": "2018-07-23T16:04:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjAzMDcyMzU3",
        "title": "chore(lint): use more standard TSLint config",
        "url": "https://github.com/graphile/crystal/pull/810"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNzE0NDkxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNzE0NDkxNg==",
      "body": "i'd like to see this too. @mashhoodr, what did you impl look like?",
      "createdAt": "2018-07-23T17:52:54Z",
      "issue": {
        "id": "MDU6SXNzdWUxMjA0NTExNDU=",
        "title": "Specify a default 404 file",
        "url": "https://github.com/koajs/static/issues/64"
      },
      "repository": {
        "nameWithOwner": "koajs/static"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNzIyNTE3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNzIyNTE3Mw==",
      "body": "@isnifer, what was your solution?  it looks like the `FormData` construct is not part of the `node-fetch` TS types.  i may need to just expand the interface if this lib does indeed support binary streams",
      "createdAt": "2018-07-23T22:48:21Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTc0Mzg2MzA=",
        "title": "Doesn't work with FormData using a Buffer",
        "url": "https://github.com/node-fetch/node-fetch/issues/447"
      },
      "repository": {
        "nameWithOwner": "node-fetch/node-fetch"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNzkxNjEyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNzkxNjEyNA==",
      "body": "just hit this too",
      "createdAt": "2018-07-25T22:25:48Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDM3NTAyOTM=",
        "title": "SUI theme needs updating for latest font-awesome",
        "url": "https://github.com/Tripwire/octagon/issues/252"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNzkyMzQ5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNzkyMzQ5Mw==",
      "body": "fixed in 053b1790c5d26da1c3bd49ce170cc83500eb641e, 13.1.1",
      "createdAt": "2018-07-25T23:02:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjAzMzEwNDQx",
        "title": "feat(theme): Update icon theme to match latest SUI default theme",
        "url": "https://github.com/Tripwire/octagon/pull/253"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNzkyMzYzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNzkyMzYzMA==",
      "body": "i apologize, we should have tacked onto your existing work to give you public commit street cred.  forgive this offense",
      "createdAt": "2018-07-25T23:03:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjAzMzEwNDQx",
        "title": "feat(theme): Update icon theme to match latest SUI default theme",
        "url": "https://github.com/Tripwire/octagon/pull/253"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwNzkyMzg4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwNzkyMzg4NA==",
      "body": "also, added a screenshot test for this.  https://tripwire.github.io/octagon/#icon",
      "createdAt": "2018-07-25T23:04:36Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDM3NTAyOTM=",
        "title": "SUI theme needs updating for latest font-awesome",
        "url": "https://github.com/Tripwire/octagon/issues/252"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwODE0MDUzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwODE0MDUzNA==",
      "body": "strong agree.",
      "createdAt": "2018-07-26T15:40:18Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDQ4ODE1MTM=",
        "title": "ThinCard props behave opposite of expected",
        "url": "https://github.com/Tripwire/octagon/issues/261"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwODI0MjgwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwODI0MjgwOQ==",
      "body": "i'll pull and try.  CI says [a](https://372-77168631-gh.circle-artifacts.com/0/home/circleci/repo/snaps/run/1532636380477-diff/report/a-ThinCard-simple-card-example-chrome.png) and [b](https://372-77168631-gh.circle-artifacts.com/0/home/circleci/repo/snaps/run/1532636380477-diff/report/b-ThinCard-simple-card-example-chrome.png) dont align",
      "createdAt": "2018-07-26T21:36:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA0MjU0OTk1",
        "title": "fix(ThinCard): Fix property usage in ThinCard",
        "url": "https://github.com/Tripwire/octagon/pull/263"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwODI0MzI4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwODI0MzI4NQ==",
      "body": "yep.  1st commit has BREAKING CHANGE text in it",
      "createdAt": "2018-07-26T21:38:43Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA0MDUwNzYx",
        "title": "feat(SideNav): init",
        "url": "https://github.com/Tripwire/octagon/pull/257"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwODI0MzY3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwODI0MzY3MA==",
      "body": "> Yeah, I'm getting completely different results locally from snapjerk, though.\r\n\r\nyou may need to run a `yarn build` first*.  test should perhaps build first",
      "createdAt": "2018-07-26T21:40:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA0MjU0OTk1",
        "title": "fix(ThinCard): Fix property usage in ThinCard",
        "url": "https://github.com/Tripwire/octagon/pull/263"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQwODI0Njk4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQwODI0Njk4OA==",
      "body": "`error` shall be placed on `<Form.Field />` instead of `<Input />`",
      "createdAt": "2018-07-26T21:54:49Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDQ4NzExNDA=",
        "title": "Input error class does not work as expected",
        "url": "https://github.com/Tripwire/octagon/issues/259"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMTU5NzE3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMTU5NzE3NQ==",
      "body": "i ran into this today.  in fact, you can't import the module api in typescript because no module is exported from the typings either.   when this happens, the module type should be exported from the typings as well!  i'll test it :)",
      "createdAt": "2018-08-09T00:26:09Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDA4ODgwMTM=",
        "title": "Need to describe type for cypress module API",
        "url": "https://github.com/cypress-io/cypress/issues/2141"
      },
      "repository": {
        "nameWithOwner": "cypress-io/cypress"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMTYxNjcwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMTYxNjcwNw==",
      "body": "Cool thx!  The table probably could use a patch to reflect that",
      "createdAt": "2018-08-09T02:28:35Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDg5NDAyODI=",
        "title": "noExit flag in module mode is ignored, and cypress exits",
        "url": "https://github.com/cypress-io/cypress/issues/2310"
      },
      "repository": {
        "nameWithOwner": "cypress-io/cypress"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMTg5ODYzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMTg5ODYzNw==",
      "body": "same w/ `fast-glob`\r\n\r\n```\r\n$ node\r\n> const fg = require('fast-glob')\r\nundefined\r\n> fg.sync([`/home/cdieringer/src/proj/packages/*`])\r\n```",
      "createdAt": "2018-08-09T21:11:47Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDkyOTE4MzY=",
        "title": "glob misses folders on some architectures",
        "url": "https://github.com/sindresorhus/globby/issues/89"
      },
      "repository": {
        "nameWithOwner": "sindresorhus/globby"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMTkyMjM3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMTkyMjM3Mw==",
      "body": "another hack i used was to have my web-app _detect cypress_.  my CSP is already no-frame, so, in dev mode w/ the csp off, i can sniff for `if (window !== window.parent) { ... }` and just _turn off_ service worker registration.  `window.Cypress` is also a thing...",
      "createdAt": "2018-08-09T22:49:08Z",
      "issue": {
        "id": "MDU6SXNzdWUyNjI0MTUzMTc=",
        "title": "File watching does not execute actual code changes when site under test utilizes Service Workers.",
        "url": "https://github.com/cypress-io/cypress/issues/702"
      },
      "repository": {
        "nameWithOwner": "cypress-io/cypress"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMTkzNDMyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMTkzNDMyMg==",
      "body": "https://github.com/marionebl/commitlint#getting-started ",
      "createdAt": "2018-08-09T23:58:55Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzIxMTA4Mjc=",
        "title": "Commit Linter",
        "url": "https://github.com/Tripwire/octagon/issues/223"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMTkzNDM0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMTkzNDM0NQ==",
      "body": "oh... you already listed that.",
      "createdAt": "2018-08-09T23:59:05Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzIxMTA4Mjc=",
        "title": "Commit Linter",
        "url": "https://github.com/Tripwire/octagon/issues/223"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMjM3OTIyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMjM3OTIyMA==",
      "body": "yep.  i'm in SE @ WAC for a couple hours hackin if you want to meet up",
      "createdAt": "2018-08-12T23:31:16Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDQzMzY2NjU=",
        "title": "consider creating a separate package from cli",
        "url": "https://github.com/node-swig/swig-templates/issues/14"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMjM4MjAwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMjM4MjAwNw==",
      "body": "@paulcpederson, please forgive me 🙏, im going to do some BDFL-style malarkey stuff up in here as we've been stale for a bit",
      "createdAt": "2018-08-13T00:21:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA3ODQ3OTMx",
        "title": "fix(tests): patch tests to be compatible with node@10",
        "url": "https://github.com/node-swig/swig-templates/pull/48"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMjM4NTUyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMjM4NTUyMQ==",
      "body": "moving to #50 ",
      "createdAt": "2018-08-13T01:12:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTYyNDM2MzQ5",
        "title": "Fix `this` in swig.compile()",
        "url": "https://github.com/node-swig/swig-templates/pull/47"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxMjY2OTg2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxMjY2OTg2NA==",
      "body": "ya sorry it took so long :/",
      "createdAt": "2018-08-13T21:24:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA3ODUwOTk5",
        "title": "fix(swig): apply consistent context guard (this => self)",
        "url": "https://github.com/node-swig/swig-templates/pull/50"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxNjEwMjI0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxNjEwMjI0NA==",
      "body": "i npm link and/or yarn link monorepos on a daily basis.  i can confirm that linked typings files do not get updated realtime, onchange.  i'm on OSX, so restarting the TS Server _does_ work, but it's a hack.  i assume that the solution path will be the same for all of us.\r\n\r\njust adding another data point to the mix.",
      "createdAt": "2018-08-27T03:11:14Z",
      "issue": {
        "id": "MDU6SXNzdWUyMjQyMDQ0NDU=",
        "title": "Typescript Language service not finding symbolic linked (junction) npm module",
        "url": "https://github.com/microsoft/vscode/issues/25312"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxNjY2MzE4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxNjY2MzE4OA==",
      "body": "if throughout the lib `\"pykafka\"` is the logger name, then your proposed solution is good enough for me!",
      "createdAt": "2018-08-28T17:00:31Z",
      "issue": {
        "id": "MDU6SXNzdWUzNTQ4MTYzNTY=",
        "title": "feature request: allow log level configuration",
        "url": "https://github.com/Parsely/pykafka/issues/860"
      },
      "repository": {
        "nameWithOwner": "Parsely/pykafka"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxNjc3OTU2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxNjc3OTU2Mw==",
      "body": "sorry, it was so long ago and i was hustling, hence did not provide a working demo.  apologies.  i've long since moved on.  just accessing a simple remote resource, when there was an issue, it was throwing a raw object, not an Error instance.\r\n\r\nif it has hence been fixed or you do not observe it, feel tree to close",
      "createdAt": "2018-08-29T00:05:23Z",
      "issue": {
        "id": "MDU6SXNzdWUzMDc5MDkzNDA=",
        "title": "non Error instances thrown on 400",
        "url": "https://github.com/FHIR/fhir.js/issues/117"
      },
      "repository": {
        "nameWithOwner": "FHIR/fhir.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQxNzM2MTgzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQxNzM2MTgzMw==",
      "body": "yes, that's the only solution ATM.  However, this is a system wide side effect that I've already forgotten to undo.  further, my integration tests want to point to various instances that are dynamically torn up and down, which makes the meddling of etc hosts a somewhat difficult proposition (e.g. don't open up perms on etc hosts just for a test run).\r\n\r\nthanks for the response :)",
      "createdAt": "2018-08-30T15:30:02Z",
      "issue": {
        "id": "MDU6SXNzdWUzNTMxMDU0NTA=",
        "title": "ENOTFOUND - allow overriding of advertised host",
        "url": "https://github.com/SOHU-Co/kafka-node/issues/1052"
      },
      "repository": {
        "nameWithOwner": "SOHU-Co/kafka-node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyMDM1MTEzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyMDM1MTEzOA==",
      "body": "hello!  can we move forward on this issue?  it continues to bite me",
      "createdAt": "2018-09-11T17:18:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA2NTM5MDk1",
        "title": "feat(pkg): allow waiting for pgPool to close",
        "url": "https://github.com/voxpelli/node-pg-pubsub/pull/37"
      },
      "repository": {
        "nameWithOwner": "voxpelli/node-pg-pubsub"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyMjEwNDg0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyMjEwNDg0OQ==",
      "body": "test are failing because of screen shot diffs.  using the artifact browser, i see:\r\n\r\n![](https://434-77168631-gh.circle-artifacts.com/0/home/circleci/repo/snaps/run/1537205473061-diff/report/a-SideNav-basic-chrome.png)\r\n![](https://434-77168631-gh.circle-artifacts.com/0/home/circleci/repo/snaps/run/1537205473061-diff/report/b-SideNav-basic-chrome.png)\r\n\r\n![](https://434-77168631-gh.circle-artifacts.com/0/home/circleci/repo/snaps/run/1537205473061-diff/report/a-SideNav-scaled-chrome.png)\r\n![](https://434-77168631-gh.circle-artifacts.com/0/home/circleci/repo/snaps/run/1537205473061-diff/report/b-SideNav-scaled-chrome.png)",
      "createdAt": "2018-09-17T17:36:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjE1NzMxNTg2",
        "title": "feat(nav): add NavLink support to SideNav.MenuItem",
        "url": "https://github.com/Tripwire/octagon/pull/288"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyMjEyMDEyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyMjEyMDEyMg==",
      "body": "No sweat.  I loved you module so much I forked it, gave it some typescript typings, and merged all my needed patches into in the interim.  https://www.npmjs.com/package/pg-subscribe\r\n\r\nIt'd be cool to re converge at some point",
      "createdAt": "2018-09-17T18:24:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTc4NzQ4ODAy",
        "title": "refactor/logging",
        "url": "https://github.com/voxpelli/node-pg-pubsub/pull/18"
      },
      "repository": {
        "nameWithOwner": "voxpelli/node-pg-pubsub"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyMjE2MDI2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyMjE2MDI2Mg==",
      "body": "> it should also maintain the connection and attempt to reestablish it whenever possible\r\n\r\ni can see why this is desirable, but it also hides problems from the consumer, which i think is harmful & generally bad-fu.  IMHO, the retry behavior may only make sense on boot/initial connect.\r\n\r\nthis is only my opinion :)",
      "createdAt": "2018-09-17T20:32:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0ODMyODI5OTI=",
        "title": "Reconnection attempts not properly delayed",
        "url": "https://github.com/voxpelli/node-pg-pubsub/pull/11"
      },
      "repository": {
        "nameWithOwner": "voxpelli/node-pg-pubsub"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyMjE2NjA1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyMjE2NjA1NQ==",
      "body": "ya i did a few extra things as well:\r\n\r\n1) made all of the tests setup their own database containers and tear them down on complete. further, i tightly coupled the tests to docker, and orchestrate it all programatically.\r\n2) promisified the instance methods, e.g. made all the the subscribe/unsubscribe methods `async`.  for example, [uses like this](https://github.com/voxpelli/node-pg-pubsub/blob/master/index.js#L107-L120) now only support a promise by default, and, one can `await` until the query really does finish.  in the referenced lines of code, it's a race between user code and the `unlisten` query.  as part of ^ decision, i decided to only support newer versions of node, where async/await is ready out of the box.  9.x+ i think?\r\n3) published typings, which are great for self documentation\r\n4) wired in semantic-release\r\n\r\nthere were a few other smallies _i think_ (iirc around the retry logic), but i don't recall of hand!  your coverage is great--i [reused all of your tests](https://github.com/cdaringe/pg-subscribe/tree/master/src/test) and got ~full coverage off the bat!\r\n\r\ni'd love to pair up!  i have recently become a TS fan and already have some deps on the TS version.  is that something you'd entertain?\r\n",
      "createdAt": "2018-09-17T20:49:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTc4NzQ4ODAy",
        "title": "refactor/logging",
        "url": "https://github.com/voxpelli/node-pg-pubsub/pull/18"
      },
      "repository": {
        "nameWithOwner": "voxpelli/node-pg-pubsub"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyMzM2Mzc5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyMzM2Mzc5MA==",
      "body": "hi maintainers!  thx for this great package.  ive noticed that it hasn't been super active recently.  real life happens.  can you inform if there's any chance of this moving forward soon, or, if i should fork for a bit and roll my own stuff?  thx for the hard work!",
      "createdAt": "2018-09-20T23:14:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjE3MTMxMzIz",
        "title": "feat(pkg): update deps",
        "url": "https://github.com/ZijianHe/koa-router/pull/483"
      },
      "repository": {
        "nameWithOwner": "ZijianHe/koa-router"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyMzM2NDAzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyMzM2NDAzMA==",
      "body": "hi maintainers!  thx for this great package.  ive noticed that it hasn't been super active recently.  real life happens.  can you inform if there's any chance of this moving forward soon w/ this PR, or, if i should fork for a bit and roll my own stuff?  thx for the hard work!",
      "createdAt": "2018-09-20T23:15:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjE3MTMyMzQ2",
        "title": "feat(pkg): update deps",
        "url": "https://github.com/koajs/mount/pull/68"
      },
      "repository": {
        "nameWithOwner": "koajs/mount"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyMzg0MjMzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyMzg0MjMzMg==",
      "body": ":basketball:",
      "createdAt": "2018-09-23T19:42:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjE3NTI3MDA5",
        "title": "feat: bump deps",
        "url": "https://github.com/cdaringe/fast-wood/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/fast-wood"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyNDg3NjAwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyNDg3NjAwOQ==",
      "body": "i missed all of this great action!  😎 ",
      "createdAt": "2018-09-26T21:28:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA4OTIxNTgy",
        "title": "feat(types): beginnings of TypeScriptification",
        "url": "https://github.com/graphile/graphile-engine/pull/280"
      },
      "repository": {
        "nameWithOwner": "graphile/graphile-engine"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyNTE3NDU2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyNTE3NDU2NA==",
      "body": "~i tested this just now.  seems to work for me.  here's my repro: https://github.com/cdaringe/will-u-load-my-styl/commit/aebbff1503a8ecd6447c309e4ecdbfebfb4b2b35~",
      "createdAt": "2018-09-27T17:22:33Z",
      "issue": {
        "id": "MDU6SXNzdWUzNjQ1Njc3MDk=",
        "title": "react-scripts@2.0.0 does not import semantic.css",
        "url": "https://github.com/Tripwire/octagon/issues/297"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyNTE4NjAzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyNTE4NjAzNg==",
      "body": "<img width=\"52\" alt=\"screen shot 2018-09-27 at 10 54 58 am\" src=\"https://user-images.githubusercontent.com/1003261/46164811-d3fd7280-c243-11e8-9698-1bd09391f95a.png\">\r\n\r\ni don't know if UX has guidance on this, but the vertical centering is off because of the offset induced by the border.  i'd expect all of the banner content to be shifted up `borderThickness / 2`",
      "createdAt": "2018-09-27T17:56:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjE4MTY4Mjkw",
        "title": "feat(bannermessage): v1 of banner message.",
        "url": "https://github.com/Tripwire/octagon/pull/294"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyNTE5MDQyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyNTE5MDQyMA==",
      "body": "@youngbob, want to close this and just track it over in the react-scripts issue tracker?",
      "createdAt": "2018-09-27T18:09:52Z",
      "issue": {
        "id": "MDU6SXNzdWUzNjQ1Njc3MDk=",
        "title": "react-scripts@2.0.0 does not import semantic.css",
        "url": "https://github.com/Tripwire/octagon/issues/297"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyNTMwOTE0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyNTMwOTE0NQ==",
      "body": "cool, thanks all.  it was because of side effects indeed, but just to clarify, i don't think the prescribed solution is the ideal solution.   the root cause is really that i simply didn't _use_ that import.\r\n\r\n```jsx\r\n// works.\r\nimport * as css from 'react-octagon/lib/styles/semantic.css'\r\nconsole.log(css) // can't shake me now, i'm used!\r\n```\r\n\r\nthus, because my code didn't _use the css_, it was shaken.  i would think in my CRA project (not my dependencies) i would declare `sideEffects: [ <css glob > ]` to make webpack hold onto any css file.  this _does not work_ for the aforementioned example, but IMHO matches the language used in the webpack docs.\r\n\r\nhaving the whole thing work by declaring css `sideEffects` in`react-octagon` seems off.  from `react-octagon`'s perspective, a css file doesn't fit the definition of a sideEffect--it's a logicless asset.\r\n\r\nwhat perspective am i missing here?  maybe this conversation is better suited for the webpack repo :)\r\n\r\n",
      "createdAt": "2018-09-28T03:23:01Z",
      "issue": {
        "id": "MDU6SXNzdWUzNjQ1ODQ2OTc=",
        "title": "react-scripts@next drops css import in production build",
        "url": "https://github.com/facebook/create-react-app/issues/5140"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyNTQ3ODE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyNTQ3ODE4NQ==",
      "body": "In regard to the comments, sounds good",
      "createdAt": "2018-09-28T15:44:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjE4OTY1NzU2",
        "title": "Format source with prettier-standard",
        "url": "https://github.com/Tripwire/octagon/pull/302"
      },
      "repository": {
        "nameWithOwner": "Tripwire/octagon"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyODA2MjA3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyODA2MjA3NQ==",
      "body": "closing due to no response.  again, apologies on the delay",
      "createdAt": "2018-10-09T05:12:22Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzE5NzkxNjk=",
        "title": "Can't find variable: Buffer",
        "url": "https://github.com/cdaringe/pouchy/issues/173"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQyODQzMzMwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQyODQzMzMwMQ==",
      "body": "> however, with travis's recent announcement about deprecating their use of the commit status api,\r\n\r\nhmm.  i interpreted that to imply for _us_ that we just need to hit a different api route and possibly derive readiness-to-merge slightly differently as consequence of the api shift. should still be oauth friendly, and there's no mention of _github_ stopping using the status event.  did i miss anything?\r\n\r\n> I've started to look into a Probot implementation\r\n\r\nnice!  probot looks really neat.  had never heard of it until now.  im not sure what it brings over the status quo, beyond auth via gh app?  anyway, looks nice.  i may try that out next time im GH hacking.\r\n\r\n> Probot does include bunyan, so i lean toward an approach that would support bunyan across the board\r\n\r\nya, makes sense\r\n\r\n> debug streams to be combined with the bunyan stream in the other hapi apps i maintain\r\n\r\nim not sure there is a great way, assuming you mean something akin to \"get debug calls to pipe into <logger-of-choice>\".  given that it's not intended to be demuxed, one would have to squash `process.<stream>.write` streams, buffer, inspect, and re-pipe, _or_ monkey-patch a debug internal, which im not sure is even exposed.\r\n\r\n> are the things you are trying to debug possibly related to the travis changes?\r\n\r\nno.  i use `circle`, `codeship`, and unrelatedly, gitlabci.",
      "createdAt": "2018-10-10T04:24:03Z",
      "issue": {
        "id": "MDU6SXNzdWUzNjgzNzU2MDU=",
        "title": "feature request: add option for increased logging for debugging",
        "url": "https://github.com/greenkeeper-keeper/hapi-greenkeeper-keeper/issues/541"
      },
      "repository": {
        "nameWithOwner": "greenkeeper-keeper/hapi-greenkeeper-keeper"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMDA1NjA5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMDA1NjA5Mg==",
      "body": "Hey Matt, did you mean to PR against the mrn code repo?",
      "createdAt": "2018-10-16T00:07:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjIzMDc3ODgw",
        "title": "Explicity set notify parameter",
        "url": "https://github.com/cdaringe/coins-notify/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/coins-notify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMDA1OTEzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMDA1OTEzNg==",
      "body": "what's your handle?",
      "createdAt": "2018-10-16T00:26:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjIzMDc3ODgw",
        "title": "Explicity set notify parameter",
        "url": "https://github.com/cdaringe/coins-notify/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/coins-notify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMTEzNzQxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMTEzNzQxMQ==",
      "body": "i dropping the project that motivated this, so no work from my end",
      "createdAt": "2018-10-18T19:44:30Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjc0ODU3NDc=",
        "title": "RFC: react component HOCs allowing for bringing your own component",
        "url": "https://github.com/aws-amplify/amplify-js/issues/940"
      },
      "repository": {
        "nameWithOwner": "aws-amplify/amplify-js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMjM3MzQzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMjM3MzQzOQ==",
      "body": "consider the following `launch.json` block for, say, an `Attach` launch config:\r\n\r\n```\r\n      \"skipFiles\": [\r\n        \"<node_internals>/**/*.js\",\r\n        \"<node_internals>/**/*\",\r\n        \"*VM*\"\r\n      ]\r\n```\r\n\r\nunfortunately, this still allows debug sessions inside of `VM*` \"files\" (node 10.12.0).  this creates a particularly difficult situation as i have a code block like this:\r\n\r\n```js\r\nconst boot = require('some-module')\r\nboot(initValues)\r\n```\r\n\r\nand when i use VSCode's step-in feature on the `boot(initValues)` line, it enters directly into a VM script, now with a giant stack (likely because of my `skipFiles`).  stepping out a few times then steps up just far enough where the program ultimately resumes, and i have no downstream breakpoints set.  \r\n\r\nit's a bummer, because i step in @ `boot` specifically to add deeper breakpoints and explore the code of interest, but ultimately, i cannot even step-in, per the intent of the feature.",
      "createdAt": "2018-10-23T18:50:35Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDU5NzkxMjA=",
        "title": "Inspector loaded scripts: Hide <eval> for scripts from the debug adapter",
        "url": "https://github.com/microsoft/vscode/issues/31537"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMjM4MzczOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMjM4MzczOA==",
      "body": "@roblourens, you closed #49142 already, pointing it to this issue.  i can make a dupe of #49192 with a bit more context perhaps?",
      "createdAt": "2018-10-23T19:20:25Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDU5NzkxMjA=",
        "title": "Inspector loaded scripts: Hide <eval> for scripts from the debug adapter",
        "url": "https://github.com/microsoft/vscode/issues/31537"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMzIwMjYwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMzIwMjYwOA==",
      "body": "looks like this actually may be on `git-up`'s shoulders.",
      "createdAt": "2018-10-25T20:56:13Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQxMjQ5Njg=",
        "title": "owner not correctly parsed from ssh repo uri",
        "url": "https://github.com/IonicaBizau/git-url-parse/issues/87"
      },
      "repository": {
        "nameWithOwner": "IonicaBizau/git-url-parse"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMzcyNTExNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMzcyNTExNw==",
      "body": "Thx!  Looks like you left a debugger statement in there",
      "createdAt": "2018-10-28T17:33:40Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQxMjQ5Njg=",
        "title": "owner not correctly parsed from ssh repo uri",
        "url": "https://github.com/IonicaBizau/git-url-parse/issues/87"
      },
      "repository": {
        "nameWithOwner": "IonicaBizau/git-url-parse"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMzc0NzMxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMzc0NzMxNw==",
      "body": "@not-an-aardvark, done.  also updated the commit msg w/ an issue reference",
      "createdAt": "2018-10-28T22:25:13Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjI2NDAxNTE3",
        "title": "Update: Add support for filename baseConfig",
        "url": "https://github.com/eslint/eslint/pull/11028"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMzc1OTMzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMzc1OTMzOA==",
      "body": "hi @platinumazure, thanks for following up.  indeed, that crucial difference is specifically why i added the PR.  in my case, im working on a project with a team that has a common eslint config shared in a library.  in all consumptions of that library, it is necessary to enable extending and overwriting of the shared config (read: baseConfig) using normal eslint file hierarchy patterns.  in fact, such functionality appears to have worked as such in 3.x.  the upgrading from 3.x => 5.x seemed to have broken us.\r\n\r\nthanks!",
      "createdAt": "2018-10-29T00:57:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjI2NDAxNTE3",
        "title": "Update: Add support for filename baseConfig",
        "url": "https://github.com/eslint/eslint/pull/11028"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMzc2NDMyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMzc2NDMyMg==",
      "body": "perhaps!  but, we're not using the json format.  in one case, I'd need to use a yaml parser etc, which eslint already has 1st class support for.  in another, i have  a`.eslintrc`.  given the option i'd only use the `.js` format the whole way around, but `eslint` allows a variety of formats.  naturally, people have selected to use a mix of them.  i'd prefer to offload the parse and load to eslint, as it already has all of that logic baked in",
      "createdAt": "2018-10-29T01:44:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjI2NDAxNTE3",
        "title": "Update: Add support for filename baseConfig",
        "url": "https://github.com/eslint/eslint/pull/11028"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzMzk5Njg3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzMzk5Njg3MQ==",
      "body": "@nzakas, sure.  updated!",
      "createdAt": "2018-10-29T17:14:02Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQ4MDUwMzE=",
        "title": "baseConfig does not allow for passing of baseConfig filename",
        "url": "https://github.com/eslint/eslint/issues/11029"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzNDAwMDc4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzNDAwMDc4OQ==",
      "body": "> We are pretty consistent throughout the API that config means an object, and it would be nice to keep that consistency.\r\n\r\nthat's fine.  im willing to reword, re-key.  upgrading from 3.x to 5x broke us, so im just trying to restore the status quo :)",
      "createdAt": "2018-10-29T17:23:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjI2NDAxNTE3",
        "title": "Update: Add support for filename baseConfig",
        "url": "https://github.com/eslint/eslint/pull/11028"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzNDA1NTk1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzNDA1NTk1Mg==",
      "body": "@nzakas, is there an api signature you _would_ accept?",
      "createdAt": "2018-10-29T19:56:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjI2NDAxNTE3",
        "title": "Update: Add support for filename baseConfig",
        "url": "https://github.com/eslint/eslint/pull/11028"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzNDQxMjYwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzNDQxMjYwMw==",
      "body": "it was requested in #11028 that the PR be closed and discussion be moved here.  the current state of this feature request is that there is openness to accepting the feature, but not under the proposed API.\r\n\r\nwith that, would an api like `baseConfigFilename: '/path/to/eslintconfigfile` be accepted?  ",
      "createdAt": "2018-10-30T18:14:22Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQ4MDUwMzE=",
        "title": "baseConfig does not allow for passing of baseConfig filename",
        "url": "https://github.com/eslint/eslint/issues/11029"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzNDUzMjU3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzNDUzMjU3Ng==",
      "body": "hey @platinumazure.  great question.  i'd say yes, however:\r\n\r\n1. it breaks previously supported behavior of cascading eslint files all contributing naturally by mere presence of the config file on the f/s\r\n    1. e.g. the difference being that now each config file most have knowledge of its parent(s)\r\n1. it defeats the intent of the `baseConfig` feature, as now there is no implicit configuration permitted\r\n\r\ni would next ask, is `baseConfig` then at all needed, if all config files can simply extend things upstream?  probably also not, as per the point above.  consequently, i'd rather just restore the past functionality, then perhaps remove baseConfig altogether in a subsequent release.",
      "createdAt": "2018-10-31T01:50:05Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQ4MDUwMzE=",
        "title": "baseConfig does not allow for passing of baseConfig filename",
        "url": "https://github.com/eslint/eslint/issues/11029"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzNTE2ODI3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzNTE2ODI3OQ==",
      "body": "> Standard and XO\r\n\r\nyep, this is (partially) how we are using it too!\r\n\r\n> As such, it's a pretty important part of our current API\r\n\r\ncool.  ya, im not intending to suggest it actually be removed, but rather working all sides of the argument/problem.  my last remark may have inferred otherwise.\r\n\r\n> Can you explain what exact past functionality you're referring to?\r\n\r\nindeed.  we use `gulp-eslint`, and at 3.x, `baseConfig` previously accepted and honored a `filename`.  ",
      "createdAt": "2018-11-01T20:03:04Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQ4MDUwMzE=",
        "title": "baseConfig does not allow for passing of baseConfig filename",
        "url": "https://github.com/eslint/eslint/issues/11029"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzNTI3MTI3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzNTI3MTI3OA==",
      "body": "go away stale bot!  this is one we should definitely consider!",
      "createdAt": "2018-11-02T04:56:57Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDMyNDYyMzA=",
        "title": "default webpack proxy blocks file downloads",
        "url": "https://github.com/facebook/create-react-app/issues/4800"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzNTQxNjIxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzNTQxNjIxMQ==",
      "body": "are you sure?  i would lobby that a file download via \r\n the download attribute is a basic use case.\r\n\r\ni haven't studied the v2 rules. I look forward to checking them out!",
      "createdAt": "2018-11-02T15:24:22Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDMyNDYyMzA=",
        "title": "default webpack proxy blocks file downloads",
        "url": "https://github.com/facebook/create-react-app/issues/4800"
      },
      "repository": {
        "nameWithOwner": "facebook/create-react-app"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzODAxNTg5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzODAxNTg5NQ==",
      "body": "is it recursive?  perhaps this lib could expose a composable filter function?\r\n\r\n```js\r\nconst { withHtmlAttributesFilter } = require(...)\r\n\r\n// case 1\r\nmodule.exports = {\r\n  propsParser: reactDocgenTypescript.withCustomConfig('./tsconfig.json', {\r\n    propFilter: withHtmlAttributesFilter\r\n  }).parse,\r\n}\r\n\r\n// case 2\r\nmodule.exports = {\r\n  propsParser: reactDocgenTypescript.withCustomConfig('./tsconfig.json', {\r\n    propFilter: withHtmlAttributesFilter((prop, filter) => {\r\n        // your other filters\r\n    })\r\n  }).parse,\r\n}",
      "createdAt": "2018-11-12T20:21:23Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzk5MzQ5Mjc=",
        "title": "feature request: add first class support for filtering HTMLAttributes",
        "url": "https://github.com/styleguidist/react-docgen-typescript/issues/151"
      },
      "repository": {
        "nameWithOwner": "styleguidist/react-docgen-typescript"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzODc4MzE2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzODc4MzE2MQ==",
      "body": "thanks for following up @nzakas.  i've ended up moving on.  i'll re-open if such a thing becomes sufficiently motivating in the future.  thanks again.",
      "createdAt": "2018-11-14T19:13:33Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQ4MDUwMzE=",
        "title": "baseConfig does not allow for passing of baseConfig filename",
        "url": "https://github.com/eslint/eslint/issues/11029"
      },
      "repository": {
        "nameWithOwner": "eslint/eslint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQzOTY2Mjk4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQzOTY2Mjk4MA==",
      "body": "no doubt! if that prettier-standard supports it, you can now just use `npx standard-damn-it {src,lib,test}/**/*.{js,ts,vue}`, etc, and it'll just work.\r\n\r\nI'm not a vue user, so I can't comment much beyond that, but the hook is in place. :)",
      "createdAt": "2018-11-18T02:35:17Z",
      "issue": {
        "id": "MDU6SXNzdWUzMDQ2MTI4ODQ=",
        "title": "Supporting for Vue projects",
        "url": "https://github.com/cdaringe/standard-damn-it/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/standard-damn-it"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0MDE1NjExNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0MDE1NjExNQ==",
      "body": "any word here?",
      "createdAt": "2018-11-20T06:10:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjE1NTIwOTYz",
        "title": "Update to postgraphile 4.0.0",
        "url": "https://github.com/einarjegorov/graphile-upsert-plugin/pull/2"
      },
      "repository": {
        "nameWithOwner": "einarjegorov/graphile-upsert-plugin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0MDMyOTYwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0MDMyOTYwNg==",
      "body": "this is... Incredible!!",
      "createdAt": "2018-11-20T16:10:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjIyOTEzNjc5",
        "title": "feat(debug): enhance SQL debugging",
        "url": "https://github.com/graphile/graphile-engine/pull/317"
      },
      "repository": {
        "nameWithOwner": "graphile/graphile-engine"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0Mjk1OTczMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0Mjk1OTczMw==",
      "body": "a fresh `create-react-app` + `prettier-standard` induces this failure mode at current time",
      "createdAt": "2018-11-29T19:21:12Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzcyMTgzMDg=",
        "title": "eqeqeq rule wrong?",
        "url": "https://github.com/sheerun/prettier-standard/issues/69"
      },
      "repository": {
        "nameWithOwner": "sheerun/prettier-standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0MzU2NjQ1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0MzU2NjQ1NQ==",
      "body": "> I've fixed the performance regression.\r\n\r\n🔥 \r\n\r\n> Please consider sponsoring PostGraphile development 🙏\r\n\r\ndone. not much, but a start\r\n\r\n> not as simple as using select * from table as I initially thought above because that will break the applications of anyone who is using column-level SELECT grants\r\n\r\nhuh.  bummer.  I assumed PG would gracefully handle that.  if it does, even partially, perhaps the simpler query could be used with conditional post-processing?  not sure if that makes sense, or if that'd even greatly improve perf.\r\n\r\nanyway, thanks for the quick response!\r\n",
      "createdAt": "2018-12-03T02:00:15Z",
      "issue": {
        "id": "MDU6SXNzdWUzODY1MjcwOTg=",
        "title": "postgraphile performance degrades on simple sort with large dataset",
        "url": "https://github.com/graphile/crystal/issues/933"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NDIwODQwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NDIwODQwMA==",
      "body": "is `C:\\Users\\xxxxx\\code\\presentation-doctrine-learning\\node_modules` not present?  if not, you'll need to `npm i` or `yarn` first",
      "createdAt": "2018-12-04T18:35:30Z",
      "issue": {
        "id": "MDU6SXNzdWUzODc0MjMyMDY=",
        "title": "npm run-script build not working (on windows?)",
        "url": "https://github.com/cdaringe/revealer/issues/50"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NDIwODg2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NDIwODg2OQ==",
      "body": "or rather, is `C:\\Users\\xxxxx\\code\\presentation-doctrine-learning\\node_modules\\node_modules\\.bin\\grunt[.cmd]` present?",
      "createdAt": "2018-12-04T18:36:56Z",
      "issue": {
        "id": "MDU6SXNzdWUzODc0MjMyMDY=",
        "title": "npm run-script build not working (on windows?)",
        "url": "https://github.com/cdaringe/revealer/issues/50"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NDIwOTExMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NDIwOTExMw==",
      "body": "when installing `revealjs`, it should place such a file into that directory.  `revealer` just calls into `revealjs`'s `grunt` instance",
      "createdAt": "2018-12-04T18:37:38Z",
      "issue": {
        "id": "MDU6SXNzdWUzODc0MjMyMDY=",
        "title": "npm run-script build not working (on windows?)",
        "url": "https://github.com/cdaringe/revealer/issues/50"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NDIxMjE5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NDIxMjE5NA==",
      "body": "Oops! That was a typo--i only meant one level of node_modules.  I'm AFK ATM, but this could be a simple case of bad path resolution. I did not test on Windows fortunately as I don't have Windows machine accessible.  I hardcoded / in some paths that need to be path.sep instead",
      "createdAt": "2018-12-04T18:46:47Z",
      "issue": {
        "id": "MDU6SXNzdWUzODc0MjMyMDY=",
        "title": "npm run-script build not working (on windows?)",
        "url": "https://github.com/cdaringe/revealer/issues/50"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NDIxNTU2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NDIxNTU2Mw==",
      "body": "i'm sorry for the inconvenience.  i'll send a patch later.\r\n\r\n- bad: https://github.com/cdaringe/revealer/blob/master/src/build.js#L22\r\n- good: https://github.com/cdaringe/revealer/blob/master/src/serve.js#L21",
      "createdAt": "2018-12-04T18:56:12Z",
      "issue": {
        "id": "MDU6SXNzdWUzODc0MjMyMDY=",
        "title": "npm run-script build not working (on windows?)",
        "url": "https://github.com/cdaringe/revealer/issues/50"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NDkzNDgyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NDkzNDgyOQ==",
      "body": "Yes I will get to it today.  On the bus.  Past few days have been super busy!",
      "createdAt": "2018-12-06T16:29:31Z",
      "issue": {
        "id": "MDU6SXNzdWUzODc0MjMyMDY=",
        "title": "npm run-script build not working (on windows?)",
        "url": "https://github.com/cdaringe/revealer/issues/50"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NTE0MTc2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NTE0MTc2Mg==",
      "body": "published in `2.1.6`.  try it out, will ya?  run w/ `--verbose` if possible,  in case things go wrong\r\n\r\n1. i asked you to test the wrong path! :) . it was actually `node_modules/reveal.js/node_modules/.bin/grunt`, not `node_modules/.bin/grunt`!  found a few more places w/ non windows friendly paths.  sorry :$!\r\n1. you shouldn't need to install grunt locally any longer--it should pick up grunt\r\n1. i also made it such that if you don't already have a `src/index.html`, it adds a the default reveal.js demo\r\n\r\n🌮 thx!",
      "createdAt": "2018-12-07T06:59:20Z",
      "issue": {
        "id": "MDU6SXNzdWUzODc0MjMyMDY=",
        "title": "npm run-script build not working (on windows?)",
        "url": "https://github.com/cdaringe/revealer/issues/50"
      },
      "repository": {
        "nameWithOwner": "cdaringe/revealer"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NjEwNjkzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NjEwNjkzMw==",
      "body": "I'd put $5 down that turbofan already optimizes these out.  respectfully, this is a pretty pedantic and non-value-add issue.",
      "createdAt": "2018-12-11T08:00:23Z",
      "issue": {
        "id": "MDU6SXNzdWUzODkwMTY3MjM=",
        "title": "That is this ?",
        "url": "https://github.com/einarjegorov/graphile-upsert-plugin/issues/6"
      },
      "repository": {
        "nameWithOwner": "einarjegorov/graphile-upsert-plugin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NjEwNzUwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NjEwNzUwMg==",
      "body": "I forked this, added typings & tests here: https://github.com/cdaringe/postgraphile-upsert\r\n\r\nI am willing to contribute changes back here iff the original author has interest.  TSifying found some minor concerns, but nothing major :). we have a ways to go on typing the postgraphile `Plugin` interface",
      "createdAt": "2018-12-11T08:02:50Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzAyNzY5Mjg=",
        "title": "Sorry...",
        "url": "https://github.com/einarjegorov/graphile-upsert-plugin/issues/3"
      },
      "repository": {
        "nameWithOwner": "einarjegorov/graphile-upsert-plugin"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NjQ3NzE5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NjQ3NzE5Mg==",
      "body": "I finally got back to this.  upgraded to `next` tonite and gave it a whirl.  unfortunately the slowness persists.\r\n\r\n<img width=\"655\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1003261/49850092-29e8ad80-fd91-11e8-8a0b-ac8e7a5b5709.png\">\r\n\r\nafter doing some experimenting, it seems like the number of ~columns~ fields requested in the query deeply affects the sort perf on non-indexed sorts.  for instance, in my demo project, sorting 1M records on _just_ `county` takes 2.5s when also selecting just county, but takes >10s when I select 7 more fields to the response.\r\n\r\nmy data is flat & wide in my actual project, which blows up my query to 1.7 minutes.  i can't really put an index on _every_ field.  it seems like the jsonification in the 1st cte is really dragging things down.  \r\n\r\nare there any other tricks to pull those json ops outta the cte per your 1st gut impression?  ps, `DEBUG=\"graphile-build-pg:sql\"` is 🌶 ",
      "createdAt": "2018-12-12T06:26:10Z",
      "issue": {
        "id": "MDU6SXNzdWUzODY1MjcwOTg=",
        "title": "postgraphile performance degrades on simple sort with large dataset",
        "url": "https://github.com/graphile/crystal/issues/933"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NjY2NTc5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NjY2NTc5Mw==",
      "body": "So the two main inhibitors are column select grants, and computed columns. I'd like to know a little more about why selecting individual columns as discussed in your original proposal breaks computed columns.  Perhaps using introspection we could run a faster version of the query if that constraint  wasn't detected?",
      "createdAt": "2018-12-12T17:09:16Z",
      "issue": {
        "id": "MDU6SXNzdWUzODY1MjcwOTg=",
        "title": "postgraphile performance degrades on simple sort with large dataset",
        "url": "https://github.com/graphile/crystal/issues/933"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NzM3NjEzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NzM3NjEzMQ==",
      "body": "Thanks for the clear explanation!  Dang, because I'm actively a selecting over a pretty big and wide dataset, I end up selecting against materialized views.  Sounds like a `ctid` solution won't actually solve _my_ target use cases.",
      "createdAt": "2018-12-14T16:24:43Z",
      "issue": {
        "id": "MDU6SXNzdWUzODY1MjcwOTg=",
        "title": "postgraphile performance degrades on simple sort with large dataset",
        "url": "https://github.com/graphile/crystal/issues/933"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NzM4MDM1NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NzM4MDM1NA==",
      "body": "i suppose i could write a `fn` to exec a simplified version of the query that postgraphile generates then pass it back to postgraphile, but it's somewhat self-defeating to the value proposition of the library.  of course, i suppose i'm taking it to the limits.  thinking out loud.  i don't know, am i taking it to the limits? i do acknowledge that it's an incredibly difficult ask to match PG perf 1:1, especially in _all_ cases.\r\n\r\ni'm using \"computed columns\" in the private example that led to this discussion by using a cte and config passed in PG. i didn't know the postgraphile computed columns api even existed, ha!\r\n\r\nIMHO, computed columns _are_ a really nice sugar API, but matching PG perf is vastly more important.  not a little bit, but a lotta bit.  views are easy to make right next to table migrations, and pumping record data into functions that take smaller primitives,  vs full records, is easily achievable.",
      "createdAt": "2018-12-14T16:38:55Z",
      "issue": {
        "id": "MDU6SXNzdWUzODY1MjcwOTg=",
        "title": "postgraphile performance degrades on simple sort with large dataset",
        "url": "https://github.com/graphile/crystal/issues/933"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NzQxNzk5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NzQxNzk5MA==",
      "body": "> you normally just have to be a little careful how you write your queries and ensure you add the relevant indexes\r\n\r\nya. totally.  in this case, i'm essentially talking about a pretty basic query.  `select * from <view> order by <a-maybe-indexed column>`, and we end up observing a significant perf pg divergence here at the 'phile layer.\r\n\r\n> very powerful support for PostgreSQL functions for a reason,\r\n\r\ni can't thank you enough for pg fn integrations :) 🎉 . very cool design.\r\n\r\n> Since performance issues are solved by adding indexes\r\n\r\ni wan't to kindly push back on that. this only works in some cases where you can put indexes everywhere and/ or have a non-wide table.  we've also both already proved that the perf is definitely solved by moving that JSON logic _out_ of the top cte.  PG gives me good perf on the 'phile generated queries sans json'ification, even on non-indexed things.\r\n\r\n> significant increase in funding ... the majority of PostGraphile users are very happy with its performance.\r\n\r\nya. i hear ya brother.  that makes perfect sense to me.  it's just a bummer that the query is _almost super fast_, and the reason that it's choking on a big dataset is right under our noses, but we can't touch it because it conflicts with another valuable feature.\r\n\r\n```sql\r\nwith select a,b,c from table_x as x (\r\n   select m,n, some_fn(x.a, x.b, x.c) from table_z\r\n)\r\n```\r\n\r\nfrom your perspective, how expensive is maintaining both code paths? from a purity perspective, i'm with you 100%, but boy, it would be super enabling.  the above pseudo-code-query achieves the equivalent value for me w/out formal postgraphile computed columns. with some json patches, this could get me rocket perf from PG with best-in-class gql from postgraphile.\r\n\r\nthanks for having this super long thread as we worked thru it, too.",
      "createdAt": "2018-12-14T18:47:26Z",
      "issue": {
        "id": "MDU6SXNzdWUzODY1MjcwOTg=",
        "title": "postgraphile performance degrades on simple sort with large dataset",
        "url": "https://github.com/graphile/crystal/issues/933"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NzQyOTI0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NzQyOTI0OQ==",
      "body": "> and I have to deal with the prompt asking if I want to load the workspace? This is actually a very upsetting prompt.\r\n\r\nyou get a prompt? not fair!  i'd be happy with a prompt :) but sure, a little user-settings thing to autoLoad would be handy to, as I, like you, would turn it on permanently at the users settings level",
      "createdAt": "2018-12-14T19:26:51Z",
      "issue": {
        "id": "MDU6SXNzdWUzODg0MTM2NDk=",
        "title": "auto-load workspace file if it is the only workspace file in the folder root",
        "url": "https://github.com/microsoft/vscode/issues/64565"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NzU0Mzk4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NzU0Mzk4OQ==",
      "body": "a little more documentation would go a long way here.  ive been scratchin at this for a bit.  i see in `-vv` mode some contact being made (but not showing up in my indicies), but not sure what else is needed.  not sure what all switches i need to flip on for everything to be zen.  anyway, thx for making the effort to get something out at all :)",
      "createdAt": "2018-12-15T07:10:04Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA1NDY4MzA4",
        "title": "Adding splunk HEC support",
        "url": "https://github.com/fluent/fluentd-kubernetes-daemonset/pull/179"
      },
      "repository": {
        "nameWithOwner": "fluent/fluentd-kubernetes-daemonset"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NzU0NDQ1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NzU0NDQ1MQ==",
      "body": "```\r\n2018-12-15 07:16:03 +0000 [debug]: plugin/out_splunk_hec.rb:143:post_payload: Splunk response: {\"text\":\"Success\",\"code\":0}\r\n```\r\n\r\n^ hundreds of these in the logs, but indicies all empty :( . i'd be super grateful for any hints!",
      "createdAt": "2018-12-15T07:19:37Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA1NDY4MzA4",
        "title": "Adding splunk HEC support",
        "url": "https://github.com/fluent/fluentd-kubernetes-daemonset/pull/179"
      },
      "repository": {
        "nameWithOwner": "fluent/fluentd-kubernetes-daemonset"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0NzkxNjYzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0NzkxNjYzMQ==",
      "body": "Thanks. I meant to follow up. This plugin was doing great work, but splunk was tossing away the data due to an issue I'm still working out. Thanks for the feedback!",
      "createdAt": "2018-12-17T16:54:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjA1NDY4MzA4",
        "title": "Adding splunk HEC support",
        "url": "https://github.com/fluent/fluentd-kubernetes-daemonset/pull/179"
      },
      "repository": {
        "nameWithOwner": "fluent/fluentd-kubernetes-daemonset"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ0ODY1NTk5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ0ODY1NTk5Mw==",
      "body": "No worries!  That old code was not my finest work and this was certainly not the right way to migrate the changes.  I can't believe that was 4 years ago!",
      "createdAt": "2018-12-19T16:24:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjE3MjYzMDA=",
        "title": "Generic Settings Loader",
        "url": "https://github.com/OctoPrint/OctoPrint/pull/591"
      },
      "repository": {
        "nameWithOwner": "OctoPrint/OctoPrint"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1MDQwMDMzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1MDQwMDMzNw==",
      "body": "bump (to suppress stale bot)",
      "createdAt": "2018-12-28T17:54:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTk3MjczODM1",
        "title": "feat(StyleGuideRenderer): support StyleGuideRenderer composition",
        "url": "https://github.com/styleguidist/react-styleguidist/pull/1027"
      },
      "repository": {
        "nameWithOwner": "styleguidist/react-styleguidist"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1MTcwMzM0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1MTcwMzM0Nw==",
      "body": "@gary-menzel \r\n\r\n> You loaded the data externally and passed it into ReactTable. You should also reload the data externally and pass it in.\r\n\r\nthis isn't fully true in all cases. react-table owns/controls state too.  that is, i passed it `onFetchData={this.fetchData}`, `react-table` owns the stateful data that gets passed in as args to `onFetchData`.  consequently, i can't just load my own data without a bump from react-table sharing its state with me",
      "createdAt": "2019-01-06T00:08:12Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTczNTg3NTk=",
        "title": "[Feature] Manual firing fetchData",
        "url": "https://github.com/TanStack/table/issues/808"
      },
      "repository": {
        "nameWithOwner": "TanStack/table"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1MTcwMzkxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1MTcwMzkxNg==",
      "body": "react-table owns state and hides it from us.  thus, we can't simply \"pass new data in\" to get a refresh.  **my new data is a function of react-table's managed state**.\r\n\r\nthus, we at least need to some mechanism or prop to pass down into react-table to have it trigger it's data retrieval workflow.  e.g. `<ReactTable isDataStale />`. such a prop being set perhaps kicks off `onFetchData` once, until that prop is cleared?",
      "createdAt": "2019-01-06T00:16:19Z",
      "issue": {
        "id": "MDU6SXNzdWUzMjExMDAwNDM=",
        "title": "Force React-table to reload",
        "url": "https://github.com/TanStack/table/issues/955"
      },
      "repository": {
        "nameWithOwner": "TanStack/table"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1MTcwNDQ4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1MTcwNDQ4NA==",
      "body": "@0777101, great find.  thanks for finding that!\r\n\r\nfor future viewers, https://github.com/react-tools/react-table/issues/808#issuecomment-373673915 works, even if calling into an unofficial API is a little dicey",
      "createdAt": "2019-01-06T00:26:56Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTczNTg3NTk=",
        "title": "[Feature] Manual firing fetchData",
        "url": "https://github.com/TanStack/table/issues/808"
      },
      "repository": {
        "nameWithOwner": "TanStack/table"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1MjIyNDc0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1MjIyNDc0NA==",
      "body": "I added my own prototype in https://github.com/denoland/deno/issues/1478",
      "createdAt": "2019-01-08T09:06:29Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTAwNjQzMDM=",
        "title": "Where to explore new components?",
        "url": "https://github.com/denoland/deno/issues/1324"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1MjQwMTU2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1MjQwMTU2NA==",
      "body": "i started some work on it, got stuck.  https://stackoverflow.com/questions/54055578/reflect-and-map-typed-argument-shape-in-typescript/54061822#54061822 may unstuck me... or _us_?",
      "createdAt": "2019-01-08T18:25:41Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTUxMTcwNDg=",
        "title": "feature request: gql client library as new package",
        "url": "https://github.com/amount/gql2ts/issues/250"
      },
      "repository": {
        "nameWithOwner": "amount/gql2ts"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1MjQwNDUxMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1MjQwNDUxMw==",
      "body": "i started getting the prompt.  for me personally, the prompt is sufficient.  adding the setting would still be a nice-to-have, but i'm now content.  will leave open for the other interested parties",
      "createdAt": "2019-01-08T18:34:37Z",
      "issue": {
        "id": "MDU6SXNzdWUzODg0MTM2NDk=",
        "title": "auto-load workspace file if it is the only workspace file in the folder root",
        "url": "https://github.com/microsoft/vscode/issues/64565"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1Mjk5NjczNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1Mjk5NjczNg==",
      "body": "a couple of updates this evening. \r\n\r\n- got rid of the react-table's headers\r\n- added package license info\r\n- fixed the CSP errors\r\n- did a little bit of mobile friendly-ification\r\n- tried to get releases from github's gql api, but it keeps returning empty arrays 🤔 .\r\n\r\nnext up is to actually wire in the search bar, expose other \"columns\" that one can filter and sort on, maybe start a readme harvester.",
      "createdAt": "2019-01-10T07:28:30Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTY3ODg3MDQ=",
        "title": "show-deno: deno module search & browser",
        "url": "https://github.com/denoland/deno/issues/1478"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1MzU3MDQ4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1MzU3MDQ4NQ==",
      "body": "Sweet, thanks. I'll verify later",
      "createdAt": "2019-01-11T16:17:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjQ0MDMyMDI2",
        "title": "Improve the metadata UI and add links",
        "url": "https://github.com/dino-dna/denolandia/pull/1"
      },
      "repository": {
        "nameWithOwner": "dino-dna/denolandia"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1Mzc5NjMxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1Mzc5NjMxOA==",
      "body": "there is a subtlety missing in both above assessments. _The file no longer exists_. I'm writing a non-existent file, and the newly flushed file uses an old file name. The issue is not that Mac OS is generally case insensitive, it's that old filenames are being recycled when they should not be",
      "createdAt": "2019-01-13T02:20:01Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTg2MDY4NzU=",
        "title": "osx filesystem writes are not always guaranteed to match requested casing",
        "url": "https://github.com/nodejs/node/issues/25469"
      },
      "repository": {
        "nameWithOwner": "nodejs/node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1Mzc5NjM1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1Mzc5NjM1Nw==",
      "body": "Sorry, I should have made that more clear in the problem description. The referenced YouTube video shows it very clearly",
      "createdAt": "2019-01-13T02:21:07Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTg2MDY4NzU=",
        "title": "osx filesystem writes are not always guaranteed to match requested casing",
        "url": "https://github.com/nodejs/node/issues/25469"
      },
      "repository": {
        "nameWithOwner": "nodejs/node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1NjUwMjM1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1NjUwMjM1OA==",
      "body": "Ya it's bonkers.  I don't have any more info.  I understand that it's a fools errand to try and troubleshoot it with such little reproducibility, but at least the failure holds for sufficiently long enough sessions to be captured on video (re: YouTube post).  It might still be failing on my other box.  I'll check, and if it is, I can run whatever-diagnostic we may see fit",
      "createdAt": "2019-01-22T18:07:53Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTg2MDY4NzU=",
        "title": "osx filesystem writes are not always guaranteed to match requested casing",
        "url": "https://github.com/nodejs/node/issues/25469"
      },
      "repository": {
        "nameWithOwner": "nodejs/node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1NzcwMjQxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1NzcwMjQxNg==",
      "body": "Ya, that sounds super useful.  Just using the pk is not entirely pragmatic",
      "createdAt": "2019-01-25T19:47:32Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMyNDg2OTI=",
        "title": "Add `where` input argument - a new fork",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1NzcyMTM3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1NzcyMTM3NA==",
      "body": "If you want to add it here I'll give you full perms.  If you don't, no sweat",
      "createdAt": "2019-01-25T20:44:55Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMyNDg2OTI=",
        "title": "Add `where` input argument - a new fork",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1Nzg3ODAwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg3ODAwMg==",
      "body": "access added. sem rel will auto cut releases, but will add you to npm too",
      "createdAt": "2019-01-27T00:23:11Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMyNDg2OTI=",
        "title": "Add `where` input argument - a new fork",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1OTExNzQ4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1OTExNzQ4MA==",
      "body": "failing test is unrelated to 1 LOC patch",
      "createdAt": "2019-01-30T21:32:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjQ5MDM0OTMx",
        "title": "feat/scripts-version-via-env",
        "url": "https://github.com/timarney/react-app-rewired/pull/359"
      },
      "repository": {
        "nameWithOwner": "timarney/react-app-rewired"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1OTgxMTc4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1OTgxMTc4NA==",
      "body": "greetings!  thanks.  in fact, the search bar isn't wired in at all yet. whoops!  the search _used_ to work when i exposed the default react table headers.  i didn't proceed much further on this yet because the deno team didn't give me any feedback to date.\r\n\r\n- [this input](https://github.com/dino-dna/denolandia/blob/cef6bf0f56c26782a5eeaf63906337b1fcdf9ead/packages/ui/src/components/App.tsx#L18) needs an onChange handler, to update...\r\n- [this react-table controlled state](https://github.com/dino-dna/denolandia/blob/cef6bf0f56c26782a5eeaf63906337b1fcdf9ead/packages/ui/src/components/SearchResults.tsx#L43)\r\n\r\nit's not super pretty, but i'm keen on letting react-table do all of the heavy lifting of managing all of the table state.",
      "createdAt": "2019-02-01T18:01:59Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDU2OTkwNTc=",
        "title": "CSP errors on denolandia.cdaringe.com",
        "url": "https://github.com/dino-dna/denolandia/issues/2"
      },
      "repository": {
        "nameWithOwner": "dino-dna/denolandia"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ1OTgxMjQ2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ1OTgxMjQ2NQ==",
      "body": "![](https://user-images.githubusercontent.com/1003261/50815568-6e089880-12d2-11e9-95af-3f5e9a479899.png)\r\n\r\nthe little input below the \"Package\" header _actually_ works, but i hid it in favor of using the giant banner search input.  just didn't pass it on thru",
      "createdAt": "2019-02-01T18:03:59Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDU2OTkwNTc=",
        "title": "CSP errors on denolandia.cdaringe.com",
        "url": "https://github.com/dino-dna/denolandia/issues/2"
      },
      "repository": {
        "nameWithOwner": "dino-dna/denolandia"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2MDAzMDc0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2MDAzMDc0Ng==",
      "body": "added a few more fixes/updates:\r\n\r\n- actually wired in the search bar 🌮 \r\n- added ci 🏁 \r\n- fixed issues w/ github meta icons (w/ helpful patch from @j-f1)\r\n- fixed module name sort icon\r\n- refactored _things_ to match patched registry json format\r\n- renamed usages of `package` => `module`",
      "createdAt": "2019-02-03T07:47:20Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTY3ODg3MDQ=",
        "title": "show-deno: deno module search & browser",
        "url": "https://github.com/denoland/deno/issues/1478"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2MDAzMDg0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2MDAzMDg0Mw==",
      "body": "![latest mov](https://user-images.githubusercontent.com/1003261/52174175-20524500-2745-11e9-9d97-31e24a55ea7f.gif)\r\n",
      "createdAt": "2019-02-03T07:49:35Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTY3ODg3MDQ=",
        "title": "show-deno: deno module search & browser",
        "url": "https://github.com/denoland/deno/issues/1478"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2MDEwNzI5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2MDEwNzI5NA==",
      "body": "Sure!  I don't use the default react-scripts--i use react-scripts-ts.  In my stylguidist config, I need to pass my webpack config to stylguidist directly.  Why?  Because I am applying some small modifications to the config provided by react-scripts-ts.  without this PR, I don't have a way to modify react-scripts-ts webpack config as needed.",
      "createdAt": "2019-02-04T01:17:53Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjQ5MDM0OTMx",
        "title": "feat/scripts-version-via-env",
        "url": "https://github.com/timarney/react-app-rewired/pull/359"
      },
      "repository": {
        "nameWithOwner": "timarney/react-app-rewired"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2MDUzMTQ2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2MDUzMTQ2OA==",
      "body": "Hey Guy!  Yup.  On the backlog.",
      "createdAt": "2019-02-05T06:48:09Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDY2MjU3NDg=",
        "title": "Compilation failure using @types/retry: 0.12.0",
        "url": "https://github.com/cdaringe/pg-subscribe/issues/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pg-subscribe"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2MDkxODUwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2MDkxODUwNw==",
      "body": "closed by https://github.com/cdaringe/pg-subscribe/releases/tag/v1.2.1",
      "createdAt": "2019-02-06T06:49:10Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDY2MjU3NDg=",
        "title": "Compilation failure using @types/retry: 0.12.0",
        "url": "https://github.com/cdaringe/pg-subscribe/issues/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pg-subscribe"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2MzUzNjI4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2MzUzNjI4NA==",
      "body": "1.1.0 now protects from cargo & fluid wagons :)\r\n\r\nall it took was me dying enough to motivate!",
      "createdAt": "2019-02-14T08:24:16Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTkwODkyMTk=",
        "title": "Can still die to fluid/cargo wagons",
        "url": "https://github.com/cdaringe/nice-try-train/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/nice-try-train"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2MzU0MjkyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2MzU0MjkyMQ==",
      "body": "grumbles... https://forums.factorio.com/viewtopic.php?f=189&t=64896&p=398282#p398282",
      "createdAt": "2019-02-14T08:46:43Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTkwODkyMTk=",
        "title": "Can still die to fluid/cargo wagons",
        "url": "https://github.com/cdaringe/nice-try-train/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/nice-try-train"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2Mzc4NjkyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2Mzc4NjkyNQ==",
      "body": "This is awesome!  I need to install commitlint.  semantic release won't cut a release without a formatted commit.  Can you `git commit --amend` with a commit that reads `fix: remove deprecated recurseDataGeneratorsForField usage`?  Also, you could run `yarn format` too.  Apologies for not having ci catch that",
      "createdAt": "2019-02-14T20:41:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjUzMjExMTE3",
        "title": "Remove deprecated recurseDataGeneratorsForField",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2Mzg5NzAwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2Mzg5NzAwNw==",
      "body": "I think we're set.  Thanks!",
      "createdAt": "2019-02-15T03:55:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjUzMjExMTE3",
        "title": "Remove deprecated recurseDataGeneratorsForField",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2NTQwMzk4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2NTQwMzk4OQ==",
      "body": "hey guys.  want to contribute, but overcommitted.  i moved on from this.  feel free to close.  will reopen if i find the time/motivation to pursue further",
      "createdAt": "2019-02-20T03:13:46Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTE5MzQzOTY=",
        "title": "feature request: upstreamPassThrough only ",
        "url": "https://github.com/hapijs/h2o2/issues/87"
      },
      "repository": {
        "nameWithOwner": "hapijs/h2o2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2NzE3MTY3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2NzE3MTY3Mg==",
      "body": "There is a new set of ts plugins in town, and they do fix the issue when using pure eslint.  However, the new plugins don't register correctly with standard.  I've recorded my current state in the below issue if someone wants to take a peek\r\n\r\nhttps://github.com/standard/standard/issues/1252",
      "createdAt": "2019-02-25T20:32:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTc3OTA3Mjcw",
        "title": "Exclude typescript from no-undef checking",
        "url": "https://github.com/standard/standard/pull/1101"
      },
      "repository": {
        "nameWithOwner": "standard/standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2NzI0OTIwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2NzI0OTIwNQ==",
      "body": "I've been super slammed and haven't had a moment to get in there. If someone wants to set up PR I will definitely review and merge quickly so long as the normal checks pass",
      "createdAt": "2019-02-26T01:03:28Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMyNDg2OTI=",
        "title": "Add `where` input argument - a new fork",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2ODE2MzExMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2ODE2MzExMA==",
      "body": "been slammed.  sorry for the delay.  rebase pushed :)",
      "createdAt": "2019-02-28T07:11:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjQ5MDM0OTMx",
        "title": "feat/scripts-version-via-env",
        "url": "https://github.com/timarney/react-app-rewired/pull/359"
      },
      "repository": {
        "nameWithOwner": "timarney/react-app-rewired"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2ODE2NjEwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2ODE2NjEwMw==",
      "body": "thanks.  closed by 5dfeb1d ",
      "createdAt": "2019-02-28T07:23:37Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTMwODQ2NzU=",
        "title": "Documentation is incorrect",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/15"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2ODU0OTgxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2ODU0OTgxNA==",
      "body": "I started this.  almost finished :)",
      "createdAt": "2019-03-01T05:42:05Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMyNDg2OTI=",
        "title": "Add `where` input argument - a new fork",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2ODk1NTE0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2ODk1NTE0Nw==",
      "body": "hey @jashmenn, i noticed that in your impl, `snake_cased` fields (e.g. `serial_number`) don't cleanly map back into `serialNumber` per the defacto behavior between pg fields and gql fields.  i'm a little rusty getting back into this.  know what needs to happen there?  in your tests, i'd really like to see `\"serialNumber\"` ==> `serial_number` in the create table sql and have it all buck.  i will look into it a bit more later as well",
      "createdAt": "2019-03-02T20:01:53Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMyNDg2OTI=",
        "title": "Add `where` input argument - a new fork",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ2OTM0MzE1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ2OTM0MzE1Nw==",
      "body": "hush hush @gatsbot, the issue is alive and valid",
      "createdAt": "2019-03-04T17:34:35Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDg0NjE4NDQ=",
        "title": "request: add warnings when remark prism language not found",
        "url": "https://github.com/gatsbyjs/gatsby/issues/11667"
      },
      "repository": {
        "nameWithOwner": "gatsbyjs/gatsby"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3MTIxMTgzNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3MTIxMTgzNQ==",
      "body": "need to square https://github.com/cdaringe/postgraphile-upsert/issues/8#issuecomment-468955147 away.  merging @jashmenn's work into my fork isn't a _huge_ diff, but there a non-trivial amount of resolution at play.\r\n\r\nit's not hot on my radar TBH, but i _do_ want it too.  if you can figure out https://github.com/cdaringe/postgraphile-upsert/issues/8#issuecomment-468955147, i will commit to getting a version bump in w/in a week of that time",
      "createdAt": "2019-03-09T18:59:27Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMyNDg2OTI=",
        "title": "Add `where` input argument - a new fork",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3MTcxODI4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3MTcxODI4MQ==",
      "body": "i have a near working POC as well:\r\n\r\nhttps://github.com/cdaringe/gql-ts-client-codegen/blob/bc004492b3d7e0cb10aeec0e6970813bac40605a/src/target.ts",
      "createdAt": "2019-03-11T20:33:50Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTUxMTcwNDg=",
        "title": "feature request: gql client library as new package",
        "url": "https://github.com/amount/gql2ts/issues/250"
      },
      "repository": {
        "nameWithOwner": "amount/gql2ts"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3MjA2NzIyMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3MjA2NzIyMQ==",
      "body": "Nice!  Ya, yours are far more complete.  fromSchema, perhaps as consequence of my graphql output, doesn't map my available params into queryable options.  I need to figure out what's going on there.  I look forward to tinkering with your typings soon",
      "createdAt": "2019-03-12T16:10:34Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTUxMTcwNDg=",
        "title": "feature request: gql client library as new package",
        "url": "https://github.com/amount/gql2ts/issues/250"
      },
      "repository": {
        "nameWithOwner": "amount/gql2ts"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3NTEyNTQ2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3NTEyNTQ2Nw==",
      "body": "I found that in `node-renderer`, one may hack the `active = ...` statement to get things to _show up_ :)",
      "createdAt": "2019-03-21T06:34:43Z",
      "issue": {
        "id": "MDU6SXNzdWU0MjM1ODE1Mjg=",
        "title": "request: always show some code snippets, regardless of language selected",
        "url": "https://github.com/sarasate/gate_bak/issues/6"
      },
      "repository": {
        "nameWithOwner": "sarasate/gate_bak"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3NTQ5NjU1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3NTQ5NjU1MA==",
      "body": "thx for the PR!  much appreciated. unfortunately, your commit would not jive with the release process--it doesn't ~follow semantic release~ adhere to the commitlint, which should run when commits are made in local installs.  anyway, I added `commitlint` to the build, so hopefully these are caught in PRs downstream.  I did update the docs.\r\n\r\nthx again",
      "createdAt": "2019-03-22T05:13:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjYyMTc5Mzcw",
        "title": "Fix README usage",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/18"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3NzQ0OTMwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3NzQ0OTMwNw==",
      "body": "even with the plugin, it doesn't load right in standard.  see https://github.com/standard/standard/issues/1252",
      "createdAt": "2019-03-28T05:03:31Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTQ5OTY4MTM=",
        "title": "Documentation should be updated in TypeScript section",
        "url": "https://github.com/standard/standard/issues/1255"
      },
      "repository": {
        "nameWithOwner": "standard/standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3NzQ0OTg1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3NzQ0OTg1NQ==",
      "body": "it would be helpful if any of the standard developers who are well versed in eslint (even if you're not a typescript user), could pitch in and help diagnose _why_  the `\"@typescript-eslint\" plugin's rules are _discarded_.  I'd be happy to even pair on it some evening (I'm in PST)",
      "createdAt": "2019-03-28T05:06:39Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTIyMTYwNzI=",
        "title": "requested plugin's rules not successfully being added to the linting config object",
        "url": "https://github.com/standard/standard/issues/1252"
      },
      "repository": {
        "nameWithOwner": "standard/standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3Nzg5MTc3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3Nzg5MTc3NQ==",
      "body": "reworked @dolezel's approach somewhat, released: https://www.npmjs.com/package/koa-parcel-middleware",
      "createdAt": "2019-03-29T07:03:27Z",
      "issue": {
        "id": "MDU6SXNzdWUyODQ5MjAxNTI=",
        "title": "Error: Can't set headers after they are sent.",
        "url": "https://github.com/parcel-bundler/parcel/issues/422"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3Nzg5MTg3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3Nzg5MTg3MQ==",
      "body": "https://www.npmjs.com/package/koa-parcel-middleware",
      "createdAt": "2019-03-29T07:03:50Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzMwMDYwNDY=",
        "title": "Proxy support?",
        "url": "https://github.com/parcel-bundler/parcel/issues/1562"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ3ODQ1MTc4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ3ODQ1MTc4NQ==",
      "body": "this issue can be closed, imho.  parcel ships a dev server, middleware, and a hmr api.  it's all documented on https://parceljs.org",
      "createdAt": "2019-04-01T06:26:55Z",
      "issue": {
        "id": "MDU6SXNzdWUyODM0MDQxNjY=",
        "title": "Is parcel meant to work with server-side code insluding HMR?",
        "url": "https://github.com/parcel-bundler/parcel/issues/355"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4MTEwMTMwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4MTEwMTMwMg==",
      "body": "https://cowtown.surge.sh 🐮 🏘 \r\n\r\nCompany name: n/a\r\ndocz URL: https://cowtown.surge.sh\r\nGithub: https://github.com/cdaringe/cowtown\r\nCompany site: n/a",
      "createdAt": "2019-04-09T04:52:37Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzIyNDQ1MzY=",
        "title": "Projects using docz 🙌🏻",
        "url": "https://github.com/doczjs/docz/issues/37"
      },
      "repository": {
        "nameWithOwner": "doczjs/docz"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4MTEwMTk1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4MTEwMTk1Mg==",
      "body": "@jedmao--nice, I was just about to start looking into a `runkit` integration, and I see you've already done so.  I intend to emulate your solution. thx for the ref!",
      "createdAt": "2019-04-09T04:56:43Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzIyNDQ1MzY=",
        "title": "Projects using docz 🙌🏻",
        "url": "https://github.com/doczjs/docz/issues/37"
      },
      "repository": {
        "nameWithOwner": "doczjs/docz"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4MjM1NzA0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4MjM1NzA0NQ==",
      "body": "@Jameskmonger's solution is great.  i did a refactor that i think blends the best of all of the above solutions.  it's extensible, provides good defaults, and mandates essential props (e.g. `id` for the input so the label/accessibility works).\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/55998312-9f4a8900-5c72-11e9-9b82-0ab27ba14470.png)\r\n\r\n```tsx\r\nexport const InputFile: React.FC<{\r\n  button?: ButtonProps\r\n  input: React.InputHTMLAttributes<any> & { id: string }\r\n}> = ({ button = {}, input: inputProps }) => {\r\n  let hiddenInput: HTMLInputElement | null = null\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        icon='upload'\r\n        htmlFor={inputProps.id}\r\n        label={<Label as='label' style={{ cursor: 'pointer' }} basic children='Select file' />}\r\n        onClick={() => hiddenInput!.click()}\r\n        labelPosition='right'\r\n        {...button}\r\n      />\r\n      <input\r\n        hidden\r\n        ref={el => {\r\n          hiddenInput = el!\r\n        }}\r\n        type='file'\r\n        {...inputProps}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n```\r\n\r\nusage:\r\n\r\n```tsx\r\n<InputFile\r\n  input={{\r\n    id: 'upload-file',\r\n    onChange: handleUploadRequest\r\n  }}\r\n/>\r\n```",
      "createdAt": "2019-04-11T22:56:03Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTk4NTU2Mjc=",
        "title": "missing file upload input/button",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/2103"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4MjM3MDM5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4MjM3MDM5MQ==",
      "body": "and i released https://www.npmjs.com/package/semantic-ui-react-input-file for it.  perhaps we can collab :)",
      "createdAt": "2019-04-11T23:23:02Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTk4NTU2Mjc=",
        "title": "missing file upload input/button",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/2103"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4MjY0NDMzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4MjY0NDMzNg==",
      "body": "It's a TS-ism that asserts that the operand is non-null/non-undefined.",
      "createdAt": "2019-04-12T16:47:19Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTk4NTU2Mjc=",
        "title": "missing file upload input/button",
        "url": "https://github.com/Semantic-Org/Semantic-UI-React/issues/2103"
      },
      "repository": {
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4MzkwNzA5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4MzkwNzA5Mg==",
      "body": "cleaned up tags & fixed the issue where the pagination bar at the bottom went missing :)",
      "createdAt": "2019-04-17T01:55:29Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTY3ODg3MDQ=",
        "title": "show-deno: deno module search & browser",
        "url": "https://github.com/denoland/deno/issues/1478"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4NDc4MjczMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4NDc4MjczMA==",
      "body": "i guess it's just a plain `GraphQLObjectType` with `args`",
      "createdAt": "2019-04-19T06:40:51Z",
      "issue": {
        "id": "MDU6SXNzdWU0MzUwNjcyNTg=",
        "title": "graphql parameters are omitted in typings",
        "url": "https://github.com/amount/gql2ts/issues/260"
      },
      "repository": {
        "nameWithOwner": "amount/gql2ts"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4NTIyNDI4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4NTIyNDI4NA==",
      "body": "i'm observing this as well\r\n\r\n```sh\r\n$ i3 --moreversion 2>&- | pbcopy\r\nBinary i3 version:  4.16.1-1-g341fcf99 (2019-01-27, branch \"gaps\") © 2009 Michael Stapelberg and contributors\r\n(Getting version from running i3, press ctrl-c to abort…)\r\nRunning i3 version: 4.16.1-1-g341fcf99 (2019-01-27, branch \"gaps\") (pid 1350)\r\nLoaded i3 config: /home/cdaringe/.i3/config (Last modified: Sat 20 Apr 2019 09:07:34 PM PDT, 1732 seconds ago)\r\n\r\nThe i3 binary you just called: /usr/bin/i3\r\nThe i3 binary you are running: i3\r\n```\r\n\r\nconfig: https://github.com/cdaringe/dotfiles/blob/master/env/.i3/config\r\n\r\nin the event that @diegoviola's datas don't provide sufficient debuggins info, i  am also willing to start collecting logs later\r\n\r\n![artifacts](https://user-images.githubusercontent.com/1003261/56483772-b9f5dc80-6480-11e9-92d6-ca9beb7b0dfc.png)\r\n",
      "createdAt": "2019-04-21T04:39:26Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTYwMjE1MTE=",
        "title": "Graphics artifacts with i3-wm on amdgpu",
        "url": "https://github.com/i3/i3/issues/3577"
      },
      "repository": {
        "nameWithOwner": "i3/i3"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4ODk0OTExOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4ODk0OTExOQ==",
      "body": "@LinusU, the docs claim first class compat with typescript, thus, this _should_ work.",
      "createdAt": "2019-05-03T05:47:29Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTIyMTYwNzI=",
        "title": "requested plugin's rules not successfully being added to the linting config object",
        "url": "https://github.com/standard/standard/issues/1252"
      },
      "repository": {
        "nameWithOwner": "standard/standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ4OTM1OTk5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ4OTM1OTk5Mw==",
      "body": "oh @gatsbot you little eager closing troll ;) still an issue.",
      "createdAt": "2019-05-04T19:50:45Z",
      "issue": {
        "id": "MDU6SXNzdWU0MjgwMDc0OTk=",
        "title": "gatsby build build hangs indefinitely when there are 0 pages/queries",
        "url": "https://github.com/gatsbyjs/gatsby/issues/13019"
      },
      "repository": {
        "nameWithOwner": "gatsbyjs/gatsby"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ5MDc2MjUxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ5MDc2MjUxMA==",
      "body": "sure thing, i'll ask github support",
      "createdAt": "2019-05-09T06:33:22Z",
      "issue": {
        "id": "MDU6SXNzdWU0NDE2NDM1MjM=",
        "title": "Suggest remove fork relation",
        "url": "https://github.com/node-swig/swig-templates/issues/53"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ5MTMyNDM3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ5MTMyNDM3NQ==",
      "body": "GitHub support has obliged and done as requested.  Thanks to them :)",
      "createdAt": "2019-05-10T15:12:23Z",
      "issue": {
        "id": "MDU6SXNzdWU0NDE2NDM1MjM=",
        "title": "Suggest remove fork relation",
        "url": "https://github.com/node-swig/swig-templates/issues/53"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ5NDA0NTQ3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ5NDA0NTQ3MA==",
      "body": "@eadistar, since last time I suffered the issue, purging the cache did not work",
      "createdAt": "2019-05-20T15:51:53Z",
      "issue": {
        "id": "MDU6SXNzdWU0MjgwMDc0OTk=",
        "title": "gatsby build build hangs indefinitely when there are 0 pages/queries",
        "url": "https://github.com/gatsbyjs/gatsby/issues/13019"
      },
      "repository": {
        "nameWithOwner": "gatsbyjs/gatsby"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ5NDI2NDE1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ5NDI2NDE1MQ==",
      "body": "i no longer see this option anywhere but the entrypoint in the src code.  anyone get it to take?",
      "createdAt": "2019-05-21T06:55:30Z",
      "issue": {
        "id": "MDU6SXNzdWU0NjE0MDc0MQ==",
        "title": "Run as User Agent instead of global.",
        "url": "https://github.com/coreybutler/node-mac/issues/12"
      },
      "repository": {
        "nameWithOwner": "coreybutler/node-mac"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ5NTQ0MzgxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ5NTQ0MzgxNA==",
      "body": "@belemaire, thanks mate. ",
      "createdAt": "2019-05-24T01:50:06Z",
      "issue": {
        "id": "MDU6SXNzdWU0NDc4ODQ3MTE=",
        "title": "no readme, unsure how to use this project",
        "url": "https://github.com/electrode-io/ern-base-composite-starter/issues/1"
      },
      "repository": {
        "nameWithOwner": "electrode-io/ern-base-composite-starter"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDQ5OTY4ODIxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDQ5OTY4ODIxOQ==",
      "body": "thanks!  looks great!  closed by #53 ",
      "createdAt": "2019-06-06T22:16:41Z",
      "issue": {
        "id": "MDU6SXNzdWU0NTMyNDU5OTM=",
        "title": "docs: difference between event handler registration methods",
        "url": "https://github.com/electrode-io/react-native-electrode-bridge/issues/52"
      },
      "repository": {
        "nameWithOwner": "electrode-io/react-native-electrode-bridge"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUwNzQ3Mjg5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDUwNzQ3Mjg5Nw==",
      "body": "ya, last i tried, a good debug experience still essentially requires that boilerplate (e.g. disabling compile enhancements) otherwise sourceMaps get real weird.  i'm not sure i've tried w/ babel7 yet though, to be fair.  disabling compile enhancements + ts-node still allow me to use breakpoints naturally in my editor and use the launch config recipes 👨‍🍳  without a headache.",
      "createdAt": "2019-07-02T00:32:29Z",
      "issue": {
        "id": "MDU6SXNzdWUxODkyOTU1NTY=",
        "title": "Support to Run TypeScript test file(.ts) directly without Precompiling(tsc)",
        "url": "https://github.com/avajs/ava/issues/1109"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUxMTE1Mjc2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDUxMTE1Mjc2Ng==",
      "body": "Lesson 5 Step 4 introduces concepts not covered before the step.\r\n\r\n1. syntax w.r.t. multiple let expressions in a function are not covered (where do `in`s go? `;`s?)\r\n1. @ symbol/operator? (still doing these exercises) is not covered",
      "createdAt": "2019-07-13T20:50:26Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTYyMTczMA==",
        "title": "Lesson 5 Step 4",
        "url": "https://github.com/OCamlPro/tryocaml/issues/140"
      },
      "repository": {
        "nameWithOwner": "OCamlPro/tryocaml"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUyMDI2OTYwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDUyMDI2OTYwMw==",
      "body": "thanks @feross. i did indeed switch to [`standardx`](https://github.com/cdaringe/standard-damn-it/blob/e4785bf94e53eb05f4033a5738e65eb10dada955/src/index.ts#L50) when using/detecting TS",
      "createdAt": "2019-08-11T23:21:11Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTIyMTYwNzI=",
        "title": "requested plugin's rules not successfully being added to the linting config object",
        "url": "https://github.com/standard/standard/issues/1252"
      },
      "repository": {
        "nameWithOwner": "standard/standard"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUyMjE4MjkzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDUyMjE4MjkzMg==",
      "body": "@ebabel-eu, thank you *so much* for willingness to look into this!  turns out, when i was calling `generateAnimationFrames`, i was using a bad key, and phaser is _just fine_ with that! i would have hoped it threw an `Error`. anyway, i was finally able to resolve my issue.  thanks!",
      "createdAt": "2019-08-16T23:46:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzA2NjA1ODE5",
        "title": "Re-export the sprites sheet with TexturePacker.",
        "url": "https://github.com/dino-dna/dino-king/pull/5"
      },
      "repository": {
        "nameWithOwner": "dino-dna/dino-king"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUyNDE0NzkwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDUyNDE0NzkwMQ==",
      "body": "exactly :). it's not from our source, that's for sure!  Google seems to suggest it's apple internal?",
      "createdAt": "2019-08-23T02:27:54Z",
      "issue": {
        "id": "MDU6SXNzdWU0ODQyNjE1Njc=",
        "title": "app launch crashes on \"[XYZModeTabBarController _viewWillAppearTimestamp]: unrecognized selector sent to instance\"",
        "url": "https://github.com/wix/Detox/issues/1626"
      },
      "repository": {
        "nameWithOwner": "wix/Detox"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUyNDY1MzMwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDUyNDY1MzMwNg==",
      "body": "I understand that glob support is now in `files`, but why did it get _removed_ from the cli?  did the args to the CLI not implicitly map into entries into the `files` configuration?  thx :)",
      "createdAt": "2019-08-25T18:31:31Z",
      "issue": {
        "id": "MDU6SXNzdWUyODUzNjYzMjA=",
        "title": "When specifying glob pattern, test files 2 directories deep are ignored ",
        "url": "https://github.com/avajs/ava/issues/1624"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUyNTEyMjgxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDUyNTEyMjgxMQ==",
      "body": "> My environment problem. the node-gyp installed by yarn has a problem, just change to npm.\r\n\r\nno kidding.  i really didn't expect that to resolve this, but sho'nuff it did 😄 ",
      "createdAt": "2019-08-27T03:36:41Z",
      "issue": {
        "id": "MDU6SXNzdWU0NjQ1NjM0Njg=",
        "title": "once called more than once. in node.js",
        "url": "https://github.com/pouchdb/pouchdb/issues/7825"
      },
      "repository": {
        "nameWithOwner": "pouchdb/pouchdb"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUyNjY5MDA0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDUyNjY5MDA0MA==",
      "body": "given that the team now gives a visual prompt reliably _and_ lets you open a project from the CLI, this may be actually better left open for user land to solve. perhaps thru a bash alias, perhaps through a vscode extension.  I'm closing my issue in efforts to help the core team keep the noise down, and work on those sweet sweet juicy features in the roadmap!",
      "createdAt": "2019-08-30T17:48:20Z",
      "issue": {
        "id": "MDU6SXNzdWUzODg0MTM2NDk=",
        "title": "auto-load workspace file if it is the only workspace file in the folder root",
        "url": "https://github.com/microsoft/vscode/issues/64565"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDUzNjMyNDQ4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDUzNjMyNDQ4MA==",
      "body": "@rakannimer, any feedback?",
      "createdAt": "2019-09-29T17:48:15Z",
      "issue": {
        "id": "MDU6SXNzdWU0MzE3NDI0NDA=",
        "title": "RFC: support dynamic rendering of a MDX code block",
        "url": "https://github.com/doczjs/docz/issues/785"
      },
      "repository": {
        "nameWithOwner": "doczjs/docz"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0MTE4MDI2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0MTE4MDI2OQ==",
      "body": "Uh oh!  Well, that script error I speculate is immaterial to the lack of results, but a patch would certainly be welcome!  Given that the project isn't super interested in pursuing this further, I'm uncertain on how much maintenance to put into it.  If you have time to identify the data issue, I will absolutely accept it.  Probably something straight forward.  The system is easily runnable locally",
      "createdAt": "2019-10-11T18:45:05Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDU5OTYxOTI=",
        "title": "refusal to execute inline-script",
        "url": "https://github.com/dino-dna/denolandia/issues/4"
      },
      "repository": {
        "nameWithOwner": "dino-dna/denolandia"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0MjAzMTM4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0MjAzMTM4MQ==",
      "body": "@avalanche1, no, just the http adapter.  The indexedb adapter would only work in browsers. \r\n Feel free to send another issue or an example and Id be happy to look",
      "createdAt": "2019-10-15T04:31:06Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDg3MTM1MTk=",
        "title": "Invalid Adapter: undefined",
        "url": "https://github.com/cdaringe/pouchy/issues/150"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0MjAzNjkzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0MjAzNjkzMg==",
      "body": "thanks for the report.  that was embarrassing. 14.x is released now.  semantic-release is being a little finicky.  13/14.x are fully compatible--semantic-release wasn't picking up valid tags, so had to force a major.",
      "createdAt": "2019-10-15T04:58:46Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDY5OTA2MTQ=",
        "title": "Cannot resolve dependency 'pouchy'",
        "url": "https://github.com/cdaringe/pouchy/issues/277"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0MjAzNzkxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0MjAzNzkxMQ==",
      "body": "parcel/typescript MVP: https://github.com/cdaringe/parcel-typescript-pouchy",
      "createdAt": "2019-10-15T05:02:56Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDY5OTA2MTQ=",
        "title": "Cannot resolve dependency 'pouchy'",
        "url": "https://github.com/cdaringe/pouchy/issues/277"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0MjI3NDM2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0MjI3NDM2NQ==",
      "body": "done!",
      "createdAt": "2019-10-15T15:36:52Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzI4MDYzMzg5",
        "title": "dvd.js.org",
        "url": "https://github.com/js-org/js.org/pull/3448"
      },
      "repository": {
        "nameWithOwner": "js-org/js.org"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0MjI3ODM3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0MjI3ODM3OQ==",
      "body": "Ya, that's a fair callout. A short \"getting started\" section is probably worthwhile",
      "createdAt": "2019-10-15T15:45:33Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDczMDk3NzE=",
        "title": "Docs: mention the steps needed to get indexedDB working",
        "url": "https://github.com/cdaringe/pouchy/issues/278"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0MjQ3OTAzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0MjQ3OTAzMQ==",
      "body": "Did you figure it out?  If not, the adapter stuff is the exact same as PouchDB, and the readme shows a few examples of plugging in PouchDB adapters",
      "createdAt": "2019-10-16T02:11:23Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDczMDk3NzE=",
        "title": "Docs: mention the steps needed to get indexedDB working",
        "url": "https://github.com/cdaringe/pouchy/issues/278"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NDgzMDMzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NDgzMDMzOA==",
      "body": "oh dude wuuuut! sweet!  i didn't know you was pushin... i just totally made conflicts happen on you",
      "createdAt": "2019-10-22T06:57:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMwODMyNjY1",
        "title": "Feat/styleguidist",
        "url": "https://github.com/dino-dna/checkup/pull/1"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NDgzMTA3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NDgzMTA3Mg==",
      "body": "i just pushed various style patches and fixes.\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/67264064-d8a05480-f45e-11e9-942d-26d0bb0d26d0.png)\r\n\r\nit's still nowhere near cory status, but the scroll behavior and text-overflow is all good",
      "createdAt": "2019-10-22T07:00:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMwODMyNjY1",
        "title": "Feat/styleguidist",
        "url": "https://github.com/dino-dna/checkup/pull/1"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NTIyMTEzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NTIyMTEzMw==",
      "body": "any forward motion here?",
      "createdAt": "2019-10-23T01:18:54Z",
      "issue": {
        "id": "MDU6SXNzdWU0NDcwOTU4NTg=",
        "title": "Signing builds",
        "url": "https://github.com/joeireland/electron-circleci/issues/1"
      },
      "repository": {
        "nameWithOwner": "joeireland/electron-circleci"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NjIzMzk5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NjIzMzk5Mw==",
      "body": "imperfect.  tired & sleepy time",
      "createdAt": "2019-10-25T07:17:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyMzczNTEw",
        "title": "feat: add logging",
        "url": "https://github.com/dino-dna/checkup/pull/5"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NjQ1NDQ0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NjQ1NDQ0OA==",
      "body": ": 🔥",
      "createdAt": "2019-10-25T18:05:28Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyNjE3MTM3",
        "title": "Redesign job, status",
        "url": "https://github.com/dino-dna/checkup/pull/6"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NjUxODA3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NjUxODA3OA==",
      "body": "even if you're not done... i want it!",
      "createdAt": "2019-10-25T21:22:19Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyNjE3MTM3",
        "title": "Redesign job, status",
        "url": "https://github.com/dino-dna/checkup/pull/6"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NjY2MDUzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NjY2MDUzOA==",
      "body": "yep.  #1206 submitted",
      "createdAt": "2019-10-27T04:16:19Z",
      "issue": {
        "id": "MDU6SXNzdWU0MzE3NDI0NDA=",
        "title": "RFC: support dynamic rendering of a MDX code block",
        "url": "https://github.com/doczjs/docz/issues/785"
      },
      "repository": {
        "nameWithOwner": "doczjs/docz"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NjY2MDg0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NjY2MDg0MA==",
      "body": "[![Renovate](https://img.shields.io/badge/renovate-enabled-brightgreen.svg)](https://renovatebot.com)\r\n\r\n`[![Renovate](https://img.shields.io/badge/renovate-enabled-brightgreen.svg)](https://renovatebot.com)`\r\n\r\nfor now, i'm using shields.io ^",
      "createdAt": "2019-10-27T04:21:35Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODUzNDYxODY=",
        "title": "Renovate badge",
        "url": "https://github.com/renovatebot/app-support/issues/38"
      },
      "repository": {
        "nameWithOwner": "renovatebot/app-support"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NjY2MzY2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NjY2MzY2Mw==",
      "body": "so stoked!  these new light/dark icon kits looks awesome! i'm not going to touch web stuff @swashcap... you called dibs ;)",
      "createdAt": "2019-10-27T05:36:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyODI2MzYw",
        "title": "feat(theme): os-aware theme implementation",
        "url": "https://github.com/dino-dna/checkup/pull/12"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NjcwNDg4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NjcwNDg4Mg==",
      "body": "Ya.  Maybe preFn  puts it into a SKIPPED state or something on fail?",
      "createdAt": "2019-10-27T15:27:07Z",
      "issue": {
        "id": "MDU6SXNzdWU1MTI5MzI3ODc=",
        "title": "Conditional testing",
        "url": "https://github.com/dino-dna/checkup/issues/13"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0NjczOTU3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0NjczOTU3Nw==",
      "body": "We're there problems that the ol swapperoo created?",
      "createdAt": "2019-10-27T22:06:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyODkzNzIy",
        "title": "Explicitly Preact",
        "url": "https://github.com/dino-dna/checkup/pull/15"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0Njc1OTc3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0Njc1OTc3MA==",
      "body": "sorry bro, yolo",
      "createdAt": "2019-10-28T01:38:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyOTE2ODAy",
        "title": "feat/animate-pending",
        "url": "https://github.com/dino-dna/checkup/pull/19"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0Njc2MDg1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0Njc2MDg1OA==",
      "body": "weee, supported and documented since `0.0.9`",
      "createdAt": "2019-10-28T01:46:15Z",
      "issue": {
        "id": "MDU6SXNzdWU1MTI4NzQ2NTM=",
        "title": "status icons could be mo betta",
        "url": "https://github.com/dino-dna/checkup/issues/7"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0ODIxNjMxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0ODIxNjMxMg==",
      "body": "hmm. i still don't see the solution.\r\n\r\n@grantwwu - did you find a working recipe?\r\n@bitinn - have a URL handy?",
      "createdAt": "2019-10-31T04:54:07Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzY1OTQ4NTU=",
        "title": "fetch is incompatible with the GlobalFetch['fetch'] type",
        "url": "https://github.com/node-fetch/node-fetch/issues/543"
      },
      "repository": {
        "nameWithOwner": "node-fetch/node-fetch"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0ODIxOTAyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0ODIxOTAyMw==",
      "body": "ultimately the problem is that the `node-fetch` & associated typings intentionally deviate from the spec:\r\n\r\n```ts\r\n// copied directly from the @types/node-fetch\r\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/node-fetch/index.d.ts\r\nRequest {\r\n   ...\r\n    // node-fetch extensions to the whatwg/fetch spec\r\n    agent?: Agent | ((parsedUrl: URL) => Agent);\r\n    compress: boolean;\r\n    counter: number;\r\n    follow: number;\r\n    hostname: string;\r\n    port?: number;\r\n    protocol: string;\r\n    size: number;\r\n    timeout: number;\r\n```\r\n\r\nso compiler errors are inevitable if you don't downcast or create new typings that omit these additions.\r\n\r\ni chose to downcast `node-fetch`:\r\n\r\n```ts\r\nimport nodeFetch from 'node-fetch'\r\nimport { WhatWgFetch } from '../src/interfaces' // export type WhatWgFetch = typeof fetch\r\nconst fetch = (nodeFetch as unknown) as WhatWgFetch\r\n```\r\n\r\nit's not great, but node-fetch != fetch, which ...grumbles... is misleading.  `node-fetch-like` may have been more appropriate, and leaving the extensions _out_ in the base node-fetch implementation to keep node-fetch compliant would have done the likes of us a favor :)",
      "createdAt": "2019-10-31T05:09:42Z",
      "issue": {
        "id": "MDU6SXNzdWUyOTg5MjE5NzA=",
        "title": "Using node-fetch with apollo-link-http",
        "url": "https://github.com/apollographql/apollo-link/issues/513"
      },
      "repository": {
        "nameWithOwner": "apollographql/apollo-link"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU0OTY1MDkzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU0OTY1MDkzMQ==",
      "body": "@swashcap noted \"I'm not really sure about this design pattern... (ux-wise)\".  that's fine. I'm not married to it if there's a more better and/or more simpler idea.  I _do_ want snooze, so I'm going to move forward, but refactors are warmly welcomed!",
      "createdAt": "2019-11-05T03:46:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyOTc3NjM4",
        "title": "feat: support basic snooze support",
        "url": "https://github.com/dino-dna/checkup/pull/22"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1MjE0NzQ3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1MjE0NzQ3OQ==",
      "body": "hey all. not sure why this was closed--the migration guide does not discuss this.  @draperunner, did you solve this?  @rakannimer, do you feel it's covered elsewhere?",
      "createdAt": "2019-11-09T23:38:52Z",
      "issue": {
        "id": "MDU6SXNzdWU0NzAxODYyNDI=",
        "title": "v2: How to migrate indexHtml",
        "url": "https://github.com/doczjs/docz/issues/960"
      },
      "repository": {
        "nameWithOwner": "doczjs/docz"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1MjIxMzM4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1MjIxMzM4OQ==",
      "body": "Greetings!  Ya I need to slap in a few extra Script tags globally.  I'm not clear on what yet, but there's probably a Gatsby API I need to hook into now?",
      "createdAt": "2019-11-10T17:05:34Z",
      "issue": {
        "id": "MDU6SXNzdWU0NzAxODYyNDI=",
        "title": "v2: How to migrate indexHtml",
        "url": "https://github.com/doczjs/docz/issues/960"
      },
      "repository": {
        "nameWithOwner": "doczjs/docz"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1Mzk4ODIyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1Mzk4ODIyMw==",
      "body": "doh! #7 does this and more :) . let's get #7 moving",
      "createdAt": "2019-11-14T17:16:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQxMDg2MjM4",
        "title": "fix: upgrade rn version",
        "url": "https://github.com/electrode-io/movies-reloaded-miniapp/pull/9"
      },
      "repository": {
        "nameWithOwner": "electrode-io/movies-reloaded-miniapp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1Mzk4ODMyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1Mzk4ODMyOA==",
      "body": "should be fixed by #7",
      "createdAt": "2019-11-14T17:17:03Z",
      "issue": {
        "id": "MDU6SXNzdWU1MjI1OTgzMTA=",
        "title": "first load on ios simulator yields unknown arg type error",
        "url": "https://github.com/electrode-io/movies-reloaded-miniapp/issues/8"
      },
      "repository": {
        "nameWithOwner": "electrode-io/movies-reloaded-miniapp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1Mzk5NzMzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1Mzk5NzMzMg==",
      "body": "pulled @friederbluemle's branch and ran it.  works on my ios8 sim.  lgtm!",
      "createdAt": "2019-11-14T17:39:01Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMzNzgzNjI4",
        "title": "Update react-native to 0.60.5",
        "url": "https://github.com/electrode-io/movies-reloaded-miniapp/pull/7"
      },
      "repository": {
        "nameWithOwner": "electrode-io/movies-reloaded-miniapp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1NDgyODg2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1NDgyODg2MQ==",
      "body": "i've been struggling with this as well.  when setting a different user, by the cypress cache dir gets borked. i moved the cached dir contents and opened perms, but then i get `Error: Failed to get 'appData' path`.  hopefully we can figure out a winning recipe",
      "createdAt": "2019-11-18T02:52:26Z",
      "issue": {
        "id": "MDU6SXNzdWU1MjMzMzgxMTA=",
        "title": "Cant run cypress  in non-root mode container",
        "url": "https://github.com/cypress-io/cypress-docker-images/issues/176"
      },
      "repository": {
        "nameWithOwner": "cypress-io/cypress-docker-images"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1NTU2NTQwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1NTU2NTQwNA==",
      "body": "@novemberborn, I really love that idea as a stop gap--it would make most of my projects just work, even if i had to turn off Babel and compile enhancements still.  However, it does however have holes. First, many people compile to a different output dir, so a sibling is file isn't always an option.  next, `noEmit` compiler flag is used often in projects--especially projects with some ui (which Ava generally doesn't  support atm). I think the \"detect ts file > Babel with ts plugin > run\" pipeline will probably be most fruitful, so long as source maps work.  Now that were on Babel 7, I'm actually unclear on what the barriers to this are beyond file type detection :thinking: ",
      "createdAt": "2019-11-19T15:41:18Z",
      "issue": {
        "id": "MDU6SXNzdWUxODkyOTU1NTY=",
        "title": "Support to Run TypeScript test file(.ts) directly without Precompiling(tsc)",
        "url": "https://github.com/avajs/ava/issues/1109"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1NTgwMDgzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1NTgwMDgzNA==",
      "body": "yep!",
      "createdAt": "2019-11-20T02:01:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQxMDg2MjM4",
        "title": "fix: upgrade rn version",
        "url": "https://github.com/electrode-io/movies-reloaded-miniapp/pull/9"
      },
      "repository": {
        "nameWithOwner": "electrode-io/movies-reloaded-miniapp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1Nzg2MTg2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1Nzg2MTg2Mw==",
      "body": "if you open your browser, you will notice that `window.exports` is not a thing.  your browser doesn't understand commonjs, thus, you receive this error.  i think what you end up needing to do is bundle your tests w/ webpack or browserify",
      "createdAt": "2019-11-24T06:27:32Z",
      "issue": {
        "id": "MDU6SXNzdWU0NDczNDA3Mjc=",
        "title": "ES2018 Issue",
        "url": "https://github.com/testem/testem/issues/1343"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1NzkzMTQ4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1NzkzMTQ4NA==",
      "body": "this is still a valid issue.\r\n\r\n```\r\n// node_modules/testem/lib/runners/browser_test_runner.js\r\n  onEnd() { // <== this does get called\r\n    this.reporter.onEnd(this.browser, { // <== but this never ends up calling anything that sets `this.finished = true`\r\n      launcherId: this.launcherId\r\n    });\r\n  }\r\n```",
      "createdAt": "2019-11-24T21:48:57Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDU0MTM2Njc=",
        "title": "Error: Browser timeout exceeded: 10s",
        "url": "https://github.com/testem/testem/issues/1282"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1ODQ1MDUyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1ODQ1MDUyMA==",
      "body": "i have this issue too.  i think it _may_ have something to do w/ recursive types, which are now permitted in typescript?\r\n\r\ni debugged and found the stack exploding trying to model `Window` :|\r\n\r\n```js\r\n   [NUMERIC_INDEX_PATTERN]: this.getTypeDefinition(arrayType)\r\n```",
      "createdAt": "2019-11-26T04:08:12Z",
      "issue": {
        "id": "MDU6SXNzdWU1MjQ3MjExNDc=",
        "title": "Maximum call stack size exceeded",
        "url": "https://github.com/YousefED/typescript-json-schema/issues/324"
      },
      "repository": {
        "nameWithOwner": "YousefED/typescript-json-schema"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1ODQ1NzAyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1ODQ1NzAyMw==",
      "body": "it would be great to have an option to just _skip_ such things.  when running https://github.com/YousefED/typescript-json-schema against my `src/client.ts`, it generates all the associated schema definitions, regardless of the fact that there are _more_ symbols and nodes that dont boil down to schema definitions.  even _better_?--allow a way (perhaps a hook or something)--such that i can react to those types/events.\r\n\r\nin my use . case, i'm parsing a library in order to generate a swagger.json (not used for a server, but a codegen tool), and i need to map such functions into [swagger paths](https://swagger.io/docs/specification/paths-and-operations/).  `typescript-json-schema` fills out the bottom half of my `swagger.json`, and these other _kind_s make up the missing top half!",
      "createdAt": "2019-11-26T04:42:59Z",
      "issue": {
        "id": "MDU6SXNzdWU0OTAxODM0OTE=",
        "title": "Problems with generic types",
        "url": "https://github.com/vega/ts-json-schema-generator/issues/209"
      },
      "repository": {
        "nameWithOwner": "vega/ts-json-schema-generator"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU1ODQ1ODk5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU1ODQ1ODk5NA==",
      "body": "i moved my typedef as follows _out_ of the compile tree, and it began working again:\r\n\r\n```ts\r\nexport type ExtendedWindow = (typeof window) & {\r\n  someRandomGlobalOnTheWindow: bool\r\n}\r\n```\r\n\r\nslap that little buddy into this and watch her break down!",
      "createdAt": "2019-11-26T04:51:46Z",
      "issue": {
        "id": "MDU6SXNzdWU1MjQ3MjExNDc=",
        "title": "Maximum call stack size exceeded",
        "url": "https://github.com/YousefED/typescript-json-schema/issues/324"
      },
      "repository": {
        "nameWithOwner": "YousefED/typescript-json-schema"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU2MDE1MTc0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU2MDE1MTc0MA==",
      "body": "the cb probably isn't executed.  probably needs an runnable example to diagnose further.  recommend to close, and re-open when demo available",
      "createdAt": "2019-12-01T19:56:21Z",
      "issue": {
        "id": "MDU6SXNzdWUxMzMwNjgzODQ=",
        "title": "Typescript tests with system.js",
        "url": "https://github.com/testem/testem/issues/784"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU2MDE1MTg2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU2MDE1MTg2NA==",
      "body": "for testing typescript, one must bundle your tests as shown in the webpack and browserify examples.  part of _those tools' pipelines_ would include bundling/building TS",
      "createdAt": "2019-12-01T19:57:29Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzIwMDA2NTg=",
        "title": "Testing TypeScript",
        "url": "https://github.com/testem/testem/issues/1134"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU2MDE1MTg4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU2MDE1MTg4Mw==",
      "body": "recommend issue for closure.",
      "createdAt": "2019-12-01T19:57:42Z",
      "issue": {
        "id": "MDU6SXNzdWUyMzIwMDA2NTg=",
        "title": "Testing TypeScript",
        "url": "https://github.com/testem/testem/issues/1134"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU2MDE1MjA2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU2MDE1MjA2OA==",
      "body": "recommend issue for closure.  this case is covered by the bundling recipes (browserify, webpack)",
      "createdAt": "2019-12-01T19:59:31Z",
      "issue": {
        "id": "MDU6SXNzdWU0NDczNDA3Mjc=",
        "title": "ES2018 Issue",
        "url": "https://github.com/testem/testem/issues/1343"
      },
      "repository": {
        "nameWithOwner": "testem/testem"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU2MDE3MDYxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU2MDE3MDYxNA==",
      "body": "https://github.com/parcel-bundler/parcel/blob/d24e09a9797af41a9d2c6c733b1c6cf6671d60c7/packages/core/parcel-bundler/src/transforms/htmlnano.js#L13-L14\r\n\r\nwe probably ought drop a little `minifySvg: false` there, even if temporary.  `minifySvg` is clearly doing _much more_ than just minifying ;)",
      "createdAt": "2019-12-01T22:57:41Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzEzMTIyMDY=",
        "title": "SVG `viewBox` attribute getting stripped in HTML",
        "url": "https://github.com/parcel-bundler/parcel/issues/1523"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU2MTQ1MTg4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU2MTQ1MTg4OA==",
      "body": "thx @bcarroll22.  i'm starting to put this all together :) . ya, your take makes sense.  a jsdom-y RN thing _really does feel_ like the ideal solution.  for better or worse, i hacked around this with:\r\n\r\n```js\r\njest.mock('react-native/Libraries/EventEmitter/NativeEventEmitter.js', () => {\r\n  const { EventEmitter } = require('events');\r\n  return EventEmitter;\r\n});\r\n```\r\n\r\nwhich takes as i'm in a jsdom context.  with this shared knowledge, i think we can close.",
      "createdAt": "2019-12-04T02:49:54Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzI0MDAzMjM=",
        "title": "provided preset does not cover native-module event-emitter ",
        "url": "https://github.com/testing-library/native-testing-library/issues/85"
      },
      "repository": {
        "nameWithOwner": "testing-library/native-testing-library"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU2MjQ1ODUzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU2MjQ1ODUzMQ==",
      "body": ":bow: thx guys",
      "createdAt": "2019-12-06T07:03:29Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzM3MDYwNTk=",
        "title": "Cannot push to newly created gh-pages branch",
        "url": "https://github.com/JamesIves/github-pages-deploy-action/issues/74"
      },
      "repository": {
        "nameWithOwner": "JamesIves/github-pages-deploy-action"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU2NDIwNzg5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU2NDIwNzg5NA==",
      "body": "In rn 59, I would mock `NativeEventEmitter`, but for some undiagnosed reason in 60 I had to mock the relative path to the JS file",
      "createdAt": "2019-12-10T19:32:46Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzI0MDAzMjM=",
        "title": "provided preset does not cover native-module event-emitter ",
        "url": "https://github.com/testing-library/native-testing-library/issues/85"
      },
      "repository": {
        "nameWithOwner": "testing-library/native-testing-library"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MDQ4MDYwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MDQ4MDYwMA==",
      "body": "> APIs don't allow this project to update grammars at runtime\r\n\r\nbummer. thanks for sharing the link!  i have subscribed and 👍 'd\r\n\r\n>  getting plugin authors to write and maintain their grammars\r\n\r\nagreed. i would hope that if a POC went _well enough_, the benefit/ROI of the improved UX would drive the community to at least be receptive to it.  if babel authors felt uncomfortable about having VSCode-isms in their source because of the low correlation to the actual purpose of the plugin, perhaps some `package.json` interface could be used that _this_ extension could parse and load--that way adding a grammar into their source would be less invasive, and interested parties could maintain the grammar in a stringly referenced repo from the babel plugin's package.json?  i don't know--maybe i'm thinkin too far ahead :)\r\n\r\n> How would those work?\r\n\r\nya, interesting.  one idea would be to synchronize VSCode's internal TM grammar internally here somehow.  i bet if one ecosystem advances a feature to stable, vscode would move to support the syntax quickly, and 👏, no further effort?  there also may already _be_ a babel-plugin for said hypothetical feature in the users `-env` plugin stack _iff_ they are using babel, so of course we could sniff there.  i think it's _less common_ for node users to babel tho.  referring/building back on the `package.json` interface suggestion, perhaps we could allow users to punch in git urls to grammars to install at runtime for them? 🤔 ",
      "createdAt": "2020-01-03T06:44:47Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDMzMjIwMTE=",
        "title": "rfc: load grammars from babel plugins",
        "url": "https://github.com/michaelgmcd/vscode-language-babel/issues/61"
      },
      "repository": {
        "nameWithOwner": "michaelgmcd/vscode-language-babel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MDc1OTQyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MDc1OTQyNQ==",
      "body": ">  This appears to be a heisenbug?\r\n\r\nreally does seem to be.  hasn't happened to me for all of 2019.\r\n\r\nlet's close and re-open if it occurs again.",
      "createdAt": "2020-01-04T05:52:09Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTg2MDY4NzU=",
        "title": "osx filesystem writes are not always guaranteed to match requested casing",
        "url": "https://github.com/nodejs/node/issues/25469"
      },
      "repository": {
        "nameWithOwner": "nodejs/node"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MTI1NDcxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MTI1NDcxNw==",
      "body": "Sorry, I meant this all to be `StatusBar`.  OSX conflates this terminology in a couple of places, and I got tripped up :-). ",
      "createdAt": "2020-01-06T18:31:29Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDMzMjMxODM=",
        "title": "rfc: menubar support in scope",
        "url": "https://github.com/redox-os/orbtk/issues/133"
      },
      "repository": {
        "nameWithOwner": "redox-os/orbtk"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MjY0MDQwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MjY0MDQwNQ==",
      "body": "It seems to me that the proposed suggests a solution without addressing a root cause.  if this pkg is infact leaking connections, we should find it.  In my alt impl (not promoting, just sharing) you can see pretty clearly a hedge against new connections:\r\n\r\n `if (this._db) return this._db`, https://github.com/cdaringe/pg-subscribe/blob/master/src/index.ts#L46\r\n\r\nhow confident are you that your own source doesn't redundantly init a new instance of the exported class?",
      "createdAt": "2020-01-09T16:30:15Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzEwMjMxODM=",
        "title": "accumulated connections -> use Pool() instead of Client() ?",
        "url": "https://github.com/voxpelli/node-pg-pubsub/issues/82"
      },
      "repository": {
        "nameWithOwner": "voxpelli/node-pg-pubsub"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MzI1NDIyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MzI1NDIyNQ==",
      "body": "closed by #1441",
      "createdAt": "2020-01-11T00:12:43Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDY1NzM1MDg=",
        "title": "regen-api crashes when parsing additionalProperties with $ref",
        "url": "https://github.com/electrode-io/electrode-native/issues/1445"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode-native"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3MzM2OTU0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3MzM2OTU0NA==",
      "body": "so grateful to you all. this was super nutty",
      "createdAt": "2020-01-12T01:02:29Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDA5MTIzMDU=",
        "title": "src folder files deleted",
        "url": "https://github.com/wix-incubator/wml/issues/37"
      },
      "repository": {
        "nameWithOwner": "wix-incubator/wml"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3NTQyNTYzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3NTQyNTYzNA==",
      "body": "hi all.  i get this regularly on my osx box.  i'd be happy to provide the dev team any requested diagnostics",
      "createdAt": "2020-01-17T01:36:06Z",
      "issue": {
        "id": "MDU6SXNzdWU0NzI4MzgzNDQ=",
        "title": "Selecting element in App Source in Appium Inspector blanks the window (Real iPad device)",
        "url": "https://github.com/appium/appium-desktop/issues/1057"
      },
      "repository": {
        "nameWithOwner": "appium/appium-desktop"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3NTQyNzA3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3NTQyNzA3Mw==",
      "body": "do we need to inject an `<ErrorBoundary />` somewhere?\r\n\r\nhttps://reactjs.org/docs/error-boundaries.html",
      "createdAt": "2020-01-17T01:43:06Z",
      "issue": {
        "id": "MDU6SXNzdWU0NzI4MzgzNDQ=",
        "title": "Selecting element in App Source in Appium Inspector blanks the window (Real iPad device)",
        "url": "https://github.com/appium/appium-desktop/issues/1057"
      },
      "repository": {
        "nameWithOwner": "appium/appium-desktop"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3NTczOTE4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3NTczOTE4NA==",
      "body": "i put an error boundary around the `<Root />` component.  the plot thickens:\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/72636060-181df600-3913-11ea-8019-ec8781fed7a3.png)\r\n",
      "createdAt": "2020-01-17T18:21:35Z",
      "issue": {
        "id": "MDU6SXNzdWU0NzI4MzgzNDQ=",
        "title": "Selecting element in App Source in Appium Inspector blanks the window (Real iPad device)",
        "url": "https://github.com/appium/appium-desktop/issues/1057"
      },
      "repository": {
        "nameWithOwner": "appium/appium-desktop"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3NjM3NjUxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3NjM3NjUxOA==",
      "body": "thx. @dpgraham, rebased and pushed.  🤞 ",
      "createdAt": "2020-01-20T17:49:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY0MzU1MzU2",
        "title": "feat: add <ErrorBoundary /> for improved error condition UX",
        "url": "https://github.com/appium/appium-desktop/pull/1222"
      },
      "repository": {
        "nameWithOwner": "appium/appium-desktop"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3NzQxMjY2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3NzQxMjY2Ng==",
      "body": "testing! please ignore.\r\n<!-- ern-pronto-container-report android -->\r\n| a | b |\r\n|--|--|\r\n|av1| bv1 |",
      "createdAt": "2020-01-22T22:18:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyOTIwMTEz",
        "title": "Couple fixes",
        "url": "https://github.com/dino-dna/checkup/pull/21"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3Nzg3MDIxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3Nzg3MDIxMQ==",
      "body": "hi joel!  thanks for continuing to support us and provide improvements. i have a few questions.\r\n\r\n- \"more thorough documentation and other details are WIP.\"  before asking the community to adopt--and ideally before releasing--can we promote this action item?  i know docs forever evolve, but the docs gotta be there before asking folks to onboard.  not just _having docs_, but having _the right docs_.\r\n- you note that this release is about responding to customer feedback and acting on it. super rad! **how are you planning to vet that?**  this is really important to me.  claims like `\"intuitive, modern, and easy to consume\"` should be customer feedback vs developer claims.  how can we make that so? if we have the opporitunity to _engage_ here early on before we release/adopt, perhaps we can more freely work out kinks, _then_ release?\r\n- sub-apps--how's this all been vetted/tested? how can we see this all in action?  there's a lot of challenging problems to solve under this header. is there a big e2e thing that runs somewhere?\r\n\r\nthx",
      "createdAt": "2020-01-23T20:49:29Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDc2MzAwMzM=",
        "title": "Plan for Electrode X (version 8 - 10) release",
        "url": "https://github.com/electrode-io/electrode/issues/1491"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU3ODQ3MzQxMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU3ODQ3MzQxMw==",
      "body": "by reading the racer readme fully, i discovered that setting a `RUST_SRC_PATH` is required.  i had one, but it was real old skool and incorrect?  i updated it per the the readme,`export RUST_SRC_PATH=\"$(rustc --print sysroot)/lib/rustlib/src/rust/src\"`, relaunched. and it works.  i hope future visitors find this information useful",
      "createdAt": "2020-01-26T06:44:37Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTUwNTUxMjU=",
        "title": "how to diagnose/debug autocomplete ",
        "url": "https://github.com/rust-lang/vscode-rust/issues/731"
      },
      "repository": {
        "nameWithOwner": "rust-lang/vscode-rust"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4MTE5OTY4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4MTE5OTY4OQ==",
      "body": "oh, one **must use the socket** during the http upgrade req/res connection for the ws connection to establish itself. hmm.  so it's a socket that can only exist during the lifecycle of the request/response?  is that correct?  if so, why use a socket at all then?\r\n\r\nalt, is this line supposed to be one block out, one line down? https://github.com/b3nsn0w/koa-easy-ws/blob/73eae92434c492fb75a0cb330f47e820159ee09d/index.js#L38",
      "createdAt": "2020-02-03T01:04:23Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTg3ODkyMDk=",
        "title": "koa responding with a 404, with all other middlewares turned off, even with respond = false",
        "url": "https://github.com/b3nsn0w/koa-easy-ws/issues/6"
      },
      "repository": {
        "nameWithOwner": "b3nsn0w/koa-easy-ws"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4MTI3NjYzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4MTI3NjYzMQ==",
      "body": "@devongovett, will there be a default reporter when creating a bundler instance?  Will I be able to tune it?",
      "createdAt": "2020-02-03T07:34:10Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTg3NjE5MTg=",
        "title": "rfc: make parcel logger configurable, pluggable, de-coupled from the bundler",
        "url": "https://github.com/parcel-bundler/parcel/issues/4071"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4MTU1ODU0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4MTU1ODU0Ng==",
      "body": "sweet!  sorry to pester, but will it also be settable via the Bundler API?  The default parcel config and a file are both cool, but not precisely what I'm hoping to use as a library author",
      "createdAt": "2020-02-03T18:45:37Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTg3NjE5MTg=",
        "title": "rfc: make parcel logger configurable, pluggable, de-coupled from the bundler",
        "url": "https://github.com/parcel-bundler/parcel/issues/4071"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4MTY3NzE4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4MTY3NzE4MQ==",
      "body": "right--that's what I'm after.  In code I want to specify `reporter: myEventingReporter`, where parcel does not write to stdio at all on its own, and instead just emits messages for me to log thru my own logging infrastructure",
      "createdAt": "2020-02-03T23:57:33Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTg3NjE5MTg=",
        "title": "rfc: make parcel logger configurable, pluggable, de-coupled from the bundler",
        "url": "https://github.com/parcel-bundler/parcel/issues/4071"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4MTc4MTAyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4MTc4MTAyNg==",
      "body": "@devongovett,thanks for the support.  Looks like writing my own reporter won't be a problem :ok_hand: . However, I need to be able to plug it in programmatically through the bundler options. A RC file doesn't really work for library authors use case.  I don't have access or freedom to write a rc file to my consumer's projects/project directory.  will I be able to do something like `new Bundler({ reporter: bestReporter })`?",
      "createdAt": "2020-02-04T07:40:08Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTg3NjE5MTg=",
        "title": "rfc: make parcel logger configurable, pluggable, de-coupled from the bundler",
        "url": "https://github.com/parcel-bundler/parcel/issues/4071"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4MzgwMzU4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4MzgwMzU4OQ==",
      "body": "> The ctx.ws() function is added when the request is recognized as a WebSocket upgrade request, but it only handles (and consumes) the request if it's actually called.\r\n\r\nright.  everything you said makes sense, but i suppose i'm questioning the value behind it.   it just doesn't seem that useful that `ctx.ws` is only available during _one single request/response_ lifecycle--specifically the upgrade http req/res--and no subsequent requests.  websockets are intrinsically valuable for async comm that don't necessarily fit the req/res pattern, but as written, `.ws()` will only exist during a classico http request, feeling like an unnecessary protocol switch (at least for browser clients).  of course i, the user, could capture that socket reference and persist it into some sort of cache of my choice, but i suppose i expected this lib to help with that, even if minimally, in some fashion.  as it stands, and as the examples show, the socket is kind of a one-time use thing. if the client is the browser, who will probably only try to establish a connection once onload, one could reason that easy-ws won't help very much for interacting with that page.  i'm more-or-less using this comment to think out loud :) as i work through this.",
      "createdAt": "2020-02-09T04:28:59Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTg3ODkyMDk=",
        "title": "koa responding with a 404, with all other middlewares turned off, even with respond = false",
        "url": "https://github.com/b3nsn0w/koa-easy-ws/issues/6"
      },
      "repository": {
        "nameWithOwner": "b3nsn0w/koa-easy-ws"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4NjUxODk0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4NjUxODk0Nw==",
      "body": "we could augment, but (opinion) i think that comes w/ other side-effects, such as making mocha symbols appear valid even though in fact they _are not valid_, despite suppressing the compiler error.  ultimately we don't want mocha symbols in our compile chain.  i have a successful workaround ATM by just purging the mocha types, but it violates BKMs by `rm -rf`'ing into node_modules postinstall 😬 ",
      "createdAt": "2020-02-14T23:32:01Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjU2MDQxNzg=",
        "title": "dev archetype bundles @types/mocha, making jest compatibility challenging ",
        "url": "https://github.com/electrode-io/electrode/issues/1533"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4Njc5OTkzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4Njc5OTkzMw==",
      "body": "Apologies for the lack of clarity, I submitted in haste.  However, *yes*, serving off of 443 by default or _at least trying_ on 443 is what I'm after.",
      "createdAt": "2020-02-17T03:14:24Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjU4NjAwNDQ=",
        "title": "[rfc] simplify reverse-proxy configuration requirements",
        "url": "https://github.com/matrix-org/synapse/issues/6930"
      },
      "repository": {
        "nameWithOwner": "matrix-org/synapse"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4NzI0MDM5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4NzI0MDM5NQ==",
      "body": "Thanks for the input and ideation, however the proposed solution will not be successful. It does not work because the existence of the file inside of node_modules includes it in the compile phase by default. Consequently turning it off in a configuration file does not have impact to the typescript compiler.  Further, I cannot remove it from my package.json because it's a child dependency of the archetype. Thus, I still think the correct solution is to make it a peer dependency, and bump this package's version",
      "createdAt": "2020-02-18T02:13:40Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjU2MDQxNzg=",
        "title": "dev archetype bundles @types/mocha, making jest compatibility challenging ",
        "url": "https://github.com/electrode-io/electrode/issues/1533"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU4NzY0NzgzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU4NzY0NzgzMg==",
      "body": "Thx @jchip !  Interesting.  Ok--ill give it a shot!",
      "createdAt": "2020-02-18T18:49:04Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjU2MDQxNzg=",
        "title": "dev archetype bundles @types/mocha, making jest compatibility challenging ",
        "url": "https://github.com/electrode-io/electrode/issues/1533"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5MDAxMjEwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5MDAxMjEwMw==",
      "body": "if we can get your compiler version built in browser, i even want examples live, on the web. runable, editable.",
      "createdAt": "2020-02-23T00:17:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc2NDY3MTQ4",
        "title": "feat/monorepo",
        "url": "https://github.com/effectsjs/effectsjs/pull/2"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5MDAxOTI5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5MDAxOTI5MA==",
      "body": "why pug and not `(docs-toolchain-of-the-day)`?\r\n\r\npug is more or less compact html with a few _very small, very simple_ mechanisms to compose stuff. fully static site.  no dev servers.  no ui runtime.  static sites--solved problem.",
      "createdAt": "2020-02-23T02:25:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjU0MDEw",
        "title": "feat(effects-docs): init",
        "url": "https://github.com/effectsjs/effectsjs/pull/4"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5MDA5NzAwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5MDA5NzAwOQ==",
      "body": "> I feel like we need a disclaimer somewhere. Something along the lines of, \"this is highly experimental. Not ready for prod 😬😬😬.\"\r\n\r\nyup.  well... there's also no getting started section yet either :)",
      "createdAt": "2020-02-23T17:57:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjU0MDEw",
        "title": "feat(effects-docs): init",
        "url": "https://github.com/effectsjs/effectsjs/pull/4"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5MDEwMTI1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5MDEwMTI1Mw==",
      "body": "@dpchamps--any other feedback here--we 👎 or 👍 ?",
      "createdAt": "2020-02-23T18:35:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc4NzMyNzM0",
        "title": "feat/lint-format",
        "url": "https://github.com/effectsjs/effectsjs/pull/8"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5MDEwMzAzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5MDEwMzAzMA==",
      "body": "I'm going to be a little offensive and eager merge this.  please please change anything that is unwelcomed--not married to it--just moving stuff along",
      "createdAt": "2020-02-23T18:52:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc4NzMyNzM0",
        "title": "feat/lint-format",
        "url": "https://github.com/effectsjs/effectsjs/pull/8"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5MDEzMzQ0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5MDEzMzQ0MQ==",
      "body": "when i was using plugin sync https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync, this packages dependencies didn't sync--which i think was the root cause of this issue.  i installed this extension on computer A, loaded vscode on computer B--now this error shows up :$  ",
      "createdAt": "2020-02-24T00:09:17Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQ4NzMzNzU=",
        "title": "VSCode/TS is failing to resolve @divyenduz/ts-graphql-plugin",
        "url": "https://github.com/graphql/vscode-graphql/issues/84"
      },
      "repository": {
        "nameWithOwner": "graphql/vscode-graphql"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5MTA5MzI4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5MTA5MzI4Ng==",
      "body": "thanks @gr2m. ya, those type unpackers where what i was teasing.  no rush--thx for the attention",
      "createdAt": "2020-02-25T22:02:51Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzA4NTU5NDI=",
        "title": "export various unexposed types",
        "url": "https://github.com/octokit/plugin-rest-endpoint-methods.js/issues/47"
      },
      "repository": {
        "nameWithOwner": "octokit/plugin-rest-endpoint-methods.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5MTMwMTY1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5MTMwMTY1Ng==",
      "body": "> Docker image that builds and hosts a Gatsby site\r\n\r\nagreed with the above comments. the current _doesnt_ build. the first step in the instructions conflictingly say \"build your assets\" then copy 'em in",
      "createdAt": "2020-02-26T08:30:09Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTMyNDc1NzI=",
        "title": "CLI / Dev image",
        "url": "https://github.com/gatsbyjs/gatsby-docker/issues/25"
      },
      "repository": {
        "nameWithOwner": "gatsbyjs/gatsby-docker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5NDI5NTM4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5NDI5NTM4OQ==",
      "body": "yep!",
      "createdAt": "2020-03-04T02:44:15Z",
      "issue": {
        "id": "MDU6SXNzdWU1Njk0MjQ5MjY=",
        "title": "setup github actions",
        "url": "https://github.com/effectsjs/effectsjs/issues/5"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5NjM0MjYxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5NjM0MjYxMg==",
      "body": "i just ran into this.\r\n\r\nin most systems, configuration at leaf nodes is more specific than at parent nodes.  a test is configuration is more specific/granular configuration node than global configuration.  in my case, i'm setting `t.timeout(120000)`, and i expect it to be honored. it is currently *not* honored.\r\n\r\ni think @sramam's points are on the money. not honoring `t.timeout` is confusing and misleading UX.  more importantly, it's needed functionality that ought not demand adjustment to global configuration.  i need a long timeout for e2e tests that have known _slow peer systems_. i don't want the rest of my suite to suffer an otherwise increased timeout--just these specific tests (hence why i tried to configure at the most granular level--in the test!).\r\n\r\nthe way the docs are written make me think this is how it works: https://github.com/avajs/ava/blob/master/docs/07-test-timeouts.md\r\n\r\ni strongly feel that we should ensure that `t.timeout(...)` calls within tests actually define the timeout for the test.",
      "createdAt": "2020-03-09T05:48:42Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDkyMTEyOTc=",
        "title": "(ava 3.0.0-beta.2) per test timeout settings not being honored",
        "url": "https://github.com/avajs/ava/issues/2365"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5NjM0NDMwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5NjM0NDMwMw==",
      "body": "maybe someone ought write a recipe for that and slap it in the docs. `py.test` fans would eat that up :)",
      "createdAt": "2020-03-09T05:55:34Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzE1NzQ2NDY=",
        "title": "Provide a cleaner way to write parametric tests",
        "url": "https://github.com/avajs/ava/issues/2414"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5NjcwMTg1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5NjcwMTg1Mw==",
      "body": "@christianlent, how can i get the new bits?",
      "createdAt": "2020-03-09T18:28:17Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzY0ODUwNTM=",
        "title": "`clap features` crashes from electrode X calls",
        "url": "https://github.com/electrode-io/electrode/issues/1546"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5NzMyMTE0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5NzMyMTE0MQ==",
      "body": "@jchip, it happens pretty regularly in our repo ATM.   All it takes is starting and editing.  Generally a TS compiler error from Babel triggers it somewhat reliably.  We can get a DM going and I can hook you up",
      "createdAt": "2020-03-10T21:14:32Z",
      "issue": {
        "id": "MDU6SXNzdWU1Nzg3OTMxMjc=",
        "title": "electrode development workflow frequently leaves zombie processes behind",
        "url": "https://github.com/electrode-io/electrode/issues/1552"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5NzM1NjQwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5NzM1NjQwMQ==",
      "body": "user error! we had configured this explicitly, i learned",
      "createdAt": "2020-03-10T22:43:57Z",
      "issue": {
        "id": "MDU6SXNzdWU1Nzg5MDI5OTY=",
        "title": "electrode-react-webapp: Error: Cannot find module '/.../src/server/chunk-selector.js'",
        "url": "https://github.com/electrode-io/electrode/issues/1556"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5NzM4NTQzNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5NzM4NTQzNw==",
      "body": "Looks like #1557, but the problems stated are unique and likely ought have unique solutions",
      "createdAt": "2020-03-11T00:32:01Z",
      "issue": {
        "id": "MDU6SXNzdWU1Nzg5Mjc2NTU=",
        "title": "subapp-web: dangerously falls back onerror when downstream code expects non-error condition",
        "url": "https://github.com/electrode-io/electrode/issues/1558"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDU5OTAyMzY1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDU5OTAyMzY1MA==",
      "body": "still experiencing this.  trying to use a docker recipe:\r\n\r\n```\r\nReady for clients...\r\nVERBOSE: begin openrct2 loop\r\nWARNING[../src/openrct2/network/Socket.cpp:745 (CreateSocket)]: IPV6_V6ONLY failed. 92\r\n```\r\n\r\n```\r\nopenrct2@fb98b55f1c91:~$ /usr/bin/openrct2-cli -v\r\nOpenRCT2, v0.2.4 (d645338 on HEAD)\r\nLinux (x86-64)\r\n```\r\n\r\n```\r\n# compose.yml\r\nversion: '3'\r\nservices:\r\n\r\n  openrct2:\r\n    image: openrct2/openrct2-cli\r\n    volumes:\r\n      - /www/openrct2:/home/openrct2/.config/OpenRCT2\r\n    sysctls:\r\n      net.ipv6.conf.all.disable_ipv6: 1\r\n    command:\r\n      - \"host\"\r\n      - \"/home/openrct2/.config/OpenRCT2/save/salsa_g1.sv6\"\r\n      - \"--address\"\r\n      - \"127.0.0.1\"\r\n      - \"--port\"\r\n      - \"11753\"\r\n      - \"--headless\"\r\n      - \"--verbose\"\r\n```\r\n\r\nany tips?",
      "createdAt": "2020-03-14T07:42:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTY1OTE4MTU3",
        "title": "Fix #6277: unable to advertise on IPv6-enabled link",
        "url": "https://github.com/OpenRCT2/OpenRCT2/pull/7103"
      },
      "repository": {
        "nameWithOwner": "OpenRCT2/OpenRCT2"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwMjM4NzYwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwMjM4NzYwOA==",
      "body": "confirmed.  was quite surprised by this.",
      "createdAt": "2020-03-23T05:05:21Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTcxMjY0Njg=",
        "title": "prettier <file> without --write option does not ignore what's in .prettierignore",
        "url": "https://github.com/prettier/prettier/issues/7473"
      },
      "repository": {
        "nameWithOwner": "prettier/prettier"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwMjM4Nzk4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwMjM4Nzk4NQ==",
      "body": "in my case, i have nested `node_modules` in a monorepo. i'm running:\r\n\r\n`npx prettier './*.{js,ts}' './packages/**/*.{js,ts}'`\r\n\r\nand it skips my ignore. it's as though these globs are taking precedence _over_ the requested ignore files",
      "createdAt": "2020-03-23T05:06:52Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTcxMjY0Njg=",
        "title": "prettier <file> without --write option does not ignore what's in .prettierignore",
        "url": "https://github.com/prettier/prettier/issues/7473"
      },
      "repository": {
        "nameWithOwner": "prettier/prettier"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwMjkxNTA5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwMjkxNTA5Nw==",
      "body": "`--check` worked.  hmm. ya i suppose i expected more `git`-like behavior.  git will always respect your gitignore unless you pass `-f`, as opposed to _disregarding your ignore_ if you provide an filename.  the problem is that my arg is a _glob_, not a specific filename, and thus i still want the .prettierignore to take. i can see it being reasonable to ignore my `.prettierignore` if one passes an arg--it has the feel of a pure function, a la `npx doWork onThisFIle`.  but, then having it _not_ honor your ignore just by adding `--write` or `--check` is inconsistent.\r\n\r\nhow do folks feel about adopting the git model? that is always respect the `.prettierignore`, unless some other flag unlocks those ignored files?  ",
      "createdAt": "2020-03-23T23:32:51Z",
      "issue": {
        "id": "MDU6SXNzdWU1NTcxMjY0Njg=",
        "title": "prettier <file> without --write option does not ignore what's in .prettierignore",
        "url": "https://github.com/prettier/prettier/issues/7473"
      },
      "repository": {
        "nameWithOwner": "prettier/prettier"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwNDEzOTg5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwNDEzOTg5MQ==",
      "body": "removed in 2.x sounds like. unsure if there will be another provider for the `<Markdown>in _jsx_</Markdown>`",
      "createdAt": "2020-03-25T23:20:46Z",
      "issue": {
        "id": "MDU6SXNzdWU0ODY2NzY0MjI=",
        "title": "Where is CompLibrary?",
        "url": "https://github.com/facebook/docusaurus/issues/1769"
      },
      "repository": {
        "nameWithOwner": "facebook/docusaurus"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwNDUxNTU4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwNDUxNTU4OQ==",
      "body": "Yeah I'm not eager to merge it or anything. I had just about finished it by the time you showed me there was a better option. We can keep it in purgatory",
      "createdAt": "2020-03-26T16:01:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzkzOTg3Njgw",
        "title": "feat/babel-parser-effects-evil-monkey-patch",
        "url": "https://github.com/effectsjs/effectsjs/pull/29"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwNDUxNjM4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwNDUxNjM4MQ==",
      "body": "We may as well distribute the parser with the plugin for ease of use. They always must both be required. Keeping parity between them too would help guarantee compatibility",
      "createdAt": "2020-03-26T16:02:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzkzOTg3Njgw",
        "title": "feat/babel-parser-effects-evil-monkey-patch",
        "url": "https://github.com/effectsjs/effectsjs/pull/29"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwNDUxNzY0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwNDUxNzY0Mg==",
      "body": "I very much feel the same way",
      "createdAt": "2020-03-26T16:04:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzkzMzk5Mzkz",
        "title": "feat: yarn",
        "url": "https://github.com/effectsjs/effectsjs/pull/28"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwNDgxMzUzNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwNDgxMzUzNQ==",
      "body": "huh, gatsby is rejecting on `hasErrors()`, but `stats.compilation.errors` is an empty array:\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/77722608-70284700-6fab-11ea-92d0-e82cb14c0742.png)\r\n\r\nby the time we're back into the gatsby cli, `err` is _not_ an `Error`:\r\n\r\n```js\r\n  const stats = await buildProductionBundle(program, {\r\n    parentSpan: activity.span,\r\n  }).catch(err => { // err ~= [ ]\r\n    activity.panic(structureWebpackErrors(`build-javascript`, err))\r\n  })\r\n```",
      "createdAt": "2020-03-27T04:49:47Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODg4ODE1NTM=",
        "title": "webpack stats error handling incorrectly assumes error is on top level stat",
        "url": "https://github.com/gatsbyjs/gatsby/issues/22597"
      },
      "repository": {
        "nameWithOwner": "gatsbyjs/gatsby"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwNDgxOTU0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwNDgxOTU0OA==",
      "body": "patch coming in hot\r\n",
      "createdAt": "2020-03-27T05:15:57Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODg4ODE1NTM=",
        "title": "webpack stats error handling incorrectly assumes error is on top level stat",
        "url": "https://github.com/gatsbyjs/gatsby/issues/22597"
      },
      "repository": {
        "nameWithOwner": "gatsbyjs/gatsby"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwOTA4Nzc3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwOTA4Nzc3Mw==",
      "body": "I wonder if Babel has a generate-unique-closure-symbol API. Seems like something that would be needed elsewhere",
      "createdAt": "2020-04-04T20:54:19Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTM5OTI4MTg=",
        "title": "highly likely compiled symbol collision",
        "url": "https://github.com/effectsjs/effectsjs/issues/35"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwOTU4NTUzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwOTU4NTUzMQ==",
      "body": "> some people\r\n\r\nwho _are_ these people ;)\r\n\r\n> distracting\r\n\r\ndistracting, or _totally mesmerizing_\r\n\r\njest aside, i get it. but, i love it, and i think it would be a shame to shove it under the rug. what if we just give it a big chill pill instead? i.e. big slow down. it's quite calm at a 20s cycle duration vs a 1.8s (current)",
      "createdAt": "2020-04-06T06:12:01Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTQ3ODQ3NjQ=",
        "title": "Consider using a non-animated logo for website",
        "url": "https://github.com/effectsjs/effectsjs/issues/38"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYwOTU5NjEzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYwOTU5NjEzMQ==",
      "body": "> What was your reasoning behind not choosing this right off the bat?\r\n\r\nya, fair question. i intended this new package's source layout to look like a plugin, not a top-level executable. thus, forking was never even considered until after all of the work was done and i was opening the PR. after discovering that i could use the effects parser 👌, things were looking good--initial experiments only failed at the print phase. i figured, \"well, if it's only the printer\" maybe i could recycle & copy prettier internals somewhat painlessly, mutate the copy for effects, and pass stuff back in via the plugin api. and in fact that's still more or less what i did, whilst incurring two costs: 1) literally coping prettier src files (they are not extensible), and 2) build/bundle those copied files post-effects-annotated-mutation. then i realized that without repeating that process for the `parser-babel.js` file too, we couldn't exploit all of the babel init sugar and TS compat stuff--so i ended up building _two files_. edits are probably < 15 LOC. cheap. the outstanding question is, what are the cost differences between what i've done vs forking, rewiring that fork drastically enough so that it's a plugin, making it s.t. upstream updates can still be applied meaningfully, and ensuring clean integration with the rest of the effects project (mainly the parser). maybe it'd be better. i dunno. after typing all of this out, i'm actually _less convinced_. something to play with\r\n\r\nedit.\r\n\r\ni typed that all out on my phone and it's prettty much incoherent 😆 . let's talk in person!",
      "createdAt": "2020-04-06T06:43:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzQwNzY0",
        "title": "feat: prettier-plugin-javascript-effects",
        "url": "https://github.com/effectsjs/effectsjs/pull/32"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxMDY5MTg1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxMDY5MTg1Ng==",
      "body": "sweet!",
      "createdAt": "2020-04-08T00:53:27Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzA4NTU5NDI=",
        "title": "export various unexposed types",
        "url": "https://github.com/octokit/plugin-rest-endpoint-methods.js/issues/47"
      },
      "repository": {
        "nameWithOwner": "octokit/plugin-rest-endpoint-methods.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxMTg5MzE5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxMTg5MzE5MQ==",
      "body": "bump. this is ready",
      "createdAt": "2020-04-10T06:05:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzQwNzY0",
        "title": "feat: prettier-plugin-javascript-effects",
        "url": "https://github.com/effectsjs/effectsjs/pull/32"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxMjQ3Njg1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxMjQ3Njg1OQ==",
      "body": "_double bump_",
      "createdAt": "2020-04-11T17:53:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzQwNzY0",
        "title": "feat: prettier-plugin-javascript-effects",
        "url": "https://github.com/effectsjs/effectsjs/pull/32"
      },
      "repository": {
        "nameWithOwner": "effectsjs/effectsjs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxMjU0MzMxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxMjU0MzMxMQ==",
      "body": "@cjbassi, looks like [rust Path](https://doc.rust-lang.org/std/path/struct.Path.html) methods operate on other Path instances, then deserialize back out to strings. prob no need to `| string`",
      "createdAt": "2020-04-12T00:30:30Z",
      "issue": {
        "id": "MDU6SXNzdWU3OTgzMDU0MTE=",
        "title": "Consider adding a path class to the standard library",
        "url": "https://github.com/denoland/deno_std/issues/678"
      },
      "repository": {
        "nameWithOwner": "denoland/deno_std"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxMzc5NjgxMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxMzc5NjgxMw==",
      "body": "Awesome thank you!",
      "createdAt": "2020-04-15T03:36:04Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTY5NTkzNzA=",
        "title": "unable to download parse-srcset from github",
        "url": "https://github.com/brodybits/prettierx/issues/167"
      },
      "repository": {
        "nameWithOwner": "brodybits/prettierx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxMzgxNTkwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxMzgxNTkwOA==",
      "body": "@eMPee584, any progress? (sorry others, for issue noise 🤦 )",
      "createdAt": "2020-04-15T04:55:59Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzI1NDE2MA==",
        "title": "-p <outside>:<inside> with --net container:<name> does not work",
        "url": "https://github.com/moby/moby/issues/5725"
      },
      "repository": {
        "nameWithOwner": "moby/moby"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxNjIwNzQzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxNjIwNzQzMA==",
      "body": "Cool, thank you. I thought that I had tried it and failed, but perhaps I need to reinvestigate. :-)",
      "createdAt": "2020-04-19T18:58:39Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTkxODMzNTc=",
        "title": "rfc: dynamic lookups",
        "url": "https://github.com/f/omelette/issues/41"
      },
      "repository": {
        "nameWithOwner": "f/omelette"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxNjczNzE1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxNjczNzE1Ng==",
      "body": "related, but independently addressable issue:\r\n\r\n```\r\nError: at ./node_modules/subapp-web/lib/load.js\r\nError: SSR subapp Home failed\r\nTypeError: Cannot read property 'entryPoints' of undefined\r\n    at prepareSubAppSplitBundles (./node_modules/subapp-web/lib/load.js:144:32)\r\n    at processSubapp (./node_modules/subapp-web/lib/load.js:332:44)\r\n    at asyncProcess (./node_modules/subapp-web/lib/load.js:385:17)\r\n    at process._tickCallback (internal/process/next_tick.js:61:11)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/79787147-66200c80-82fb-11ea-9108-60950cdf2b05.png)\r\n",
      "createdAt": "2020-04-20T18:38:51Z",
      "issue": {
        "id": "MDU6SXNzdWU2MDM0NDE0OTY=",
        "title": "subapp-server crashes on ui code change",
        "url": "https://github.com/electrode-io/electrode/issues/1607"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYxOTQwNTkxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYxOTQwNTkxNg==",
      "body": "Awesome thank you!",
      "createdAt": "2020-04-25T16:33:25Z",
      "issue": {
        "id": "MDU6SXNzdWU2MDY2NDY0OTA=",
        "title": "readme shows incredible demo, but checked in demo missing rich content",
        "url": "https://github.com/Yomguithereal/react-blessed/issues/106"
      },
      "repository": {
        "nameWithOwner": "Yomguithereal/react-blessed"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMDMwNzI1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMDMwNzI1Mw==",
      "body": "Hello! Indeed my repository was ephemeral. I created it ran into the issue and removed it. Feel free to close if you cannot reproduce, I'll file another ticket if it happens again",
      "createdAt": "2020-04-28T00:32:34Z",
      "issue": {
        "id": "MDU6SXNzdWU2MDM0NDE0OTY=",
        "title": "subapp-server crashes on ui code change",
        "url": "https://github.com/electrode-io/electrode/issues/1607"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMDMwNzgwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMDMwNzgwOA==",
      "body": "The lack of reproducqbility of this problem is in fact a key part of the problem. Unfortunately I can't just give you a prescription on how to reproduce it, I can only say \" use electrode \" regularly and you will run into it. this one we shouldn't close, and I think given the fact that I've seen this in every single electrode project I've worked on, probably needs a reevaluation of the pipeline and a study on the reliability around the offending error / code path",
      "createdAt": "2020-04-28T00:34:36Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzY1NDE5MjY=",
        "title": "electrode X fails to load isomorphic-assets",
        "url": "https://github.com/electrode-io/electrode/issues/1547"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMDQxNDc5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMDQxNDc5MA==",
      "body": "it's still active in archetype v7. is that formally unsupported by this point, are should it be patched as well?",
      "createdAt": "2020-04-28T06:47:43Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODI1MzAwNjc=",
        "title": "dev-admin: pressing K does not kill my application server",
        "url": "https://github.com/electrode-io/electrode/issues/1563"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMTQ5ODM1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMTQ5ODM1Mw==",
      "body": "i didn't leave sufficient breadcrumbs here. we wanted this for a solid reason, but clearly i did a poor job recording it. will re-open if it returns to mind",
      "createdAt": "2020-04-29T22:24:07Z",
      "issue": {
        "id": "MDU6SXNzdWU1Nzk1Njg0NzA=",
        "title": "tasks: support wds only mode",
        "url": "https://github.com/electrode-io/electrode/issues/1560"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMTUyNzgxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMTUyNzgxNQ==",
      "body": "just because the other image and block quote format a bit funkily, here's my stack too :)\r\n\r\n```\r\n[2020-04-29 23:44:33.526] [INFO] Test Explorer found\r\n[2020-04-29 23:44:33.543] [INFO] Creating adapter for /Users/c0d01a5/src/daedalus\r\n[2020-04-29 23:44:33.543] [INFO] Initializing AVA Adapter...\r\n[2020-04-29 23:44:33.543] [INFO] Using default NodeJS: /Users/c0d01a5/.nvm/versions/node/v12.16.1/bin/node\r\n[2020-04-29 23:44:33.544] [ERROR] Found invalid value for avaExplorer.nodePath [Error [ArgumentError]: Any predicate failed with the following errors:\r\n- Expected `nodePath` to be of type `undefined` but received type `string`\r\n- Expected string `nodePath` to not be empty\r\n\tat Object.nodePath (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:21168)\r\n\tat U.getNode (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:56702)\r\n\tat U.setValue (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:58112)\r\n\tat new U (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:56325)\r\n\tat new me (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:70294)\r\n\tat r.TestAdapterRegistrar.adapterFactory (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:75580)\r\n\tat r.TestAdapterRegistrar.add (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:1594)\r\n\tat new r.TestAdapterRegistrar (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:1094)\r\n\tat exports.activate (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:75569)\r\n\tat async Promise.all (index 1)] {\r\n  name: 'ArgumentError'\r\n}\r\n[2020-04-29 23:44:33.546] [DEBUG] Spawning worker...\r\n[2020-04-29 23:44:33.550] [INFO] Registering adapter for /Users/c0d01a5/src/daedalus\r\n[2020-04-29 23:44:33.551] [INFO] Loading test files of /Users/c0d01a5/src/daedalus\r\n[2020-04-29 23:44:33.551] [INFO] Initialization finished\r\n[2020-04-29 23:44:43.555] [ERROR] [O [CancelError]: Attempt to connect to worker timed out.\r\n\tat E.cancel (/Users/c0d01a5/.vscode/extensions/gwenio.vscode-ava-test-adapter-0.4.1/main.js:18:11931)] {\r\n  name: 'CancelError'\r\n}\r\n[2020-04-29 23:44:43.555] [ERROR] No worker connected.\r\n```",
      "createdAt": "2020-04-29T23:47:17Z",
      "issue": {
        "id": "MDU6SXNzdWU1MDkwNDg0MDM=",
        "title": "No worker connected..",
        "url": "https://github.com/Gwenio/vscode-ava-test-adapter/issues/18"
      },
      "repository": {
        "nameWithOwner": "Gwenio/vscode-ava-test-adapter"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMjIxNDE2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMjIxNDE2Mw==",
      "body": "```\r\n$ deno repl --unstable\r\nerror: Found argument '--unstable' which wasn't expected, or isn't valid in this context\r\n```\r\n\r\nrepl support would be cool too, if you're all on it",
      "createdAt": "2020-05-01T02:10:03Z",
      "issue": {
        "id": "MDU6SXNzdWU2MDk4NzI4MDM=",
        "title": "Unstable flag doesn't work with deno install",
        "url": "https://github.com/denoland/deno/issues/5008"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMjYzMTYxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMjYzMTYxMg==",
      "body": "I'll defer to you then on whether to keep open or close! ",
      "createdAt": "2020-05-02T00:34:09Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODI1MzAwNjc=",
        "title": "dev-admin: pressing K does not kill my application server",
        "url": "https://github.com/electrode-io/electrode/issues/1563"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMjYzMjA2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMjYzMjA2NA==",
      "body": "Repro is tricky on this one too, otherwise I would have liked to send a branch. I think my version is probably too far behind now to be viable. Perhaps if you guys have tried replicating and it's not happening, we can just close it",
      "createdAt": "2020-05-02T00:36:48Z",
      "issue": {
        "id": "MDU6SXNzdWU1Nzg4MTQzMjA=",
        "title": "electrode development process exits periodically while editing files",
        "url": "https://github.com/electrode-io/electrode/issues/1555"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMjk4MjI3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMjk4MjI3MQ==",
      "body": "agreed--not sure why i left those out! posted above",
      "createdAt": "2020-05-02T16:50:00Z",
      "issue": {
        "id": "MDU6SXNzdWU1ODI2NzI3NDg=",
        "title": "dev-admin: periodic crashes from node runtime",
        "url": "https://github.com/electrode-io/electrode/issues/1565"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyMzU4NzkyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyMzU4NzkyNg==",
      "body": "Get port is listed as a development dependency not a production dependency. My supposition is that these dependencies simply need to be moved in the package.json and a new release pushed",
      "createdAt": "2020-05-04T17:07:56Z",
      "issue": {
        "id": "MDU6SXNzdWU2MDk0NDU4NzA=",
        "title": "Cannot find module 'get-port'",
        "url": "https://github.com/Gwenio/vscode-ava-test-adapter/issues/60"
      },
      "repository": {
        "nameWithOwner": "Gwenio/vscode-ava-test-adapter"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyNDEzMzUxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyNDEzMzUxNg==",
      "body": "should we open another ticket for `deno repl`  or just keep this one open, generalized for backfilling --unstable support generally?",
      "createdAt": "2020-05-05T15:43:41Z",
      "issue": {
        "id": "MDU6SXNzdWU2MDk4NzI4MDM=",
        "title": "Unstable flag doesn't work with deno install",
        "url": "https://github.com/denoland/deno/issues/5008"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyNDkxODA1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyNDkxODA1NQ==",
      "body": "@f, i tried again, and indeed, in your example, then callback in `completion.on('b', cb)` never gets triggered:\r\n\r\n```js\r\nconst completion = omelette(`bestbin <root>`)\r\ncompletion.on('root', ({ reply }) => {\r\n  return reply([ 'a', 'b' ])\r\n})\r\ncompletion.on('b', ({ before, reply }) => {\r\n  return reply(['c'])\r\n})\r\ncompletion.init()\r\n```\r\n\r\ncompletion for `a` and `b` gets announced, but indeed, never does the b handler trigger",
      "createdAt": "2020-05-06T22:10:56Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTkxODMzNTc=",
        "title": "rfc: dynamic lookups",
        "url": "https://github.com/f/omelette/issues/41"
      },
      "repository": {
        "nameWithOwner": "f/omelette"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyNjM3Mzc4NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyNjM3Mzc4NA==",
      "body": "im still trying to grok what Deno provisions i should be using when interoping between posix and URL style paths. when should deno give me URL strings back, when should it give me posix strings back, and/or what things should handle both? as i write this, its increasingly clear that Deno always wants `URL(...)` style things, and it's up to me to transform everything into that format? `posix.toUrl(...)` may be a nice thing 🤔 ",
      "createdAt": "2020-05-10T19:04:04Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTU0NTI0MTc=",
        "title": "rfc: import(/absolute/path) behavior change in std 0.50.0 from 0.42.0 - regression or feature?",
        "url": "https://github.com/denoland/deno/issues/5212"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyNjM3NTYwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyNjM3NTYwNg==",
      "body": "ya, i feel like a doofus for even askin it ;). thinking out loud on github.\r\n\r\n```ts\r\nexport const isFileUrl = (filename: string) => filename.startsWith(\"file://\");\r\nexport const asFileUrl = (filename: string) =>\r\n  isFileUrl(filename) ? filename : `file://${filename}`;\r\n```\r\n\r\ni added ^ to as little buddies to my internal `path` mod. maybe std would be interested in doing similar? i dunno. :) anyway, my head has been cleared, and i think the breaking change is 👍 ",
      "createdAt": "2020-05-10T19:18:08Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTU0NTI0MTc=",
        "title": "rfc: import(/absolute/path) behavior change in std 0.50.0 from 0.42.0 - regression or feature?",
        "url": "https://github.com/denoland/deno/issues/5212"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyNjM4MTk2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyNjM4MTk2OQ==",
      "body": "not a maintainer, but i wouldn't bank on it :/. i'm needing nvm like functionality now too, but i am a big nvm fan :). looks like https://github.com/asdf-community/asdf-deno is goin ",
      "createdAt": "2020-05-10T20:06:00Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTU0NjA2MjM=",
        "title": "Multiple Versions on a System",
        "url": "https://github.com/denoland/deno/issues/5214"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyNjM5MDExNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyNjM5MDExNA==",
      "body": "> For context, why are you doing what you are doing instead of:\r\n\r\nfor example purposes only 😄 ",
      "createdAt": "2020-05-10T21:09:44Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTU0NjUxNjk=",
        "title": "nested top level await dynamic imports broken",
        "url": "https://github.com/denoland/deno/issues/5215"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyNjM5MzUyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyNjM5MzUyMw==",
      "body": "@MehrdadKhnzd, what other runtimes do this? what other _programs_ do this? can you make a compelling, objective argument as to why this program should?",
      "createdAt": "2020-05-10T21:37:22Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTU0NjA2MjM=",
        "title": "Multiple Versions on a System",
        "url": "https://github.com/denoland/deno/issues/5214"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyNjM5OTQ2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyNjM5OTQ2NQ==",
      "body": "@MehrdadKhnzd, respectfully, i'm not grokking what's a poor experience w/ nvm? `.nvmrc` exists to solve this issue. i even aliased builtin `cd` to test for nvmrc and autoload it.",
      "createdAt": "2020-05-10T22:28:59Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTU0NjA2MjM=",
        "title": "Multiple Versions on a System",
        "url": "https://github.com/denoland/deno/issues/5214"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyNzA2NzcwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyNzA2NzcwMg==",
      "body": "tracking upstream in https://github.com/apollographql/react-apollo/issues/3962",
      "createdAt": "2020-05-12T02:19:34Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTYyNDQxODM=",
        "title": "useQuery yields incorrect loading state during SSR ",
        "url": "https://github.com/lfades/next-with-apollo/issues/136"
      },
      "repository": {
        "nameWithOwner": "lfades/next-with-apollo"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyOTczNTA1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyOTczNTA1MQ==",
      "body": "ATM im extending my schema with @types/puppeteer::Viewport. i have something like `{ url: string, viewport: Viewport }` 🤔 ",
      "createdAt": "2020-05-17T02:55:34Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTk1ODkzNTI=",
        "title": "proper mechanism to integrate with 3rd party types",
        "url": "https://github.com/colinhacks/zod/issues/52"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYyOTkwMDU5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYyOTkwMDU5OA==",
      "body": "Doh! I figured I was missing something! Perfecto, thx!",
      "createdAt": "2020-05-18T01:39:36Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTk1ODkzNTI=",
        "title": "proper mechanism to integrate with 3rd party types",
        "url": "https://github.com/colinhacks/zod/issues/52"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzMDUxNTY5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzMDUxNTY5Mw==",
      "body": "hmm. travis tests are ok on node 10, but gh actions are not 🤔 \r\n",
      "createdAt": "2020-05-19T01:08:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE5Nzk1NTIy",
        "title": "feat/extensible-xarc",
        "url": "https://github.com/electrode-io/electrode/pull/1643"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzMDUxODY5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzMDUxODY5OQ==",
      "body": "closing in favor of tidier git history in #1645",
      "createdAt": "2020-05-19T01:18:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE5Nzk1NTIy",
        "title": "feat/extensible-xarc",
        "url": "https://github.com/electrode-io/electrode/pull/1643"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzMDUyOTMwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzMDUyOTMwNg==",
      "body": "needs more testing w/ a larger audience vs \"just on my box.\" hard to link/copy packages given implicit/transitive dependencies. initial testing has been successful doing `clap build` and `clap dev` in electrode-x project(s)",
      "createdAt": "2020-05-19T01:55:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE5ODIxMTE0",
        "title": "feat: archetypes as functions",
        "url": "https://github.com/electrode-io/electrode/pull/1645"
      },
      "repository": {
        "nameWithOwner": "electrode-io/electrode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzMzI4MjI3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzMzI4MjI3NQ==",
      "body": "such a great effort! i am unable to properly TS-ify react-blessed w/out this, as DOM-things are squashing common controls (e.g. `textarea` exists in blessed and DOM)",
      "createdAt": "2020-05-24T19:25:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjQ2MTI3NDM1",
        "title": "[react, react-dom] Move React DOM types to @types/react-dom",
        "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32322"
      },
      "repository": {
        "nameWithOwner": "DefinitelyTyped/DefinitelyTyped"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDg5ODE0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDg5ODE0Ng==",
      "body": "@tunnckoCore @zeke , canary of parse-commit-message `src/index.js` ===\r\n\r\n```\r\n'use strict';\r\n\r\n// eslint-disable-next-line import/no-unresolved\r\nconst mod = require('./dist/cjs');\r\n\r\nfunction interop(x) {\r\n  if (Object.keys(x).length === 1 && x.default) {\r\n    return x.default;\r\n  }\r\n  return x;\r\n}\r\n\r\nmodule.exports = interop(mod);\r\n```\r\n\r\nwhere the tree for the module is:\r\n\r\n```\r\n$ tree /path/to/stuff/node_modules/parse-commit-message/\r\n├── CHANGELOG.md\r\n├── index.js\r\n└── package.json\r\n```\r\n\r\ncan we revisit the publish step?",
      "createdAt": "2020-05-27T19:39:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ0ODM5Mjkz",
        "title": "feat: update parse-commit-message to support bang suffix for breaking changes",
        "url": "https://github.com/zeke/semantic-pull-requests/pull/75"
      },
      "repository": {
        "nameWithOwner": "zeke/semantic-pull-requests"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk2Nzc2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk2Nzc2Mg==",
      "body": "arst",
      "createdAt": "2020-05-27T22:05:04Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk2ODIyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk2ODIyNA==",
      "body": "qwfp",
      "createdAt": "2020-05-27T22:06:09Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk2ODc4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk2ODc4Mw==",
      "body": "pdf",
      "createdAt": "2020-05-27T22:07:33Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk2OTYyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk2OTYyNg==",
      "body": "wfpw",
      "createdAt": "2020-05-27T22:09:26Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk2OTcxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk2OTcxMA==",
      "body": "fpfwp",
      "createdAt": "2020-05-27T22:09:37Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk2OTgzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk2OTgzOA==",
      "body": "wfpwf",
      "createdAt": "2020-05-27T22:09:58Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk3MDE5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk3MDE5NA==",
      "body": "tfw",
      "createdAt": "2020-05-27T22:10:55Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk3MDczMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk3MDczMw==",
      "body": "wfwp",
      "createdAt": "2020-05-27T22:12:10Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk3MDg2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk3MDg2Ng==",
      "body": "rtrs",
      "createdAt": "2020-05-27T22:12:28Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk3MTA5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk3MTA5Nw==",
      "body": "wtr",
      "createdAt": "2020-05-27T22:13:01Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk3MTM3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk3MTM3OA==",
      "body": "rstr",
      "createdAt": "2020-05-27T22:13:38Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk4Mjg5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk4Mjg5MA==",
      "body": "far",
      "createdAt": "2020-05-27T22:45:32Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk4MzAxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk4MzAxOQ==",
      "body": "twf",
      "createdAt": "2020-05-27T22:45:50Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk4MzE4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk4MzE4OQ==",
      "body": "tfw",
      "createdAt": "2020-05-27T22:46:22Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk4NTk2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk4NTk2NQ==",
      "body": "wtfwftw",
      "createdAt": "2020-05-27T22:54:29Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk4NjU5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk4NjU5MA==",
      "body": "pfwpw",
      "createdAt": "2020-05-27T22:56:22Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk4NzA1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk4NzA1Mg==",
      "body": "fpwf333",
      "createdAt": "2020-05-27T22:57:39Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk4ODAyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk4ODAyOQ==",
      "body": "pfwfpw",
      "createdAt": "2020-05-27T23:00:24Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk4ODg3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk4ODg3NQ==",
      "body": "fpwpw",
      "createdAt": "2020-05-27T23:02:46Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk4OTUwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk4OTUwMw==",
      "body": "fpwpw",
      "createdAt": "2020-05-27T23:04:32Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk5MDA2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk5MDA2OQ==",
      "body": "ffff",
      "createdAt": "2020-05-27T23:06:14Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNDk5MDQ1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNDk5MDQ1Mg==",
      "body": "fpwp",
      "createdAt": "2020-05-27T23:07:28Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjYwNjQ5ODU=",
        "title": "testing",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA0NzAzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA0NzAzMA==",
      "body": "sup",
      "createdAt": "2020-05-29T15:50:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MTg0NjAz",
        "title": "Update readme.md",
        "url": "https://github.com/cdaringe/probot-funsies/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-funsies"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA0ODk0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA0ODk0OQ==",
      "body": "arstart",
      "createdAt": "2020-05-29T15:54:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MTg0NjAz",
        "title": "Update readme.md",
        "url": "https://github.com/cdaringe/probot-funsies/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-funsies"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA0OTE3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA0OTE3MA==",
      "body": "weee",
      "createdAt": "2020-05-29T15:55:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MTg0NjAz",
        "title": "Update readme.md",
        "url": "https://github.com/cdaringe/probot-funsies/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-funsies"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA0OTI0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA0OTI0Mw==",
      "body": "ok",
      "createdAt": "2020-05-29T15:55:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MTg0NjAz",
        "title": "Update readme.md",
        "url": "https://github.com/cdaringe/probot-funsies/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-funsies"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA0OTU5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA0OTU5Mw==",
      "body": "fwpw",
      "createdAt": "2020-05-29T15:55:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MTg0NjAz",
        "title": "Update readme.md",
        "url": "https://github.com/cdaringe/probot-funsies/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-funsies"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA2NjIxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA2NjIxNQ==",
      "body": "weee",
      "createdAt": "2020-05-29T16:30:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MTg0NjAz",
        "title": "Update readme.md",
        "url": "https://github.com/cdaringe/probot-funsies/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-funsies"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA4NDIxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA4NDIxMQ==",
      "body": "@probot-buddy merge",
      "createdAt": "2020-05-29T17:09:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky",
        "title": "chore: best weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA4NTEwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA4NTEwNQ==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:11:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky",
        "title": "chore: best weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA4NTQzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA4NTQzNg==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:11:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky",
        "title": "chore: best weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA4NTYwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA4NTYwMw==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:12:10Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky",
        "title": "chore: best weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA4ODA1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA4ODA1MQ==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:17:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky",
        "title": "chore: best weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA5MDUwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA5MDUwMg==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:23:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky",
        "title": "chore: best weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA5MzMwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA5MzMwOQ==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:29:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky",
        "title": "chore: best weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA5NDE1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA5NDE1Mw==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:31:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky",
        "title": "chore: best weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA5NTQ1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA5NTQ1OQ==",
      "body": "@probot-buddy merge",
      "createdAt": "2020-05-29T17:34:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM0NTI4",
        "title": "fix: add missing resources a and b",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/5"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjA5ODMwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjA5ODMwMQ==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:40:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3MjUw",
        "title": "Revert \"fix: add missing resources a and b\"",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/6"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjEwMjE4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjEwMjE4OA==",
      "body": "@probot-buddy merge",
      "createdAt": "2020-05-29T17:49:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjEwNTQxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjEwNTQxNg==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:56:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjEwNTY5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjEwNTY5NA==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T17:57:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjEwNzM4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjEwNzM4Ng==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T18:00:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjEwODgwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjEwODgwNw==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T18:03:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjEwOTkzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjEwOTkzNg==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T18:06:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjExMDkxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjExMDkxMQ==",
      "body": "<pre>\r\n  hey\r\n\r\nwow\r\n</pre>",
      "createdAt": "2020-05-29T18:08:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjExMTY0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjExMTY0OA==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T18:10:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjExMTg4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjExMTg4Nw==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T18:10:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjE0OTQ4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjE0OTQ4Mw==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T19:34:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjE0OTY3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjE0OTY3Nw==",
      "body": "@probot-buddy merge\r\n\r\n",
      "createdAt": "2020-05-29T19:34:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
        "title": "fix: try testing statuses_",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjIyMTU3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjIyMTU3OQ==",
      "body": "test!",
      "createdAt": "2020-05-29T22:33:29Z",
      "issue": {
        "id": "MDU6SXNzdWU2Mjc1Nzk5MjM=",
        "title": "i hope this works",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjIyMTg0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjIyMTg0Ng==",
      "body": "how about now?",
      "createdAt": "2020-05-29T22:34:30Z",
      "issue": {
        "id": "MDU6SXNzdWU2Mjc1Nzk5MjM=",
        "title": "i hope this works",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjIyMjI3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjIyMjI3Mw==",
      "body": "🤞 ",
      "createdAt": "2020-05-29T22:36:20Z",
      "issue": {
        "id": "MDU6SXNzdWU2Mjc1Nzk5MjM=",
        "title": "i hope this works",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjM4NjM0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjM4NjM0NA==",
      "body": "@tunnckoCore thx.\r\n\r\n`4.0.0-canary.20200124.9` resolved, but `4.0.0-canary-20200124.1` did not 👍 :fyi:",
      "createdAt": "2020-05-30T21:14:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ0ODM5Mjkz",
        "title": "feat: update parse-commit-message to support bang suffix for breaking changes",
        "url": "https://github.com/zeke/semantic-pull-requests/pull/75"
      },
      "repository": {
        "nameWithOwner": "zeke/semantic-pull-requests"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzNjU3NzUzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzNjU3NzUzNA==",
      "body": "and `autoCommandKeys` be optional, default false",
      "createdAt": "2020-06-01T02:17:53Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjgxMDQ1OTA=",
        "title": "fix ListBar Options to only require commands or items, duplicate fields",
        "url": "https://github.com/dino-dna/react-tui/issues/2"
      },
      "repository": {
        "nameWithOwner": "dino-dna/react-tui"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzODAxMTg4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzODAxMTg4NQ==",
      "body": ":tada: ",
      "createdAt": "2020-06-03T07:26:00Z",
      "issue": {
        "id": "MDU6SXNzdWU2Mjk1NDE5NDA=",
        "title": "comments stripped from output with --no-compress",
        "url": "https://github.com/developit/microbundle/issues/647"
      },
      "repository": {
        "nameWithOwner": "developit/microbundle"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzODUzNzY5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzODUzNzY5NA==",
      "body": "oh man, i came here to ask this! thanks!  our tachyons file is in a bonkers location :)",
      "createdAt": "2020-06-04T01:00:58Z",
      "issue": {
        "id": "MDU6SXNzdWUxOTg2MjU4MDk=",
        "title": "configuration for tachyons path",
        "url": "https://github.com/octref/vscode-tachyons/issues/2"
      },
      "repository": {
        "nameWithOwner": "octref/vscode-tachyons"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDYzOTMyMDgwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDYzOTMyMDgwOQ==",
      "body": "https://github.com/webpack/webpack-cli/blob/next/packages/webpack-cli/bin/cli.js\r\n\r\ngotta study it but import-local may be the secret sauce",
      "createdAt": "2020-06-05T07:54:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI2MTU1NzQ1",
        "title": "fix(core): use cwd rather than __dirname for locating workspace root",
        "url": "https://github.com/nrwl/nx/pull/3096"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MDExMjkxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MDExMjkxNQ==",
      "body": "form cursor logic is pretty complex--i'm seeing this issue as well.",
      "createdAt": "2020-06-06T20:16:46Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjUxNDYwMjM=",
        "title": "\"the only currently maintained fork\" - is it tho?",
        "url": "https://github.com/embarklabs/neo-blessed/issues/48"
      },
      "repository": {
        "nameWithOwner": "embarklabs/neo-blessed"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MDExMzA0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MDExMzA0NQ==",
      "body": "i've copied blessed's typings and swapped `declare module \"blessed\"` with `declare module \"neo-blessed\"`--works for now. would like to get them into this repo tho",
      "createdAt": "2020-06-06T20:17:47Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDgxOTM1MTg=",
        "title": "TypeScript definitions?",
        "url": "https://github.com/embarklabs/neo-blessed/issues/38"
      },
      "repository": {
        "nameWithOwner": "embarklabs/neo-blessed"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MDExMzM5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MDExMzM5MQ==",
      "body": "form also on `tab` fake emits an `escape` char, which is an implicit contract between form and input fields, making them _skip_ their `submit` events",
      "createdAt": "2020-06-06T20:20:58Z",
      "issue": {
        "id": "MDU6SXNzdWU2MzI2ODEyODY=",
        "title": "<Form /> has lame focus behavior",
        "url": "https://github.com/dino-dna/react-tui/issues/3"
      },
      "repository": {
        "nameWithOwner": "dino-dna/react-tui"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MDExMzQ5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MDExMzQ5Mg==",
      "body": "also: https://github.com/embarklabs/neo-blessed/issues/48\r\n\r\nForm needs to be completely re-thought, with fresh thinking on how controls emit and navigate.",
      "createdAt": "2020-06-06T20:21:52Z",
      "issue": {
        "id": "MDU6SXNzdWU2MzI2ODEyODY=",
        "title": "<Form /> has lame focus behavior",
        "url": "https://github.com/dino-dna/react-tui/issues/3"
      },
      "repository": {
        "nameWithOwner": "dino-dna/react-tui"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MDMxMzc5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MDMxMzc5MQ==",
      "body": "@FrozenPandaz, i'm happy to build a repro. to make sure the repro sufficiently demonstrates the issue, perhaps you can help me out by clarifying what doesn't make sense in the description? if i send a new git url--we'll still need to be aligned on the above description (which is that `--with-deps` doesn't ensure all dependents are built for a project with a plain-jane call to `nx build`)",
      "createdAt": "2020-06-08T01:23:58Z",
      "issue": {
        "id": "MDU6SXNzdWU2Mjg2NTUyNDY=",
        "title": "nx build --with-deps is a no-op on deps",
        "url": "https://github.com/nrwl/nx/issues/3097"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MTQyMzA0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MTQyMzA0OA==",
      "body": "Thanks @timneutkens--I appreciate the thoughtful feedback. Can you share why `node-file-trace` would be a preferred solution over a pure webpack approach?",
      "createdAt": "2020-06-09T16:39:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMxNDg0OTUw",
        "title": "feat: expose webpack compiler",
        "url": "https://github.com/vercel/next.js/pull/13917"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MTQ4MjEwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MTQ4MjEwNQ==",
      "body": "wow--serverless is _super cool_. i'd be happy to _dive into_ using node-file-trace applied to the server target. you guys have any reference urls/pointers for how you are consuming it now in the serverless target?",
      "createdAt": "2020-06-09T18:06:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMxNDg0OTUw",
        "title": "feat: expose webpack compiler",
        "url": "https://github.com/vercel/next.js/pull/13917"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MTU2MDEwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MTU2MDEwOA==",
      "body": "@FrozenPandaz reproduction: https://github.com/cdaringe/nxtester/tree/demo/build-with-deps-fail",
      "createdAt": "2020-06-09T20:46:13Z",
      "issue": {
        "id": "MDU6SXNzdWU2Mjg2NTUyNDY=",
        "title": "nx build --with-deps is a no-op on deps",
        "url": "https://github.com/nrwl/nx/issues/3097"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MTcxNTMyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MTcxNTMyOQ==",
      "body": "```\r\n[{ key: \"option1\", callback: () => { }}, { key: \"option2\", callback: () => { }}] // not ok\r\n{ option1: () => {}, option2: () => {} } // ok\r\n```\r\n\r\nhope it helps :)",
      "createdAt": "2020-06-10T04:37:00Z",
      "issue": {
        "id": "MDU6SXNzdWU1MzQyNTM4MzY=",
        "title": "ListBar labels not working correctly",
        "url": "https://github.com/embarklabs/neo-blessed/issues/34"
      },
      "repository": {
        "nameWithOwner": "embarklabs/neo-blessed"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0MzQ4NDkyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0MzQ4NDkyOA==",
      "body": "ya. you're right. this is bonkers.\r\n\r\n> conflicts with the json urls needed for getStaticProps / getServerSideProps\r\n\r\nthis bit though i'm unclear on. why would `getServerSideProps` be reliant on a URL embedded in JSON? wouldn't the packaged server code have strong knowledge of its pages and associated `getServerSideProps` from strictly a JS context, not a JSON context?",
      "createdAt": "2020-06-12T21:11:23Z",
      "issue": {
        "id": "MDU6SXNzdWU2Mzc0MzI2MTU=",
        "title": "permit configuration asset urls",
        "url": "https://github.com/vercel/next.js/issues/14109"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0NzAzMDYxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0NzAzMDYxMA==",
      "body": "i've thought on this some. given that we are TS-first-class, and next demands custom servers as JS, it probably makes sense to have the next builders allow for a customServer _dependency_ option if TS support is desired. then, an implicit dependency maps `my-next-app` => `my-next-app-custom-server`, and the builder ensures that custom server lib assets are bundled and inserted as `my-next-app/server.js`",
      "createdAt": "2020-06-20T18:30:33Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDE1OTUwMjk=",
        "title": "next.js recipe disjoint customServer provisions between build & serve",
        "url": "https://github.com/nrwl/nx/issues/3199"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0NzcwMDE3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0NzcwMDE3Mw==",
      "body": "so on init of blessed, the `_cache` is hydrated with 8-color mode values by simple means of exporting an iife of `ccolors`. see `exports.ccolors = (function() { ... }()`. now, anytime someone calls `.match`, you are immediately reduced to that small cache. further, because `.match` references a mutatable export, `vcolors` is internally is also attached a reduced color reference. there is almost certainly a more robust and less mutable (read: confusing) way to do this. ",
      "createdAt": "2020-06-22T18:32:10Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDMyNzM1NDI=",
        "title": "16 colors used, even with $TERM = xterm-256color",
        "url": "https://github.com/embarklabs/neo-blessed/issues/49"
      },
      "repository": {
        "nameWithOwner": "embarklabs/neo-blessed"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY0NzcwOTA0Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY0NzcwOTA0Mw==",
      "body": "doh! i wish i would have found this earlier! also exists in neo-blessed.\r\n\r\nhttps://github.com/embarklabs/neo-blessed/pull/50",
      "createdAt": "2020-06-22T18:51:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MTc4NDQyMTI=",
        "title": "Fix for invlid caching of 8 color scheme",
        "url": "https://github.com/chjj/blessed/pull/71"
      },
      "repository": {
        "nameWithOwner": "chjj/blessed"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1MzI1MTE4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1MzI1MTE4NQ==",
      "body": "@FrozenPandaz thanks. for many cmds, this works great. i observed today that it does not work with `run-many`, which probably also needs a solve",
      "createdAt": "2020-07-02T22:50:53Z",
      "issue": {
        "id": "MDU6SXNzdWU2MzU3NTMwOTI=",
        "title": "node --inspect/--inspect-brk incompatible with nx task runner",
        "url": "https://github.com/nrwl/nx/issues/3144"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1MzkyMjE3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1MzkyMjE3Ng==",
      "body": "@dependabot merge",
      "createdAt": "2020-07-05T18:26:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMwMzA3NjQ4",
        "title": "chore(deps): [security] bump acorn from 5.7.3 to 5.7.4",
        "url": "https://github.com/dino-dna/checkup/pull/26"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1MzkyMjYzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1MzkyMjYzNA==",
      "body": "@dependabot merge",
      "createdAt": "2020-07-05T18:29:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM4NTgwMDUz",
        "title": "chore(deps-dev): bump electron from 7.3.1 to 9.0.5",
        "url": "https://github.com/dino-dna/checkup/pull/44"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1MzkyMjY3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1MzkyMjY3NA==",
      "body": "@dependabot merge",
      "createdAt": "2020-07-05T18:29:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM1ODU3MzQx",
        "title": "chore(deps-dev): bump lint-staged from 9.5.0 to 10.2.11",
        "url": "https://github.com/dino-dna/checkup/pull/43"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1MzkyMjY4Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1MzkyMjY4Ng==",
      "body": "@dependabot merge",
      "createdAt": "2020-07-05T18:29:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMxODAwOTM2",
        "title": "chore(deps-dev): bump @types/rimraf from 2.0.4 to 3.0.0",
        "url": "https://github.com/dino-dna/checkup/pull/39"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1MzkyMjY5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1MzkyMjY5Mg==",
      "body": "@dependabot merge",
      "createdAt": "2020-07-05T18:29:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMxMTQ3ODUx",
        "title": "chore(deps): bump @types/fs-extra from 8.1.1 to 9.0.1",
        "url": "https://github.com/dino-dna/checkup/pull/38"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1MzkyMjY5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1MzkyMjY5OA==",
      "body": "@dependabot merge",
      "createdAt": "2020-07-05T18:30:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMxMTQ3Mzc0",
        "title": "chore(deps): bump menubar from 6.0.8 to 9.0.1",
        "url": "https://github.com/dino-dna/checkup/pull/37"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1MzkyMjcwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1MzkyMjcwNQ==",
      "body": "@dependabot merge",
      "createdAt": "2020-07-05T18:30:07Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMxMTQ3MjIw",
        "title": "chore(deps): bump fs-extra from 8.1.0 to 9.0.1",
        "url": "https://github.com/dino-dna/checkup/pull/36"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1MzkyMjcyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1MzkyMjcyNQ==",
      "body": "@dependabot merge",
      "createdAt": "2020-07-05T18:30:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMwMzA4Njc1",
        "title": "chore(deps): [security] bump websocket-extensions from 0.1.3 to 0.1.4",
        "url": "https://github.com/dino-dna/checkup/pull/31"
      },
      "repository": {
        "nameWithOwner": "dino-dna/checkup"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1NDQ1Njk0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1NDQ1Njk0NA==",
      "body": "Ya that makes sense. In actuality my build is both a lib and an executable. I used build vs package because I wanted the bundling properties offered by build.  I think it'd be nice to have some sort of builder that caters to such a use case",
      "createdAt": "2020-07-06T20:47:00Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDU3MTM3NzM=",
        "title": "buildable node library does not emit a .d.ts",
        "url": "https://github.com/nrwl/nx/issues/3234"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY1NzI2MDQ2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY1NzI2MDQ2Mg==",
      "body": "+ https://stackoverflow.com/questions/62854705/how-to-extend-html-attribute-interfaces-when-designing-reasonml-react-components",
      "createdAt": "2020-07-12T18:47:57Z",
      "issue": {
        "id": "MDU6SXNzdWU2MTIwMjA1MTM=",
        "title": "Docs: Coming from Typescript",
        "url": "https://github.com/reasonml/reason-react/issues/557"
      },
      "repository": {
        "nameWithOwner": "reasonml/reason-react"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjQ3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjQ3NA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQ2MjYwNDIx",
        "title": "chore(deps): update dependency prettier-standard to v16.4.1",
        "url": "https://github.com/cdaringe/primitivify/pull/162"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjUxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjUxNg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzgxODMy",
        "title": "chore(deps): update typescript-eslint monorepo to v3.6.1",
        "url": "https://github.com/cdaringe/primitivify/pull/163"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjU1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjU1MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDUwNDc1MjY4",
        "title": "chore(deps): update dependency typescript to v3.9.7",
        "url": "https://github.com/cdaringe/primitivify/pull/164"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjYwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjYwNQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDUzNjUxNDg4",
        "title": "chore(deps): update typescript-eslint monorepo to v3.7.0",
        "url": "https://github.com/cdaringe/primitivify/pull/165"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjY2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjY2MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDUzOTYyMTA2",
        "title": "fix(deps): update dependency is-plain-object to v4",
        "url": "https://github.com/cdaringe/primitivify/pull/166"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjY5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjY5Mw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQxNjMwMzcx",
        "title": "chore(deps): update typescript-eslint monorepo to v3.5.0",
        "url": "https://github.com/cdaringe/primitivify/pull/159"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjczOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjczOA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQwMTM1NDgz",
        "title": "chore(deps): update dependency semantic-release to v17.1.1",
        "url": "https://github.com/cdaringe/primitivify/pull/158"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjc4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjc4Mw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM5MTk1Mjc5",
        "title": "chore(deps): update dependency @types/lodash to v4.14.157",
        "url": "https://github.com/cdaringe/primitivify/pull/157"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjgyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjgyNQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQyODUxNTM2",
        "title": "chore(deps): update dependency typescript to v3.9.6",
        "url": "https://github.com/cdaringe/primitivify/pull/160"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjg0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjg0OQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTA1MjQz",
        "title": "chore(deps): update typescript-eslint monorepo to v3.6.0",
        "url": "https://github.com/cdaringe/primitivify/pull/161"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjkwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjkwMQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM1NzUzNDYz",
        "title": "chore(deps): update dependency lint-staged to v10.2.11",
        "url": "https://github.com/cdaringe/primitivify/pull/153"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjk0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjk0Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM4MTEzOTg0",
        "title": "chore(deps): update dependency semantic-release to v17.1.0",
        "url": "https://github.com/cdaringe/primitivify/pull/156"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMjk4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMjk4Mw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM3NzQ5ODI3",
        "title": "chore(deps): update dependency @types/lodash to v4.14.156",
        "url": "https://github.com/cdaringe/primitivify/pull/154"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzAyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzAyNg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM4MDc2ODE3",
        "title": "chore(deps): update typescript-eslint monorepo to v3.4.0",
        "url": "https://github.com/cdaringe/primitivify/pull/155"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzA3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzA3MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM0NzMzMDk4",
        "title": "chore(deps): update typescript-eslint monorepo to v3.3.0",
        "url": "https://github.com/cdaringe/primitivify/pull/152"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzExNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzExNw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI3MzU0ODQw",
        "title": "chore(deps): update dependency @types/lodash to v4.14.155",
        "url": "https://github.com/cdaringe/primitivify/pull/147"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzE0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzE0NA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI3NzgxMzY5",
        "title": "chore(deps): update dependency lint-staged to v10.2.9",
        "url": "https://github.com/cdaringe/primitivify/pull/148"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzE3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzE3NA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:13:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMxMjgwMDY3",
        "title": "chore(deps): update typescript-eslint monorepo to v3.2.0",
        "url": "https://github.com/cdaringe/primitivify/pull/150"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzIwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzIwOA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI4MDExNjUx",
        "title": "chore(deps): update dependency typescript to v3.9.5",
        "url": "https://github.com/cdaringe/primitivify/pull/149"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzIzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzIzNA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDMzNTcxNTY4",
        "title": "chore(deps): update dependency lint-staged to v10.2.10",
        "url": "https://github.com/cdaringe/primitivify/pull/151"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzI3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzI3NQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI2MTEzMTQ5",
        "title": "chore(deps): update typescript-eslint monorepo to v3.1.0",
        "url": "https://github.com/cdaringe/primitivify/pull/145"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzMzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzMzMg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI3MjYyOTEx",
        "title": "chore(deps): update dependency lint-staged to v10.2.8",
        "url": "https://github.com/cdaringe/primitivify/pull/146"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzM3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzM3Mw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0MDY4NTUz",
        "title": "chore(deps): update typescript-eslint monorepo to v3.0.2",
        "url": "https://github.com/cdaringe/primitivify/pull/142"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzQxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzQxMA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI0ODg1ODY0",
        "title": "chore(deps): update dependency lint-staged to v10.2.7",
        "url": "https://github.com/cdaringe/primitivify/pull/143"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzQ1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzQ1Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDI1NDY1MjQ5",
        "title": "chore(deps): update dependency @types/lodash to v4.14.154",
        "url": "https://github.com/cdaringe/primitivify/pull/144"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzUwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzUwNg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDIxNTA3Nzc1",
        "title": "chore(deps): update typescript-eslint monorepo to v3 (major)",
        "url": "https://github.com/cdaringe/primitivify/pull/137"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzUzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzUzMQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDIzNTM4NjY0",
        "title": "chore(deps): update dependency @types/lodash to v4.14.153",
        "url": "https://github.com/cdaringe/primitivify/pull/141"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzU1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzU1MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDIxNzYzOTg4",
        "title": "chore(deps): update dependency lint-staged to v10.2.6",
        "url": "https://github.com/cdaringe/primitivify/pull/138"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzU4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzU4Mg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDIyODU4Njc0",
        "title": "chore(deps): update typescript-eslint monorepo to v3.0.1",
        "url": "https://github.com/cdaringe/primitivify/pull/140"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzYyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzYyMA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDIyNDY5MjU0",
        "title": "chore(deps): update dependency semantic-release to v17.0.8",
        "url": "https://github.com/cdaringe/primitivify/pull/139"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzY2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzY2Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE5ODcyMjE3",
        "title": "chore(deps): update dependency semantic-release-cli to v5.3.1",
        "url": "https://github.com/cdaringe/primitivify/pull/134"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzY5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzY5Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE5NjY4MDcy",
        "title": "chore(deps): update typescript-eslint monorepo to v2.34.0",
        "url": "https://github.com/cdaringe/primitivify/pull/133"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzcxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzcxNA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE5NjY4MDIz",
        "title": "chore(deps): update dependency lint-staged to v10.2.4",
        "url": "https://github.com/cdaringe/primitivify/pull/132"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzc0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzc0NA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDIwNDE1MzQz",
        "title": "chore(deps): update dependency @types/lodash to v4.14.152",
        "url": "https://github.com/cdaringe/primitivify/pull/135"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzc3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzc3NA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:47Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDIwNDE1Mzc5",
        "title": "chore(deps): update dependency typescript to v3.9.3",
        "url": "https://github.com/cdaringe/primitivify/pull/136"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzgxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzgxNA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE2MjUzMzEw",
        "title": "chore(deps): update typescript-eslint monorepo to v2.32.0",
        "url": "https://github.com/cdaringe/primitivify/pull/127"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzg1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzg1MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE5NTMzMDM5",
        "title": "chore(deps): update dependency lint-staged to v10.2.3",
        "url": "https://github.com/cdaringe/primitivify/pull/131"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzkwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzkwMg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE3MDMxMzg3",
        "title": "chore(deps): update typescript-eslint monorepo to v2.33.0",
        "url": "https://github.com/cdaringe/primitivify/pull/129"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzk0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzk0MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:14:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE3MDA0OTMy",
        "title": "chore(deps): update dependency typescript to v3.9.2",
        "url": "https://github.com/cdaringe/primitivify/pull/128"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzk3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzk3Mg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE4NTE1MzUz",
        "title": "chore(deps): update dependency @types/lodash to v4.14.151",
        "url": "https://github.com/cdaringe/primitivify/pull/130"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyMzk5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyMzk5Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA3ODQ2NjYy",
        "title": "chore(deps): update dependency prettier-standard to v16.3.0",
        "url": "https://github.com/cdaringe/primitivify/pull/120"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDAyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDAyMw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDExMzg5NTM1",
        "title": "chore(deps): update dependency lint-staged to v10.2.1",
        "url": "https://github.com/cdaringe/primitivify/pull/123"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDA2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDA2NQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDEzMDkzNzA2",
        "title": "chore(deps): update typescript-eslint monorepo to v2.31.0",
        "url": "https://github.com/cdaringe/primitivify/pull/125"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDExNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDExNQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDE1NDczOTgx",
        "title": "chore(deps): update dependency semantic-release-cli to v5.3.0",
        "url": "https://github.com/cdaringe/primitivify/pull/126"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDE2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDE2MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDExOTcyODUw",
        "title": "chore(deps): update dependency lint-staged to v10.2.2",
        "url": "https://github.com/cdaringe/primitivify/pull/124"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDIwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDIwOQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA2MTkxMDk0",
        "title": "chore(deps): update typescript-eslint monorepo to v2.29.0",
        "url": "https://github.com/cdaringe/primitivify/pull/117"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDI1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDI1MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA2NzExNDcx",
        "title": "chore(deps): update dependency lint-staged to v10.1.7",
        "url": "https://github.com/cdaringe/primitivify/pull/118"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDI5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDI5OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA2ODgzNjkz",
        "title": "chore(deps): update dependency semantic-release to v17.0.7",
        "url": "https://github.com/cdaringe/primitivify/pull/119"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDM1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDM1MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDEwMTEwNjYx",
        "title": "chore(deps): update dependency lint-staged to v10.2.0",
        "url": "https://github.com/cdaringe/primitivify/pull/122"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDQwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDQwOQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA5NjMwMzAw",
        "title": "chore(deps): update typescript-eslint monorepo to v2.30.0",
        "url": "https://github.com/cdaringe/primitivify/pull/121"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDQyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDQyNg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA0NzM0MjU1",
        "title": "chore(deps): update dependency semantic-release to v17.0.6",
        "url": "https://github.com/cdaringe/primitivify/pull/112"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDQ2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDQ2Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA1NDY0ODA2",
        "title": "chore(deps): update dependency lint-staged to v10.1.5",
        "url": "https://github.com/cdaringe/primitivify/pull/115"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDUwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDUwMg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA1NjI3OTQx",
        "title": "chore(deps): update dependency lint-staged to v10.1.6",
        "url": "https://github.com/cdaringe/primitivify/pull/116"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDU0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDU0OQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA1MTUwMjU0",
        "title": "chore(deps): update dependency lint-staged to v10.1.4",
        "url": "https://github.com/cdaringe/primitivify/pull/113"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDU5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDU5OQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDA1Mzc4NTg0",
        "title": "chore(deps): update dependency @types/lodash to v4.14.150",
        "url": "https://github.com/cdaringe/primitivify/pull/114"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDYyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDYyNw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDAxNDQ5NTcy",
        "title": "chore(deps): update dependency lint-staged to v10.1.3",
        "url": "https://github.com/cdaringe/primitivify/pull/108"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDY3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDY3Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDAyNzQ0MjU2",
        "title": "chore(deps): update typescript-eslint monorepo to v2.28.0",
        "url": "https://github.com/cdaringe/primitivify/pull/111"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDcxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDcxNw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDAxNjU2NTYy",
        "title": "chore(deps): update dependency husky to v4.2.5",
        "url": "https://github.com/cdaringe/primitivify/pull/110"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDc1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDc1OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:15:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDAxNTI4Mzc3",
        "title": "chore(deps): update dependency husky to v4.2.4",
        "url": "https://github.com/cdaringe/primitivify/pull/109"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDgwOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDgwOA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk5Nzg2Nzky",
        "title": "chore(deps): update typescript-eslint monorepo to v2.27.0",
        "url": "https://github.com/cdaringe/primitivify/pull/107"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDg1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDg1MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk1ODAwMzcy",
        "title": "chore(deps): update typescript-eslint monorepo to v2.26.0",
        "url": "https://github.com/cdaringe/primitivify/pull/104"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDg5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDg5NQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk1MjQ0MzYz",
        "title": "chore(deps): update dependency lint-staged to v10.0.10",
        "url": "https://github.com/cdaringe/primitivify/pull/102"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDkzMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDkzMQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk2MzY5ODgw",
        "title": "chore(deps): update dependency lint-staged to v10.1.1",
        "url": "https://github.com/cdaringe/primitivify/pull/105"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNDk4OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNDk4OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk1NjU0ODAx",
        "title": "chore(deps): update dependency lint-staged to v10.1.0",
        "url": "https://github.com/cdaringe/primitivify/pull/103"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTA0MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTA0MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzk4OTgyMTM4",
        "title": "chore(deps): update dependency lint-staged to v10.1.2",
        "url": "https://github.com/cdaringe/primitivify/pull/106"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTA3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTA3OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzkyNTI0Mzkz",
        "title": "chore(deps): update typescript-eslint monorepo to v2.25.0",
        "url": "https://github.com/cdaringe/primitivify/pull/99"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTEyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTEyOA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzkyNzgyMjI1",
        "title": "chore(deps): update dependency lint-staged to v10.0.9",
        "url": "https://github.com/cdaringe/primitivify/pull/100"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTE3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTE3Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:26Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzkzNDExNTQ5",
        "title": "chore(deps): update dependency @types/node to v12.12.31",
        "url": "https://github.com/cdaringe/primitivify/pull/101"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTIwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTIwNw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzg5Mzg0MDI1",
        "title": "chore(deps): update typescript-eslint monorepo to v2.24.0",
        "url": "https://github.com/cdaringe/primitivify/pull/98"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTI1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTI1OQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzg1NzExOTQ4",
        "title": "chore(deps): update typescript-eslint monorepo to v2.23.0",
        "url": "https://github.com/cdaringe/primitivify/pull/97"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTI5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTI5Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc5MTM0MjAz",
        "title": "chore(deps): update typescript-eslint monorepo to v2.21.0",
        "url": "https://github.com/cdaringe/primitivify/pull/92"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTMyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTMyNA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc5NjMxMjc3",
        "title": "chore(deps): update dependency lint-staged to v10.0.8",
        "url": "https://github.com/cdaringe/primitivify/pull/93"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTM0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTM0MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzgxNjIzODgw",
        "title": "chore(deps): update dependency typescript to v3.8.3",
        "url": "https://github.com/cdaringe/primitivify/pull/94"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTM2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTM2MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzgyNTMwNTQ3",
        "title": "chore(deps): update typescript-eslint monorepo to v2.22.0",
        "url": "https://github.com/cdaringe/primitivify/pull/95"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTQxMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTQxMQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzgzNDk4NjI5",
        "title": "chore(deps): update dependency prettier-standard to v16.2.1",
        "url": "https://github.com/cdaringe/primitivify/pull/96"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTQyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTQyNA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjgzMTgz",
        "title": "chore(deps): update dependency semantic-release to v17.0.4",
        "url": "https://github.com/cdaringe/primitivify/pull/90"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTQ1OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTQ1OQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjY0ODMw",
        "title": "chore(deps): update typescript-eslint monorepo to v2.20.0",
        "url": "https://github.com/cdaringe/primitivify/pull/89"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTQ5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTQ5MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:56Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDE1MTQ0",
        "title": "chore(deps): update dependency typescript to v3.8.2",
        "url": "https://github.com/cdaringe/primitivify/pull/91"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTUyOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTUyOQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:16:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTkyMTQ3",
        "title": "chore(deps): update dependency husky to v4.2.3",
        "url": "https://github.com/cdaringe/primitivify/pull/87"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTU3MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTU3MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc0NjE3NzY2",
        "title": "chore(deps): update dependency semantic-release to v17.0.3",
        "url": "https://github.com/cdaringe/primitivify/pull/88"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTYxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTYxNw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzcwNDUwODk1",
        "title": "chore(deps): update typescript-eslint monorepo to v2.19.0",
        "url": "https://github.com/cdaringe/primitivify/pull/83"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTY0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTY0OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzczMzgzMjkw",
        "title": "chore(deps): update typescript-eslint monorepo to v2.19.2",
        "url": "https://github.com/cdaringe/primitivify/pull/85"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTY5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTY5Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzczMzE1MTI3",
        "title": "chore(deps): update typescript-eslint monorepo to v2.19.1",
        "url": "https://github.com/cdaringe/primitivify/pull/84"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTc0Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTc0Mg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY5NjYyODQ5",
        "title": "chore(deps): update dependency semantic-release to v17.0.2",
        "url": "https://github.com/cdaringe/primitivify/pull/82"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTc4Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTc4Mg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzc0MDg5MDk5",
        "title": "chore(deps): update dependency husky to v4.2.2",
        "url": "https://github.com/cdaringe/primitivify/pull/86"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTc5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTc5OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY4MTE2MzUw",
        "title": "chore(deps): update dependency semantic-release to v17.0.1",
        "url": "https://github.com/cdaringe/primitivify/pull/77"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTgzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTgzNg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY4MzY2Nzgz",
        "title": "chore(deps): update dependency lint-staged to v10.0.4",
        "url": "https://github.com/cdaringe/primitivify/pull/78"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTg1MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTg1MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY4OTEzMjU2",
        "title": "chore(deps): update dependency lint-staged to v10.0.5",
        "url": "https://github.com/cdaringe/primitivify/pull/79"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTkwMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTkwMA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY5NDQ1MDAy",
        "title": "chore(deps): update dependency lint-staged to v10.0.7",
        "url": "https://github.com/cdaringe/primitivify/pull/81"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTk0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTk0Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY5MDgzODA5",
        "title": "chore(deps): update dependency lint-staged to v10.0.6",
        "url": "https://github.com/cdaringe/primitivify/pull/80"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNTk2Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNTk2Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY3NjU5MjMy",
        "title": "chore(deps): update dependency semantic-release to v17",
        "url": "https://github.com/cdaringe/primitivify/pull/76"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjAwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjAwMg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY3NjMzNTgx",
        "title": "chore(deps): update typescript-eslint monorepo to v2.18.0",
        "url": "https://github.com/cdaringe/primitivify/pull/75"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjA0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjA0Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY3NjA0MzI5",
        "title": "chore(deps): update dependency semantic-release to v16.0.4",
        "url": "https://github.com/cdaringe/primitivify/pull/74"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjA3Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjA3Mw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY3NDg5Mjg4",
        "title": "chore(deps): update dependency lint-staged to v10.0.3",
        "url": "https://github.com/cdaringe/primitivify/pull/73"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjExOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjExOA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY2NTQ0NTMy",
        "title": "chore(deps): update dependency husky to v4.2.1",
        "url": "https://github.com/cdaringe/primitivify/pull/72"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjE0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjE0NA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY1OTk5NTAx",
        "title": "chore(deps): update dependency semantic-release to v16.0.3",
        "url": "https://github.com/cdaringe/primitivify/pull/71"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjE3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjE3MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY0OTg3Nzkz",
        "title": "chore(deps): update dependency lint-staged to v10.0.1",
        "url": "https://github.com/cdaringe/primitivify/pull/67"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjIxMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjIxMg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:17:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY1NDkyOTA5",
        "title": "chore(deps): update dependency husky to v4.1.0",
        "url": "https://github.com/cdaringe/primitivify/pull/68"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjI0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjI0OQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY1NzczNzg5",
        "title": "chore(deps): update dependency lint-staged to v10.0.2",
        "url": "https://github.com/cdaringe/primitivify/pull/70"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjI5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjI5Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY1NTQ1MDU4",
        "title": "chore(deps): update dependency husky to v4.2.0",
        "url": "https://github.com/cdaringe/primitivify/pull/69"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjMxOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjMxOQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYzMjg1MDA2",
        "title": "chore(deps): update dependency semantic-release to v16.0.2",
        "url": "https://github.com/cdaringe/primitivify/pull/62"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjM1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjM1NQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYzMTgzMTcy",
        "title": "chore(deps): update dependency husky to v4.0.10",
        "url": "https://github.com/cdaringe/primitivify/pull/61"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjM3Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjM3Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY0NTYyNzI3",
        "title": "chore(deps): update dependency lint-staged to v10",
        "url": "https://github.com/cdaringe/primitivify/pull/65"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjQxMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjQxMA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzY0OTUyNDYw",
        "title": "chore(deps): update typescript-eslint monorepo to v2.17.0",
        "url": "https://github.com/cdaringe/primitivify/pull/66"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjQ2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjQ2Mg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYzODUwMDk4",
        "title": "chore(deps): update dependency typescript to v3.7.5",
        "url": "https://github.com/cdaringe/primitivify/pull/63"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjQ5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjQ5MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYxNTQzMDY4",
        "title": "chore(deps): update dependency semantic-release to v16.0.1",
        "url": "https://github.com/cdaringe/primitivify/pull/56"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjUzOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjUzOA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYxNzk4MTE4",
        "title": "chore(deps): update dependency husky to v4.0.7",
        "url": "https://github.com/cdaringe/primitivify/pull/57"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjU1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjU1NQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYyMjUzMDY0",
        "title": "chore(deps): update typescript-eslint monorepo to v2.16.0",
        "url": "https://github.com/cdaringe/primitivify/pull/58"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjYwMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjYwMg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYyNzAyMDEy",
        "title": "chore(deps): update dependency husky to v4.0.9",
        "url": "https://github.com/cdaringe/primitivify/pull/60"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjY1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjY1Mw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYyNjA5NzUz",
        "title": "chore(deps): update dependency husky to v4.0.8",
        "url": "https://github.com/cdaringe/primitivify/pull/59"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjY2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjY2OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYxMjYzNDMx",
        "title": "chore(deps): update dependency husky to v4.0.5",
        "url": "https://github.com/cdaringe/primitivify/pull/54"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjcwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjcwNQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYwNzYyNjE4",
        "title": "chore(deps): update dependency husky to v4.0.3",
        "url": "https://github.com/cdaringe/primitivify/pull/51"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjc1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjc1NQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:41Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYxMzIwMzk2",
        "title": "chore(deps): update dependency husky to v4.0.6",
        "url": "https://github.com/cdaringe/primitivify/pull/55"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjc4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjc4MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYxMTU5OTc0",
        "title": "chore(deps): update dependency husky to v4.0.4",
        "url": "https://github.com/cdaringe/primitivify/pull/53"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjgyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjgyMw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYxMTQyNzg2",
        "title": "chore(deps): update dependency semantic-release to v16",
        "url": "https://github.com/cdaringe/primitivify/pull/52"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjg2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjg2Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU4MTc5NTM4",
        "title": "chore(deps): update typescript-eslint monorepo to v2.14.0",
        "url": "https://github.com/cdaringe/primitivify/pull/47"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjkwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjkwMw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzYwMjkwNDg5",
        "title": "chore(deps): update dependency husky to v4.0.1",
        "url": "https://github.com/cdaringe/primitivify/pull/50"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjk0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjk0Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU5NjUxODQy",
        "title": "chore(deps): update typescript-eslint monorepo to v2.15.0",
        "url": "https://github.com/cdaringe/primitivify/pull/48"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNjk5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNjk5MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:18:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU5NzgyODQ4",
        "title": "chore(deps): update dependency husky to v4",
        "url": "https://github.com/cdaringe/primitivify/pull/49"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzAzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzAzNg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU2NDExNTc3",
        "title": "chore(deps): update typescript-eslint monorepo to v2.13.0",
        "url": "https://github.com/cdaringe/primitivify/pull/46"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzA1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzA1Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU0MTI2OTA3",
        "title": "chore(deps): update dependency @types/node to v12.12.19",
        "url": "https://github.com/cdaringe/primitivify/pull/41"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzA4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzA4Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU0MjQzOTk3",
        "title": "chore(deps): update dependency @types/node to v12.12.20",
        "url": "https://github.com/cdaringe/primitivify/pull/42"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzEyNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzEyNA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU0NjQ5ODEz",
        "title": "chore(deps): update dependency @types/node to v12.12.21",
        "url": "https://github.com/cdaringe/primitivify/pull/43"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzE2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzE2OQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU1OTA4MTEx",
        "title": "chore(deps): update dependency typescript to v3.7.4",
        "url": "https://github.com/cdaringe/primitivify/pull/44"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzIxMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzIxMw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzU1OTc2NDk4",
        "title": "chore(deps): update dependency semantic-release to v15.14.0",
        "url": "https://github.com/cdaringe/primitivify/pull/45"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzI1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzI1Mw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUxMDUxODgx",
        "title": "chore(deps): update dependency @types/node to v12.12.16",
        "url": "https://github.com/cdaringe/primitivify/pull/37"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzI3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzI3OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUwODQ5OTI1",
        "title": "chore(deps): update typescript-eslint monorepo to v2.11.0",
        "url": "https://github.com/cdaringe/primitivify/pull/36"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzI5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzI5MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUxNTU5NDA5",
        "title": "chore(deps): update dependency @types/node to v12.12.17",
        "url": "https://github.com/cdaringe/primitivify/pull/38"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzMzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzMzNA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:30Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzNjkzMjA2",
        "title": "chore(deps): update typescript-eslint monorepo to v2.12.0",
        "url": "https://github.com/cdaringe/primitivify/pull/40"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzM4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzM4NQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUzNTM3NDk1",
        "title": "chore(deps): update dependency @types/node to v12.12.18",
        "url": "https://github.com/cdaringe/primitivify/pull/39"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzQzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzQzNA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ4NzQ5MDAz",
        "title": "chore(deps): update dependency typescript to v3.7.3",
        "url": "https://github.com/cdaringe/primitivify/pull/34"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzQ4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzQ4MQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ4MjUwNzA1",
        "title": "chore(deps): update dependency prettier-standard to v16.1.0",
        "url": "https://github.com/cdaringe/primitivify/pull/33"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzUzOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzUzOQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzUwNzEzMzM1",
        "title": "chore(deps): update dependency @types/node to v12.12.15",
        "url": "https://github.com/cdaringe/primitivify/pull/35"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzU2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzU2Mg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ3ODQwNzk5",
        "title": "chore(deps): update typescript-eslint monorepo to v2.10.0",
        "url": "https://github.com/cdaringe/primitivify/pull/32"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzYwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzYwNg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ2MTM5NDU5",
        "title": "chore(deps): update dependency prettier-standard to v16",
        "url": "https://github.com/cdaringe/primitivify/pull/31"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzY0NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzY0NA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQyODQ2MjMx",
        "title": "chore(deps): update dependency @types/node to v12.12.11",
        "url": "https://github.com/cdaringe/primitivify/pull/26"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzY5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzY5Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ0NzU5MTI1",
        "title": "chore(deps): update dependency @types/node to v12.12.12",
        "url": "https://github.com/cdaringe/primitivify/pull/27"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzczNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzczNw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:19:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ1NDQ3NzAx",
        "title": "chore(deps): update dependency @types/node to v12.12.14",
        "url": "https://github.com/cdaringe/primitivify/pull/29"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzc3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzc3OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:00Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ1MzU3MjE5",
        "title": "chore(deps): update typescript-eslint monorepo to v2.9.0",
        "url": "https://github.com/cdaringe/primitivify/pull/28"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzgyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzgyNQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQ2MDU3ODYy",
        "title": "chore(deps): update dependency lint-staged to v9.5.0",
        "url": "https://github.com/cdaringe/primitivify/pull/30"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzg2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzg2Mg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQxOTM2MDMy",
        "title": "chore(deps): update dependency husky to v3.1.0",
        "url": "https://github.com/cdaringe/primitivify/pull/22"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzkwMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzkwMw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQxOTIyNDY1",
        "title": "chore(deps): update dependency semantic-release to v15.13.31",
        "url": "https://github.com/cdaringe/primitivify/pull/21"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzk0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzk0OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQyMzU5NTQ4",
        "title": "chore(deps): update dependency @types/node to v12.12.9",
        "url": "https://github.com/cdaringe/primitivify/pull/25"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzk3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzk3Nw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQyMzUyMjA2",
        "title": "chore(deps): update dependency @types/lodash to v4.14.149",
        "url": "https://github.com/cdaringe/primitivify/pull/24"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyNzk5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyNzk5Mg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQyMjg3MjAz",
        "title": "chore(deps): update typescript-eslint monorepo to v2.8.0",
        "url": "https://github.com/cdaringe/primitivify/pull/23"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODAyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODAyNQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM5NTU0MTQz",
        "title": "chore(deps): update typescript-eslint monorepo to v2.7.0",
        "url": "https://github.com/cdaringe/primitivify/pull/16"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODA1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODA1NQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQwNjQ2OTY3",
        "title": "chore(deps): update dependency lint-staged to v9.4.3",
        "url": "https://github.com/cdaringe/primitivify/pull/17"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODA5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODA5NA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQxNjA1MDA3",
        "title": "chore(deps): update dependency @types/lodash to v4.14.148",
        "url": "https://github.com/cdaringe/primitivify/pull/19"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODExMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODExMw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQwNzE2MDI0",
        "title": "chore(deps): update dependency @types/lodash to v4.14.147",
        "url": "https://github.com/cdaringe/primitivify/pull/18"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODE1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODE1Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:32Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzQxNjI0MjA0",
        "title": "chore(deps): update dependency @types/node to v12.12.8",
        "url": "https://github.com/cdaringe/primitivify/pull/20"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODE3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODE3Mg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM3Nzk0NTU4",
        "title": "chore(deps): update dependency @types/lodash to v4.14.145",
        "url": "https://github.com/cdaringe/primitivify/pull/13"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODIwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODIwOQ==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:39Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM2OTk3NzQz",
        "title": "chore(deps): update dependency @types/node to v12.12.6",
        "url": "https://github.com/cdaringe/primitivify/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODI1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODI1Mw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM2ODY1Nzk5",
        "title": "chore(deps): update dependency typescript to v3.7.2",
        "url": "https://github.com/cdaringe/primitivify/pull/11"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODMwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODMwNw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM4ODkzOTcy",
        "title": "chore(deps): update dependency @types/node to v12.12.7",
        "url": "https://github.com/cdaringe/primitivify/pull/15"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODM0MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODM0MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM4NzcyMjY2",
        "title": "chore(deps): update dependency @types/lodash to v4.14.146",
        "url": "https://github.com/cdaringe/primitivify/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODM5NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODM5NA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:50Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM1NTAzNzk5",
        "title": "chore(deps): update dependency @types/node to v12.12.5",
        "url": "https://github.com/cdaringe/primitivify/pull/6"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODQyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODQyOA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:54Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM1OTI0MTUz",
        "title": "chore(deps): update dependency semantic-release to v15.13.30",
        "url": "https://github.com/cdaringe/primitivify/pull/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODQ3OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODQ3OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM2NDEwNzgy",
        "title": "chore(deps): update typescript-eslint monorepo to v2.6.1",
        "url": "https://github.com/cdaringe/primitivify/pull/10"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODQ5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODQ5Ng==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:20:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM1NjgxNDg0",
        "title": "chore(deps): update dependency semantic-release to v15.13.29",
        "url": "https://github.com/cdaringe/primitivify/pull/7"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODUzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODUzMg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:21:03Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzM2MDY1Mzg2",
        "title": "chore(deps): update dependency semantic-release-cli to v5.2.3",
        "url": "https://github.com/cdaringe/primitivify/pull/9"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODU1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODU1OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:21:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyNzM1Njc5",
        "title": "chore(deps): update semantic-release monorepo",
        "url": "https://github.com/cdaringe/primitivify/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODU5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODU5Mw==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:21:09Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMzMjMwNTU4",
        "title": "chore(deps): update typescript-eslint monorepo to v2.6.0",
        "url": "https://github.com/cdaringe/primitivify/pull/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODY0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODY0OA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:21:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMzOTIyNTE0",
        "title": "chore(deps): update dependency @types/node to v12.12.3",
        "url": "https://github.com/cdaringe/primitivify/pull/5"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODY4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODY4MA==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:21:15Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyNzI3OTQx",
        "title": "chore(deps): pin dependencies",
        "url": "https://github.com/cdaringe/primitivify/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2MTUyODcyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2MTUyODcyMg==",
      "body": ":tada: This PR is included in version 1.1.2 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/1.1.2)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v1.1.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2020-07-21T01:21:18Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MzMyNzIzOTg3",
        "title": "Configure Renovate",
        "url": "https://github.com/cdaringe/primitivify/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY2Njg2ODUwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY2Njg2ODUwNA==",
      "body": "Thanks! This project uses semantic-release and npm scripts.  If you like to adapt those we can take this! That would be dropping the make file and adhering to the prior conventions. Thx for the patches!",
      "createdAt": "2020-07-31T01:55:33Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU5MjM3MjYx",
        "title": "where feature",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/168"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY3NDIyNDQ5Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY3NDIyNDQ5Ng==",
      "body": "cool. thanks! i'd still like to disable it globally. my application expects resources that are not available during the pre-render phase, and to bypass, i must add a server method to each page. not a big deal, but not ideal either.",
      "createdAt": "2020-08-14T18:55:13Z",
      "issue": {
        "id": "MDU6SXNzdWU2Nzc4MzMzMDY=",
        "title": "Allow disabling pre-rendering, even in absence of getServerSideProps",
        "url": "https://github.com/vercel/next.js/issues/16124"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY3NTgwMzM3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY3NTgwMzM3OQ==",
      "body": "Sure! https://github.com/cdaringe/semantic-pull-requests/blob/feat/publish/index.js\r\n\r\nsemantic exports a single function that takes the app and registers handlers. That's a great start! I'd advocate for finer grain control as well, just exporting the handler and letting us call into the handler. Maybe also export the default events that would be bound to it.",
      "createdAt": "2020-08-19T01:44:15Z",
      "issue": {
        "id": "MDU6SXNzdWU2MzY1MTY2MjY=",
        "title": "rfc: make consumable as library",
        "url": "https://github.com/wei/pull/issues/210"
      },
      "repository": {
        "nameWithOwner": "wei/pull"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY3ODM0NTk3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY3ODM0NTk3NQ==",
      "body": "Sure thing @timneutkens. This change was small enough that in order to paint a complete picture, it was easy enough to just show-n-tell. I agree on the fragility--I even called it out as unstable in the docs. With respect to an RFC, can we just prefix the PR with RFC? You state \"proper RFC\" but I don't see a template--those found in \"Discussions\" tend to be free form.",
      "createdAt": "2020-08-21T15:17:25Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDcxMjYxODMz",
        "title": "feat(build): add onBuildComplete reporting API",
        "url": "https://github.com/vercel/next.js/pull/16418"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY3ODcxNTE2OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY3ODcxNTE2OQ==",
      "body": "RFC https://github.com/vercel/next.js/discussions/16483 opened",
      "createdAt": "2020-08-23T00:57:46Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDcxMjYxODMz",
        "title": "feat(build): add onBuildComplete reporting API",
        "url": "https://github.com/vercel/next.js/pull/16418"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5MDcyNDYyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5MDcyNDYyMg==",
      "body": "We also want to _sometimes_ disable eager compilation--specifically for running tests. Without doing so, each time the test runner hits the page, we need to apply some special, conditional timeout logic. To avoid it, weve just been doing production builds and testing those, but it's less desirable",
      "createdAt": "2020-09-10T20:55:14Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTgzNzgyMTI=",
        "title": "Load pages eagerly on change in `next dev`",
        "url": "https://github.com/vercel/next.js/issues/16999"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5MjQ0NDQ2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5MjQ0NDQ2MQ==",
      "body": "yikes! sorry i missed this so many times :). on it",
      "createdAt": "2020-09-15T03:43:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDY3NDYwMTIw",
        "title": "feat(core): add user-friendly error on invalid input",
        "url": "https://github.com/nrwl/nx/pull/3516"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5MjQ0NjQzNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5MjQ0NjQzNA==",
      "body": "squashed and formatted 👌 . hopefully that CI goes green :)",
      "createdAt": "2020-09-15T03:51:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDY3NDYwMTIw",
        "title": "feat(core): add user-friendly error on invalid input",
        "url": "https://github.com/nrwl/nx/pull/3516"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5MzExNDA0OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5MzExNDA0OA==",
      "body": "Sounds like it's been fixed if that's the case. Thanks",
      "createdAt": "2020-09-16T01:22:51Z",
      "issue": {
        "id": "MDU6SXNzdWU2NTM2NTkzNTM=",
        "title": "contributing instructions for installation require localhost:4873, but not specified as required",
        "url": "https://github.com/nrwl/nx/issues/3291"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5ODE2MzU1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5ODE2MzU1NQ==",
      "body": "![image](https://user-images.githubusercontent.com/1003261/94113124-41c0e280-fdfb-11ea-85c9-52320ff41dcf.png)\r\n\r\nHey, look at that. It compiles 😌 ",
      "createdAt": "2020-09-24T07:17:08Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDc4NTUxODY0",
        "title": "Remove leftover jbuild file and upgrades to Dune 2.0",
        "url": "https://github.com/bobbypriam/ezpostgresql/pull/6"
      },
      "repository": {
        "nameWithOwner": "bobbypriam/ezpostgresql"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5ODc3MDcxNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5ODc3MDcxNA==",
      "body": "Thanks for writing back @mnxn. Example, I have `\"ocaml\": \"~4.10.1\"` in my esy `package.json`. Yet, even such, I find that the extension periodically launches `4.11.0`\r\n\r\n```\r\n❯ ps aux | grep lsp\r\ncdaringe         86180   0.0  0.3  4333388  26540   ??  S    12:17AM   0:00.08 /Users/cdaringe/.config/yarn/global/node_modules/.bin/esy -P /Users/cdaringe/src/freshawair ocamllsp\r\ncdaringe         65925   0.0  0.0  4450688   2940   ??  S    Thu12AM   0:27.65 ocamllsp\r\ncdaringe         86876   0.0  0.0  4277496    672 s001  S+   12:25AM   0:00.00 grep lsp\r\ncdaringe         86185   0.0  1.9  4473808 156688   ??  S    12:17AM   0:03.44 /Users/cdaringe/.opam/4.11.0/bin/ocamllsp\r\n```\r\n\r\nSo I'm trying to figure out if i can _teach it_ somehow to never launch anything _but_ the esy sandbox.",
      "createdAt": "2020-09-25T07:26:54Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDc5MTg2ODg=",
        "title": "how does one specify the compiler version for the sandbox?",
        "url": "https://github.com/ocamllabs/vscode-ocaml-platform/issues/373"
      },
      "repository": {
        "nameWithOwner": "ocamllabs/vscode-ocaml-platform"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5ODc3MTMwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5ODc3MTMwOQ==",
      "body": "I'm not sure the conditions of which it happens, because in my most recent launch--great, ya, it's running my esy sandbox--but something i'm doing in my workflow is fubaring it time and again",
      "createdAt": "2020-09-25T07:28:24Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDc5MTg2ODg=",
        "title": "how does one specify the compiler version for the sandbox?",
        "url": "https://github.com/ocamllabs/vscode-ocaml-platform/issues/373"
      },
      "repository": {
        "nameWithOwner": "ocamllabs/vscode-ocaml-platform"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5OTU3NjI3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5OTU3NjI3NQ==",
      "body": "I could get into sending a patch if someone can help point me to the `root` field writer",
      "createdAt": "2020-09-27T02:46:41Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDk2NTI5Mjg=",
        "title": "settings.json::ocaml.sandbox.root written with absolute path vs relative path breaks project portability",
        "url": "https://github.com/ocamllabs/vscode-ocaml-platform/issues/374"
      },
      "repository": {
        "nameWithOwner": "ocamllabs/vscode-ocaml-platform"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5OTU4NTg4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5OTU4NTg4MA==",
      "body": "I am AFK at the moment, but on my phone I found this little guy. I think he might be the culprit! https://github.com/ocamllabs/vscode-ocaml-platform/blob/e2cbe19a625467218c177a06e8879b95cd764994/src/Toolchain.ml#L102",
      "createdAt": "2020-09-27T05:01:47Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDk2NTI5Mjg=",
        "title": "settings.json::ocaml.sandbox.root written with absolute path vs relative path breaks project portability",
        "url": "https://github.com/ocamllabs/vscode-ocaml-platform/issues/374"
      },
      "repository": {
        "nameWithOwner": "ocamllabs/vscode-ocaml-platform"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDY5OTY2NDYxNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDY5OTY2NDYxNQ==",
      "body": "@ulugbekna, no sweat! Thanks a bunch",
      "createdAt": "2020-09-27T17:37:24Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDk2NTI5Mjg=",
        "title": "settings.json::ocaml.sandbox.root written with absolute path vs relative path breaks project portability",
        "url": "https://github.com/ocamllabs/vscode-ocaml-platform/issues/374"
      },
      "repository": {
        "nameWithOwner": "ocamllabs/vscode-ocaml-platform"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcwMjQ2NDM2Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcwMjQ2NDM2Mg==",
      "body": "@munter, i'd imagine there's a conflict in the casing here. unsure what JSXIntrinsic elements internals do here on attr conversion. our team used `imageSrcset`/`imageSizes` and they seemed to take.",
      "createdAt": "2020-10-02T00:27:06Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDgyNzg5Nzk4",
        "title": "[@types/react] Add imagesrcset and imagesizes to LinkHTMLAttributes interface",
        "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47373"
      },
      "repository": {
        "nameWithOwner": "DefinitelyTyped/DefinitelyTyped"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcwNDU5Njg5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcwNDU5Njg5MA==",
      "body": "right--i essentially desire to `series: [{ name: \"some-series\", data: [...], disabled: true }, ... ]` in idiomatic react fashion.\r\n\r\nof course i could _not include_ those series up front, but then my UX suffers as they don't participate in the nice legend. ",
      "createdAt": "2020-10-06T23:00:14Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjAxNDM5NzE=",
        "title": "toggleSeries/showSeries",
        "url": "https://github.com/apexcharts/react-apexcharts/issues/141"
      },
      "repository": {
        "nameWithOwner": "apexcharts/react-apexcharts"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcwNTkzNTk1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcwNTkzNTk1MA==",
      "body": "seeing this error on HEAD, 59c9138--installed _today_ on 4.10.0+multicore",
      "createdAt": "2020-10-09T02:49:29Z",
      "issue": {
        "id": "MDU6SXNzdWU2OTIzMTg4Mjc=",
        "title": "Crashes on FreeBSD with \"Mutex.lock: Resource deadlock avoided\"",
        "url": "https://github.com/ocaml/ocaml-lsp/issues/245"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml-lsp"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcwNjY2NjYwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcwNjY2NjYwNQ==",
      "body": "> Multicore OCaml only supports x86_64\r\n\r\nwhat luck that i just stumbled across this. i was going to lengths to try out effects for an ARM 7 32bit build! :) ",
      "createdAt": "2020-10-11T07:58:43Z",
      "issue": {
        "id": "MDU6SXNzdWU2NjQzNzMxNzc=",
        "title": "Installation trouble",
        "url": "https://github.com/ocaml-multicore/multicore-opam/issues/24"
      },
      "repository": {
        "nameWithOwner": "ocaml-multicore/multicore-opam"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcwNjc3NDU2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcwNjc3NDU2MA==",
      "body": "@ljharb , I'm open to your suggestion, but those docker files fundamentally are for a different intent. Those are for running a first-class NVM image, where the above instructions teach the user how to make any image a NVM image. Implicitly, those docker files do the required work, but they do so with noise interspersed, and without a clear focus on the requirements to make NVM work in any image. Perhaps simply sprinkling on some extra verbage with reference to those would be useful? I don't think references to those alone are the correct solve.",
      "createdAt": "2020-10-11T22:04:44Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTAxMTgyOTIy",
        "title": "docs: add docker tips",
        "url": "https://github.com/nvm-sh/nvm/pull/2318"
      },
      "repository": {
        "nameWithOwner": "nvm-sh/nvm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcwNzUzMDE2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcwNzUzMDE2MA==",
      "body": "Ya sounds good. Thx for the reply",
      "createdAt": "2020-10-13T06:49:07Z",
      "issue": {
        "id": "MDU6SXNzdWU3MTg4ODkwMjY=",
        "title": "fnm cannot find files for arm7, debian",
        "url": "https://github.com/Schniz/fnm/issues/264"
      },
      "repository": {
        "nameWithOwner": "Schniz/fnm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcwNzUzMTU5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcwNzUzMTU5OA==",
      "body": "You can use docker with qemu runtime to both build and execute arm on non arm hosts, which would be a win for fnm CI build/publish cycles.",
      "createdAt": "2020-10-13T06:52:15Z",
      "issue": {
        "id": "MDU6SXNzdWU2MjMyODM0MzU=",
        "title": "Add a prebuilt ARM binary",
        "url": "https://github.com/Schniz/fnm/issues/222"
      },
      "repository": {
        "nameWithOwner": "Schniz/fnm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcxMTA3MDM3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcxMTA3MDM3Nw==",
      "body": "To be clear, I'd prefer MSW to not be involved at all here as well. I think we're aligned on that.  However, due to the nature of service workers and the fact that MSW is coupled to the `fetch` event, I have no choice but play nicely within MSW APIs  because I do need MSW's otherwise awesome provisions, therefore need its worker. In fact, my original desired approach was to use _a secondary worker_ to handle my requirements, which unfortunately didn't work due browser constraints. My stack is `browser-app => [huge-blackbox-of-infrastructure]`, where that blackbox is 99.99% reliable. I just happen to be making thousands of requests cumulatively on a daily basis, making that 0.01% failure rate statistically probable.\r\n\r\nIn response to the great feedback above:\r\n\r\n> You cannot affect a request at this point\r\n\r\nAgreed\r\n\r\n> The callback is called on the client, and does not have access to the worker scope (only to the worker registration).\r\n\r\nAgreed\r\n\r\n> I'm not sure if MSW is the right tool to apply a retry logic in general\r\n\r\nAgreed\r\n\r\n\r\nMy original two suggestions were\r\n\r\n> allow access to raw service worker event/request datas in onUnhandledRequest\r\n\r\n...and we're now aligned that this is not valid a solution, as these resources span across system boundaries\r\n\r\n> allow a callback directly inline in the generated MOCK_NOT_FOUND block\r\n\r\nI'm still interested in something _like_ this. I'm still interested in hooking it at the worker level specifically because it allows me to _detach_ from MSW for non-mocking concerns. By this point, MSW is already saying \"i'm not responsible for this, let the browser do its work for this fetch.\"  And, that's great--let me handle that stuff outside of MSW if MSW isn't mocking it. The proposed solution, `otherwise(...)`, above still forces me into MSW APIs and data-structures, which I'm optimistic that we can align on, specifically regarding that it feels undesirable to have to use MSW for non-mocked requests/responses.\r\n\r\nI have two ideas here that I wouldn't mind some feedback on that I think can get us out of this pickle, dare i say gracefully?\r\n\r\nOption 1: In the MSW worker, only `event.respondWith(...)` when we know 100% MSW has a mock resolver for the request. This could be achieved by letting the _worker_ do the route matching. The service worker would not need to consult the client code over the bridge to know if mocking is required. In this world, during resolver registration, matchers are sync'd to worker memory. When a `fetch` comes in, the `fetch` event handler can now synchronously choose to no-op, or, to handoff responding to the mock handlers.\r\n\r\nOption 2: in the `MOCK_NOT_FOUND` block, sniff for a userland function, e.g. `onMockNotFound(event)`. if present, call it with the event, otherwise, resume the status quo handling. \r\n\r\n\r\nBoth options _require_ that users _add code_ to the worker, either via concatenation, an `importScripts(...)` call, or _direct edits_. Anyone wanting to use worker APIs with MSW are already mostly faced with this reality, so that shouldn't be a hard stop, I wouldn't hope. I may, for example, have an entry:\r\n\r\n```js\r\n// my-worker.js\r\nimportScripts(\"/myAppsWorker.js\", \"/mockServiceWorker.js\")\r\n// ^ my fetch handler or retries here!   ^ msw here!\r\n\r\n```\r\n\r\nOption 2 is cheap and easy. The more time I spend staring at this response the more I'm into it!",
      "createdAt": "2020-10-17T19:43:47Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjM0MjAyMDU=",
        "title": "Allow access to service worker primitives in onUnhandledRequest",
        "url": "https://github.com/mswjs/msw/issues/426"
      },
      "repository": {
        "nameWithOwner": "mswjs/msw"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcxMjMwMDc1Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcxMjMwMDc1Ng==",
      "body": "> ...  the client and the worker (cannot send functions) ... I describe this behavior in this comment\r\n\r\nRight. All of this behavior makes sense, including the duplication of reqs in the network tab. To be fair though, matching requests should only happening on _strings_ in msw, not functions, right? Thus, `on-string-route-match` ? `event.respondWith(...)` : `no_op`. With that said, it is probably very challenging to do matching in worker code, as it likely requires parsing GQL queries, where some fancy regex+filtering is probably all that is required for rest handlers. Because of that alone, I'm happy to remove that idea as a solution.\r\n\r\n> If I may, what puts a limitation of \"only one worker per origin is permitted\"?\r\n\r\n`serviceWorker.register(...)` by default uses the the default scope. The browser only permits one worker on a scope. If i did `serviceWorker.register(\"/msw.js\")` and `serviceWorker.register(\"/custom-app-stuff.js\")`, only one will stick, iirc. In my case, I do generally want a shared scope. I _could_ feasibly load my worker on a different scope, but would require some non-trivial path analysis.\r\n\r\n> I'm not sure you've addressed my suggestion to use a permissive handler \r\n\r\nA few reasons--`otherwise` exposes msw primitives, not worker primitives (e.g. `MockedRequest`). We want worker primitives/APIs for our use case. Further, we are retrying static assets, not just JSON/xml _data_. If I retry a `GET /something.css` or a binary, will MSW serialize that well across the bridge?\r\n\r\n> Did you consider implementing retry in this layer\r\n\r\nYa, good question. I'm actually already retrying our API calls :smile:--this effort is really for 3rd party code and bundled-framework-runtime code retrieving assets that periodically fail. Unfortunately, there are various HTTP inducing APIs that are simply out-of-reach in vendor-space. 😬 \r\n\r\n>  Perhaps consider doing this as well, as I don't find a sufficient motivation to extend the worker for this use case\r\n\r\nSure. In fact, that's what we did--edit the worker. Re: registration scope, I'd just cordially suggest that MSW \"hogs\" the worker `fetch` event, for lack of better terms. The fetch handler's more-or-less unconditional `event.respondWith(...)` suggests that if you're using MSW, then your site's service worker is all MSW or the highway. I think it's fair to assume that other _worker_ logic ought be able to play nicely with MSW.  Perhaps my case is niche enough to just say \"edit the worker for these cases\", and that's probably OK. In my above option #2, I really liked that I was able to:\r\n\r\n- ship code without editing MSW\r\n- use my worker code in tandem with MSW\r\n- load both into the same worker registration.\r\n\r\nPretty nifty traits! The API change could be just adding one conditional and call-expression:\r\n```js\r\n        case \"MOCK_NOT_FOUND\": {\r\n          if (typeof onMockNotFound === \"function\") {\r\n            return onMockNotFound(event);\r\n          } else {\r\n            return resolve(getOriginalResponse());\r\n          }\r\n```\r\n",
      "createdAt": "2020-10-19T17:00:00Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjM0MjAyMDU=",
        "title": "Allow access to service worker primitives in onUnhandledRequest",
        "url": "https://github.com/mswjs/msw/issues/426"
      },
      "repository": {
        "nameWithOwner": "mswjs/msw"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcxMjU4MDE0Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcxMjU4MDE0Ng==",
      "body": "Thanks. Ya, I'll take a peek when I'm back w/ my arm setup. I do wonder if it's armel7",
      "createdAt": "2020-10-20T04:26:01Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjQxMjY4MDk=",
        "title": "Consider adding range pin to hacl",
        "url": "https://github.com/mirleft/ocaml-tls/issues/420"
      },
      "repository": {
        "nameWithOwner": "mirleft/ocaml-tls"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcxMjk1NDE1Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcxMjk1NDE1Mg==",
      "body": "> I explained this in an extensive detail that you cannot pass functions (onMockNotFound) from the client to the worker\r\n\r\nAs mentioned above, I'm not talking about a client function. I'm talking about an in scope function in the worker. In my example, I pasted: `importScripts(\"/myAppsWorker.js\", \"/mockServiceWorker.js\")`. `myAppsWorker.js` would be hosting `onMockNotFound`.\r\n\r\nIn this regard, I can participate in the worker with MSW.",
      "createdAt": "2020-10-20T15:55:45Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjM0MjAyMDU=",
        "title": "Allow access to service worker primitives in onUnhandledRequest",
        "url": "https://github.com/mswjs/msw/issues/426"
      },
      "repository": {
        "nameWithOwner": "mswjs/msw"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcxNDE3MzQ3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcxNDE3MzQ3Mg==",
      "body": "Hey all, I just reached this issue trying to experiment with effects in a current codebase w/ ppx_tools.\r\n\r\n```\r\n$ opam install ppx_tools\r\n...snip...\r\n#=== ERROR while compiling ppx_tools.6.2 ======================================#\r\n# context     2.0.7 | macos/x86_64 | ocaml-secondary-compiler.4.10.0 ocaml-variants.4.10.0+multicore | https://opam.ocaml.org#c06ea43f\r\n...snip...\r\n# Warning 8: this pattern-matching is not exhaustive.\r\n# ...snip...\r\n# File \"410/ast_mapper_class.ml\", lines 611-656, characters 2-3:\r\n# Error: Some record fields are undefined: effect_constructor\r\n```\r\n\r\nAm I reading the above correctly that ppx_tools is not compat w/ multicore/effects?",
      "createdAt": "2020-10-22T02:01:43Z",
      "issue": {
        "id": "MDU6SXNzdWUzMzA2MzY2NDQ=",
        "title": "multicore-opam breaks ppx_tools for 4.02.3",
        "url": "https://github.com/ocaml-multicore/multicore-opam/issues/10"
      },
      "repository": {
        "nameWithOwner": "ocaml-multicore/multicore-opam"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcxODk3OTI0Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcxODk3OTI0Nw==",
      "body": "Ya, definitely an enhancement",
      "createdAt": "2020-10-29T19:42:45Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDA4NjUyNTI=",
        "title": "next.js custom server errors with default settings",
        "url": "https://github.com/nrwl/nx/issues/3190"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyMDEzODY3NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyMDEzODY3NQ==",
      "body": "i often have install deps that fail, and i want this feature to see _who_ is calling for it. perhaps the parent node has bad ranges, needs to be pinned, etc.",
      "createdAt": "2020-11-01T19:25:39Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTkxMjgxNjI=",
        "title": "Add `opam tree` subcommand to display a dependency tree",
        "url": "https://github.com/ocaml/opam/issues/3775"
      },
      "repository": {
        "nameWithOwner": "ocaml/opam"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyMDEzODc3MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyMDEzODc3MA==",
      "body": "`npm ls` / `yarn why` are additional prior art that emit reduced graphs with the requested package as the leaf, and print up the dep tree to the root. super helpful",
      "createdAt": "2020-11-01T19:26:35Z",
      "issue": {
        "id": "MDU6SXNzdWU0MTkxMjgxNjI=",
        "title": "Add `opam tree` subcommand to display a dependency tree",
        "url": "https://github.com/ocaml/opam/issues/3775"
      },
      "repository": {
        "nameWithOwner": "ocaml/opam"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyMjg3NDgwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyMjg3NDgwMQ==",
      "body": "I can't wait to try this! Is it on pause indefinitely or just delayed?",
      "createdAt": "2020-11-06T06:09:24Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU4MDM0ODQz",
        "title": "feat(native): add initial tray-support for macOS",
        "url": "https://github.com/revery-ui/revery/pull/972"
      },
      "repository": {
        "nameWithOwner": "revery-ui/revery"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyNDc5NDk5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyNDc5NDk5MQ==",
      "body": "Excellent, thank you!\n\nOn Tue, Nov 10, 2020, 7:00 AM David Ortner <notifications@github.com> wrote:\n\n> Closed #143 <https://github.com/capricorn86/happy-dom/issues/143>.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/capricorn86/happy-dom/issues/143#event-3979365031>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57LCFFW7SVFJLFULIWLSPFIRPANCNFSM4TLVJFGQ>\n> .\n>\n",
      "createdAt": "2020-11-10T15:58:13Z",
      "issue": {
        "id": "MDU6SXNzdWU3MzcxMzU0MDU=",
        "title": "CSS selector fails querySelectorAll",
        "url": "https://github.com/capricorn86/happy-dom/issues/143"
      },
      "repository": {
        "nameWithOwner": "capricorn86/happy-dom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyNDgyNjc2NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyNDgyNjc2NQ==",
      "body": "What prompted this bug was a real-life usage where at the the 16 bit max mark, two chars (at least as rendered by editor) were dropped. Based on that failure + the above failure, the fact that console _is_ behaving, and that we know sonic boom is doing special processing at a factor of 16, I'd say that sonic-boom is seeming like the most likely candidate. is [this](https://github.com/mcollina/sonic-boom/blob/1178b1446aef498c76b1cdc4b69d61c794956b71/index.js#L302) a lossy line? ",
      "createdAt": "2020-11-10T16:48:41Z",
      "issue": {
        "id": "MDU6SXNzdWU3Mzk0OTc0Nzk=",
        "title": "pino fails to emit parsable json on large blocks of text",
        "url": "https://github.com/pinojs/pino/issues/925"
      },
      "repository": {
        "nameWithOwner": "pinojs/pino"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyNTExOTk5Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyNTExOTk5Mw==",
      "body": "@bobbypriambodo , mind merging this ASAP? @ManasJayanth pruned his fork, and my build fell apart :)",
      "createdAt": "2020-11-11T03:28:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDc4NTUxODY0",
        "title": "Remove leftover jbuild file and upgrades to Dune 2.0",
        "url": "https://github.com/bobbypriam/ezpostgresql/pull/6"
      },
      "repository": {
        "nameWithOwner": "bobbypriam/ezpostgresql"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyNzY2ODc5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyNzY2ODc5OQ==",
      "body": "incredible.",
      "createdAt": "2020-11-16T00:38:08Z",
      "issue": {
        "id": "MDU6SXNzdWU3MzY1ODE0ODE=",
        "title": "script not evaluated on add",
        "url": "https://github.com/capricorn86/happy-dom/issues/142"
      },
      "repository": {
        "nameWithOwner": "capricorn86/happy-dom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyNzY2OTUwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyNzY2OTUwOQ==",
      "body": "for other observers, the impl can be conveniently observed here https://github.com/capricorn86/happy-dom/compare/release/1.11.5...release/1.12.0",
      "createdAt": "2020-11-16T00:41:09Z",
      "issue": {
        "id": "MDU6SXNzdWU3MzY1ODE0ODE=",
        "title": "script not evaluated on add",
        "url": "https://github.com/capricorn86/happy-dom/issues/142"
      },
      "repository": {
        "nameWithOwner": "capricorn86/happy-dom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDcyOTE0MDI0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDcyOTE0MDI0NQ==",
      "body": "Sorry, I have long detached from that project to no longer have access to\nthe source code. Unfortunately I cannot recall\n\nOn Tue, Nov 17, 2020, 8:06 AM hounw <notifications@github.com> wrote:\n\n> @cdaringe <https://github.com/cdaringe> where you able to fix this?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/jessepollak/card/issues/243#issuecomment-729029361>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57O7XKTCA7SVWQZRY4DSQKNPTANCNFSM4CBFFTBA>\n> .\n>\n",
      "createdAt": "2020-11-17T19:09:31Z",
      "issue": {
        "id": "MDU6SXNzdWUxNDkwMDYzNTc=",
        "title": "card container overflows onto for on small screens",
        "url": "https://github.com/jessepollak/card/issues/243"
      },
      "repository": {
        "nameWithOwner": "jessepollak/card"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDczNDA1NDg0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDczNDA1NDg0OQ==",
      "body": "Will follow that thread. Thx",
      "createdAt": "2020-11-26T03:39:02Z",
      "issue": {
        "id": "MDU6SXNzdWU3NTEyMzE3MzE=",
        "title": "rfc: ocamldebug integration",
        "url": "https://github.com/ocamllabs/vscode-ocaml-platform/issues/454"
      },
      "repository": {
        "nameWithOwner": "ocamllabs/vscode-ocaml-platform"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDczNjIzNDUyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDczNjIzNDUyNg==",
      "body": "i pulled the above branch and confirms that i builds. the vscode debugger ...not sure what it's up to. i pinned the earlybird from the eduardorfs clone into my switch. still, after configuring to point to by .bc executable, vscode doesn't connect. unsure how to debug vscode's debugger launch startup at this point 🤔 there's no output out of the `OCaml Debug` tab",
      "createdAt": "2020-12-01T05:41:28Z",
      "issue": {
        "id": "MDU6SXNzdWU2NjA0NTI2NDc=",
        "title": "Support for OCaml 4.10",
        "url": "https://github.com/hackwaly/ocamlearlybird/issues/24"
      },
      "repository": {
        "nameWithOwner": "hackwaly/ocamlearlybird"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDczODEzNTgxNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDczODEzNTgxNg==",
      "body": "Thanks!",
      "createdAt": "2020-12-03T16:54:34Z",
      "issue": {
        "id": "MDU6SXNzdWU3NTQwMDg1NTg=",
        "title": "pin docs incorrectly claims that users can pin from git url",
        "url": "https://github.com/ocaml/opam/issues/4459"
      },
      "repository": {
        "nameWithOwner": "ocaml/opam"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0MTIwMTU4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0MTIwMTU4Mw==",
      "body": "@miherlosev, we turned on DEBUG for a week or so and upgraded to TestCafe/hammerhead@latest. Given the noise it induced in our users logs, we had to turn off DEBUG at some point so users could self service in CI. after a couple weeks of running (probably 5k jobs?), I only got _one_ bug report from a peer reporting the problem. We cannot reliably reproduce this bug, likely due to races within hammerhead tooling. This PR, however, will help us identify the issue in the very rare cases where the issue occurs.",
      "createdAt": "2020-12-08T23:13:36Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTIwODc0NTk3",
        "title": "fix: remove error instance assumption on property access",
        "url": "https://github.com/DevExpress/testcafe-hammerhead/pull/2481"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe-hammerhead"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0MTIwMjc4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0MTIwMjc4OQ==",
      "body": "...or could, perhaps if we serialize whatever actually gets thrown :)",
      "createdAt": "2020-12-08T23:14:23Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTIwODc0NTk3",
        "title": "fix: remove error instance assumption on property access",
        "url": "https://github.com/DevExpress/testcafe-hammerhead/pull/2481"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe-hammerhead"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0NTE1MDYxNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0NTE1MDYxNw==",
      "body": "I am not active playing factorio anymore. You are welcome to fork it and\npublish independently!\n\nOn Tue, Dec 15, 2020, 12:47 AM DatenNirwana <notifications@github.com>\nwrote:\n\n> Hi,\n>\n> currently the mod isn't compatible for upcoming Factorio release v1.1. Can\n> you pelae update the mod for it? Thanks! :-)\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cdaringe/nice-try-train/issues/9>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57N73L5STGXTPCSLUXDSU4PCFANCNFSM4U37NFUQ>\n> .\n>\n",
      "createdAt": "2020-12-15T09:00:34Z",
      "issue": {
        "id": "MDU6SXNzdWU3NjczMzQ2OTg=",
        "title": "Update for Factorio v1.1",
        "url": "https://github.com/cdaringe/nice-try-train/issues/9"
      },
      "repository": {
        "nameWithOwner": "cdaringe/nice-try-train"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0NTQzOTYwNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0NTQzOTYwNw==",
      "body": "Send me your fork links and i minimally will update the readme to point to your project :)",
      "createdAt": "2020-12-15T17:21:52Z",
      "issue": {
        "id": "MDU6SXNzdWU3NjczMzQ2OTg=",
        "title": "Update for Factorio v1.1",
        "url": "https://github.com/cdaringe/nice-try-train/issues/9"
      },
      "repository": {
        "nameWithOwner": "cdaringe/nice-try-train"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc0NTQzOTk3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc0NTQzOTk3Mg==",
      "body": "oh, undermark5 is already a contributor 😆 . whatever works ",
      "createdAt": "2020-12-15T17:22:27Z",
      "issue": {
        "id": "MDU6SXNzdWU3NjczMzQ2OTg=",
        "title": "Update for Factorio v1.1",
        "url": "https://github.com/cdaringe/nice-try-train/issues/9"
      },
      "repository": {
        "nameWithOwner": "cdaringe/nice-try-train"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc1MzY5ODEyNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc1MzY5ODEyNQ==",
      "body": "amazing, thanks!",
      "createdAt": "2021-01-04T00:16:53Z",
      "issue": {
        "id": "MDU6SXNzdWU3Nzc2OTcwMDg=",
        "title": "missing dependency",
        "url": "https://github.com/capricorn86/happy-dom/issues/189"
      },
      "repository": {
        "nameWithOwner": "capricorn86/happy-dom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc1MzczOTY1NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc1MzczOTY1NQ==",
      "body": "I had a design requirement that made me apply `const`, thus upgrade to JSONSchema6 as well. \r\n\r\n> and see now it'll be a bit more work than just simply unioning the three schema version types together due to the number of interfaces that extend from JSONSchema\r\n\r\nhowever, if this lib is to support each, isn't this precisely what the lib would need to do? common attrs should work fine, but for non-intersecting keys, `\"key\" in schema` checks would be required to narrow the types and execute version/version-range specific functionality.",
      "createdAt": "2021-01-04T03:36:16Z",
      "issue": {
        "id": "MDU6SXNzdWU3NzQwMjE1NTA=",
        "title": "Cannot pass JSONSchema7 schema to compile as it requires JSONSchema4",
        "url": "https://github.com/bcherny/json-schema-to-typescript/issues/359"
      },
      "repository": {
        "nameWithOwner": "bcherny/json-schema-to-typescript"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc1NDExNjY5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc1NDExNjY5OA==",
      "body": "scram, stalebot",
      "createdAt": "2021-01-04T17:45:21Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDE1OTUwMjk=",
        "title": "next.js recipe disjoint customServer provisions between build & serve",
        "url": "https://github.com/nrwl/nx/issues/3199"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc1NDI2ODE5MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc1NDI2ODE5MQ==",
      "body": "Thanks @capricorn86! Even with the small little issues (expected during the infancy of a lib), i've really been enjoying happy-dom! Great work",
      "createdAt": "2021-01-04T22:45:08Z",
      "issue": {
        "id": "MDU6SXNzdWU3Nzc3NDM5Mjk=",
        "title": "document.querySelector misbehaving on attr filter",
        "url": "https://github.com/capricorn86/happy-dom/issues/191"
      },
      "repository": {
        "nameWithOwner": "capricorn86/happy-dom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc1NDI2OTgzMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc1NDI2OTgzMw==",
      "body": "I am thrilled! I'll be installing nightly immediately to try this out. @weinand and @connor4312, deep gratitude for this killer feature",
      "createdAt": "2021-01-04T22:49:36Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzcyMTg2OTM=",
        "title": "Break on conditional exceptions in node debugger",
        "url": "https://github.com/microsoft/vscode/issues/104453"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc2NzM0MTExNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc2NzM0MTExNQ==",
      "body": "Hmmm. Shucks--I missed this. Thanks for putting some effort in, and apologies that my repro was insufficient. I will re-open this I observe it again in the wild. Thx again",
      "createdAt": "2021-01-26T06:48:35Z",
      "issue": {
        "id": "MDU6SXNzdWU3ODMwMTM1Mjc=",
        "title": "textContent handles whitespace differently than browser implementations",
        "url": "https://github.com/capricorn86/happy-dom/issues/195"
      },
      "repository": {
        "nameWithOwner": "capricorn86/happy-dom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3MDUxODEyMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3MDUxODEyMA==",
      "body": "greetings all :) the recipe as written actually **doesn't work with plain javascript**.\r\n\r\nto prove it, i've done the following:\r\n\r\n- created a new project\r\n- added `test.js` file\r\n- created a launch config, [as recorded here](https://github.com/avajs/ava/blob/master/docs/recipes/debugging-with-vscode.md#creating-a-launch-configuration)\r\n- ran\r\n\r\n[reference to repro repository](https://github.com/cdaringe/ava-ts-patcherooni#117efc0). Observe it all in this nice GIF! I debugged on the incorrect file at first--ignore that part 😉 !\r\n\r\n![plain_old_javascript mov](https://user-images.githubusercontent.com/1003261/106406428-145df400-63ee-11eb-8b75-4a1060057141.gif)\r\n\r\nAs you can see, the `debugger` statement is not hit, using plain javascript, using the official recipe.  I also decided to edit the Ava source code that launches the subprocess to debug the matter further. You can see the above output that the worker is launched with `\"execArgv\": []`. Because of this, I _don't expect_ the worker to be in debug mode (unless the subprocess kicks itself into debug mode dynamically, which is certainly possible via SIGUSR1).\r\n\r\n\r\nFWIW, using the debug terminal works fine, as recommended [here](https://github.com/avajs/ava/blob/master/docs/recipes/debugging-with-vscode.md#debugging-with-the-debug-terminal). `ts-node` is certainly compatible with all of this, as suggested in the typescript docs section. Precompiled assets also are not required using the debug terminal.\r\n\r\nIt's unclear to me what the design intent is supposed to be for the launch-configuration experience (which is my preferred experience). As shown above, the recipe does _not_ kick the worker process into debug mode. Even if it did kick the child into debug mode, it's also unclear to me how one would get VSCode to listen to that child. In the prior state of ava, there was only one PID to hook into. Perhaps something like [runInBand](https://jestjs.io/docs/en/cli#--runinband) is in order to return the easy debug flow to the prior state?",
      "createdAt": "2021-02-01T02:17:14Z",
      "issue": {
        "id": "MDU6SXNzdWU3ODI5MDE4NDU=",
        "title": "vscode debug + typescript recipes are incompatible as authored",
        "url": "https://github.com/avajs/ava/issues/2640"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3MTQwMzM4MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3MTQwMzM4MA==",
      "body": "Certainly! Node 15.0.1, VSCode: 1.52.1, ava@3.15.0\r\n\r\n`envinfo` posted below\r\n\r\n<details>\r\n\r\n  System:\r\n    OS: macOS 11.2\r\n    CPU: (4) x64 Intel(R) Core(TM) i5-7360U CPU @ 2.30GHz\r\n    Memory: 522.02 MB / 8.00 GB\r\n    Shell: 3.2.57 - /bin/bash\r\n  Binaries:\r\n    Node: 15.0.1 - ~/.fnm/current/bin/node\r\n    Yarn: 1.22.10 - /usr/local/bin/yarn\r\n    npm: 7.0.3 - ~/.fnm/current/bin/npm\r\n  Utilities:\r\n    CMake: 3.13.0 - /usr/local/bin/cmake\r\n    Make: 3.81 - /usr/bin/make\r\n    GCC: 16.088 - /usr/bin/gcc\r\n    Git: 2.19.0 - /usr/local/bin/git\r\n    Clang: 1200.0.32.29 - /usr/bin/clang\r\n  Virtualization:\r\n    Docker: 20.10.2 - /usr/local/bin/docker\r\n  IDEs:\r\n    VSCode: 1.52.1 - /usr/local/bin/code\r\n    Xcode: 12.4/12D4e - /usr/bin/xcodebuild\r\n  Languages:\r\n    Bash: 5.0.11 - /usr/local/bin/bash\r\n    Go: 1.11.1 - /usr/local/bin/go\r\n    Elixir: 1.9.1 - /usr/local/bin/elixir\r\n    Erlang: 22.0.7 - /usr/local/bin/erl\r\n    Java: javac 11 - /usr/bin/javac\r\n    Perl: 5.28.2 - /usr/bin/perl\r\n    PHP: 7.3.24 - /usr/bin/php\r\n    Python: 2.7.17 - /usr/local/bin/python\r\n    Python3: 3.9.1 - /Library/Frameworks/Python.framework/Versions/3.9/bin/python3\r\n    Ruby: 2.6.3 - /usr/bin/ruby\r\n    Rust: 1.42.0 - /Users/cdaringe/.cargo/bin/rustc\r\n  Databases:\r\n    SQLite: 3.32.3 - /usr/bin/sqlite3\r\n  Browsers:\r\n    Chrome: 88.0.4324.96\r\n    Firefox: 84.0.1\r\n    Safari: 14.0.3\r\n\r\n\r\n</details>",
      "createdAt": "2021-02-02T06:37:48Z",
      "issue": {
        "id": "MDU6SXNzdWU3ODI5MDE4NDU=",
        "title": "vscode debug + typescript recipes are incompatible as authored",
        "url": "https://github.com/avajs/ava/issues/2640"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3NDUxMzIwNA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3NDUxMzIwNA==",
      "body": "Bummer.\r\n\r\n- I've provided _two_ demonstrations, code and visual\r\n- I found in the source code where the child test process is launched, and shared insight on how it is launched without debug flags when using the recipes as authored\r\n\r\nI appreciate your effort and willingness, but I don't see compelling rationale for closure. \"Works on my machine (with different config)\" I feel is not giving the detailed reports justice. I'm not begging for an immediate solution, but I do kindly think the issue should be closed when it's certainly done-done.\r\n\r\nLet me know your thoughts.",
      "createdAt": "2021-02-06T17:40:27Z",
      "issue": {
        "id": "MDU6SXNzdWU3ODI5MDE4NDU=",
        "title": "vscode debug + typescript recipes are incompatible as authored",
        "url": "https://github.com/avajs/ava/issues/2640"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3NDUxNjM4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3NDUxNjM4NQ==",
      "body": "> As you can see, the debugger statement is not hit, using plain javascript, using the official recipe.\r\n\r\nI don't think my system is uncommon, as shown my envinfo.  I even uploaded a reproduction repository for plainjs (ignore -ts in the repro repo url). I admit, I could be missing something. But, as mentioned above, I don't see ts-node as the issue. \r\n\r\n> Viscose injects\r\n\r\nAre you assuming users are using autoattach? Otherwise I don't expect vs code to do this. I only expect it to add args to the root launch cli args to node",
      "createdAt": "2021-02-06T18:02:46Z",
      "issue": {
        "id": "MDU6SXNzdWU3ODI5MDE4NDU=",
        "title": "vscode debug + typescript recipes are incompatible as authored",
        "url": "https://github.com/avajs/ava/issues/2640"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3NDU4NDA1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3NDU4NDA1Nw==",
      "body": "I  tried on linux today (as opposed to my day-to-day macos laptop), and used the same node & vscode version as above. still doesn't take.  ~however, despite that it works for you, i do not expect it to work for you. i'm not sure what about your system makes this work--perhaps an env config, perhaps a vscode extension, ...im not sure.~\r\n\r\n~ava runs the test in a child process. nothing is kicking that child process into debug mode. i don't expect a debugger to hit, because the test runner isn't flipping on the node debugger in the child worker.~\r\n\r\n~in your screen shot, you can see the parent/child relationship, and that you have broken in the child.~\r\n\r\n...\r\n\r\nannnnnnd a few interesting tid bits of research have shown up:\r\n\r\n- i can get the launch to break if I add `\"autoAttachChildProcesses\": true`. this gets the desired workflow to take, even if not included in the recipe (perhaps because it shouldn't be?)\r\n- [built in debugger does claim to break on children/workers automatically](https://marketplace.visualstudio.com/items?itemName=ms-vscode.js-debug), but there seems to be some conditionality to it\r\n\r\ni need to learn more about what conditions would lead to _requiring_ `autoAttachChildProcesses` or what conditions would cause VSCode js-debug to not issue its _default_ behavior from the docs",
      "createdAt": "2021-02-07T03:20:42Z",
      "issue": {
        "id": "MDU6SXNzdWU3ODI5MDE4NDU=",
        "title": "vscode debug + typescript recipes are incompatible as authored",
        "url": "https://github.com/avajs/ava/issues/2640"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3NDU4OTI2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3NDU4OTI2Mw==",
      "body": "By using `\"type\": \"pwa-node\"` and dropping `autoAttachChildProcesses`, it also works. Do you have `\"debug.javascript.usePreview\": true` set by chance?",
      "createdAt": "2021-02-07T03:55:57Z",
      "issue": {
        "id": "MDU6SXNzdWU3ODI5MDE4NDU=",
        "title": "vscode debug + typescript recipes are incompatible as authored",
        "url": "https://github.com/avajs/ava/issues/2640"
      },
      "repository": {
        "nameWithOwner": "avajs/ava"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3Nzg3MTcyNw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3Nzg3MTcyNw==",
      "body": "what would the interface look like here?\r\n\r\n```\r\n- deleteStaleBranch: true\r\n- daysUntilBranchStale: 60\r\n- exemptStaleBranchMatches:\r\n    - gh-pages\r\n    - \"long-running.*\"\r\n```",
      "createdAt": "2021-02-11T23:48:59Z",
      "issue": {
        "id": "MDU6SXNzdWUyNTg5MTE0MDE=",
        "title": "feature: delete stale/merged branches",
        "url": "https://github.com/probot/stale/issues/61"
      },
      "repository": {
        "nameWithOwner": "probot/stale"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc3ODgyMTM0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc3ODgyMTM0NQ==",
      "body": "> imho, reverting a commit every time a regression happens is not a good idea.\r\n\r\nsure. however you guys want to do it :)\r\n\r\n> https://github.com/vlang/v/pull/8738#issuecomment-778765863\r\n\r\nyep, this worked. i can send a patch if desired",
      "createdAt": "2021-02-14T18:37:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTczMDU0NjIy",
        "title": "gg: window_size: normalize dpi scaling",
        "url": "https://github.com/vlang/v/pull/8738"
      },
      "repository": {
        "nameWithOwner": "vlang/v"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4MDM2NTE5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4MDM2NTE5MA==",
      "body": "i think the intent is to add the capability to map input to physical keys vs virtual keys (KeyCode). i don't think window/UI text input is even part of this topic.\r\n\r\ni'm a colemak user, but want WASD key mappings form motion, which on my keyboard is WARS. using `KeyCode` enum _doesn't work for me_. some games & engines handle this well. others, I must change keyboard layouts before game launch.",
      "createdAt": "2021-02-17T07:31:53Z",
      "issue": {
        "id": "MDU6SXNzdWU3NDI4MDM5ODk=",
        "title": "Add ScanCode enum.",
        "url": "https://github.com/bevyengine/bevy/issues/862"
      },
      "repository": {
        "nameWithOwner": "bevyengine/bevy"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4MDk2NTQ2Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4MDk2NTQ2Mw==",
      "body": "> packages/lib - separate npm module used in app as dependency\r\n\r\nperhaps the resolution needs to change in that case--use a filesystem resolution? just spit ballin. i used to refactor my resolutions in `package.json` post build for apps for this.  your `app` could bundle its dependencies too, negating the need to manage such resolution complexity. how to handle this has a diverse set of solutions. i'd probably suggest that this is not really a pnpm concern. even lerna maintainer pretty much told everyone \"you gotta figure out how to do this on your own for your use case\", because the package manager doesn't have intrinsic knowledge of application packaging needs. but that's just my opinion/2c 😄 \r\n\r\nAn additional question I have on pnpm assets as it pertains to docker is per the following\r\n\r\n## context\r\n\r\n- during the build/test phase of an application, devDeps are needed\r\n- post build/test phase comes the packaging phase, where we need to get _prod deps only_ into the image. do we ...\r\n  -  `pnpm prune`? pruning is _slow_ and fs intensive\r\n  - `install`? well, we could, but that could be expensive--lots of development only files could be pushed through the docker build context (slow!), _or_ redundant network & filesystem i/o could be suffered if you are `pnpm install` fresh in the image, even if you already had those deps available in an earlier phase\r\n\r\n## question\r\n\r\nis there a mechanism to isolate deps/devDeps on disk to optimize downstream packaging?\r\n\r\nwhat would be great is if the deps vs devDeps were landed separate from each other in on disk (or if i could tune it to be). in this regard, i could:\r\n\r\n- easily copy _only_ prod deps from the host => image, or\r\n- copy only the prod deps from the build/test image into the release image\r\n\r\nThus, by isolating dependency types (**not logically, just physically**), I could minimize file i/o during a very common packaging process (docker builds!)",
      "createdAt": "2021-02-18T01:15:15Z",
      "issue": {
        "id": "MDU6SXNzdWU3OTc0MjMxMjA=",
        "title": "Best practices for using PNPM with docker monorepo",
        "url": "https://github.com/pnpm/pnpm/issues/3114"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4MTQzODg3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4MTQzODg3Nw==",
      "body": "> What if we print all the paths to prod dependencies in node_modules?\r\n\r\nInteresting idea. dockerfile `COPY` accepts only filenames, directories, and globs. Thus, to make such a file useful, the user would have to preprocess the deps before docker, do N fs operations (for each dep, or M - N for each dev dep), such that a single glob or directory could be prepared for `COPY`. With yarn in my large project, that's tens of thousands of fs ops--in which case just using pnpm prune would be simpler for probably similar performance. Admittedly, I don't recall how the pnpm deps are structured--some experimentation is required. This could be useful if the number of fs preparation operations is <<< than the count of dependencies.",
      "createdAt": "2021-02-18T15:48:36Z",
      "issue": {
        "id": "MDU6SXNzdWU3OTc0MjMxMjA=",
        "title": "Best practices for using PNPM with docker monorepo",
        "url": "https://github.com/pnpm/pnpm/issues/3114"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4Mzk2NjEwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4Mzk2NjEwOQ==",
      "body": "> Does this work just by having it installed on the system?\r\n\r\nYep! Mono went from emitting very not indicative information to very useful information on crash. The error output actually suggested it, which is what prompted me to try it",
      "createdAt": "2021-02-23T07:16:11Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTc4MTk3NzI5",
        "title": "feat: add gdb for improved c# traces",
        "url": "https://github.com/mbround18/valheim-docker/pull/164"
      },
      "repository": {
        "nameWithOwner": "mbround18/valheim-docker"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc4NzEzNDUxOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc4NzEzNDUxOA==",
      "body": "blast. the the format script is workin for me :| will maybe try again later",
      "createdAt": "2021-02-27T21:00:40Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTgxMzg0ODA1",
        "title": "docs: advise docker support",
        "url": "https://github.com/denoland/deno/pull/9618"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5MjMwMDE4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5MjMwMDE4MQ==",
      "body": "Sure, I'll send one later.I have an easy repro. The tldr is,\n\nTest a component with >1 asynchronous use effect/setState calls (very\ncommon).\n\nRun test, test passes.\n\nAdd an afterEach with async behavior.\n\nObserve act errors. afterEach async calls are not protected by RTLs\ninternal act wrapping. RTLs auto cleanup is not invoked until after my\nafterEach\n\nOn Sun, Mar 7, 2021, 1:40 AM Sebastian Silbermann <notifications@github.com>\nwrote:\n\n> *@eps1lon* commented on this pull request.\n>\n> I'm not following how this translates to actual code.\n>\n> Could you give a minimal example code of the problem and how you fixed it?\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/testing-library/testing-library-docs/pull/779#pullrequestreview-605826884>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57JVWNI6VHKZGT6HAIDTCNCYFANCNFSM4YXML2JA>\n> .\n>\n",
      "createdAt": "2021-03-07T15:53:02Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg2MTc3NTMw",
        "title": "docs(react-testing-library): warn about afterEach auto cleanup footgun",
        "url": "https://github.com/testing-library/testing-library-docs/pull/779"
      },
      "repository": {
        "nameWithOwner": "testing-library/testing-library-docs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5MjMyODkzMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5MjMyODkzMg==",
      "body": "Consider this basic `<App />` you are integration testing. This is a very simple, MVP example app:\r\n\r\n```tsx\r\n// fake api call\r\nconst getData = (numRecords: number) =>\r\n  sleep(numRecords).then(() => numRecords);\r\n\r\nconst A = () => {\r\n  const [content, setContent] = React.useState(\"A is loading\");\r\n  React.useEffect(() => {\r\n    getData(10).then(() => setContent(\"A is ready\"));\r\n  }, []);\r\n  return <p>{content}</p>;\r\n};\r\n\r\nconst B = () => {\r\n  const [content, setContent] = React.useState(\"B is loading\");\r\n  React.useEffect(() => {\r\n    getData(50).then(() => setContent(\"B is ready\"));\r\n  }, []);\r\n  return <p>{content}</p>;\r\n};\r\n\r\nexport function App() {\r\n  return (\r\n    <div>\r\n      <A />\r\n      <B />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nHere's a basic test asserting that `<A />` eventually renders per expectation.\r\n\r\n```tsx\r\nimport * as React from \"react\";\r\nimport { render, screen } from \"@testing-library/react\";\r\nimport { App } from \"../App\";\r\n\r\ntest(\"cleanup & act error demo\", async () => {\r\n  render(<App />);\r\n  expect(await screen.findByText(\"A is ready\")).toBeInTheDocument();\r\n});\r\n```\r\n\r\n> PASS  src/__tests__/app.spec.tsx\r\n\r\nEverything passes. Everything is fine and serene. 🟢 👼 \r\n\r\nWhat if that test needs async teardown? Here's a real looking patch you might apply:\r\n\r\n```patch\r\ndiff --git a/src/__tests__/app.spec.tsx b/src/__tests__/app.spec.tsx\r\nindex 4c61540..81bd140 100644\r\n--- a/src/__tests__/app.spec.tsx\r\n+++ b/src/__tests__/app.spec.tsx\r\n@@ -1,6 +1,13 @@\r\n import * as React from \"react\";\r\n import { render, screen } from \"@testing-library/react\";\r\n import { App } from \"../App\";\r\n+import { sleep } from \"../timing\";\r\n+\r\n+const simulateImportantTeardownWork = () => sleep(100);\r\n+\r\n+afterEach(async () => {\r\n+  await simulateImportantTeardownWork();\r\n+});\r\n \r\ntest(\"cleanup & act error demo\", async () => {\r\n   render(<App />);\r\n```\r\n\r\nWhat happens in the test now?\r\n\r\n```txt\r\n PASS  src/__tests__/app.spec.tsx\r\n  ● Console\r\n\r\n    console.error\r\n      Warning: An update to B inside a test was not wrapped in act(...).\r\n      \r\n      When testing, code that causes React state updates should be wrapped into act(...):\r\n      \r\n      act(() => {\r\n        /* fire events that update state */\r\n      });\r\n      /* assert on the output */\r\n      \r\n      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act\r\n          at B (/Users/c0d01a5/src/react-rtl-integration-testing/src/App.tsx:17:39)\r\n          at div\r\n          at App\r\n\r\n      17 |   const [content, setContent] = React.useState(\"B is loading\");\r\n      18 |   React.useEffect(() => {\r\n    > 19 |     getData(50).then(() => setContent(\"B is ready\"));\r\n         |                            ^\r\n      20 |   }, []);\r\n      21 |   return <p>{content}</p>;\r\n      22 | };\r\n\r\n      at printWarning (node_modules/.pnpm/react-dom@17.0.1_react@17.0.1/node_modules/react-dom/cjs/react-dom.development.js:67:30)\r\n```\r\n\r\nWhat's happened? Why did we get this error now? All we did was add an afterEach!  And that in fact is problematic. \r\n\r\n- in the first demo, RTL `cleanup`  ran **immediately**. Jest froze the console and tore down the worker before additional work could be processed for react errors to surface\r\n- in the second demo, the async nature of our `afterEach` allowed react to continue to process state changes, specifically _outside_ of any RTL or explicit `act()` functions. our `simulateImportantTeardownWork` afterEach occurs _before_ RTLs auto-registering afterEach `cleanup`\r\n\r\nThus, what seemed like a harmless `afterEach` addition, ended up being quite problematic. Even worse--this example was designed to surface the error, by ensuring that `afterEach` was sufficiently slow to surface the act() error. In many cases, async behaviors are mocked and fast. That means that this race condition can be subtle to surface for many peoples' code. `<A />` and `<B />` effects could have certainly settled in the inner `waitFor(...)`, and no one would have been the wiser.\r\n\r\n\r\nOrder matters. What happens if we register our handler, _then_ import RTL and implicitly setup the auto cleanup?\r\n\r\n```patch\r\ndiff --git a/src/__tests__/app.spec.tsx b/src/__tests__/app.spec.tsx\r\nindex 0864a78..033a93f 100644\r\n--- a/src/__tests__/app.spec.tsx\r\n+++ b/src/__tests__/app.spec.tsx\r\n@@ -1,14 +1,14 @@\r\n-import * as React from \"react\";\r\n-import { render, screen } from \"@testing-library/react\";\r\n-import { App } from \"../App\";\r\n-import { sleep } from \"../timing\";\r\n-\r\n const simulateImportantTeardownWork = () => sleep(100);\r\n \r\n afterEach(async () => {\r\n   await simulateImportantTeardownWork();\r\n });\r\n \r\n+import * as React from \"react\";\r\n+import { render, screen } from \"@testing-library/react\";\r\n+import { App } from \"../App\";\r\n+import { sleep } from \"../timing\";\r\n+\r\n test(\"cleanup & act error demo\", async () => {\r\n   render(<App />);\r\n   expect(await screen.findByText(\"A is ready\")).toBeInTheDocument();\r\n```\r\n\r\nOn test, we get:\r\n\r\n```\r\n PASS  src/__tests__/app.spec.tsx\r\n  ● Console\r\n\r\n    console.error\r\n      Warning: An update to B inside a test was not wrapped in act(...).\r\n      \r\n    ...SNIP SNIP...\r\n\r\n    console.error\r\n      Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n\r\n   ...SNIP SNIP...\r\n```\r\n\r\n>  Warning: Can't perform a React state update on an unmounted component.\r\n\r\n👀 \r\n\r\nThis is probably the *best* possible outcome. RTL's magic cleanup happened immediately, just like in the very first example we ran. Unlike in the first example, though, just by means of adding some timing delay, jest did not teardown our test quickly, and we learned that we did not appropriately clean up our effects! This could be desirable or undesirable, based on your design goals. Importantly, in this final example, at least we learned about the possibility of an error in our code.\r\n\r\n\r\nThe objective of this PR it to help the community become aware of this subtle, likely-more-common-than-reported, source of bugs because of \r\n\r\n- implicit side-effects and\r\n- async interaction between react, jest, and RTL\r\n\r\nWe should advise to ensure that `cleanup` is always called _immediately_ after the test block exits, in almost all cases. We should advise that `cleanup` certainly be called before any async behaviors, and ideally synchronously after test block exits. To not advise this is to allow for delayed cleanup, and implicitly promote act() errors to be emitted in code blocks well after where we even care about the react runtime. ",
      "createdAt": "2021-03-07T18:25:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg2MTc3NTMw",
        "title": "docs(react-testing-library): warn about afterEach auto cleanup footgun",
        "url": "https://github.com/testing-library/testing-library-docs/pull/779"
      },
      "repository": {
        "nameWithOwner": "testing-library/testing-library-docs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5Mjg4NTc4Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5Mjg4NTc4Nw==",
      "body": "Definitely. I didn't even see that pure was an option. I certainly wouldn't shift the imports--it was done only to demonstrate the significance of order and async afterEach impact",
      "createdAt": "2021-03-08T16:38:59Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg2MTc3NTMw",
        "title": "docs(react-testing-library): warn about afterEach auto cleanup footgun",
        "url": "https://github.com/testing-library/testing-library-docs/pull/779"
      },
      "repository": {
        "nameWithOwner": "testing-library/testing-library-docs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5NTczNjM2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5NTczNjM2MA==",
      "body": "Thanks for the thoughtful feedback.\r\n\r\n- the require to `prop-types` should fail. In fact, I filed vercel/next.js#22930 on the topic. They need to add it as a peer dependency or pass it _into_ their generated content. that much is clear :)\r\n- the require to `prop-types` require _doesn't_ fail in `case1`. i never explicitly asked for prop-types. pnpm hoisted `next.js#prop-types`. in case 1, it was hoisted. in case 2, it was _not hoisted_. and this inconsistent hoisting is the source of my confusion.\r\n\r\n\r\nThe question I'm really after is _why_ am I getting a different physical layout when practically asking to install the same content.\r\n\r\n- `case1` = `\"pnpm, install dependency next, please\"`\r\n- `case2` = \"pnpm, install dependency next & devDependency prop-types, but actually don't install prop-types because of the -P flag\" which is equivalent to `\"pnpm, install dependency next, please\"`\r\n\r\nthus, the same intent of \"install just production dependencies\" in _both_ cases produces a different physical result.",
      "createdAt": "2021-03-10T16:57:47Z",
      "issue": {
        "id": "MDU6SXNzdWU4MjcyMzM3Njg=",
        "title": "unexpected physical positioning of production dependency based on devDependencies state",
        "url": "https://github.com/pnpm/pnpm/issues/3231"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5NzI3OTMzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5NzI3OTMzMA==",
      "body": "> But it does fail for me ... Are we talking about that case1, without modifications?\r\n\r\n:facepalm: sorry. I did modify the case in my head, and spoke about it as though I had communicated it. I don't know how I could have whiffed _that hard_. Apologies\r\n\r\nI'm going to take an alternate approach at describing the problem.\r\n\r\n-----\r\n\r\nThe following script produces two cases:\r\n\r\n```txt\r\n$ tree -L 2\r\n.\r\n├── case_a\r\n│   ├── node_modules\r\n│   ├── package.json\r\n│   └── pnpm-lock.yaml\r\n├── case_b\r\n│   ├── node_modules\r\n│   ├── package.json\r\n│   └── pnpm-lock.yaml\r\n```\r\n\r\n```json\r\n{\r\n  \"name\": \"case_a\",\r\n  \"dependencies\": {\r\n    \"next\": \"10.0.1\",\r\n    \"react\": \"^17.0.1\",\r\n    \"react-dom\": \"^17.0.1\"\r\n  }\r\n}\r\n```\r\n\r\n```json\r\n{\r\n  \"name\": \"case_b\",\r\n  \"dependencies\": {\r\n    \"next\": \"10.0.1\",\r\n    \"react\": \"^17.0.1\",\r\n    \"react-dom\": \"^17.0.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"prop-types\": \"15.7.2\"\r\n  }\r\n}\r\n```\r\n\r\nThe only difference between these two cases is that\r\n\r\n- `prop-types` is an explicit devDependency in case_b\r\n- case_b is installed with `-P`\r\n\r\nObserve that in case_a, `prop-types` is hoisted and exists @ node_modules/prop-types.\r\nIn case_b, by passing `-P`, I'm essentially saying \"ignore devDepedencies\". In saying that, my package.json should be functionally equivalent to case_a.\r\n\r\nHowever, the physical node_modules are different.  `node_modules/prop-types` does not exist in case_b. That is _somewhat_ intuitive--prop-types _shouldn't_ be there, right? But then why was it there in case_a? What was surprising about this is that my transitive production dependency, `prop-types` _moved_ around based on the `-P` flag. It is needed in both cases--it is a production dependency in the next package. As discussed above, `prop-types` is incorrectly declared by next.js. However, I had false confidence that my application was working on my development machine, because the transitive dependency was exposed when working with a case_a setup.\r\n\r\nI'm trying to discern if `case_a`'s `node_modules/prop-types` is\r\n\r\n- desirable from pnpm's perspective, or\r\n- neutral, perhaps just an effect of the design, or\r\n- a bug\r\n\r\nNot exposing transitive dependencies I thought was a strength of pnpm. In retro, I cannot find explicit docs that state precisely this as a design goal. Anyway, it _felt_ incorrect to me, hence the report. However, if this is intentional, so be it. I would like to learn _why_, if someone knows. \r\n\r\n\r\nDemo script:\r\n\r\n<details>\r\n<pre>\r\nrm -rf case_a case_b \\\r\n && mkdir case_a \\\r\n && mkdir case_b \\\r\n && cd case_a \\\r\n && git init \\\r\n && npm init -y \\\r\n && pnpm add --no-optional --package-import-method=copy --save next@10.0.1 react react-dom \\\r\n && printf \"\\n\\ncase_a - node_modules\\n====\\n\\n\" \\\r\n && ls -al node_modules \\\r\n && printf \"\\n^ observe prop-types! \\n\\n\\n\" \\\r\n && cd ../case_b \\\r\n && git init \\\r\n && npm init -y \\\r\n && pnpm add --no-optional --package-import-method=copy --save next@10.0.1 react react-dom \\\r\n && pnpm add --no-optional --package-import-method=copy --save-dev prop-types@15.7.2 \\\r\n && rm -rf node_modules \\\r\n && printf \"\\n\\n\\nprepare for app for production, and install _only_ production dependencies\\n\\n\" \\\r\n && NODE_ENV=production pnpm install --no-optional --package-import-method=copy -P \\\r\n && printf \"\\n\\ncase_b - node_modules\\n====\\n\\n\" \\\r\n && ls -al node_modules \\\r\n && printf \"\\n^ observe prop-types missing \\n\\n\\n\"\r\n</pre>\r\n</details>",
      "createdAt": "2021-03-12T06:55:36Z",
      "issue": {
        "id": "MDU6SXNzdWU4MjcyMzM3Njg=",
        "title": "unexpected physical positioning of production dependency based on devDependencies state",
        "url": "https://github.com/pnpm/pnpm/issues/3231"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5NzI4MTE2MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5NzI4MTE2MQ==",
      "body": "Yes, I owe it to you to clarify. I may have pasted the wrong output. I will re-open with more robust output when ready.\r\n\r\nThanks for the input.",
      "createdAt": "2021-03-12T07:00:01Z",
      "issue": {
        "id": "MDU6SXNzdWU4Mjk2MDc3NzA=",
        "title": "concurrent installs from different directories of the same project yield symlink error",
        "url": "https://github.com/pnpm/pnpm/issues/3233"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDc5OTc5Nzg0NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDc5OTc5Nzg0NQ==",
      "body": "i still cannot reproduce out of a private setting. even creating a worst-case attempt still seems to pass. very feasibly could be postinstall scripts from some package meddling. here's an example of an aggressive race, still succeeding (for more than anything, a breadcrumb, next time i crash into this):\r\n\r\n```bash\r\nset -exo pipefail\r\nsuffix=$(date +%s)\r\nroot=/tmp/pnpm-test-$suffix\r\ndir=$PWD\r\n\r\nfunction prepareDemoApp () {\r\n  mkdir -p $root/$1\r\n  cd $root/$1\r\n  git init\r\n  npm init -y\r\n  pnpm add debug prop-types jest express koa next sharp node-sass level\r\n  rm -rf node_modules\r\n  rm -rf .git\r\n}\r\n\r\nfunction install() {\r\n  cd $root/$1\r\n  pnpm install --verbose\r\n}\r\n\r\nrm -rf $root\r\nprepareDemoApp a\r\ncd $dir\r\ncp -r $root/a $root/b\r\n\r\ninstall a &\r\ninstall b &\r\n\r\nwait\r\n```",
      "createdAt": "2021-03-15T22:29:47Z",
      "issue": {
        "id": "MDU6SXNzdWU4Mjk2MDc3NzA=",
        "title": "concurrent installs from different directories of the same project yield symlink error",
        "url": "https://github.com/pnpm/pnpm/issues/3233"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwMDQ3NTQ4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwMDQ3NTQ4NQ==",
      "body": "ya, i wasn't thinking clearly. thx",
      "createdAt": "2021-03-16T17:46:37Z",
      "issue": {
        "id": "MDU6SXNzdWU4MzMwMzI1ODk=",
        "title": "rfc: improved switch cli ux - set switch",
        "url": "https://github.com/ocaml/opam/issues/4602"
      },
      "repository": {
        "nameWithOwner": "ocaml/opam"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwMjk1OTM4OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwMjk1OTM4OQ==",
      "body": "Anyway, integration testing is prone to regular  act() warnings if this isn't considered.",
      "createdAt": "2021-03-19T16:32:29Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTg2MTc3NTMw",
        "title": "docs(react-testing-library): warn about afterEach auto cleanup footgun",
        "url": "https://github.com/testing-library/testing-library-docs/pull/779"
      },
      "repository": {
        "nameWithOwner": "testing-library/testing-library-docs"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwMzA0NTcwNQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwMzA0NTcwNQ==",
      "body": "> If you aren’t releasing to opam, you don’t really need an opam file\r\n\r\nwhile true, there isn't a standard format to declare a project's dependencies otherwise. `.opam` is the defacto mechanism to declare required dependencies for a project, regardless of publishing or not.\r\n\r\n> Ephemeral information such as where to fetch the package is not part of package metadata as dune defines\r\n\r\nThis statement was surprising to me. `generate_opam_files` is all about producing for the `opam` data model. It seems to me that `generate_opam_files` should be minimally the inclusive set of opam fields, a superset if dune wants to extend it, or none at all. `dune` picking and choosing which parts of the opam spec it likes & dislikes creates a hidden implicit model, which currently is unknown to users. Perhaps [calling out that the full opam model is not supported with a big warning](https://dune.readthedocs.io/en/stable/opam.html#generating-opam-files) is worthwhile?  i had expectations of opam compatibility based on the docs. after adoption & usage of the feature, i feel mislead having now learned that the data model is some-kindof-unknown subset.\r\n\r\nnot critiquing, just sharing experience.\r\n\r\n> If you insist on using pins, ... or just writing your opam file.\r\n\r\n- I think we'd all agree using pins _stinks_. I don't think anyone ever _wants_ to do it. It's just a required flow for certain cases. i haven't started an ocaml project yet where i didn't need a pin, at least during the exploration phase. currently, I'm trying to experiment with a [jsoo-react](https://github.com/jchavarri/jsoo-react#existing-project), which explicitly calls for pinning. anytime i make a change to my project, I want to ensure that it is rapidly and easily reproducible elsewhere. this means updating a dependency declaration. this transitively means updating my dune-project, which transitively means updating my opam file. thus, pinning is a project management requirement, and `.opam` is the place to do it :/\r\n\r\n- writing your own opam file is certainly an option. i will probably take this option. however, dune should consider outright removing generation support if it cannot reflect the opam model. i really want `dune` to be the place for this though. the fewer tools i need to engage with for managing my ocaml projects the better.\r\n- i strongly challenge the suggestion that opam mixing installation source metadata is a mistake. `opam`'s role is to install dependencies into an environment. package location is just another input to that core functionality, which just by happenstance is configured with sensible defaults, pointing to the formal public repository. most adjacent programming communities let you specify the registry to install from with their associated dependency tools. [py](https://github.com/pypa/pip/pull/4175), [npm](https://docs.npmjs.com/cli/v7/using-npm/registry), [cargo](https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-dependencies-from-other-registries), java tools like gradle let you partition your dependency sources as well. [yarn has a decent justification section too](https://classic.yarnpkg.com/en/docs/selective-version-resolutions/#toc-why-would-you-want-to-do-this). dune claiming \"this is a bad practice\" i think is not considering the diverse set of ways developers use ocaml tools.\r\n\r\n",
      "createdAt": "2021-03-19T18:58:41Z",
      "issue": {
        "id": "MDU6SXNzdWU1NzQ4MjUzNjI=",
        "title": "generate_opam_files: pin-depends",
        "url": "https://github.com/ocaml/dune/issues/3231"
      },
      "repository": {
        "nameWithOwner": "ocaml/dune"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwMzIzMDg3Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwMzIzMDg3Nw==",
      "body": "`pnpm` works, just with caveats.`pnpm` users need to _manage_ how they land packages `node_modules`.\r\n\r\n- modules in need of patch need to be top-level to be hoisted into `node_modules`. you can do this by promoting your transitive deps to 1st-class deps, right in your package.json\r\n-  install method needs to be [clone or copy](https://pnpm.js.org/npmrc#package-import-method)",
      "createdAt": "2021-03-20T02:41:21Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzk2ODU1Njc=",
        "title": "Support pnpm package manager",
        "url": "https://github.com/ds300/patch-package/issues/35"
      },
      "repository": {
        "nameWithOwner": "ds300/patch-package"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwMzIzMTI1MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwMzIzMTI1MA==",
      "body": "...err worked, pre `**ERROR** No package-lock.json, npm-shrinkwrap.json, or yarn.lock file.` message 😆 ",
      "createdAt": "2021-03-20T02:44:26Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzk2ODU1Njc=",
        "title": "Support pnpm package manager",
        "url": "https://github.com/ds300/patch-package/issues/35"
      },
      "repository": {
        "nameWithOwner": "ds300/patch-package"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwMzgzMzA5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwMzgzMzA5OA==",
      "body": "@vladimyr, the `*` doesn't make sense to me. i think that is more appropriately used in situations like `git branch` to show the selected entity. i'd prefer to see my switch name vs `<junk-char><switch-name>`.\r\n\r\ni'd prefer to keep it as is.",
      "createdAt": "2021-03-22T07:29:20Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTk2ODcxODg4",
        "title": "feat(ocaml): add switch variable to ocaml format",
        "url": "https://github.com/starship/starship/pull/2479"
      },
      "repository": {
        "nameWithOwner": "starship/starship"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwNjQxNTc4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwNjQxNTc4NQ==",
      "body": "hey guys. i'm AFK for a bit. i'm good w/ whatever. feel free to patch or close as seen fit",
      "createdAt": "2021-03-25T07:05:48Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTk2ODcxODg4",
        "title": "feat(ocaml): add switch variable to ocaml format",
        "url": "https://github.com/starship/starship/pull/2479"
      },
      "repository": {
        "nameWithOwner": "starship/starship"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwNzg2MjM5MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwNzg2MjM5MA==",
      "body": "OH, also worthy of mention is that `opam` isn't pointing to `opam.org`? that tripped me up some",
      "createdAt": "2021-03-26T01:28:11Z",
      "issue": {
        "id": "MDU6SXNzdWU4NDE1MDU5OTU=",
        "title": "consider adding MVP docs and or links to dockerhub",
        "url": "https://github.com/ocurrent/docker-base-images/issues/98"
      },
      "repository": {
        "nameWithOwner": "ocurrent/docker-base-images"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgwOTQ4Nzc4MQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgwOTQ4Nzc4MQ==",
      "body": "scram stalebot",
      "createdAt": "2021-03-29T15:45:31Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDE1OTUwMjk=",
        "title": "next.js recipe disjoint customServer provisions between build & serve",
        "url": "https://github.com/nrwl/nx/issues/3199"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxMjI2MDc3OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxMjI2MDc3OQ==",
      "body": "@kdy1 , i see some recent PRs have been working on comments. should this be a target for milestone v1.2.52 as well?",
      "createdAt": "2021-04-02T01:04:04Z",
      "issue": {
        "id": "MDU6SXNzdWU3MjEyNjA5ODk=",
        "title": "swc incorrectly discards export statements and (most) comments ",
        "url": "https://github.com/swc-project/swc/issues/1165"
      },
      "repository": {
        "nameWithOwner": "swc-project/swc"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxMjY5ODkyNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxMjY5ODkyNg==",
      "body": "We are finding this error _on the daily_ in chrome as well. We've gone nuts and added debug(...) statements everywhere :)\r\n\r\n- _onIdle issues HTML to chrome\r\n- 45-60s later, the browser closes\r\n\r\nthe HTML idle page document either doesn't make it to chrome (unlikely), or, the on page javascript is periodically failing, which prevents TC from bootstrapping itself.\r\n\r\nI'd like to find a way to capture the local chrome output emitted localChrome.start(...). Anyone know if this is feasible?",
      "createdAt": "2021-04-02T20:30:08Z",
      "issue": {
        "id": "MDU6SXNzdWU2Mzk3MzQxNjY=",
        "title": "Unstable error \"Unable to establish one or more of the specified browser connections\" after Chrome update (v83)",
        "url": "https://github.com/DevExpress/testcafe/issues/5212"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxMjc2OTY2NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxMjc2OTY2NA==",
      "body": "Even with DEBUG=hammerhead*,testcafe* and with aggressively debug() enhanced source, we were not able to discern why chrome is not processing the IDLE_PAGE content. If any chrome wizards lurk in here, we attempted to use the TestCafe (TC) \"custom\" testcafe browser, multiplex the chromium output, capture `chrome.log` & stdio from the foreground chrome process, but it didn't prove super useful because we were unable to get log content from tabs/windows: https://stackoverflow.com/questions/66926607/how-can-i-run-chromium-in-the-foreground-and-capture-native-and-webview-logs . If we can reliably get tab level, network level, and window level events from the chromium cli & emitted logs, such information could perhaps improve robustness in the TC workflow.\r\n\r\nThe TestCafe initialization process can improve robustness, now, by changing the synchronization mechanisms executed between the browser process & node runner.\r\n\r\nCurrent process:\r\n\r\n- TC launches chrome, pointing to a page\r\n- Chrome loads page\r\n- Page does I/O w/ TC server\r\n- Page processes init scripts, reporting back to server on each completion via POST\r\n- POST handler allows test execution to resume\r\n\r\nA more robust approach would be:\r\n\r\n- TC launches chrome\r\n- TC immediately gets a CDP handle \r\n- TC injects serialized init scripts into chrome, using request/response control flow\r\n\r\nCurrently, various effects are executed & coordinate by careful alignment of assets.  Success is achieved by optimistically expecting that each downstream, uncontrolled effect executes successfully. It is dangerous to pass ownership of initialization control flow to chrome, and chrome to the embedded webapp, as TC does not have hooks into _either_ of these systems by the time `runInitScripts` is called. TC launches chrome, passes a URL, &  🤞 wishes both chrome and the downstream web-app the best of luck.  What if TC managed the whole init process, vs implicitly marshaling that responsibility to these other (generally reliable, but currently failing) entities?\r\n\r\nCurrent process (pseudo):\r\n```\r\nlet testCafeWindowIsReadyDeferred = ... <actually implemented via initScriptsQueue>\r\nTC (system 1) creates readiness deferred\r\nTC launches Chrome (system 2)\r\nChrome tries to load a web app (system 3) \r\nWeb-app attempts to _do lots of work_ in the window, which hopefully eventually lands a POST call into system 1, which settles the deferred\r\nREADY\r\n```\r\n\r\nPossible future:\r\n\r\n```\r\nTC (system 1) launches chrome (system 2)\r\nTC navigates chrome to idle page (resolve/reject)\r\nTC injects script, gets response (resolve/reject)\r\n...loop, until all init scripts settled\r\nREADY\r\n```\r\n\r\n",
      "createdAt": "2021-04-03T01:04:13Z",
      "issue": {
        "id": "MDU6SXNzdWU2Mzk3MzQxNjY=",
        "title": "Unstable error \"Unable to establish one or more of the specified browser connections\" after Chrome update (v83)",
        "url": "https://github.com/DevExpress/testcafe/issues/5212"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxMzgzMTAyMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxMzgzMTAyMw==",
      "body": "hmm. running the go server in `--dev` i see:\r\n\r\n```\r\n2021/04/05 22:18:56 [debug] get npm package(mdast-util-to-markdown@0.6.5) info in 102.999586ms\r\n2021/04/05 22:18:56 [debug] get npm package(mdast-util-to-markdown@0.6.5) info in 53.611868ms\r\n2021/04/05 22:18:57 [debug] yarn add mdast-util-to-markdown@0.6.5 in 1.396912245s\r\n2021/04/05 22:18:57 [debug] run cjs-module-lexer in 156.045706ms\r\n2021/04/05 22:18:58 [debug] get npm package(mdast-util-to-string@2.0.0) info in 46.887892ms\r\n2021/04/05 22:18:58 [debug] run cjs-module-lexer in 96.212392ms\r\n2021/04/05 22:18:58 [debug] get npm package(repeat-string@1.6.1) info in 43.835077ms\r\n2021/04/05 22:18:58 [debug] get npm package(@types/repeat-string@1.6.0) info in 53.188912ms\r\n2021/04/05 22:18:58 [debug] run cjs-module-lexer in 100.742604ms\r\n2021/04/05 22:18:58 [debug] get npm package(longest-streak@2.0.4) info in 72.89589ms\r\n2021/04/05 22:18:58 [debug] run cjs-module-lexer in 90.34535ms\r\n2021/04/05 22:18:58 [debug] get npm package(zwitch@1.0.5) info in 116.118606ms\r\n2021/04/05 22:18:58 [debug] run cjs-module-lexer in 93.434757ms\r\n2021/04/05 22:18:58 [debug] esbuild mdast-util-to-markdown@0.6.5 es2020 production in 877.634839ms\r\n2021/04/05 22:18:58 [warn] copyDTS(mdast-util-to-markdown@0.6.5/types.d.ts): open /var/folders/nx/8ddl3q8d3cq8r89p8m9rt8gc0000gn/T/esm-build-d5da9ed09184ece4d27ae0ea13779d970c6103df/node_modules/mdast-util-to-markdown/types.d.ts: no such file or directory\r\n2021/04/05 22:18:58 [debug] copy dts in 126.092µs\r\n2021/04/05 22:18:58 [debug] queue(mdast-util-to-markdown@0.6.5,es2020) done in 2.512612333s\r\n2021/04/05 22:19:29 [debug] yarn add mdast-util-to-markdown@0.6.5 in 656.549509ms\r\n2021/04/05 22:19:29 [debug] run cjs-module-lexer in 142.297504ms\r\n2021/04/05 22:19:29 [debug] run cjs-module-lexer in 86.6067ms\r\n2021/04/05 22:19:29 [debug] run cjs-module-lexer in 87.90101ms\r\n2021/04/05 22:19:29 [debug] run cjs-module-lexer in 89.663968ms\r\n2021/04/05 22:19:30 [debug] run cjs-module-lexer in 89.113408ms\r\n2021/04/05 22:19:30 [debug] esbuild mdast-util-to-markdown@0.6.5 deno production in 541.494347ms\r\n2021/04/05 22:19:30 [warn] copyDTS(mdast-util-to-markdown@0.6.5/types.d.ts): open /var/folders/nx/8ddl3q8d3cq8r89p8m9rt8gc0000gn/T/esm-build-75efe4a5803fc3aa2f50b2a9c78ef5cd254ad358/node_modules/mdast-util-to-markdown/types.d.ts: no such file or directory\r\n2021/04/05 22:19:30 [debug] copy dts in 108.285µs\r\n2021/04/05 22:19:30 [debug] queue(mdast-util-to-markdown@0.6.5,deno) done in 1.3800372s\r\n2021/04/05 22:19:30 [debug] yarn add mdast-util-to-string@2.0.0 in 632.932879ms\r\n2021/04/05 22:19:30 [debug] run cjs-module-lexer in 119.20738ms\r\n2021/04/05 22:19:30 [debug] esbuild mdast-util-to-string@2.0.0 deno production in 3.838324ms\r\n2021/04/05 22:19:31 [debug] get npm package(@types/unist@2.0.3) info in 245.174143ms\r\n2021/04/05 22:19:31 [warn] copyDTS(@types/unist@2.0.3/index.d.ts): open /var/folders/nx/8ddl3q8d3cq8r89p8m9rt8gc0000gn/T/esm-build-775346f04dba8205acd49d2b4ecda090864b95dc/node_modules/@types/unist/index.d.ts: no such file or directory\r\n2021/04/05 22:19:31 [debug] copy dts in 245.964823ms\r\n2021/04/05 22:19:31 [debug] queue(mdast-util-to-string@2.0.0,deno) done in 1.021473065s\r\n2021/04/05 22:19:31 [debug] yarn add zwitch@1.0.5 in 737.459603ms\r\n2021/04/05 22:19:31 [debug] yarn add longest-streak@2.0.4 in 726.223697ms\r\n2021/04/05 22:19:31 [debug] yarn add mdast-util-to-markdown@0.6.5 in 1.259096431s\r\n2021/04/05 22:19:31 [debug] queue(mdast-util-to-markdown@0.6.5/types.d.ts,deno) done in 1.270722046s\r\n2021/04/05 22:19:31 [error] open /var/folders/nx/8ddl3q8d3cq8r89p8m9rt8gc0000gn/T/esm-build-eef99585340b97b0903db2564fa20fcd42e55d7a/node_modules/mdast-util-to-markdown/types.d.ts.js: no such file or directory\r\n2021/04/05 22:19:31 [debug] run cjs-module-lexer in 128.96725ms\r\n2021/04/05 22:19:31 [debug] esbuild longest-streak@2.0.4 deno production in 3.820156ms\r\n2021/04/05 22:19:31 [debug] queue(longest-streak@2.0.4,deno) done in 1.325345036s\r\n2021/04/05 22:19:31 [debug] run cjs-module-lexer in 210.972123ms\r\n2021/04/05 22:19:31 [debug] esbuild zwitch@1.0.5 deno production in 4.3938ms\r\n2021/04/05 22:19:31 [debug] queue(zwitch@1.0.5,deno) done in 1.399808505s\r\n2021/04/05 22:19:32 [debug] yarn add repeat-string@1.6.1 @types/repeat-string@1.6.0 in 1.13239166s\r\n2021/04/05 22:19:32 [debug] run cjs-module-lexer in 89.050787ms\r\n2021/04/05 22:19:32 [debug] esbuild repeat-string@1.6.1 deno production in 10.509368ms\r\n2021/04/05 22:19:32 [debug] copy dts in 527.177µs\r\n2021/04/05 22:19:32 [debug] queue(repeat-string@1.6.1,deno) done in 1.25440358s\r\n2021/04/05 22:19:38 [debug] yarn add mdast-util-to-markdown@0.6.5 in 728.253717ms\r\n2021/04/05 22:19:38 [debug] queue(mdast-util-to-markdown@0.6.5/types.d.ts,es2020) done in 744.973782ms\r\n2021/04/05 22:19:38 [error] open /var/folders/nx/8ddl3q8d3cq8r89p8m9rt8gc0000gn/T/esm-build-413904a1d3c767a56b2ad4a8af7be3e19623444b/node_modules/mdast-util-to-markdown/types.d.ts.js: no such file or directory\r\n```\r\n\r\n`copyDTS` seems to be a common issue 🤔 ",
      "createdAt": "2021-04-06T05:23:18Z",
      "issue": {
        "id": "MDU6SXNzdWU4NTA5NjQ1NDM=",
        "title": "/* esm.sh - error */ no such file or directory",
        "url": "https://github.com/esm-dev/esm.sh/issues/45"
      },
      "repository": {
        "nameWithOwner": "esm-dev/esm.sh"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxMzg0MTE4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxMzg0MTE4Mw==",
      "body": "![image](https://user-images.githubusercontent.com/1003261/113664580-db960180-9660-11eb-9718-c39837fd4940.png)\r\n\r\ni'm not a go expert, but it seems that this `NpmPackage` is being treated like a sub-module, and the fact that it's a std module w/ a top level `types` field isn't being respected in `build.go`",
      "createdAt": "2021-04-06T05:48:04Z",
      "issue": {
        "id": "MDU6SXNzdWU4NTA5NjQ1NDM=",
        "title": "/* esm.sh - error */ no such file or directory",
        "url": "https://github.com/esm-dev/esm.sh/issues/45"
      },
      "repository": {
        "nameWithOwner": "esm-dev/esm.sh"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxMzg1MTYzMA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxMzg1MTYzMA==",
      "body": "mmm, maybe it's https://github.com/syntax-tree/mdast-util-to-markdown/blob/main/package.json -- i see no main or module. but there is an index.js !\r\n\r\nvery interestingly, this used to work. back on esm.sh v29 (in my deno cache!) i was able to d/l that package!\r\n\r\n\r\n```\r\ngit checkout 36b70e90d8ccf2c037c5f7d9d9344373c4d8d4c7\r\n```\r\n\r\nrun esh.sh, then deno resolves it:\r\n\r\n\r\n```\r\nDownload http://localhost/v35/mdast-util-to-markdown@0.6.5/types.d.ts\r\nDownload http://localhost/v1/mdast-util-to-markdown@0.6.5/deno/types.d.ts.js\r\nCheck file:///Users/cdaringe/src/markdown_player/src/bin.ts\r\n```\r\n\r\nregression, perhaps?",
      "createdAt": "2021-04-06T06:11:21Z",
      "issue": {
        "id": "MDU6SXNzdWU4NTA5NjQ1NDM=",
        "title": "/* esm.sh - error */ no such file or directory",
        "url": "https://github.com/esm-dev/esm.sh/issues/45"
      },
      "repository": {
        "nameWithOwner": "esm-dev/esm.sh"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxNDI5NjcwMQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxNDI5NjcwMQ==",
      "body": "if you need pre/post, you can get similar ergonomics + explicitness (which this changes aims to acheive) with https://github.com/mysticatea/npm-run-all  (`run-p`/`run-s`)",
      "createdAt": "2021-04-06T17:25:15Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDc1Nzk5Nzk=",
        "title": "Don't run the pre/post scripts",
        "url": "https://github.com/pnpm/pnpm/issues/2891"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxNTA3NTEwNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxNTA3NTEwNg==",
      "body": "sorry man, i don't maintain this anymore. i will archive. feel free to fork :)",
      "createdAt": "2021-04-07T17:02:33Z",
      "issue": {
        "id": "MDU6SXNzdWU4NTI1NDQwMzQ=",
        "title": "Python PuLP missing",
        "url": "https://github.com/cdaringe/course-selector/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/course-selector"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxNTA5Mzc2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxNTA5Mzc2OA==",
      "body": "> Any suggestions?\r\n\r\nya, you can add pulp (or whatever is needed) into `requirements.txt`. python deps and prep can be a bit of a mess. were i to redo this, i would have used `poetry` or `pipenv` to create more rigid lockfiles for dependencies here. this project only uses a few deps. you can probably install older versions, or just add in all missing peer deps python is complaining about with `pip install ...` into your global or virtual env",
      "createdAt": "2021-04-07T17:31:26Z",
      "issue": {
        "id": "MDU6SXNzdWU4NTI1NDQwMzQ=",
        "title": "Python PuLP missing",
        "url": "https://github.com/cdaringe/course-selector/issues/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/course-selector"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxNzE5MzIyMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxNzE5MzIyMg==",
      "body": "Ya, @silverwind , iirc it should. Feel free to pick up the PR. I hit a roadblock with esbuild, thus probably won't be pursuing this further",
      "createdAt": "2021-04-10T19:45:42Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjA2ODQ2ODgz",
        "title": "feat: support esbuild options",
        "url": "https://github.com/aelbore/esbuild-jest/pull/29"
      },
      "repository": {
        "nameWithOwner": "aelbore/esbuild-jest"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxNzQxODM5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxNzQxODM5Nw==",
      "body": "> What a mess ...\r\n\r\n@davidenke, wrong attitude. you realize this software is offered to you for free? this unhelpful feedback is not welcome.\r\n\r\n@jmcdo29, here's a demo of a setup that could work for you. \r\n\r\n```json\r\n{\r\n  \"scripts\": {\r\n    \"compile\": \"tsc index.ts\",\r\n    \"serve\": \"node index.js\",\r\n    \"start\": \"run-s compile serve\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"npm-run-all\": \"^4.1.5\",\r\n    \"typescript\": \"^4.2.4\"\r\n  }\r\n}\r\n```\r\n\r\nto see it in action, you can copy and paste the following command right into your terminal and run it! (assumes you are on a mac or *nix system)\r\n\r\n\r\n```bash\r\nexport DIR=/tmp/pnpm-scripts-demo \\\r\n && rm -rf $DIR && mkdir -p $DIR \\\r\n && cd $DIR \\\r\n && echo \"console.log(1+2)\" > index.ts \\\r\n && echo '{\"scripts\":{\"compile\":\"tsc index.ts\",\"serve\":\"node index.js\",\"start\":\"run-s compile serve\"},\"devDependencies\":{\"npm-run-all\":\"^4.1.5\",\"typescript\":\"^4.2.4\"}}' > package.json \\\r\n && pnpm install \\\r\n && pnpm start\r\n```\r\n\r\n```txt\r\n$ pnpm start\r\n\r\n@ start /private/tmp/pnpm-scripts-demo\r\n> run-s compile serve\r\n\r\n\r\n> @ compile /private/tmp/pnpm-scripts-demo\r\n> tsc index.ts\r\n\r\n\r\n> @ serve /private/tmp/pnpm-scripts-demo\r\n> node index.js\r\n\r\n3\r\n```\r\n",
      "createdAt": "2021-04-12T01:21:22Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDc1Nzk5Nzk=",
        "title": "Don't run the pre/post scripts",
        "url": "https://github.com/pnpm/pnpm/issues/2891"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgxNzQyOTU1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgxNzQyOTU1Mw==",
      "body": "> idea about the \"mess\" which is for me still a somehow polite word.\r\n\r\nIn other words, \"someone did something I don't agree with, so I can be rude.\"  Insults and negativity--especially over something offered for free--are never productive. Consider sending patches, proposing solutions, debating pros and cons, etc.\r\n\r\nComplaining like this rude, and helps no one. Most of us are taught this from a young age, as it has nearly global acceptance, across cultures. For reasons not yet clear to me, software engineers, in issues trackers that are not their own, feel comfortable waiving this value in favor selfishness.\r\n\r\nConsider productive & helpful questions like:\r\n\r\n- \"`<authors>`, is it a design goal of yours to have parity between pnpm & npm? If so, do you see this as a violation?\"\r\n- \"`<authors>`, do you agree or disagree that lifecycle hooks are helpful? is removing them more hurtful than helpful?\"\r\n- \"`<authors>`, is the yarn teams' analysis and decision justifiable, or could they be over-reacting to to edge cases?\"",
      "createdAt": "2021-04-12T02:03:30Z",
      "issue": {
        "id": "MDU6SXNzdWU3MDc1Nzk5Nzk=",
        "title": "Don't run the pre/post scripts",
        "url": "https://github.com/pnpm/pnpm/issues/2891"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgyNjAwNzExMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgyNjAwNzExMw==",
      "body": "We are seeing unexpected unmounts as well, even with a `<ErrorBoundary />` in place in our `_app` root. We would like to dig into this further, and may slate some time to investigate. If anyone in this audience would like to pair or give pointers before diving in, those would be welcome :)",
      "createdAt": "2021-04-24T00:47:53Z",
      "issue": {
        "id": "MDU6SXNzdWU0NTYzMzY5MzU=",
        "title": "Entire app remounts on error",
        "url": "https://github.com/vercel/next.js/issues/7578"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgzMDQyMzc2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgzMDQyMzc2OA==",
      "body": "done.",
      "createdAt": "2021-04-30T22:01:31Z",
      "issue": {
        "id": "MDU6SXNzdWU4NzMxMzA0MDU=",
        "title": "@nrwl/jest - include more (or all) jest argv options",
        "url": "https://github.com/nrwl/nx/issues/5517"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgzMDgzMjMwOQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgzMDgzMjMwOQ==",
      "body": "I did end up finding tyxml from your links! Was surprised that the jsx ppx was reason only, but the html ppx worked fine :)",
      "createdAt": "2021-05-02T16:07:15Z",
      "issue": {
        "id": "MDU6SXNzdWU4NzM4MDA2NjA=",
        "title": "how to apply ocamlformat ",
        "url": "https://github.com/aantron/dream/issues/55"
      },
      "repository": {
        "nameWithOwner": "aantron/dream"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgzNTQ0MDY5Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgzNTQ0MDY5Nw==",
      "body": "looks like perhaps the `virtual_dom` dependency needs to be pinned. i wish opam did semver pinning as a default behavior :)",
      "createdAt": "2021-05-08T17:35:14Z",
      "issue": {
        "id": "MDU6SXNzdWU4ODEwODg5MjQ=",
        "title": "Install from source into 4.10.0 switch fails with Unbound value Attr.Expert.contains_name",
        "url": "https://github.com/janestreet/incr_dom/issues/13"
      },
      "repository": {
        "nameWithOwner": "janestreet/incr_dom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDgzNTQ0ODc5Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDgzNTQ0ODc5Mg==",
      "body": "Pinning to virtual_dom to 0.13.0 didn't fix it either. perhaps these examples simply need to be migrated to updated APIs",
      "createdAt": "2021-05-08T17:56:14Z",
      "issue": {
        "id": "MDU6SXNzdWU4ODEwODg5MjQ=",
        "title": "Install from source into 4.10.0 switch fails with Unbound value Attr.Expert.contains_name",
        "url": "https://github.com/janestreet/incr_dom/issues/13"
      },
      "repository": {
        "nameWithOwner": "janestreet/incr_dom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg0MTAwODI2OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg0MTAwODI2OA==",
      "body": "that's probably it--contains_name doesn't show up until 0.15.x in history",
      "createdAt": "2021-05-14T05:06:38Z",
      "issue": {
        "id": "MDU6SXNzdWU4ODEwODg5MjQ=",
        "title": "Install from source into 4.10.0 switch fails with Unbound value Attr.Expert.contains_name",
        "url": "https://github.com/janestreet/incr_dom/issues/13"
      },
      "repository": {
        "nameWithOwner": "janestreet/incr_dom"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg0NzIyOTQ1Nw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg0NzIyOTQ1Nw==",
      "body": "Sorry, I figured this fell within those constraints. The above is a JavaScript application, and demonstrates JavaScript programming through means of a game.\r\n\r\nFeel free to close if you assert this is out of bounds",
      "createdAt": "2021-05-24T18:00:57Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NjUwOTcxMTM5",
        "title": "fish.js.org",
        "url": "https://github.com/js-org/js.org/pull/5968"
      },
      "repository": {
        "nameWithOwner": "js-org/js.org"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1MDc0MDE3NA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1MDc0MDE3NA==",
      "body": "I wanted to return to this thread to share what we did to help improve our page developers' experience, as it pertains to studying bundle stats. We can now:\r\n\r\n- turn on full `stats.json` during app compilation\r\n- post compile, run each page thru a puppeteer script, and capture _all_ downloaded assets\r\n- reduce webpack's full stats.json to _just_ those assets/modules/chunks consumed by a page, recorded in the prior step\r\n    -  in terms of a function signature, we more or less do: `(stats: Webpack.Stats.ToJSONOutput, capturedTraffic: CapturedTraffic) => Webpack.Stats.ToJSONOutput`, where the output is narrowed to just one page of interest\r\n\r\nNow, individual page developers can use http://webpack.github.io/analyse and & https://chrisbateman.github.io/webpack-visualizer/, and be able to take corrective action. Without this ability to reduce stats.json,\r\n\r\n- it's difficult analyze a page's JS graph, as the rest of the app's chunks create a high noise:signal ratio in forensic tools, like those mentioned above\r\n- it's difficult to analyze nearly any stats at all, as in our case the stats.json file is 400MB+ (probably ways to tune that down), and the analyse web-app doesn't do super hot with giant datas. i may look into optimizations over there\r\n\r\n",
      "createdAt": "2021-05-29T00:58:17Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Mzg4MTAxODgw",
        "title": "feat: adding bundle analyzer options",
        "url": "https://github.com/vercel/next.js/pull/11066"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1MjczNDA0OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1MjczNDA0OQ==",
      "body": "> Any respectable product would not tell its user base that a major blocker cannot be fixed, then shut down further discussion.\r\n\r\nIf you're not willing to send a patch yourself, you have zero right to demand it from the maintainers. This software is open and free. Try again, or do not participate.",
      "createdAt": "2021-06-02T05:25:32Z",
      "issue": {
        "id": "MDU6SXNzdWU2MzU3NTMwOTI=",
        "title": "node --inspect/--inspect-brk incompatible with nx task runner",
        "url": "https://github.com/nrwl/nx/issues/3144"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg1ODc4NjI3Mg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg1ODc4NjI3Mg==",
      "body": "My last comment is dated and is not recommended. As it turns out, you can tell next JS programmatically where the contents of the pages live. So what we ended up doing was just creating a brand new application, then that application _is_ our server. We never run next directly, we only run our server. That server imports the next JS app handler, configures it, and specifically points it to our next JS application files. So essentially we have two apps, and the server app points to the next JS app, and it all works fine. And this is made possible only by the fact that there is a `dir: ...` flag supported by next. On the phone, so sorry if that didn't make perfect sense. Having the server as an app and having the nextJS nrwl as an app ended up being a clean solution, albeit it comes with a little bit of indirection, as at the end of the day, they both ultimately end up being run as the same process.",
      "createdAt": "2021-06-10T16:57:05Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDE1OTUwMjk=",
        "title": "next.js recipe disjoint customServer provisions between build & serve",
        "url": "https://github.com/nrwl/nx/issues/3199"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2MDM5MDQ2MA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2MDM5MDQ2MA==",
      "body": "Bummer, looks like the standard library version of buffer perhaps is incompatible with your system and version of deno. Problems like this are quite common since the early days of deno, while all of the APIs began to stabilize. The solution is probably to simply upgrade dependencies here: https://github.com/cdaringe/markdown_player/blob/main/src/3p.ts\r\n\r\nYour stack trace doesn't show the full trace, which if possible could be helpful to find the actual culprit module, as I do not consume buffer directly (IIRC? I might, I'm on my phone, so I'm not 100% sure at the moment).\r\n\r\nThat would address the first issue. The second issue is unlikely to do with this package at all, and likely some other tooling issue of which I cannot assist with.",
      "createdAt": "2021-06-14T05:58:20Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTk5MTE2ODI=",
        "title": "Install errors on Deno 1.9, 1.10 and 1.11",
        "url": "https://github.com/cdaringe/markdown_player/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/markdown_player"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2MTAwMTExMw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2MTAwMTExMw==",
      "body": "Ya, you can see it all in .github/ folder, where CI is configured!\n\nProbably the easiest solution is to fork, and try rolling those versions\nforward in 3p.ts! I assume there is some newer std version which is more\nwindows friendly. I can otherwise try later in the week! However, I do not\nhave handy windows access\n\nOn Mon, Jun 14, 2021, 3:41 AM Shahid Shah ***@***.***> wrote:\n\n> Thanks for the quick reply @cdaringe <https://github.com/cdaringe> -\n> could you let me know OS, version of Deno, etc. you've tested with? I'll\n> try to match to accommodate while debugging.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cdaringe/markdown_player/issues/2#issuecomment-860584842>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57L7EPABT5ZP2YLJV33TSXMGFANCNFSM46UHMDJQ>\n> .\n>\n",
      "createdAt": "2021-06-14T21:17:38Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTk5MTE2ODI=",
        "title": "Install errors on Deno 1.9, 1.10 and 1.11",
        "url": "https://github.com/cdaringe/markdown_player/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/markdown_player"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2NDUwODQ5NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2NDUwODQ5NQ==",
      "body": "Hey @shah, I managed to:\r\n\r\n- update std to std@0.99\r\n- rolled deno forward to 1.11.1\r\n\r\n```\r\n❯ deno --version\r\ndeno 1.11.1 (release, x86_64-apple-darwin)\r\nv8 9.1.269.35\r\ntypescript 4.3.2\r\n```\r\n\r\ninstall & tests are all passing in CI: https://github.com/cdaringe/markdown_player/runs/2867843707.\r\n\r\nAutomated release cut version `1.2.3`.\r\n\r\nLemme know if that addresses it! ",
      "createdAt": "2021-06-20T06:51:08Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTk5MTE2ODI=",
        "title": "Install errors on Deno 1.9, 1.10 and 1.11",
        "url": "https://github.com/cdaringe/markdown_player/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/markdown_player"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2NDc4OTczMg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2NDc4OTczMg==",
      "body": "greetings!\r\n\r\n- the `--appendOutput` flag will update output blocks, which you've likely discovered, and is active in this project's readme\r\n- as it pertains to providing a full output block as `markdown`, i'd be open to that\r\n    - the relevant code is here: https://github.com/cdaringe/markdown_player/blob/0b132c5e815ae59030b74800a0620b8eb4b4ddbc/src/mod.ts#L62-L76\r\n    - the appending or updating of output content works naively by checking if an output fence follows an input/executed code fence, and if the output fence has meta on it of [isExecutionOutput](https://github.com/cdaringe/markdown_player/blame/main/readme.md#L71)\r\n\r\nso, were such a feature to be added:\r\n\r\n- the output markdown would need to probably self-provide meta with those values, or, this lib would need to mutate your markdown's meta with that content\r\n- some mechanism would need be added to communicate the intent of self-hosted/defined markdown. i'd be open to ideas and patches on that\r\n\r\nseems like a useful feature. minimally, defining the language type for the output markdown seems very valuable, and that is currently lacking. perhaps an `output: ...` field on the input markdown's codefence would be where you/we could experiment w/ such an api?",
      "createdAt": "2021-06-21T07:14:22Z",
      "issue": {
        "id": "MDU6SXNzdWU5MjU2Njg1MjQ=",
        "title": "Playing Markdown to include dynamic content such as SQL tables",
        "url": "https://github.com/cdaringe/markdown_player/issues/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/markdown_player"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2NDc5MjU4NQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2NDc5MjU4NQ==",
      "body": "fwiw, i have intent to use this against postgres as well :) i wrote a very mediocre article some time ago that i still present periodically to peers (https://cdaringe.com/protect-bacon-with-rls) where i advocate for DB reflecting APIs with security all at the data layer. i had this lib in mind recently when brushing up on that content. so, i want this feature too :)",
      "createdAt": "2021-06-21T07:19:08Z",
      "issue": {
        "id": "MDU6SXNzdWU5MjU2Njg1MjQ=",
        "title": "Playing Markdown to include dynamic content such as SQL tables",
        "url": "https://github.com/cdaringe/markdown_player/issues/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/markdown_player"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg2NTY1NTI5OQ==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg2NTY1NTI5OQ==",
      "body": "I'll have to check again, but I was left to believe that Issuer Path could include _all_ paths/edges for that module, not just those narrowed to the parent.",
      "createdAt": "2021-06-22T07:05:04Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTkxMzQ0NTQ=",
        "title": "RFC: UX for tracing modules",
        "url": "https://github.com/statoscope/statoscope/issues/76"
      },
      "repository": {
        "nameWithOwner": "statoscope/statoscope"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3MTYzNTg2Ng==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3MTYzNTg2Ng==",
      "body": "Thanks! I look forward to trying it out. I am out of the office for a week\nbut I’ll gladly check it out when I’m back\n\nOn Wed, Jun 30, 2021 at 9:48 AM Sergey Melyukov ***@***.***>\nwrote:\n\n> @cdaringe <https://github.com/cdaringe> please, try to update to 5.3.1\n> It is fixes the problem?\n>\n> Also, you can remove statsOptions cause the default stats option has\n> enough of data\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/statoscope/statoscope/issues/75#issuecomment-871519006>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57MKMQPAJX7ZT4Y77DLTVM4FBANCNFSM46PU3V2Q>\n> .\n>\n-- \nSent from Gmail Mobile\n",
      "createdAt": "2021-06-30T18:32:51Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTgwODc1ODc=",
        "title": "webpack plugin usage causes build to hang indefinitely",
        "url": "https://github.com/statoscope/statoscope/issues/75"
      },
      "repository": {
        "nameWithOwner": "statoscope/statoscope"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NjgwNDU1OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NjgwNDU1OA==",
      "body": "Back! :) It would be helpful to have a mechanism that concisely explain the existence of a module of interest. Commonly, I find myself asking \"why is this in my bundle\" or \"why is this in <\\<some-chunk\\>>\".\r\n\r\nIf I click one of my many entrypoints, e.g. `pages/best-page`, then expand the modules tree as you have screenshotted above, the ability to filter to **only those reasons associated with the entrypoint**, vs _all entrypoints_, would be a killer start. Your idea about adding entrypoint in the list would be cool too. Perhaps a toggle in the navbar or something. In this regard, I could cut down the noise, and more quickly zero in on the relevant path.\r\n\r\nI have an application with a module count well over 10k, & I essentially want to be able to see the edges between a module and an entrypoint:\r\n\r\n```\r\nPAGE_A   -- mod_1 -- mod_2 -- mod_3 \\\r\n\r\nPAGE_B   -- mod_4 /                 mod_under_investation\r\n\r\nPAGE_C   -- mod5 ------------------/\r\n```\r\n\r\nThe webpack analyze graph does this _decently_. Sometimes I will run a script to remove noise from my stats.json, upload it into analyze, just to see all of the edges (as shown above), while using statoscope for everything else!",
      "createdAt": "2021-07-08T23:19:49Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTkxMzQ0NTQ=",
        "title": "RFC: UX for tracing modules",
        "url": "https://github.com/statoscope/statoscope/issues/76"
      },
      "repository": {
        "nameWithOwner": "statoscope/statoscope"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NjgyMjE5OA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NjgyMjE5OA==",
      "body": "rsat",
      "createdAt": "2021-07-09T00:14:05Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Njg2NDAwMjE0",
        "title": "wat",
        "url": "https://github.com/cdaringe/coach-testing/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/coach-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NjgyNDY4Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NjgyNDY4Mw==",
      "body": "sarstar",
      "createdAt": "2021-07-09T00:21:31Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0Njg2NDAwMjE0",
        "title": "wat",
        "url": "https://github.com/cdaringe/coach-testing/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/coach-testing"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg3NzQ4MjgzNg==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg3NzQ4MjgzNg==",
      "body": "That looks fantastic! Your workflow looks quite easy to use: \r\n\r\n- Identify the module of interest,\r\n- select the entry points tab, \r\n- Study the tree structure with entrypoints as the tree root and consumers of the module under investigation as leaves.\r\n\r\n Yes!",
      "createdAt": "2021-07-09T22:11:34Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTkxMzQ0NTQ=",
        "title": "RFC: UX for tracing modules",
        "url": "https://github.com/statoscope/statoscope/issues/76"
      },
      "repository": {
        "nameWithOwner": "statoscope/statoscope"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg4MDAxNDkyOA==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg4MDAxNDkyOA==",
      "body": "I’m so sorry I missed this! The commit needs to be formed using conventional commit style, that way the release will get auto published npm! I should have set up CI to test for this, apologies",
      "createdAt": "2021-07-14T15:59:35Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDg3Nzg5NzMw",
        "title": "Upsert on table to respect omit tags",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/174"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "MDEyOklzc3VlQ29tbWVudDg4MDM3NTI1Mw==": {
      "id": "MDEyOklzc3VlQ29tbWVudDg4MDM3NTI1Mw==",
      "body": "`feat: support omit tags` would be fine. if you want more on it, check out https://www.conventionalcommits.org/en/v1.0.0/\r\n\r\nmind dropping me a link to the Postgres feature? I’m not familiar with `E'text'` format",
      "createdAt": "2021-07-15T04:06:49Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDg3Nzg5NzMw",
        "title": "Upsert on table to respect omit tags",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/174"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOAIOsqc404F04": {
      "id": "IC_kwDOAIOsqc404F04",
      "body": "Thanks for the thoughtful response.\r\n\r\n> For a start, if you find particular aspects of the documentation lacking\r\n\r\nNah, I was able to find everything I need. It was the mere thought that I have existing, valid code to do the mapping, of which I had to re-express in a _different format_ to achieve the same result.\r\n\r\nI'd like to learn more about the worker remarks. Are these values always computed from within a worker? I suppose that could make sense given the computational complexity of maps, generally. I find this to be a **compelling** argument. It likely does _not_ make sense to send data back and forth over a bridge for derivation with sufficiently large datasets.  If the data derivation happened in the main thread in batched RAFs, then was streamed into the worker, then I think my suggestion would be worth further thought.\r\n\r\n\r\n> I fear that it would significantly impact performance\r\n\r\nYes, footgunning could be abound. with freedom comes responsibility. I personally believe that developer friendly APIs are of greater importance in this specific scenario. But that's my own biases :)\r\n\r\n\r\n> add rigidity by exposing some of the internal abstractions\r\n\r\nAgreed. Counter-point, versioning schemes more or less negate that risk, and pragmatically one would not expect too much thrash here, as the essential datamodels of interest (warning, naivety ahead) seem to largely be  GeoJSON models. When GeoJSON schemas thrash, I imagine consumers are already bound to some-sort-of-code-migration. I.o.w. `(feature: GeoJSON.Feature{v1,v2,v3,...,vn}) => string` is probably a low API surface area, low-trash interface to have deep concern over.\r\n\r\n> would diverge from the consistency and portability that Mapbox tries hard to offer\r\n\r\nYes, it would diverge. This is certainly a gut feel kind of decision. A decision of art, wisdom, and preference. If the goal is to create a mapping from `value => value`, intrinsically, a function is precisely that. For the sake of cross-platform consistently (certainly relevant for many users) creating a DSL to declaratively model a function can be beneficial. I would argue, however, that it makes mapbox cumbersome on a _core feature_, thus less delightful to use. In no case would I advocate for removing the status-quo functionality--your argument is completely valid. However, for those of us for which the x-platform interface provides little value and adds friction, I personally would support _both_ mechanisms just to apply grease to the wheels for scenarios where developers observe unnecessary friction.",
      "createdAt": "2021-07-27T00:27:56Z",
      "issue": {
        "id": "MDU6SXNzdWU5NTIzODEwNDI=",
        "title": "RFC: support javascript functions for the data driven styles, versus just the style expression DSL",
        "url": "https://github.com/mapbox/mapbox-gl-js/issues/10893"
      },
      "repository": {
        "nameWithOwner": "mapbox/mapbox-gl-js"
      }
    },
    "IC_kwDOAIOsqc4058jX": {
      "id": "IC_kwDOAIOsqc4058jX",
      "body": "You don’t _need_ to add it to the other platforms though. I’m suggesting a JavaScript feature for the JavaScript environment. Intentional, opt in divergence.\r\n\r\nThe cost to the lib, naively disregarding the worker remarks above, is migrating from `value = evalDslExpr(field)(feature)` to `value: typeof field === function ? field(feature) : evalDslExpr(field)(feature)`.\r\n\r\nLow cost, high user impact. Heck, we could go full react-style and make the field ` dangerouslyDeriveField’ or the likes.",
      "createdAt": "2021-07-27T15:22:52Z",
      "issue": {
        "id": "MDU6SXNzdWU5NTIzODEwNDI=",
        "title": "RFC: support javascript functions for the data driven styles, versus just the style expression DSL",
        "url": "https://github.com/mapbox/mapbox-gl-js/issues/10893"
      },
      "repository": {
        "nameWithOwner": "mapbox/mapbox-gl-js"
      }
    },
    "IC_kwDOEr9l7M41Doox": {
      "id": "IC_kwDOEr9l7M41Doox",
      "body": "Lazy loading is an option, but perhaps ideal is per_locale client side chunks. Rather than a common JS chunk for a page/component, instead locale-based static/* assets may be pre-built for each locale, meaning thin assets and no racing downloads or text flashes!",
      "createdAt": "2021-07-30T20:47:16Z",
      "issue": {
        "id": "MDU6SXNzdWU3NTA2MTIyNjg=",
        "title": "Improve ability to load messages on the client side, automatic tree-shaking of messages & lazy loading",
        "url": "https://github.com/amannn/next-intl/issues/2"
      },
      "repository": {
        "nameWithOwner": "amannn/next-intl"
      }
    },
    "IC_kwDOBC3Cis41QgYH": {
      "id": "IC_kwDOBC3Cis41QgYH",
      "body": "Thanks!",
      "createdAt": "2021-08-05T14:46:58Z",
      "issue": {
        "id": "MDU6SXNzdWU5NjExMjQ2MjU=",
        "title": "_error.js not rendered during SSR when errors occur in _app.js",
        "url": "https://github.com/vercel/next.js/issues/27777"
      },
      "repository": {
        "nameWithOwner": "vercel/next.js"
      }
    },
    "IC_kwDOADHRAs41RqOy": {
      "id": "IC_kwDOADHRAs41RqOy",
      "body": "The current behavior **breaks the contract** provided by structured KV pairs when compiling a module, at least from the CLI. I want the precise **opposite** of the OP. \r\n\r\nConsider translations with just _one key_:\r\n\r\n```yaml\r\n# en.yaml\r\ngreet: hello\r\n```\r\n\r\n```yaml\r\n# es.yaml\r\ngreet: hola\r\n```\r\n\r\n`pnpx messageformat <dir>`\r\n\r\nyields =>\r\n\r\n```js\r\n{\r\n  en: () => 'hello',\r\n  es: () => 'hola'\r\n}\r\n\r\n```\r\n\r\nAs shown above, `greet` is **missing**. By just adding another key,\r\n\r\n```yaml\r\n# en.yaml\r\ngreet: hello\r\nother: abc\r\n```\r\n\r\n```yaml\r\n# es.yaml\r\ngreet: hola\r\nother: efg\r\n```\r\n\r\n\r\nThe correct shape is omitted:\r\n\r\n\r\n```js\r\n{\r\n  en: { greet: () => 'hello', other: () => 'abc' },\r\n  es: { greet: () => 'hola', other: () => 'efg' },\r\n}\r\n```\r\n\r\nThis broke me today unexpectedly where I had one translation with a single key. To keep the same structure, I now must artificially add an additional key so that the compiler does not drop valuable key/value pair information.\r\n\r\nIs it agreed that this is/is not a problem? If this lossy behavior is _desired_, can it be opt-in only?\r\n\r\n\r\n",
      "createdAt": "2021-08-05T21:29:46Z",
      "issue": {
        "id": "MDU6SXNzdWU5MzE2MDExNjI=",
        "title": "Compile only a single translation",
        "url": "https://github.com/messageformat/messageformat/issues/328"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDOCXZcSc41SNzC": {
      "id": "IC_kwDOCXZcSc41SNzC",
      "body": "dang, if i would have noticed i would have patched earlier. looks like ci choked up. on it",
      "createdAt": "2021-08-06T03:06:22Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDg3Nzg5NzMw",
        "title": "Upsert on table to respect omit tags",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/174"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc41SQbO": {
      "id": "IC_kwDOCXZcSc41SQbO",
      "body": "1.1.0 is out\n\nOn Thu, Aug 5, 2021 at 1:00 AM Ioan ***@***.***> wrote:\n\n> Hi, thanks for completing the PR. However I notice that the version in NPM\n> is still 1.0.5, which does not contain this change. Do you plan on updating\n> this soon?\n> Thanks 👍\n>\n> —\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cdaringe/postgraphile-upsert/pull/174#issuecomment-893250629>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57JUWAXADDIQE4KWGPTT3JALFANCNFSM4ROMBZOQ>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>\n> .\n>\n",
      "createdAt": "2021-08-06T03:43:51Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDg3Nzg5NzMw",
        "title": "Upsert on table to respect omit tags",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/174"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc42GpDc": {
      "id": "IC_kwDOCXZcSc42GpDc",
      "body": "Hmmm we don’t use default export or module.exports = plugin, but we sure could. Would be a single LOC change. Want to send a patch?",
      "createdAt": "2021-08-29T01:00:57Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODE5MjQwMjA=",
        "title": "No plugin found matching spec",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/207"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc42GqBV": {
      "id": "IC_kwDOCXZcSc42GqBV",
      "body": "actually, ill patch it now",
      "createdAt": "2021-08-29T01:45:42Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODE5MjQwMjA=",
        "title": "No plugin found matching spec",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/207"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc42GrCY": {
      "id": "IC_kwDOCXZcSc42GrCY",
      "body": "fixed in 2.0.0",
      "createdAt": "2021-08-29T02:31:02Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODE5MjQwMjA=",
        "title": "No plugin found matching spec",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/207"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc42Gsjt": {
      "id": "IC_kwDOCXZcSc42Gsjt",
      "body": "in 2.0.1, moved back to the esm style export. docs have been updated on how to use the plugin!",
      "createdAt": "2021-08-29T03:59:43Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODE5MjQwMjA=",
        "title": "No plugin found matching spec",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/207"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc42GsmC": {
      "id": "IC_kwDOCXZcSc42GsmC",
      "body": "merged your changes into `main`, including credits :) the impl _mandated_ a where clause--it's now optional",
      "createdAt": "2021-08-29T04:01:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDU5MjM3MjYx",
        "title": "where feature",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/168"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc42GsoO": {
      "id": "IC_kwDOCXZcSc42GsoO",
      "body": "merged",
      "createdAt": "2021-08-29T04:02:32Z",
      "issue": {
        "id": "MDU6SXNzdWU0MDMyNDg2OTI=",
        "title": "Add `where` input argument - a new fork",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/8"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOEwpWO842HBl2": {
      "id": "IC_kwDOEwpWO842HBl2",
      "body": "For image tags:\r\n\r\n- next/image already applies various best practices: https://nextjs.org/docs/api-reference/next/image\r\n- height + width should ALWAYS be supplied, because in tandem they behave as an aspect ratio, give the image a non empty bounding box on download, then actual height/width may be overridden using CSS. this improves CLS metric. Jen Simmons has a video on it\r\n\r\nfor either type of image, likely preload it if it is top of page or in the header\r\n",
      "createdAt": "2021-08-29T15:26:39Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTg3OTQ4Njg=",
        "title": "Implement a reusable img component",
        "url": "https://github.com/ocaml/v3.ocaml.org-rescript/issues/430"
      },
      "repository": {
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      }
    },
    "IC_kwDOEwpWO842HCTG": {
      "id": "IC_kwDOEwpWO842HCTG",
      "body": "I recently went through all of this for a website. Runtime solutions cost a moderate amount of JavaScript, suffer extra blocking downloads (language message pack), or have naive namespace splitting of the locale corpus.\r\n\r\nmy solution was to write a webpack loader to:\r\n\r\n- at devtime, render messages using the developer requested locale\r\n- At prod build time, split into two steps:\r\n    - where text or a text function is used, instead of providing the locale message of interest, inject that message from ALL locales, in some structured format\r\n    - copy the app that has all locales into a locale specific folder of interest (eg apps/en-US), then reduce the embedded message to just the locale of interest, stripping the other locales out of the assets.\r\n    - If you are doing static only builds, you may be able to do this much easier/less-complexity, and dodge this two step malarkey to get locale aware messages into the correct assests.\r\n\r\n\r\nBenefits:\r\n\r\n- no runtime overhead or complexity. Very simple—nearly like developing an app for a single language \r\n- best possible performance for browsers\r\n\r\nChallenges:\r\n\r\n- build time complexity. extra processing, uncommon architecture \r\n- lots of files? App artifacts are multiplied by N locales. Thus, cost on CDNs may be higher 🤷‍♀️\r\n",
      "createdAt": "2021-08-29T15:43:53Z",
      "issue": {
        "id": "MDU6SXNzdWU4Mjk1NzIwMjY=",
        "title": "Implement translations support",
        "url": "https://github.com/ocaml/v3.ocaml.org-rescript/issues/145"
      },
      "repository": {
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      }
    },
    "IC_kwDOCXZcSc42HoI9": {
      "id": "IC_kwDOCXZcSc42HoI9",
      "body": "> there is no unique or exclusion constraint matching the ON CONFLICT specification\r\n\r\nthat makes sense. i think you were correct to add userId, otherwise the db scan would not be performant.\r\n\r\n> insert or update on table \\\"music\\\" violates foreign key constraint \\\"music_user_id_fkey\\\"\r\n\r\ninteresting. what do we know about this FK? i'd say run postgres in debug mode, [logging all statements](https://github.com/cdaringe/postgraphile-upsert/blob/main/src/__tests__/fixture/db.ts#L65), or run postgraphile in debug mode, & capture the emitted query. discern what about the query specifically makes RLS grumpy. obviously we want RLS to work :). however, my PG is actually a bit rusty. i hit issues like this everytime i turn on RLS 🙄 😄 . i've never used `deferrable`, so you're now the domain expert here.\r\n\r\nif we need to tune the emitted query to handle this case, i see no qualms with that. however, i'd need you to diagnose this and suggest a patch!\r\n\r\ngodspeed!",
      "createdAt": "2021-08-30T02:45:30Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODIxOTAzNzI=",
        "title": "Row level security",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/208"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOEwpWO842Hpc-": {
      "id": "IC_kwDOEwpWO842Hpc-",
      "body": "🤚 ",
      "createdAt": "2021-08-30T03:02:18Z",
      "issue": {
        "id": "MDU6SXNzdWU5NTE2Njc2ODc=",
        "title": "Update the link to \"Install OCaml\" on the homepage",
        "url": "https://github.com/ocaml/v3.ocaml.org-rescript/issues/490"
      },
      "repository": {
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      }
    },
    "IC_kwDOEwpWO842H-un": {
      "id": "IC_kwDOEwpWO842H-un",
      "body": "Ah, nice! Ok, disregard my prior then :)",
      "createdAt": "2021-08-30T06:15:17Z",
      "issue": {
        "id": "MDU6SXNzdWU4Mjk1NzIwMjY=",
        "title": "Implement translations support",
        "url": "https://github.com/ocaml/v3.ocaml.org-rescript/issues/145"
      },
      "repository": {
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      }
    },
    "IC_kwDOEwpWO842ICb2": {
      "id": "IC_kwDOEwpWO842ICb2",
      "body": "I’ll have to take a peek later, but iirc when I popped open the tutorial JS module, it was not ESM. We need each tutorial exported as a top level ESM export and Tutorial.make to produce a specific symbol import for the relevant page, and we should be set",
      "createdAt": "2021-08-30T06:45:29Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODIzMzg4MDA=",
        "title": "Reduce large assets",
        "url": "https://github.com/ocaml/v3.ocaml.org-rescript/issues/519"
      },
      "repository": {
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      }
    },
    "IC_kwDOFdmrd842eGBo": {
      "id": "IC_kwDOFdmrd842eGBo",
      "body": "Yes, I think these are great ideas. I'm tempted to map `/locations/:id` => `/{polluters,emitters,dischargers,etc}/:id`. What's your take",
      "createdAt": "2021-09-06T21:23:54Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODk0MTcxMDc=",
        "title": "Propose site structure",
        "url": "https://github.com/cdaringe/portland-clean-air/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/portland-clean-air"
      }
    },
    "IC_kwDOEwpWO842eyca": {
      "id": "IC_kwDOEwpWO842eyca",
      "body": "> just use the CSS classnames directly as strings\r\n\r\nthis is essential for the purgecss algorithm to kick in anyway, ya?",
      "createdAt": "2021-09-07T06:53:57Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODY4MDkyOTU=",
        "title": "Remove Tailwind module",
        "url": "https://github.com/ocaml/v3.ocaml.org-rescript/issues/522"
      },
      "repository": {
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      }
    },
    "IC_kwDOFdmrd842gQbM": {
      "id": "IC_kwDOFdmrd842gQbM",
      "body": "> Is this correct?\r\n\r\nI forwarded it onto Greg. Hopefully he can pipe in! :)",
      "createdAt": "2021-09-07T15:53:06Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODk0MTcxMDc=",
        "title": "Propose site structure",
        "url": "https://github.com/cdaringe/portland-clean-air/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/portland-clean-air"
      }
    },
    "IC_kwDOBHtabs42kS2Z": {
      "id": "IC_kwDOBHtabs42kS2Z",
      "body": "Greetings, certainly. I apologize in advance for the large filesize.\r\n\r\n[link to client stats.json](https://drive.google.com/file/d/1NPLTUGbtEU_3nKRJsU2A62tm30tGQ48c/view?usp=sharing)",
      "createdAt": "2021-09-08T18:48:00Z",
      "issue": {
        "id": "MDU6SXNzdWU5OTA1MDA3MjI=",
        "title": "entrypoint view shows a module present, but module view does not show entrypoint",
        "url": "https://github.com/statoscope/statoscope/issues/102"
      },
      "repository": {
        "nameWithOwner": "statoscope/statoscope"
      }
    },
    "IC_kwDOBHtabs42om3S": {
      "id": "IC_kwDOBHtabs42om3S",
      "body": "Excellent, thank you very much. Was surprised that you were able to address it without a solid repoduction! I felt bad for not having a working demo",
      "createdAt": "2021-09-10T04:08:57Z",
      "issue": {
        "id": "MDU6SXNzdWU5OTA1MDA3MjI=",
        "title": "entrypoint view shows a module present, but module view does not show entrypoint",
        "url": "https://github.com/statoscope/statoscope/issues/102"
      },
      "repository": {
        "nameWithOwner": "statoscope/statoscope"
      }
    },
    "IC_kwDODvLA7c42qIsR": {
      "id": "IC_kwDODvLA7c42qIsR",
      "body": "Currently linting my whole project in JS tools takes ~9 minutes. 🙏 Is a native or WASM/WASI plug-in mechanism is still under long term consideration?",
      "createdAt": "2021-09-10T15:56:16Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzI3Mjk0NTA4",
        "title": "feat(react): add use-jsx-in-jsx",
        "url": "https://github.com/denoland/deno_lint/pull/838"
      },
      "repository": {
        "nameWithOwner": "denoland/deno_lint"
      }
    },
    "IC_kwDODvLA7c42qTZd": {
      "id": "IC_kwDODvLA7c42qTZd",
      "body": "Gotcha, cool :)",
      "createdAt": "2021-09-10T16:58:21Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzI3Mjk0NTA4",
        "title": "feat(react): add use-jsx-in-jsx",
        "url": "https://github.com/denoland/deno_lint/pull/838"
      },
      "repository": {
        "nameWithOwner": "denoland/deno_lint"
      }
    },
    "IC_kwDOBHtabs42vsmG": {
      "id": "IC_kwDOBHtabs42vsmG",
      "body": "Greetings!\r\n\r\n1. Yes, the entrypoints are now symmetric--I see the entrypoint on both views (the entrypoint view showing the module, and the module view showing the entrypoint)\r\n2. I am still seeing a module present in statoscope which is not bundled anywhere. I was hoping statoscope would help show me the mapping between module => entrypoint => asset, but currently it just tells me what entrypoint the module belongs to. I may need to provide some better information here to solve the issue.  Regardless, the TLDR is that the foam graph says `use-delete-list-item.ts` is in use in the entrypoint, the module page even shows reasons (which appear incorrect, but that may be a webpack issue not a statoscope issue??), and ultimately that module has _no content_ in any of the assets used for the entrypoint. So, it's puzzling. The tools are telling me a module is used in some capacity somewhere in my entrypoint--but it is 100% not.",
      "createdAt": "2021-09-13T18:41:04Z",
      "issue": {
        "id": "MDU6SXNzdWU5OTA1MDA3MjI=",
        "title": "entrypoint view shows a module present, but module view does not show entrypoint",
        "url": "https://github.com/statoscope/statoscope/issues/102"
      },
      "repository": {
        "nameWithOwner": "statoscope/statoscope"
      }
    },
    "IC_kwDOAwhl_843Ispj": {
      "id": "IC_kwDOAwhl_843Ispj",
      "body": "Howdy. Ya, none of us are very active here anymore. Considering calling for new maintainers or archiving it outright ",
      "createdAt": "2021-09-22T15:13:47Z",
      "issue": {
        "id": "I_kwDOAwhl_847xAaK",
        "title": "Trying to get in touch regarding a security issue",
        "url": "https://github.com/node-swig/swig-templates/issues/80"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "IC_kwDOAwhl_843IwKM": {
      "id": "IC_kwDOAwhl_843IwKM",
      "body": "🙇 godspeed. invite sent. please keep the existing maintainers on for a bit :)",
      "createdAt": "2021-09-22T15:30:45Z",
      "issue": {
        "id": "I_kwDOAwhl_847xAaK",
        "title": "Trying to get in touch regarding a security issue",
        "url": "https://github.com/node-swig/swig-templates/issues/80"
      },
      "repository": {
        "nameWithOwner": "node-swig/swig-templates"
      }
    },
    "IC_kwDOFdmrd843Rk63": {
      "id": "IC_kwDOFdmrd843Rk63",
      "body": "From Greg,\r\n\r\n-  Cascadia Action, a 501(c)(3) can make no statement in support of PCA, a 501(c)(4). PCA can and does support Cascadia Action\r\n- All industries on the map on front page are emitters of industrial air pollution. If they have a DEQ ACDP then they all emit. If it is EPA data such as airports and rail yards then they all emit. If the data is only Oregon Fire Marshall (red dots on map) then we removed NAICS coded industries denoting hazardous chemical storage and warehousing so all hazardous chemicals are in use, thus they emit\r\n- permit linked twice, only once needed\r\n- Add risk (cancers per million or hazard index) for each chemical line item. I will do a wrote up in the next week.\r\n\r\nSo, pretty straight forward stuff/remarks. Green light, let's get a POC of these designs goin. Next, 11ty, whichever! `www` repo is available now with some of these source datas. In some cases it's a bit to untangle, but otherwise content is present! The big missing big is that the _scans_ PDFs from DEQ need to be auto-generated post clone.  Will need to come up w/ a reproducibility strategy--docker, (nixpkgs)[https://nixos.org/], etc. I found my mac yielded slightly different outcomes, and further, versions of the commands had evolved, so the OCR parse was different. I may focus on that aspect next.\r\n\r\nLet me know if you'd like to pair on any of this!",
      "createdAt": "2021-09-26T19:05:39Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODk0MTcxMDc=",
        "title": "Propose site structure",
        "url": "https://github.com/cdaringe/portland-clean-air/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/portland-clean-air"
      }
    },
    "IC_kwDOAbv8p843hx29": {
      "id": "IC_kwDOAbv8p843hx29",
      "body": "This is a common pattern when supplying different implementations between build target environments.\r\n\r\nprocess.env.NODE_ENV === “production” ? implNotUsingParams : implUsingParams\r\n\r\nAgreed that it is funky to write such an impl directly, but it’s an optimization that is realistically practical in JS projects. With Webpack define plugin, Babel/TS/swc transforms, all generating code eventually piped into terser, it’s not unrealistic to expect this case",
      "createdAt": "2021-09-30T19:26:43Z",
      "issue": {
        "id": "I_kwDOAbv8p848SsZC",
        "title": "rfc: should terser strip unused parameters during dead code elimination",
        "url": "https://github.com/terser/terser/issues/1080"
      },
      "repository": {
        "nameWithOwner": "terser/terser"
      }
    },
    "IC_kwDOD-z6ic43lyv5": {
      "id": "IC_kwDOD-z6ic43lyv5",
      "body": "hi",
      "createdAt": "2021-10-02T01:12:36Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43lyyE": {
      "id": "IC_kwDOD-z6ic43lyyE",
      "body": "no",
      "createdAt": "2021-10-02T01:13:18Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43l8oh": {
      "id": "IC_kwDOD-z6ic43l8oh",
      "body": "/merge",
      "createdAt": "2021-10-02T06:41:47Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43l8se": {
      "id": "IC_kwDOD-z6ic43l8se",
      "body": "/merge",
      "createdAt": "2021-10-02T06:44:00Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43l8wJ": {
      "id": "IC_kwDOD-z6ic43l8wJ",
      "body": "/merge",
      "createdAt": "2021-10-02T06:45:44Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43mULe": {
      "id": "IC_kwDOD-z6ic43mULe",
      "body": "/merge again bro ;)",
      "createdAt": "2021-10-02T17:42:19Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43mUbx": {
      "id": "IC_kwDOD-z6ic43mUbx",
      "body": "/merge",
      "createdAt": "2021-10-02T17:48:35Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43mUkj": {
      "id": "IC_kwDOD-z6ic43mUkj",
      "body": "/merge",
      "createdAt": "2021-10-02T17:51:40Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43mUs3": {
      "id": "IC_kwDOD-z6ic43mUs3",
      "body": "/merge",
      "createdAt": "2021-10-02T17:54:54Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43mUuG": {
      "id": "IC_kwDOD-z6ic43mUuG",
      "body": "/merge",
      "createdAt": "2021-10-02T17:55:14Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43mVbw": {
      "id": "IC_kwDOD-z6ic43mVbw",
      "body": "/merge",
      "createdAt": "2021-10-02T18:11:07Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic43mVev": {
      "id": "IC_kwDOD-z6ic43mVev",
      "body": "/merge",
      "createdAt": "2021-10-02T18:12:12Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOB_QrUM43nGj9": {
      "id": "IC_kwDOB_QrUM43nGj9",
      "body": "I get a rust panic.\r\n\r\n```\r\nthread 'main' panicked at 'byte index 1090 is not a char boundary; it is inside '💣' (bytes 1088..1092) of `export class RadError extends Error {\r\n    static message;\r\n    static code;\r\n    static emoji;\r\n    reason;\r\n}\r\nRadError.code = \"ERADERROR\";\r\nRadError.emoji = \"🚨\";\r\nexport class RadMissingRadFile extends RadError {\r\n}\r\nRadMissingRadFile.message = \"unable to find`[...]', cli/tools/coverage.rs:230:25\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n```\r\n\r\nSeems pretty clear that the coverage checker is doing char mapping expecting byte chars, vs graphemes",
      "createdAt": "2021-10-03T17:57:09Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTkwNzY2NTM=",
        "title": "Inaccurate test coverage might be caused by emojis",
        "url": "https://github.com/denoland/deno/issues/10936"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "IC_kwDOAbv8p843qKUp": {
      "id": "IC_kwDOAbv8p843qKUp",
      "body": "Thanks for the great feedback.\r\n\r\n1. How many bytes saved?\r\n\r\n```ts\r\nimplNotUsingParams(function functionThatCouldBeErased () {\r\n  // how many bytes are saved would be\r\n  // equal to however many bytes terser\r\n  // could compress this function down to.\r\n  // I'm passing this CB to a function that won't use it\r\n  // so the MAX_BYTES_SAVED can be quite high.\r\n  // sizeOfFn.toString().length bytes :)\r\n}, plusThis, ...andThese)\r\n```\r\n\r\nIn the case that prompted this issue, pumping my fn implementation into a minifier, it was ~300-400 bytes. Could be a single byte, could be a megabyte!\r\n\r\n\r\n2. On optimization passes\r\n\r\n> The tricky part is keeping track of how many times something was called. Specifically,\r\n> process.env.NODE_ENV === “production” ? implNotUsingParams : implUsingParams`\r\n\r\nI used this as an example, but in actuality, I get into these scenarios with upstream build tools, such as webpack/etc. By the time this snippet makes it to terser, it is reduced to:\r\n\r\n- `\"production === \"production\" ? implNotUsingParams : implUsingParams`, or \r\n- `true  ? implNotUsingParams : implUsingParams` \r\n\r\ni'm not sure certain which one is more likely. \r\n\r\nThis simplified input to terser may or may not reduce the need for a multi pass. I would opt in to pay the runtime cost for a multi pass reduction if it meant support for the feature. Speed matters 101%. Browser bytes is something I prioritize even higher than build speed.\r\n\r\n> In the case where Terser can turn a function call into an IIFE\r\n\r\nThanks. Ya, this is a different case indeed. This fn could be called many times, but the inputs are _known to do nothing_, so we can save!\r\n\r\n> There's lots of things Terser doesn't do, because it's hard to maintain a lot of working features,\r\n\r\nYa, I appreciate that. I additionally acknowledge that this could be argued as an edge case as well.\r\n\r\nFor me, the driving motivation is really supporting a development and production workflow in my JS projects. Were it not for this objective, I would not end up with the seemingly obscure code as @TimvdLippe & @jridgewell pointed out. To implement this feature is to implicitly support browser patterns where implementations are swapped based on build targets. That may not be a goal of this project, or even a consideration to tailor towards.\r\n\r\nIn development, we load different features into the application than we do at production time. Extra config, plugins, widgets, etc are loaded into our applications to enhance the developer experience. By the time we go to production, none of that is needed, and we desire to strip it out. For static resources, dead-code-elim is great. `isProd ? prodImpl : devImpl` strips out `devImpl`, and everyone is happy! However, it just gets a bit messier when your resources are composed with other resources, e.g. \r\n\r\n```ts\r\nconst a = resource => isProd ? prodImpl : devImpl(resource)  // devImpl dead-code-elim'd\r\nconst b = a(resource) // resource param IS NOT dead-code-elim'd\r\n```\r\n I can _definitely_ handle all this in userland code:\r\n\r\n```ts\r\nconst a = resource => isProd ? prodImpl : devImpl(resource) // devImpl dead-code-elim'd\r\nconst b = isProd ? a() : a(resource) // resource param IS dead-code-elim'd\r\n```\r\n\r\nThe downside to handling it in userland code (in fn `b`) as demonstrated is that _it's redundant_. I **already expressed my production optimization** in fn `a`, but now must force it onto my customer who is defining function `b`. Not a problem--the caller should probably be aware of browser impact. However, it's certainly _more_ desirable if I can handle that conditionality once and let the compiler work its optimization to handle the rest.\r\n\r\nFood for thought. Please feel empowered to close the issue if we do not want to pursue further, otherwise I am happy to continue the dialog.\r\n",
      "createdAt": "2021-10-04T19:44:11Z",
      "issue": {
        "id": "I_kwDOAbv8p848SsZC",
        "title": "rfc: should terser strip unused parameters during dead code elimination",
        "url": "https://github.com/terser/terser/issues/1080"
      },
      "repository": {
        "nameWithOwner": "terser/terser"
      }
    },
    "IC_kwDOAkiGZM4360HE": {
      "id": "IC_kwDOAkiGZM4360HE",
      "body": "To only consider if an old query can be serviced I think may be too narrow of a lens to inspect the problem from.\r\n\r\n```ts\r\n// old\r\n{\r\n  old: Int\r\n}\r\n\r\n// new\r\n{\r\n  old: Int\r\n  new: String\r\n}\r\n``` \r\n\r\nclearly non breaking. *structural* integrity is maintained.\r\n\r\n```ts\r\n// old\r\ntype Old = Int\r\n\r\n// new\r\ntype New = Int | String\r\n```\r\n\r\nMuch more clearly breaking.\r\n\r\nI'd argue that fundamentally, the output type is changing here when extending an enum. An enum going from `A` => `A | B` is disjoint. Yes, the service will still provide data. But clients are coded to expectations of A, and those expectations have just been swapped without notice. It is not unreasonable to assume that consumers of `A` have explicit business logic coded around `A`s contract, which changing `A` violates.",
      "createdAt": "2021-10-07T21:21:09Z",
      "issue": {
        "id": "MDU6SXNzdWUyNDUzOTE5OTY=",
        "title": "Adding an enum value is breaking change?",
        "url": "https://github.com/graphql/graphql-js/issues/968"
      },
      "repository": {
        "nameWithOwner": "graphql/graphql-js"
      }
    },
    "IC_kwDOGMb43844NlGy": {
      "id": "IC_kwDOGMb43844NlGy",
      "body": "This is …amazing, and a big improvement. I’m going to merge after I pull and test in the morning. Thanks a ton for these patches",
      "createdAt": "2021-10-14T07:21:15Z",
      "issue": {
        "id": "PR_kwDOGMb4384tLuwL",
        "title": "Add support for try with syntax",
        "url": "https://github.com/cdaringe/ppx_effects/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ppx_effects"
      }
    },
    "IC_kwDOGMb43844QmlT": {
      "id": "IC_kwDOGMb43844QmlT",
      "body": ">  in particular, I wasn't sure why your handlers all take the continue function as a parameter but then the generated code always supplies 'Obj.Effect_handlers.Deep.continue\r\n\r\nMy thought was that if effects are to be a first class lang feature, I intentionally wanted the experience to feel like using a first class language feature, which includes not needing to import a module. I wanted to hide the modules from the user, much like the experience would be iff they were using the real syntax. I also thought it was a bit odd that effects fns came from the Obj module anyway. :)  Not a big deal at all",
      "createdAt": "2021-10-15T00:58:54Z",
      "issue": {
        "id": "PR_kwDOGMb4384tLuwL",
        "title": "Add support for try with syntax",
        "url": "https://github.com/cdaringe/ppx_effects/pull/1"
      },
      "repository": {
        "nameWithOwner": "cdaringe/ppx_effects"
      }
    },
    "IC_kwDODvLA7c44TiLk": {
      "id": "IC_kwDODvLA7c44TiLk",
      "body": "The bees knees would be an AST bridge between (deno_lint plugin, swc-ast) => (eslint plugin, babel-ast). i'd be excited to even contribute to it. iirc there was a thread w/ one of the eslint maintainers talkin' about ways to help. maybe we can start talkin along these lines w/ him?",
      "createdAt": "2021-10-15T20:36:30Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDA2ODcyNTg=",
        "title": "discussion: plugin support",
        "url": "https://github.com/denoland/deno_lint/issues/175"
      },
      "repository": {
        "nameWithOwner": "denoland/deno_lint"
      }
    },
    "IC_kwDOADUBZ844U5Ss": {
      "id": "IC_kwDOADUBZ844U5Ss",
      "body": "hmmmm, it's still not clear to me how to use the `dev` flag, even having consulted the docs and PRs. the dev flag is something i would use that is not for build | test | doc, but rather, say, a particular version of the LSP or ocamlformat. \r\n\r\nto use `dev`:\r\n\r\n- mark deps like ... ???  ` \"my_dep\" {>= \"0.0.0\" & dev}`\r\n- install via `opam install . --dev` ?\r\n\r\nare these close? :)",
      "createdAt": "2021-10-16T20:15:47Z",
      "issue": {
        "id": "MDU6SXNzdWU0ODE2ODg5OQ==",
        "title": "Add a dev dependency flag",
        "url": "https://github.com/ocaml/opam/issues/1861"
      },
      "repository": {
        "nameWithOwner": "ocaml/opam"
      }
    },
    "IC_kwDOALNGyM44Zv9V": {
      "id": "IC_kwDOALNGyM44Zv9V",
      "body": "On first glance, it appears that \r\n\r\n- the runtime lib is built up as an ocaml module via `compiler/lib-runtime/dune`\r\n- that runtime lib is linked into final artifacts, perhaps in `compiler/lib/driver.ml`\r\n\r\nlet's see let's see. i see that `parse_annot` reads in the `//If`, but whom is actually _acting_ on that parsed information? I only see that `` `If `` variant referenced during `parse_from_lex`, but not during an AST transform or print step. 🤔 ",
      "createdAt": "2021-10-19T00:44:18Z",
      "issue": {
        "id": "I_kwDOALNGyM49UARn",
        "title": "how to optimize a common.js artifact for the target env",
        "url": "https://github.com/ocsigen/js_of_ocaml/issues/1157"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDODvLA7c44Z3QB": {
      "id": "IC_kwDODvLA7c44Z3QB",
      "body": "Gotcha, thanks for the ref. Genuine ask, is the `typescript-eslint` idea worth it if we can't go fast? As a deno user, I can already work up node to call eslint w/ the ts parser. I don't need a solve from deno for that. I want deno for goin fast--i can use node if i'm ok goin slow.  \r\n\r\nI'd vote to keep deno developers' precious time (your precious time!) to be reserved for doing the rad stuff, vs shimming in the less rad stuff (wiring in a JS parser runnin in v8 :) ).",
      "createdAt": "2021-10-19T02:02:34Z",
      "issue": {
        "id": "MDU6SXNzdWU2NDA2ODcyNTg=",
        "title": "discussion: plugin support",
        "url": "https://github.com/denoland/deno_lint/issues/175"
      },
      "repository": {
        "nameWithOwner": "denoland/deno_lint"
      }
    },
    "IC_kwDOALNGyM44aWJ4": {
      "id": "IC_kwDOALNGyM44aWJ4",
      "body": "Cool, thanks. I think I see a path forward. I’ll try this out sometime this\nweekend or next week.\n\nOn Mon, Oct 18, 2021 at 7:17 PM hhugo ***@***.***> wrote:\n\n> linker.ml is where //If are handled. The driver calls into the linker\n> giving information about needed primitives. The linker computes the\n> transitive closure of primitives based on metadata (e.g.//Requires)\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ocsigen/js_of_ocaml/issues/1157#issuecomment-946310113>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57L5JPFJXTDZSK5W3CDUHTIMDANCNFSM5GFYHOQA>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n>\n-- \nSent from Gmail Mobile\n",
      "createdAt": "2021-10-19T07:15:19Z",
      "issue": {
        "id": "I_kwDOALNGyM49UARn",
        "title": "how to optimize a common.js artifact for the target env",
        "url": "https://github.com/ocsigen/js_of_ocaml/issues/1157"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOALNGyM44c6Xk": {
      "id": "IC_kwDOALNGyM44c6Xk",
      "body": "This is kind of what I was thinking? I'd imagine there may be some strong opinions here: https://github.com/ocsigen/js_of_ocaml/pull/1160\r\n\r\nPlease, by all means, critique away :)",
      "createdAt": "2021-10-19T21:03:49Z",
      "issue": {
        "id": "I_kwDOALNGyM49UARn",
        "title": "how to optimize a common.js artifact for the target env",
        "url": "https://github.com/ocsigen/js_of_ocaml/issues/1157"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOALNGyM44heOO": {
      "id": "IC_kwDOALNGyM44heOO",
      "body": "Ok, so here's what I've tried:\r\n\r\n- Support `//If: <target_env>` annotations. by default, when no annotations are present, it assumes the status quo. The status quo is implicitly an isomorphic case--support javascript running in node or browser.\r\n- If there is a `target_env` specific implementation available specified by an `//If: <target_env>` annotation, allow it to _override_ the isomorphic case. In `fs_node.js`, for example, i provided empty impls for the browser. This should be fine and good, as these functions should _never_ be invoked, as someone targeting the browser should never be calling a FS API. Someone will undoubtedly try, and the will get the all-too-familiar `cannot call FIELD_NAME of undefined` error :).  This is an acceptable/desirable state.\r\n- Update the `fragment` data model to included the `annot`ation list, so we can conditionally swap the target_env implementations",
      "createdAt": "2021-10-21T06:29:41Z",
      "issue": {
        "id": "PR_kwDOALNGyM4tZ_Rc",
        "title": "feat(compiler): support target envs",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1160"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOALNGyM44jB1d": {
      "id": "IC_kwDOALNGyM44jB1d",
      "body": "Thanks for the clarification, I’ll have to go back and revisit why the artifact I produced was so far off. ",
      "createdAt": "2021-10-21T15:01:59Z",
      "issue": {
        "id": "I_kwDOALNGyM49gwMS",
        "title": "RFC:  ecmascript modules as primary build artifact",
        "url": "https://github.com/ocsigen/js_of_ocaml/issues/1161"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOD-z6ic44wlGC": {
      "id": "IC_kwDOD-z6ic44wlGC",
      "body": "/merge",
      "createdAt": "2021-10-26T19:40:09Z",
      "issue": {
        "id": "PR_kwDOD-z6ic4slXmZ",
        "title": "wee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOALNGyM44xt-F": {
      "id": "IC_kwDOALNGyM44xt-F",
      "body": "I discovered that any consumption of the `Js` module is that which adds approx 50kb+ of javascript\r\n\r\n```sh\r\n$ ocamlfind ocamlc -package js_of_ocaml -package js_of_ocaml-ppx -linkpkg  js/main.ml -o js/main.bc\r\n$ js_of_ocaml compile --opt=3 js/main.bc\r\n$ ls -h js/\r\n```\r\n\r\nTried various other optimization flags to `js_of_ocaml` without getting under 70k w/ the JS module. More investigation needed to better understand why that mod is so problematic in the rendered output.\r\n\r\nNonetheless, I still lobby that yielding ESM would be an improved artifact to offer users :)",
      "createdAt": "2021-10-27T05:44:16Z",
      "issue": {
        "id": "I_kwDOALNGyM49gwMS",
        "title": "RFC:  ecmascript modules as primary build artifact",
        "url": "https://github.com/ocsigen/js_of_ocaml/issues/1161"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOCP54nM447osK": {
      "id": "IC_kwDOCP54nM447osK",
      "body": "Further debugging showed me that I could use:\r\n\r\n`const uri = vscode.window.activeTextEditor.document.uri;`\r\n\r\nto acquire a `Uri`!\r\n\r\ni wasn't able to fully get into a debugging state yet though. \r\n\r\n\r\nI'm trying to debug a local version of the jsoo compiler, a la:\r\n\r\n```json\r\n    {\r\n        \"name\": \"js_of_ocaml.bc\",\r\n        \"type\": \"ocamlearlybird\",\r\n        \"request\": \"launch\",\r\n        \"stopOnEntry\": true,\r\n        \"yieldSteps\": 4096,\r\n        \"arguments\": [\"compile\", \"/tmp/dummy.ml\"],\r\n        \"program\": \"/Users/myuser/src/js_of_ocaml/_build/default/compiler/bin-js_of_ocaml/js_of_ocaml.bc\",\r\n    },\r\n```\r\n\r\nbut:\r\n\r\n- i'm not sure if earlybird supports `arguments` yet? i did `ocamlearlybird --help`, and it suggested not (haven't checked the src yet)\r\n- running the above starts and exits, but yields no output to discern why the debug session failed\r\n\r\nthanks for your time!",
      "createdAt": "2021-10-30T06:14:07Z",
      "issue": {
        "id": "I_kwDOCP54nM49_g3f",
        "title": "Start an OCaml Debug Session renders error",
        "url": "https://github.com/hackwaly/ocamlearlybird/issues/34"
      },
      "repository": {
        "nameWithOwner": "hackwaly/ocamlearlybird"
      }
    },
    "IC_kwDOCP54nM448oMh": {
      "id": "IC_kwDOCP54nM448oMh",
      "body": "Yes, that is where I made this changeset. I’d suggest that emitting log output (local to the extension panel) is a best practice regardless. What do you think? For instance, I’ve used the output panel from ocaml platform ext to discover problems I had with the LSP. I used output last week to discover a bug with a JS extension where the module resolution was not correctly implemented. Logs are quietly tucked away in the extension panel viewer, there only when you need them",
      "createdAt": "2021-10-30T16:20:35Z",
      "issue": {
        "id": "PR_kwDOCP54nM4t4CcP",
        "title": "feat: add extension logging, improve extension features",
        "url": "https://github.com/hackwaly/ocamlearlybird/pull/35"
      },
      "repository": {
        "nameWithOwner": "hackwaly/ocamlearlybird"
      }
    },
    "IC_kwDOCP54nM449WRT": {
      "id": "IC_kwDOCP54nM449WRT",
      "body": "Thanks for the feedback.\r\n\r\nI can certainly use the other methods.\r\n\r\n~~However, if it is not supported from command palette, why register the command?~~\r\n\r\n```json\r\n  \"contributes\": {\r\n    \"commands\": [\r\n      {\r\n        \"command\": \"ocamlearlybird.startDebug\",\r\n        \"title\": \"Start an OCaml Debug Session\"\r\n      },\r\n```\r\n\r\nAny reason to not support it? I can send the PR :)\r\n\r\nIf it's explicitly forbidden, [one could remove it from the palette](https://stackoverflow.com/a/55271392/1438908), but i think it would be quite nice to have a executable file open and jump right into a debug session!\r\n\r\nnot critical though",
      "createdAt": "2021-10-30T23:09:51Z",
      "issue": {
        "id": "I_kwDOCP54nM49_g3f",
        "title": "Start an OCaml Debug Session renders error",
        "url": "https://github.com/hackwaly/ocamlearlybird/issues/34"
      },
      "repository": {
        "nameWithOwner": "hackwaly/ocamlearlybird"
      }
    },
    "IC_kwDOCP54nM449a4e": {
      "id": "IC_kwDOCP54nM449a4e",
      "body": "oh, greetings. yes, i think it is 👍 . i was just in the process of adding additional documentation to the changeset.",
      "createdAt": "2021-10-31T02:20:26Z",
      "issue": {
        "id": "PR_kwDOCP54nM4t4CcP",
        "title": "feat: add extension logging, improve extension features",
        "url": "https://github.com/hackwaly/ocamlearlybird/pull/35"
      },
      "repository": {
        "nameWithOwner": "hackwaly/ocamlearlybird"
      }
    },
    "IC_kwDOCP54nM449b84": {
      "id": "IC_kwDOCP54nM449b84",
      "body": "wooo hoo! `ocamlearlybird` just helped me track down a bug i've been looking for for >1 week :) i used this extension branch the whole time :) i think we're g2g!",
      "createdAt": "2021-10-31T03:15:36Z",
      "issue": {
        "id": "PR_kwDOCP54nM4t4CcP",
        "title": "feat: add extension logging, improve extension features",
        "url": "https://github.com/hackwaly/ocamlearlybird/pull/35"
      },
      "repository": {
        "nameWithOwner": "hackwaly/ocamlearlybird"
      }
    },
    "IC_kwDOCP54nM449f_Q": {
      "id": "IC_kwDOCP54nM449f_Q",
      "body": "done, if you’re good I’m good :)",
      "createdAt": "2021-10-31T06:40:57Z",
      "issue": {
        "id": "PR_kwDOCP54nM4t4CcP",
        "title": "feat: add extension logging, improve extension features",
        "url": "https://github.com/hackwaly/ocamlearlybird/pull/35"
      },
      "repository": {
        "nameWithOwner": "hackwaly/ocamlearlybird"
      }
    },
    "IC_kwDOALNGyM45DTRX": {
      "id": "IC_kwDOALNGyM45DTRX",
      "body": "Implementation complete! Currently, I _only_ reduce the `fs_node.js` module. This brings an `--opt=3` `let () = print_endline ...` prog from `19k` => `15k` :) I see some possible other wins as well, which we can riff on in a different issue or changeset. I tested the `examples/` in browser as well.\r\n\r\nReady for review",
      "createdAt": "2021-11-02T07:34:18Z",
      "issue": {
        "id": "PR_kwDOALNGyM4tZ_Rc",
        "title": "feat(compiler): support target envs",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1160"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOALNGyM45GdKL": {
      "id": "IC_kwDOALNGyM45GdKL",
      "body": "moving convo to 1160",
      "createdAt": "2021-11-02T17:58:08Z",
      "issue": {
        "id": "I_kwDOALNGyM49UARn",
        "title": "how to optimize a common.js artifact for the target env",
        "url": "https://github.com/ocsigen/js_of_ocaml/issues/1157"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOALNGyM45I6wL": {
      "id": "IC_kwDOALNGyM45I6wL",
      "body": "I am not invested into the effort of this PR. The container does work though, and is really nice single-command execution into a functional dev environment :) If you are not interested, please close :)",
      "createdAt": "2021-11-03T04:00:26Z",
      "issue": {
        "id": "PR_kwDOALNGyM4t5lnm",
        "title": "feat: support docker development",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1163"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOALNGyM45UN4G": {
      "id": "IC_kwDOALNGyM45UN4G",
      "body": "Looks like yesterday's build was only grumpy because I forgot a CHANGES.md patch. Patch sent, ready for next CI attempt",
      "createdAt": "2021-11-05T03:29:23Z",
      "issue": {
        "id": "PR_kwDOALNGyM4tZ_Rc",
        "title": "feat(compiler): support target envs",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1160"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOALNGyM45WEag": {
      "id": "IC_kwDOALNGyM45WEag",
      "body": "Nothing here is needed. It's about reproducibility, convenience. I'm not attached to it, but i do think there is room to improve the project bootstrap UX",
      "createdAt": "2021-11-05T17:35:55Z",
      "issue": {
        "id": "PR_kwDOALNGyM4t5lnm",
        "title": "feat: support docker development",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1163"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOAZ7xs845Wz1U": {
      "id": "IC_kwDOAZ7xs845Wz1U",
      "body": "- mac docker\r\n- alpine only (maybe, tested debian distros and it worked fine)\r\n\r\none command repro: `curl https://gist.githubusercontent.com/cdaringe/e38880c5138a6ab4f6d48455e9fcc212/raw | bash` (warning--because sync code is looping, node will be completely unresponsive)\r\n\r\nwhat's particularly interesting in the repo is that i do `copyFileSync` on one file--works perfect. i then `cp f1 f2`, and afterwards `copyFileSync(f2, f3)`, and the failure is induced. stat, diff, etc seem to look OK between files. \r\n\r\n@dpchamps did an strace and found an infinite loop in there, he can add the deets\r\n\r\n> bytes_written becomes 0 and the while loop never ends?\r\n\r\ni believe this is what we observe w/ strace",
      "createdAt": "2021-11-05T23:40:43Z",
      "issue": {
        "id": "I_kwDOAZ7xs8479iXL",
        "title": "fs.copyFileSync hangs for file created within same layer in overlay filesystem",
        "url": "https://github.com/nodejs/node/issues/40200"
      },
      "repository": {
        "nameWithOwner": "nodejs/node"
      }
    },
    "IC_kwDOALNGyM45XqfL": {
      "id": "IC_kwDOALNGyM45XqfL",
      "body": "The motivation for this PR is that when I began making my first patches to the project, I hit bumps in the developer journey. Not big problems at all, but just a few little ones that were sufficient to motivate me to send this 😄 . Simply improving CONTRIBUTING.md with more rigorous steps could suffice as the solution. Offering a single command to fully hydrate a developer environment I think is a fantastic development UX that I would have certainly used to get started. Happy to ditch docker if the maintainers aren't keen on it. Adding a `bootstrap` target to the Makefile is also an option.\r\n\r\n> I don't think we need to add ... any kind of extra development workflow.\r\n\r\n> The best way to bootstrap the development environment is \\<user's personal workflow\\>\r\n\r\nI respect that workflow. If that's how reproducibility is achieved, let's check that in :). However, I'll kindly suggest that it's already disjoint with the project's requirements. Wrong compiler, missing some packages that are not listed in opam files, etc. It's things like this that motivated the PR--an unambiguous \"run this <cmd>\" and you'll be good to go with high confidence.",
      "createdAt": "2021-11-06T20:17:30Z",
      "issue": {
        "id": "PR_kwDOALNGyM4t5lnm",
        "title": "feat: support docker development",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1163"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDODYjdCc45YSAP": {
      "id": "IC_kwDODYjdCc45YSAP",
      "body": "Yes, I did consider indentation as well. It felt less precise, breaking at non-logically grouped blocks",
      "createdAt": "2021-11-07T19:24:31Z",
      "issue": {
        "id": "I_kwDODYjdCc4-ZUu7",
        "title": "Feature Request: More folding!",
        "url": "https://github.com/ocaml/ocaml-lsp/issues/547"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml-lsp"
      }
    },
    "IC_kwDOCaVDVc45kX9j": {
      "id": "IC_kwDOCaVDVc45kX9j",
      "body": "Hey @romainmenke \r\n\r\nThanks for the feedback. I've taken the opportunity to simplify my original problem statement at the top of the issue. I'm going to answer your questions, but out of order :)\r\n\r\n> ... not immediately clear to me what the end goal of getMissingFeatures would be?\r\n\r\nMy ultimate objective is to support building an intelligent, targeted polyfill, programatically. Implementing `getMissingFeatures` is part of that puzzle.\r\n\r\nPractically speaking, I need to solve the below equation for `Features_to_polyfill`. Without solving this equation, I cannot build a sensible polyfill automatically, with confidence.\r\n\r\n```js\r\nvar Features_to_polyfill = \r\n   Features_used_by_app -  // known (user-space)\r\n   Features_supported_by_compiler - // known (user-space)\r\n   Features_not_in_browser // **getMissingFeatures(browser, version)**\r\n```\r\n\r\n**`getMissingFeatures(browser, version)` provides `Features_not_in_browser`**, which is otherwise missing.\r\n\r\nDoes that make sense? I prevent some features from being used in my application, generally via things like lint rules. My compiler (babel) down-levels some language features, which I also know about. So, if those two sets of features are known, I want to be able say \"hey, what leftover features that I am using need to be polyfilled?\". As you noted, the list can be enormous! This is a positive trait--I want to consider each and every one of these entities, and either A) forbid the feature in my application, or B) include it in my polyfill set! Perhaps, `Features_excluded_from_app` get's derived from this value, and added into the above equation.\r\n\r\nThis helps me protect my users by not using unsupported features, or, helps by polyfilling only where needed. Without `getMissingFeatures()`, I cannot produce the list of features I want to polyfill reliably. This process has **already** helped me by forcing me to go consider what INTL APIs I will/will not need to support!\r\n\r\n\r\nOn your range notes, i'll defer conversation there. Thanks for that. I need to get a bit more free time and dwell on those",
      "createdAt": "2021-11-10T23:28:30Z",
      "issue": {
        "id": "I_kwDOCaVDVc4-meoH",
        "title": "RFC: support f(browser) => array-of-missing-features",
        "url": "https://github.com/JakeChampion/polyfill-library/issues/1115"
      },
      "repository": {
        "nameWithOwner": "JakeChampion/polyfill-library"
      }
    },
    "IC_kwDOCaVDVc45kbU_": {
      "id": "IC_kwDOCaVDVc45kbU_",
      "body": "`const { required } = require(\"@mrhenry/core-web\");` is exactly what i'm looking for :), thanks.  Looks like I wrote a bunch of code to re-emulate that content.\r\n\r\nI didn't see references to core-web in this project. Can you help clarify the relation between these two? Ultimately I was hoping that `required` was exposed in this package :)",
      "createdAt": "2021-11-10T23:45:19Z",
      "issue": {
        "id": "I_kwDOCaVDVc4-meoH",
        "title": "RFC: support f(browser) => array-of-missing-features",
        "url": "https://github.com/JakeChampion/polyfill-library/issues/1115"
      },
      "repository": {
        "nameWithOwner": "JakeChampion/polyfill-library"
      }
    },
    "IC_kwDOCaVDVc45ksnT": {
      "id": "IC_kwDOCaVDVc45ksnT",
      "body": "Hey all! Sorry for all the noise today--lots of features and discussion :)\r\n\r\nBig 👍 to this topic. I'd advocate to advance the recommendation much further. There is additional simplicity and maintenance reduction to be had here. Rather than just align the names, I'd propose that we fully integrate with caniuse-lite.\r\ncaniuse-lite can drive:\r\n\r\n- browser names convention\r\n- all of the support compatibility ranges, currently provided by hand in the toml files\r\n\r\nCanIUse lite has an API that can provide these browser compatibility tables, and be self maintaining by just bumping the dependency over time. Rather than maintain _two_ datasets for mapping `feature => browser-compat` in the community, we could just take advantage of the great work they are already doing over there.\r\n\r\nHere's roughly what the API looks like:\r\n\r\n```js\r\nconst ciul = require('caniuse-lite')\r\nconst { features } = require('caniuse-lite/dist/unpacker/features')\r\nconsole.log(ciul.feature(features.abortcontroller))\r\n/**\r\n{\r\n  status: 'ls',\r\n  title: 'AbortController & AbortSignal',\r\n  stats: {\r\n    ie: {\r\n      '6': 'n',\r\n      '7': 'n',\r\n      '8': 'n',\r\n      '9': 'n',\r\n      '10': 'n',\r\n      '11': 'n',\r\n      '5.5': 'n'\r\n    },\r\n    edge: {\r\n      '12': 'n',\r\n      '13': 'n',\r\n   ... snip snip\r\n*/\r\n```\r\n\r\nSo, no need to maintain the toml config--just query the CIUL db package. I think this would be particularly awesome, because it allows users (like me!) to have a unified set of tools, aligning to same conventions and datasets, to deliver a cohesive browser compatibility strategy. Currently, the misaligment between these tools induces a bit of friction, albeit navigable.",
      "createdAt": "2021-11-11T01:56:24Z",
      "issue": {
        "id": "MDU6SXNzdWU3NjU0ODMyNDI=",
        "title": "Clarify browsers list for config.toml",
        "url": "https://github.com/JakeChampion/polyfill-library/issues/940"
      },
      "repository": {
        "nameWithOwner": "JakeChampion/polyfill-library"
      }
    },
    "IC_kwDOALNGyM45lYXK": {
      "id": "IC_kwDOALNGyM45lYXK",
      "body": "Hey @hhugo, truly no rush, but ready for another round of reviews. I believe the feature is complete :)",
      "createdAt": "2021-11-11T08:47:52Z",
      "issue": {
        "id": "PR_kwDOALNGyM4tZ_Rc",
        "title": "feat(compiler): support target envs",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1160"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOCaVDVc45nmLh": {
      "id": "IC_kwDOCaVDVc45nmLh",
      "body": "Thanks!\r\n\r\n<details>\r\n<summary>Would a naive caniuse implementation really provide notable benefit?</summary>\r\n\r\nSuppose you said instead, \"ya, they overlap, perhaps we should use caniuse to implement a naive solution.\"  In a naive solution:\r\n\r\n- pf-lib implements `needsPolyfill(browserName: string, version: number, featureName: string): Range`\r\n  - for instance, in the above example output i pasted above, a range for `AbortController` for `IE` would produce: `5.5 - 11`\r\n\r\nShort comings:\r\n\r\n- this does not assess whether or not the polyfill actually _works_ in those browsers, just that those browsers do not support the feature\r\n- this does not assess versions out of that range\r\n  - probably a non-issue. we should assume caniuse provides comprehensive browser ranges\r\n\r\nConsidering the above points, it seems like two maintenance modes could be operated from:\r\n\r\n1. status-quo: explicitly enumerate all browsers & their polyfill compatibility ranges, per feature\r\n    1. pros: explicit is clear, cons: new browsers and new versions require continuous, incremental updates\r\n1. proposed: assumed polyfill works in caniuse derived range, annotate **quirks only**\r\n    1. pros: free updates to compatibility ranges & new browsers, cons: someone has to generally do the work to look out for quirks _anyway_\r\n\r\n</details>\r\n\r\n\r\n**Nope**, i talked myself out of it :). caniuse integration is probably a poor return on investment for this project. Manual upkeep of these features is probably completely fine & similar amount of effort.",
      "createdAt": "2021-11-11T22:51:17Z",
      "issue": {
        "id": "MDU6SXNzdWU3NjU0ODMyNDI=",
        "title": "Clarify browsers list for config.toml",
        "url": "https://github.com/JakeChampion/polyfill-library/issues/940"
      },
      "repository": {
        "nameWithOwner": "JakeChampion/polyfill-library"
      }
    },
    "IC_kwDOCaVDVc45nyP8": {
      "id": "IC_kwDOCaVDVc45nyP8",
      "body": "Missing from this list is android chrome (browserslist `ChromeAndroid`/`and_chr`). I don't see it called out in https://github.com/Financial-Times/polyfill-library/blob/master/.github/contributing.md#browser-compatibility either.\r\n\r\nIs this mapped in the polyfill syntax? I do see android chrome called out on MDN!",
      "createdAt": "2021-11-12T00:52:01Z",
      "issue": {
        "id": "MDU6SXNzdWU3NjU0ODMyNDI=",
        "title": "Clarify browsers list for config.toml",
        "url": "https://github.com/JakeChampion/polyfill-library/issues/940"
      },
      "repository": {
        "nameWithOwner": "JakeChampion/polyfill-library"
      }
    },
    "IC_kwDOAarPis45prv8": {
      "id": "IC_kwDOAarPis45prv8",
      "body": "Thanks :)\r\n\r\n> Why it is unknown if there is no iOS Chrome in the list?\r\n\r\nPerhaps it's feasible that iOS Chrome is categorized _within_  the Chrome or ios_safari browser labels. A peer of mine suggested that at some point, ios forced other browser vendors to use essentially use safari webviews at one point in time. So perhaps ios chrome _reported as safari_ could have been legitimate? I'm not stating this with confidence :).  I just want to learn if ios chrome _is_ actually hidden/merged the current data, or knowingly, fully unknown or omitted from caniuse.  I tried going to https://gs.statcounter.com/ which caniuse says is the backing datasource, but I was able to discern the answer to this question. However, it",
      "createdAt": "2021-11-12T16:02:55Z",
      "issue": {
        "id": "I_kwDOAarPis4-rBtc",
        "title": "unknown support for ios chrome",
        "url": "https://github.com/browserslist/browserslist/issues/643"
      },
      "repository": {
        "nameWithOwner": "browserslist/browserslist"
      }
    },
    "IC_kwDOAarPis45ptPF": {
      "id": "IC_kwDOAarPis45ptPF",
      "body": "Thanks!\r\n\r\n> Why it is unknown if there is no Edge Mobile in the list?\r\n\r\nBecause \"Edge for Microsoft Edge\" is in the browsers list, leaving ambiguity if Edge Mobile could be categorized under the \"Edge\" label.\r\n\r\nCurrently https://github.com/browserslist/browserslist#browsers is a list. Perhaps a markdown table could remove some of that ambiguity?\r\n\r\n| Browser Name | Desktop | Mobile/Android | Mobile/iOS | Mobile/Other |\r\n| -- | -- | -- | -- | -- |\r\n| Chrome | `Chrome` | `ChromeAndroid`,`and_chr` | unavailable | not_applicable |\r\n| BlackBerry | not_applicable | not_applicable | not_applicable | `BlackBerry`, `bb` |\r\n| Edge | `Edge` | unavailable | unavailable | not_applicable |\r\n\r\n...etc. \r\n\r\nWhat do you think? I'd be happy to send a patch.\r\n\r\nI think this is quite nice because it disambiguates by providing an extra dimension of discriminating information",
      "createdAt": "2021-11-12T16:11:31Z",
      "issue": {
        "id": "I_kwDOAarPis4-rAl4",
        "title": "unknown support for edge mobile",
        "url": "https://github.com/browserslist/browserslist/issues/642"
      },
      "repository": {
        "nameWithOwner": "browserslist/browserslist"
      }
    },
    "IC_kwDOALNGyM45q5uX": {
      "id": "IC_kwDOALNGyM45q5uX",
      "body": "Thanks for all of the patience with this back and forth conversation. I acted on all of your feedback 👍 ",
      "createdAt": "2021-11-12T21:01:07Z",
      "issue": {
        "id": "PR_kwDOALNGyM4tZ_Rc",
        "title": "feat(compiler): support target envs",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1160"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOBfbSFM45rgec": {
      "id": "IC_kwDOBfbSFM45rgec",
      "body": "Hey all,\r\n\r\nI just want to chime in with a respectful, kind plea for attention here. We've been blocked on this for a while now, and are eager to pay back the techdebt accrued while blocked by a fix. @dpchamps explanation is above is fine and good, as is @llwt 's in #7710.  i want to emphasize how fundamental of a problem this is, perhaps to elevate the priority here.\r\n\r\nhere's what we **cant do** right now:\r\n\r\n```ts\r\n// my-executor.ts\r\nrunExecutor(nodeExecutorInput1)\r\nrunExecutor(nodeExecutorInput2)\r\n```\r\n\r\n_can't do it_.\r\n\r\nthis is because `execute.impl.js` does this:\r\n\r\n```js\r\nfunction runProcess(event, options) {\r\n    if (subProcess || !event.success) {\r\n        return rxjs_1.EMPTY;\r\n    }\r\n    return new rxjs_1.Observable((subscriber) => {\r\n        subProcess = child_process_1.fork(event.outfile, options.args, { // 👀 👀 👀\r\n            execArgv: getExecArgv(options),\r\n        });\r\n```\r\n\r\nboth executions race to squash the `subProcess`, and it creates _problemos_. Global, mutable singleton, getting crushed by competition. \r\n\r\nWe are willing to pair and discuss this further! :) I thought i'd try my hand in articulating the problem from a different perspective. Thanks",
      "createdAt": "2021-11-12T22:38:25Z",
      "issue": {
        "id": "PR_kwDOBfbSFM4sMvMo",
        "title": "fix(node): Cooperative Scheduling between startBuild and subProcess generators",
        "url": "https://github.com/nrwl/nx/pull/7110"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDOAarPis45tExt": {
      "id": "IC_kwDOAarPis45tExt",
      "body": "Cool. what do you mean “at a bigger scale?” Would you like me to complete the table, for demonstration?",
      "createdAt": "2021-11-13T18:51:45Z",
      "issue": {
        "id": "I_kwDOAarPis4-rAl4",
        "title": "unknown support for edge mobile",
        "url": "https://github.com/browserslist/browserslist/issues/642"
      },
      "repository": {
        "nameWithOwner": "browserslist/browserslist"
      }
    },
    "IC_kwDOAarPis453fRm": {
      "id": "IC_kwDOAarPis453fRm",
      "body": "closing this issue, moving discussion to #649 ",
      "createdAt": "2021-11-16T23:36:41Z",
      "issue": {
        "id": "I_kwDOAarPis4-rAl4",
        "title": "unknown support for edge mobile",
        "url": "https://github.com/browserslist/browserslist/issues/642"
      },
      "repository": {
        "nameWithOwner": "browserslist/browserslist"
      }
    },
    "IC_kwDOBfbSFM453mFS": {
      "id": "IC_kwDOBfbSFM453mFS",
      "body": "Ya, makes sense. Your solution should work as well.\r\n\r\n1ea861bde",
      "createdAt": "2021-11-16T23:55:16Z",
      "issue": {
        "id": "PR_kwDOBfbSFM4ueoEt",
        "title": "fix(node): fix source-map-support dependency",
        "url": "https://github.com/nrwl/nx/pull/7728"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDOALNGyM46GUlr": {
      "id": "IC_kwDOALNGyM46GUlr",
      "body": "patches sent for all feedback :)",
      "createdAt": "2021-11-21T01:08:36Z",
      "issue": {
        "id": "PR_kwDOALNGyM4tZ_Rc",
        "title": "feat(compiler): support target envs",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1160"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOCXZcSc46PwiC": {
      "id": "IC_kwDOCXZcSc46PwiC",
      "body": "You might need to enable schema watching, I’m not sure",
      "createdAt": "2021-11-23T22:05:14Z",
      "issue": {
        "id": "I_kwDOCXZcSc4_PwV3",
        "title": "GraphiQL using the cli won't load the mutations, but it works on the server",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/251"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOALNGyM46l3wA": {
      "id": "IC_kwDOALNGyM46l3wA",
      "body": "Ya, I can indeed.\n\nOn Tue, Nov 30, 2021 at 2:57 AM hhugo ***@***.***> wrote:\n\n> @cdaringe <https://github.com/cdaringe>, will you be able to write some\n> documentation ?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ocsigen/js_of_ocaml/pull/1160#issuecomment-982523117>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57PVNZVS7RDO63WO5DDUOSU3BANCNFSM5GKCROGQ>\n> .\n>\n>\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n>\n-- \nSent from Gmail Mobile\n",
      "createdAt": "2021-11-30T20:45:54Z",
      "issue": {
        "id": "PR_kwDOALNGyM4tZ_Rc",
        "title": "feat(compiler): support target envs",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1160"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOCaVDVc46uB--": {
      "id": "IC_kwDOCaVDVc46uB--",
      "body": "Ouch! https://en.wikipedia.org/wiki/Whitespace_character#Unicode\r\n\r\nmust have been rough doing that diff",
      "createdAt": "2021-12-03T01:44:48Z",
      "issue": {
        "id": "I_kwDOCaVDVc4_xdWx",
        "title": "String.prototype.trim incorrect safari version range",
        "url": "https://github.com/JakeChampion/polyfill-library/issues/1133"
      },
      "repository": {
        "nameWithOwner": "JakeChampion/polyfill-library"
      }
    },
    "IC_kwDOBtxxJc46xIeG": {
      "id": "IC_kwDOBtxxJc46xIeG",
      "body": "TS has a compiler flag, removeComments, to  control the behavior ",
      "createdAt": "2021-12-04T03:27:51Z",
      "issue": {
        "id": "I_kwDOBtxxJc4_1xoP",
        "title": "Comments on types are stripped",
        "url": "https://github.com/swc-project/swc/issues/2964"
      },
      "repository": {
        "nameWithOwner": "swc-project/swc"
      }
    },
    "IC_kwDOALNGyM46x3ZG": {
      "id": "IC_kwDOALNGyM46x3ZG",
      "body": "hey @hhugo, sorry for the delay. I've been ill for a week.\r\n\r\n956e1aea94e854d7b322820cd191972adc65841a\r\n\r\n1. it's not much, but felt it was probably all that was warranted, based on the current docs organization\r\n2. i saw `make doc`, but not clear on how to actually render `.wiki` files\r\n\r\nlet me know if you want a deeper writeup somewhere",
      "createdAt": "2021-12-05T01:52:07Z",
      "issue": {
        "id": "PR_kwDOALNGyM4tZ_Rc",
        "title": "feat(compiler): support target envs",
        "url": "https://github.com/ocsigen/js_of_ocaml/pull/1160"
      },
      "repository": {
        "nameWithOwner": "ocsigen/js_of_ocaml"
      }
    },
    "IC_kwDOCXZcSc463pvs": {
      "id": "IC_kwDOCXZcSc463pvs",
      "body": "thanks, ill check this out tomorrow",
      "createdAt": "2021-12-07T08:05:36Z",
      "issue": {
        "id": "PR_kwDOCXZcSc4vbsh7",
        "title": "fix: recover the changes in postgraphile-upsert #174",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/260"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc463p--": {
      "id": "IC_kwDOCXZcSc463p--",
      "body": "circleci just stopped running 🤔 . will setup github actions and make this all a bit more seamless ",
      "createdAt": "2021-12-07T08:07:09Z",
      "issue": {
        "id": "PR_kwDOCXZcSc4vbsh7",
        "title": "fix: recover the changes in postgraphile-upsert #174",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/260"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOAn8RLM47CpZP": {
      "id": "IC_kwDOAn8RLM47CpZP",
      "body": "Ah man @vscode-triage-bot! This is a pretty advanced feature. The average user will have a hard time foreseeing the benefits such a feature could offer. \r\n\r\nI'm talking to a bot. 🤦 ",
      "createdAt": "2021-12-10T02:32:26Z",
      "issue": {
        "id": "MDU6SXNzdWUzNzQ2OTAyMjk=",
        "title": "Support adding grammars at runtime",
        "url": "https://github.com/microsoft/vscode/issues/61962"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "IC_kwDODFyPQc47HaTA": {
      "id": "IC_kwDODFyPQc47HaTA",
      "body": "Hey @capricorn86 , yes, definitely!\r\n\r\nI use happy dom in 1.5 projects. The first project is quite simple, and happy dom just worked right off the bat. Every month or two, I try and replug it in to my second project, and see what I get snagged up on. There’s generally one or two little things, and I file tickets with you accordingly :-) my 2nd project evolves regularly, so I put down my happy-dom experiment when I hit snags. That’s why my tickets have been a bit sporadic over the few months—repeat evaluations!",
      "createdAt": "2021-12-11T22:33:32Z",
      "issue": {
        "id": "I_kwDODFyPQc4_kqgd",
        "title": "Add support for Beacon",
        "url": "https://github.com/capricorn86/happy-dom/issues/309"
      },
      "repository": {
        "nameWithOwner": "capricorn86/happy-dom"
      }
    },
    "IC_kwDODWzK7c47IxVe": {
      "id": "IC_kwDODWzK7c47IxVe",
      "body": "I'd welcome a contribution :)",
      "createdAt": "2021-12-13T06:40:23Z",
      "issue": {
        "id": "MDU6SXNzdWU1OTE4NjEzMDQ=",
        "title": "Could you give us a demo in codesandbox plz?",
        "url": "https://github.com/cdaringe/d3-svg-path-editor/issues/76"
      },
      "repository": {
        "nameWithOwner": "cdaringe/d3-svg-path-editor"
      }
    },
    "IC_kwDOCXZcSc47TufX": {
      "id": "IC_kwDOCXZcSc47TufX",
      "body": "ya, that makes good sense! let's do it",
      "createdAt": "2021-12-15T17:53:23Z",
      "issue": {
        "id": "I_kwDOCXZcSc5Aaqxh",
        "title": "Suggestion - omit upsert if update or insert are manually omitted",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/266"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOBtxxJc47UjS0": {
      "id": "IC_kwDOBtxxJc47UjS0",
      "body": "@dpchamps wrote a jest plugin that tests for the comment, calls into this swc/jest, then reinjects the comment before handing off jest. it's imperfect, but gets us most of the way there",
      "createdAt": "2021-12-15T21:54:01Z",
      "issue": {
        "id": "I_kwDOBtxxJc4_1xoP",
        "title": "Comments on types are stripped",
        "url": "https://github.com/swc-project/swc/issues/2964"
      },
      "repository": {
        "nameWithOwner": "swc-project/swc"
      }
    },
    "IC_kwDOEwpWO847Zhrt": {
      "id": "IC_kwDOEwpWO847Zhrt",
      "body": "`$ convert oc-sq-full.jpeg -resize 800x800 -strip -define jpeg:extent=50KB  oc-sq-lg.jpeg`\r\n\r\ngithub didn't reprocess it _too_ much, at approx 48KB (96% reduction)\r\n![oc-sq-lg](https://user-images.githubusercontent.com/1003261/146517189-e00a6f3a-d242-42b5-a96b-d230a3d69519.jpeg)\r\n\r\n\r\n`$ convert oc-sq-full.jpeg -resize 400x400 -strip oc-sq-sm.jpeg`\r\n\r\n<20KB\r\n\r\n![oc-sq-sm](https://user-images.githubusercontent.com/1003261/146517503-f871a79d-6b57-4d7a-8fcd-3c02dc9c49c6.jpeg)\r\n\r\nwill try and get a pr goin soon\r\n",
      "createdAt": "2021-12-17T09:00:05Z",
      "issue": {
        "id": "MDU6SXNzdWU5ODIzMzg4MDA=",
        "title": "Reduce large assets",
        "url": "https://github.com/ocaml/v3.ocaml.org-rescript/issues/519"
      },
      "repository": {
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      }
    },
    "IC_kwDOEw276c47f_Jb": {
      "id": "IC_kwDOEw276c47f_Jb",
      "body": "hmm. swapping order made no difference. ya, unclear on why the tool suggests `with-test` is required. this to me suggests that these would only be installed when the flag is passed, when in fact i need them _always_ for my bin and my lib. thus, they are part of the base set of dependencies",
      "createdAt": "2021-12-20T20:18:54Z",
      "issue": {
        "id": "I_kwDOEw276c5ArjeM",
        "title": "incorrect request for adding with-test annotation",
        "url": "https://github.com/ocurrent/opam-dune-lint/issues/42"
      },
      "repository": {
        "nameWithOwner": "ocurrent/opam-dune-lint"
      }
    },
    "IC_kwDOFunuwM47gJ-b": {
      "id": "IC_kwDOFunuwM47gJ-b",
      "body": "hey @patricoferris\r\n\r\n> I would argue dune init does not \"Bootstrap a Project\" as @tmattio pointed out\r\n\r\nPerhaps we could refine terminology. What _is_ bootstrapping?\r\n\r\nFrom my perspective, creating a subjectively-reasonable number of assets and asset-types to help get a user from zero to execution.\r\n\r\n_After_ `dune init project NAME`, I can then run a new executable with a new linked library with about one-ish command. Not bad, IMHO. See output below.\r\n\r\n```sh\r\n~/src\r\n❯ dune init project radness\r\nSuccess: initialized project component named radness\r\n\r\n\r\n~/src\r\n❯ tree radness\r\nradness\r\n├── bin\r\n│   ├── dune\r\n│   └── main.ml\r\n├── lib\r\n│   └── dune\r\n├── radness.opam\r\n└── test\r\n    ├── dune\r\n    └── radness.ml\r\n\r\n~/src\r\n✦ ❯ cd radness && dune exe bin/main.exe\r\nInfo: Creating file dune-project with this contents:\r\n| (lang dune 2.9)\r\n| (name radness)\r\nHello, World!\r\n```\r\n\r\nIt's certainly not as comprehensive as something `spin` may offer, ...but I'd suggest that it is indeed a non-trivial amount of bootstrapping.  Perhaps we make clear that this is somewhat minimal, and then as Anil suggested, articulate that more comprehensive solutions are available? That's pretty much what @tmattio already did :), perhaps without platform/non-platform delineation :)",
      "createdAt": "2021-12-20T21:31:13Z",
      "issue": {
        "id": "PR_kwDOFunuwM4wDuNv",
        "title": "docs(workflows): bootstrapping",
        "url": "https://github.com/ocaml/ocaml.org/pull/193"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml.org"
      }
    },
    "IC_kwDOEw276c47jvWn": {
      "id": "IC_kwDOEw276c47jvWn",
      "body": "Hey @talex5. Thanks for the response!\r\n\r\n> does it actually install any binaries or libraries?\r\n\r\nYep, sure does!\r\n\r\n```sh\r\n❯ opam switch create . 4.13.1\r\nPackage hood does not exist, create as a NEW package? [Y/n] y\r\nhood is now pinned to git+file:///Users/cdaringe/src/my.hood#main (version ~dev)\r\n\r\n<><> Installing new switch packages <><><><><><><><><><><><><><><><><><><><>  🐫\r\nSwitch invariant: [\"ocaml-base-compiler\" {= \"4.13.1\"} | \"ocaml-system\" {= \"4.13.1\"}]\r\nThe following actions will be performed:\r\n  // snip snip snip\r\n  ∗ install ppx_deriving        5.2.1   [required by hood]\r\n  ∗ install yojson              1.7.0   [required by hood]\r\n  ∗ install containers          3.6.1   [required by hood]\r\n  ∗ install ppx_yojson_conv     v0.14.0 [required by hood]\r\n  ∗ install hood                ~dev*\r\n===== ∗ 30 =====\r\n\r\n\r\nmy.hood on  main via  v16.6.2 via 🐫 v4.13.1 (*my.hood) took 3s\r\n❯ opam list | grep containers\r\ncontainers          3.6.1       A modular, clean and powerful extension of the OCaml standard library\r\n```\r\n\r\nFurther, my libraries (not tests) definitely use the deps (such as containers). Thus, I posit that the lint recommendation is still incorrect",
      "createdAt": "2021-12-22T02:03:33Z",
      "issue": {
        "id": "I_kwDOEw276c5ArjeM",
        "title": "incorrect request for adding with-test annotation",
        "url": "https://github.com/ocurrent/opam-dune-lint/issues/42"
      },
      "repository": {
        "nameWithOwner": "ocurrent/opam-dune-lint"
      }
    },
    "IC_kwDOAshAQM47omzC": {
      "id": "IC_kwDOAshAQM47omzC",
      "body": "thanks! shoot, i meant to file this in the `markdownlint` project, not the vscode extension :( sorry about that! thanks for the support",
      "createdAt": "2021-12-23T20:00:38Z",
      "issue": {
        "id": "I_kwDOAshAQM5A2OAF",
        "title": "Invalid MD037 raised on valid input",
        "url": "https://github.com/DavidAnson/vscode-markdownlint/issues/217"
      },
      "repository": {
        "nameWithOwner": "DavidAnson/vscode-markdownlint"
      }
    },
    "IC_kwDOFunuwM47ooge": {
      "id": "IC_kwDOFunuwM47ooge",
      "body": "Took a third pass, based on above feedback",
      "createdAt": "2021-12-23T20:19:21Z",
      "issue": {
        "id": "PR_kwDOFunuwM4wDuNv",
        "title": "docs(workflows): bootstrapping",
        "url": "https://github.com/ocaml/ocaml.org/pull/193"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml.org"
      }
    },
    "IC_kwDOFunuwM47q7HW": {
      "id": "IC_kwDOFunuwM47q7HW",
      "body": "The file failing lint is unchanged",
      "createdAt": "2021-12-26T05:16:56Z",
      "issue": {
        "id": "PR_kwDOFunuwM4wRJlw",
        "title": "feat: compress by default",
        "url": "https://github.com/ocaml/ocaml.org/pull/197"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml.org"
      }
    },
    "IC_kwDOFunuwM47rcx3": {
      "id": "IC_kwDOFunuwM47rcx3",
      "body": "```\r\nlet documentation_url =\r\n  Sys.getenv_opt \"OCAMLORG_DOC_URL\"\r\n  |> Option.value ~default:\"https://docs-data.ocaml.org/live/\"\r\n```\r\n\r\n=> invalid cert, & 403s",
      "createdAt": "2021-12-26T21:49:25Z",
      "issue": {
        "id": "I_kwDOFunuwM491LRM",
        "title": "A redirect to the latest documentation of a package",
        "url": "https://github.com/ocaml/ocaml.org/issues/174"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml.org"
      }
    },
    "IC_kwDOFJgd6M47tkTJ": {
      "id": "IC_kwDOFJgd6M47tkTJ",
      "body": "Ya, I was thinking the compile bin could add a —pretty flag, but by default squash/trim all whitespace between tags. Seems like a lot of overhead/complexity to do it at runtime. I can’t think of a compelling reason to do it elsewhere!",
      "createdAt": "2021-12-27T23:42:25Z",
      "issue": {
        "id": "I_kwDOFJgd6M5A5tKk",
        "title": "support trimming all whitespace from template generation",
        "url": "https://github.com/aantron/dream/issues/187"
      },
      "repository": {
        "nameWithOwner": "aantron/dream"
      }
    },
    "IC_kwDOAXbCs847zDl9": {
      "id": "IC_kwDOAXbCs847zDl9",
      "body": "- I've discovered that when [I remove `samsung` from the list](https://github.com/cdaringe/babel-preset-env-browserslist-optional-chaining-bug/commit/cd51cb9d3cd0d602eba68f66b0e2eb5088b993a4), it emits non-transpiled code.\r\n- If you add [\"samsung\": \"13.0\"](https://caniuse.com/?search=optional%20chaining) to `@babel/compat-data/data/plugins.json`, it works per expectation\r\n\r\nIs this correct behavior? How is `ios_safari` being processed? `ios_safari` is also missing from the map, but the compilation still does not down level.\r\n\r\nMinimally, I suspect, the json file needs to be updated with samsung. But further discussion on how ios_safari is working without entries would be helpful",
      "createdAt": "2021-12-31T02:05:04Z",
      "issue": {
        "id": "I_kwDOAXbCs85BDRg5",
        "title": "[Bug]: present-env compiles optional-chaining when browserslist query set does not require it",
        "url": "https://github.com/babel/babel/issues/14088"
      },
      "repository": {
        "nameWithOwner": "babel/babel"
      }
    },
    "IC_kwDOAXbCs847zEOh": {
      "id": "IC_kwDOAXbCs847zEOh",
      "body": "cc/ @HenrikJoreteg, because i know you care about optional-chaining expansion inefficiency! ;)",
      "createdAt": "2021-12-31T02:18:12Z",
      "issue": {
        "id": "I_kwDOAXbCs85BDRg5",
        "title": "[Bug]: present-env compiles optional-chaining when browserslist query set does not require it",
        "url": "https://github.com/babel/babel/issues/14088"
      },
      "repository": {
        "nameWithOwner": "babel/babel"
      }
    },
    "IC_kwDOAXbCs847ztWV": {
      "id": "IC_kwDOAXbCs847ztWV",
      "body": "Thanks @JLHwung, I’ll try this out soon. Can you comment on the relevance of the JSON config files? What inputs go into the decision to transpile a browserslist aware or not?",
      "createdAt": "2021-12-31T16:17:22Z",
      "issue": {
        "id": "I_kwDOAXbCs85BDRg5",
        "title": "[Bug]: present-env compiles optional-chaining when browserslist query set does not require it",
        "url": "https://github.com/babel/babel/issues/14088"
      },
      "repository": {
        "nameWithOwner": "babel/babel"
      }
    },
    "IC_kwDOEqZVJM47zvM6": {
      "id": "IC_kwDOEqZVJM47zvM6",
      "body": "checking now",
      "createdAt": "2021-12-31T17:01:39Z",
      "issue": {
        "id": "I_kwDOEqZVJM5BENHO",
        "title": "invalid refspec",
        "url": "https://github.com/cdaringe/freshawair/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/freshawair"
      }
    },
    "IC_kwDOEqZVJM47zwLM": {
      "id": "IC_kwDOEqZVJM47zwLM",
      "body": "\r\n- the ezpostgres ref is fine & works :) https://github.com/cdaringe/ezpostgresql/commit/c8b6af1ee02f2da9f7acfc1526748a2778082e7e\r\n- `docker-compose build` passed those steps in my execution, although I had to try twice because alpine servers were down 😬 \r\n- ~~can you try `docker pull ocaml/opam:alpine-3.14-ocaml-4.12-domains` and tell me the digest you get? i get `Digest: sha256:cba2d8742fcd71a50e1cb534baffeca7e4a939e05b5bcec800c9f0d32be6747b`~~\r\n\r\nit seems to me that that in your case, when `bash opam.deps.sh` was called, `bash` did not parse the script correctly. perhaps it was aliased to `sh` instead of `bash` in your image? \r\n\r\nnonetheless, i've just discovered that that 4.12-domains image tag has a breaking change in it 😢 . i'll have to roll a new version anyway :) let me try that now\r\n",
      "createdAt": "2021-12-31T17:22:59Z",
      "issue": {
        "id": "I_kwDOEqZVJM5BENHO",
        "title": "invalid refspec",
        "url": "https://github.com/cdaringe/freshawair/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/freshawair"
      }
    },
    "IC_kwDOEqZVJM47zxuj": {
      "id": "IC_kwDOEqZVJM47zxuj",
      "body": "I built this project on bleeding edge version of mutlicore+algebraic effects ocaml, and due to their breaking changes in their current unstable compiler branches, I am unable to recover at this moment, mainly due to a `ppx` incompatibility. I will have to either:\r\n\r\n- rewrite/refactor to a stable version of ocaml, or\r\n- wait until they cut version 5, which is alleged very soon in 2022\r\n\r\ni will be opting for the latter. I apologize for the inconvenience",
      "createdAt": "2021-12-31T18:06:03Z",
      "issue": {
        "id": "I_kwDOEqZVJM5BENHO",
        "title": "invalid refspec",
        "url": "https://github.com/cdaringe/freshawair/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/freshawair"
      }
    },
    "IC_kwDOFunuwM477R4F": {
      "id": "IC_kwDOFunuwM477R4F",
      "body": "likely no different. i suspect the different numbers are just noise:\r\n\r\nbefore:\r\n\r\n<img width=\"711\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1003261/148164904-8f2758e4-e6fe-4ec9-abfa-761e475eb3d8.png\">\r\n\r\nafter:\r\n\r\n<img width=\"711\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1003261/148165391-b8890328-1925-407f-ae4f-c939d043a676.png\">\r\n\r\n",
      "createdAt": "2022-01-05T05:31:52Z",
      "issue": {
        "id": "PR_kwDOFunuwM4wRJlw",
        "title": "feat: compress by default",
        "url": "https://github.com/ocaml/ocaml.org/pull/197"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml.org"
      }
    },
    "IC_kwDOFunuwM477Tx1": {
      "id": "IC_kwDOFunuwM477Tx1",
      "body": "do what you see fit. i won't be upset either way :)\r\n\r\nmy take is that repositories are for collaboration, and i'm all for making collaboration as easy as possible. IDE assets are _prettty_ painless. having the editor ready to go (vscode, .idea, .editorconfig, whatever, any/all of 'em) reduces friction",
      "createdAt": "2022-01-05T05:55:01Z",
      "issue": {
        "id": "PR_kwDOFunuwM4wRrpM",
        "title": "feat: local switch",
        "url": "https://github.com/ocaml/ocaml.org/pull/199"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml.org"
      }
    },
    "IC_kwDOFunuwM477U6R": {
      "id": "IC_kwDOFunuwM477U6R",
      "body": "> this is fixing the dependencies installation by having make deps install a locked version of the dependencies\r\n\r\ncorrect\r\n\r\n>  I think a simpler solution is to install the correct version of the dependencies in the opam file or the Makefile\r\n\r\nYes, at least until this (or similar) happens again. \r\n\r\nAside, I spend an inordinate amount of time in ocaml projects trying to get switches aligned with compatible dependencies. lockfiles fix the issue near permanently, ~99%. i really wish opam did what Cargo.lock, package-lock.json, Pipfile.lock, gradle.lock, yarn.lock, etc etc do, right off the bat. It's been demotivating, for me personally, contributing to opam based projects.\r\n\r\n> Locking dependencies in itself could be useful to ensure reproducible builds in production\r\n\r\ntrue. id be willing to patch the dockerfile as well.\r\n\r\nseems like our community is pretty fractured on lockfile alignment still.",
      "createdAt": "2022-01-05T06:06:44Z",
      "issue": {
        "id": "PR_kwDOFunuwM4wRym0",
        "title": "feat: locked dependencies",
        "url": "https://github.com/ocaml/ocaml.org/pull/200"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml.org"
      }
    },
    "IC_kwDOF28jXM48D_ab": {
      "id": "IC_kwDOF28jXM48D_ab",
      "body": "Amazing! Thanks!",
      "createdAt": "2022-01-07T19:29:01Z",
      "issue": {
        "id": "I_kwDOF28jXM5BUv1q",
        "title": "__typename missing from generated edge nodes",
        "url": "https://github.com/supabase/pg_graphql/issues/24"
      },
      "repository": {
        "nameWithOwner": "supabase/pg_graphql"
      }
    },
    "IC_kwDOFmaXcc48Eol0": {
      "id": "IC_kwDOFmaXcc48Eol0",
      "body": "Wow, thanks! I searched around some, but managed to miss that in the docs",
      "createdAt": "2022-01-08T00:54:08Z",
      "issue": {
        "id": "I_kwDOFmaXcc5BUwXP",
        "title": "Question: __typename optional?",
        "url": "https://github.com/gqty-dev/gqty/issues/512"
      },
      "repository": {
        "nameWithOwner": "gqty-dev/gqty"
      }
    },
    "IC_kwDOF28jXM48E2Nf": {
      "id": "IC_kwDOF28jXM48E2Nf",
      "body": "I deleted the `strict` statement from `master`, and sure enough GraphiQL began working once more 🤔 ",
      "createdAt": "2022-01-08T07:46:20Z",
      "issue": {
        "id": "I_kwDOF28jXM5BYMIm",
        "title": "Commit 71557b03d2ff59074f0823607dfcd8d6bde8773b broke docker-compose REST services",
        "url": "https://github.com/supabase/pg_graphql/issues/31"
      },
      "repository": {
        "nameWithOwner": "supabase/pg_graphql"
      }
    },
    "IC_kwDOFmaXcc48E3Tu": {
      "id": "IC_kwDOFmaXcc48E3Tu",
      "body": "I also get an infinite loop when trying to access some values:\r\n\r\n```jsx\r\n      <pre>\r\n        {query.allMfes().edges?.map((e) => {\r\n          return e.node.version;\r\n        })}\r\n      </pre>\r\n```\r\n\r\nIf i drop the `.version` (or any other field access off of `e.node`), the infinite loop halts, but of course react cannot render a that object (the proxy?).\r\n\r\nThe infinite loop of API calls also does re-trigger the loading state. I think the cache resolve suggestion above is correct, as my queries _do_ have the full data present!\r\n\r\nInspection revealed the following. There is a for loop, processing lookup selections. The `key` generated is not in the cache. The key also is _not_ representative of the query i authored--there is a `0` suffixed onto it. Thus, though the cache is **fully hydrated** with correct data, the `Selection` lookup fails, due to this wrong key:\r\n\r\n<img width=\"594\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1003261/148637855-c63b84ac-9c0d-4bd9-a2ba-bd8a3cf5fd04.png\">\r\n",
      "createdAt": "2022-01-08T08:12:08Z",
      "issue": {
        "id": "I_kwDOFmaXcc4-tAEc",
        "title": "Infinite loop when mapping unions",
        "url": "https://github.com/gqty-dev/gqty/issues/314"
      },
      "repository": {
        "nameWithOwner": "gqty-dev/gqty"
      }
    },
    "IC_kwDOFmaXcc48NmfB": {
      "id": "IC_kwDOFmaXcc48NmfB",
      "body": "@PabloSzx \r\n\r\nthe client code must be rebuilt each time, `npm run build`, from the root or from the local dir. i didn't setup hot-code reloading in the reproduction.\r\n\r\n>  I can see the error happening\r\n\r\nSorry, I assumed reproducing the error was valid. I didn't know that having hot code reload was required for the reproduction",
      "createdAt": "2022-01-11T17:33:18Z",
      "issue": {
        "id": "I_kwDOFmaXcc5BY9a8",
        "title": "basic query results in infinite loop (issue with pg_graphql)",
        "url": "https://github.com/gqty-dev/gqty/issues/520"
      },
      "repository": {
        "nameWithOwner": "gqty-dev/gqty"
      }
    },
    "IC_kwDOFmaXcc48N1tM": {
      "id": "IC_kwDOFmaXcc48N1tM",
      "body": "Gotcha. I will investigate this evening and make sure there is a functional way to reflect changes.",
      "createdAt": "2022-01-11T18:50:05Z",
      "issue": {
        "id": "I_kwDOFmaXcc5BY9a8",
        "title": "basic query results in infinite loop (issue with pg_graphql)",
        "url": "https://github.com/gqty-dev/gqty/issues/520"
      },
      "repository": {
        "nameWithOwner": "gqty-dev/gqty"
      }
    },
    "IC_kwDOF28jXM48OK5e": {
      "id": "IC_kwDOF28jXM48OK5e",
      "body": "> Have you verified that there are no mutations in your schema? \r\n\r\nMy schema is my database schema. I expected mutations to be reflected, just as queries were reflected. Perhaps that's the wrong expectation, but it's not recorded as otherwise from what I have read",
      "createdAt": "2022-01-11T20:48:20Z",
      "issue": {
        "id": "I_kwDOF28jXM5BimPD",
        "title": "RFC: add mutations",
        "url": "https://github.com/supabase/pg_graphql/issues/37"
      },
      "repository": {
        "nameWithOwner": "supabase/pg_graphql"
      }
    },
    "IC_kwDOFmaXcc48OO-Z": {
      "id": "IC_kwDOFmaXcc48OO-Z",
      "body": "Ok, there were a few things that made debugging less intuitive :)\r\n\r\n- make sure you are on the correct branch,`bug-demo`\r\n- the `build` script was _purging_ the gqty code and regenerating it :),  Previously, it was`\"build\": \"rm -rf src/generated && gqty generate && tsc\"`. whoops! patched. it will not generate any more on build. you can just manually regenerate as needed by calling `gqty generate` from the `packages/mfe-admin-gql-client` folder _iff_ needed\r\n- parcel was _stripping_ `debugger` statements. how irritating! I added a terser config to _not_ drop `debugger` statements\r\n\r\npatches here: https://github.com/cdaringe/mfe-tools/commit/d2d70d4cc35ea9561f5835a3ca017ac8545cd575\r\n\r\nSo, when you make changes, you can just run `npm build` from the root, and it will take. I followed my own instructions on a fresh clone, and these patches should make your expectations work :)",
      "createdAt": "2022-01-11T21:13:55Z",
      "issue": {
        "id": "I_kwDOFmaXcc5BY9a8",
        "title": "basic query results in infinite loop (issue with pg_graphql)",
        "url": "https://github.com/gqty-dev/gqty/issues/520"
      },
      "repository": {
        "nameWithOwner": "gqty-dev/gqty"
      }
    },
    "IC_kwDOCP54nM48VOYU": {
      "id": "IC_kwDOCP54nM48VOYU",
      "body": "No, I did not. One day I may look deeper, but not soon",
      "createdAt": "2022-01-13T14:39:31Z",
      "issue": {
        "id": "I_kwDOCP54nM4-ZZSd",
        "title": "Debug Console does not emit values",
        "url": "https://github.com/hackwaly/ocamlearlybird/issues/39"
      },
      "repository": {
        "nameWithOwner": "hackwaly/ocamlearlybird"
      }
    },
    "IC_kwDOFmaXcc48W6Vg": {
      "id": "IC_kwDOFmaXcc48W6Vg",
      "body": "@PabloSzx super interesting, thank you for discovering and reporting that. I was right there and surprised I didn’t pick that up when looking at the other thread. Much appreciated ",
      "createdAt": "2022-01-14T00:25:41Z",
      "issue": {
        "id": "I_kwDOFmaXcc5BY9a8",
        "title": "basic query results in infinite loop (issue with pg_graphql)",
        "url": "https://github.com/gqty-dev/gqty/issues/520"
      },
      "repository": {
        "nameWithOwner": "gqty-dev/gqty"
      }
    },
    "IC_kwDOBfbSFM48aory": {
      "id": "IC_kwDOBfbSFM48aory",
      "body": "Surely I considered this at the time, but I cannot recall why I found it unsatisfactory. Until I can answer this question, I will close and assume nxignore as adequate ",
      "createdAt": "2022-01-15T05:21:22Z",
      "issue": {
        "id": "I_kwDOBfbSFM5BEYoB",
        "title": "RFC: Dangerously opt-out of edge in dependency graph",
        "url": "https://github.com/nrwl/nx/issues/8343"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDOF28jXM48bDar": {
      "id": "IC_kwDOF28jXM48bDar",
      "body": "Hey @olirice, as always, thanks for the support! Unfortunately, the bug persists, even after pulling latest with your patches from yesterday. Nonetheless, the reproduction is super easy. \r\n\r\n- on master@latest, run docker compose\r\n- open up graphiql\r\n- send `query{allAccounts0:allAccounts{__typename edges{__typename node{__typename id}}}}`\r\n\r\nobserve the alias not respected.\r\n\r\ni did not that latest has some tests, but something must be intrinsically different about the above query's alias usage. I can alias `edges` without a problem--it seems that root may be suspicious?",
      "createdAt": "2022-01-15T17:52:29Z",
      "issue": {
        "id": "I_kwDOF28jXM5BuBDP",
        "title": "Support for Field Alias (part of GraphQL Specification)",
        "url": "https://github.com/supabase/pg_graphql/issues/40"
      },
      "repository": {
        "nameWithOwner": "supabase/pg_graphql"
      }
    },
    "IC_kwDOA1qhNs48bKZO": {
      "id": "IC_kwDOA1qhNs48bKZO",
      "body": "i posit that this actually correct behavior.\r\n\r\n- middlewares call `next`\r\n- handlers terminate\r\n\r\nperhaps a `terminate: true` option drops `next`, but to not call next dangerously assumes some other middleware are not interested in continuing to forward the response down the pipe. unlikely, but feasible.\r\n\r\nto not call next means it's not a middleware\r\n",
      "createdAt": "2022-01-15T21:00:45Z",
      "issue": {
        "id": "PR_kwDOA1qhNs4tlPEQ",
        "title": "Fix koa middleware going to next middleware",
        "url": "https://github.com/graphile/crystal/pull/1548"
      },
      "repository": {
        "nameWithOwner": "graphile/crystal"
      }
    },
    "IC_kwDOF28jXM48bLpW": {
      "id": "IC_kwDOF28jXM48bLpW",
      "body": "Yep. My bad. I always prune the containers, forget to rebuild the _image_!. Thx",
      "createdAt": "2022-01-15T21:42:56Z",
      "issue": {
        "id": "I_kwDOF28jXM5BuBDP",
        "title": "Support for Field Alias (part of GraphQL Specification)",
        "url": "https://github.com/supabase/pg_graphql/issues/40"
      },
      "repository": {
        "nameWithOwner": "supabase/pg_graphql"
      }
    },
    "IC_kwDOGKvm4848bZlS": {
      "id": "IC_kwDOGKvm4848bZlS",
      "body": "Looking through the [24->25 diff](https://github.com/vercel/turborepo/compare/9c0bb5651df7c352919078e320653b6e419209a8...1751deb5c0f1152c2267078ba24f65ebb43de56b), I don't see anything obvious. There is some pnpm specific logic changes, but those seem around `dlx` for installation, which is not correlated with this failure mode.\r\n\r\nConfirmed, downgrade to 24 restores expected behavior.\r\n",
      "createdAt": "2022-01-16T05:46:17Z",
      "issue": {
        "id": "I_kwDOGKvm485BmiZy",
        "title": "turbo@1.0.25 doesn't detect any packages",
        "url": "https://github.com/vercel/turbo/issues/549"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDODW7AC849G5hw": {
      "id": "IC_kwDODW7AC849G5hw",
      "body": "```\r\nocamllsp --version\r\n1.9.1-67-g0817d468\r\n```\r\n\r\nIt now seems to get annotations robustly between changes, they're just incorrect. that is,\r\n\r\n- `dune build`, compiles ok 👍 \r\n- lsp annotations: `Unbound value Fishies.show ocamllsp`\r\n\r\nplatform is configured to use the same switch from which `dune build` is executed (running on a box with just a 4.12.1 switch)",
      "createdAt": "2022-01-30T19:57:59Z",
      "issue": {
        "id": "I_kwDODW7AC85AO9rV",
        "title": "bug: LSP highlight annotations fail on edit",
        "url": "https://github.com/ocamllabs/vscode-ocaml-platform/issues/797"
      },
      "repository": {
        "nameWithOwner": "ocamllabs/vscode-ocaml-platform"
      }
    },
    "IC_kwDOEw276c49G8sa": {
      "id": "IC_kwDOEw276c49G8sa",
      "body": "Thank you :)",
      "createdAt": "2022-01-30T21:09:00Z",
      "issue": {
        "id": "I_kwDOEw276c5ArjeM",
        "title": "incorrect request for adding with-test annotation",
        "url": "https://github.com/ocurrent/opam-dune-lint/issues/42"
      },
      "repository": {
        "nameWithOwner": "ocurrent/opam-dune-lint"
      }
    },
    "IC_kwDODYjdCc49SCaP": {
      "id": "IC_kwDODYjdCc49SCaP",
      "body": "wow, incredible! thx all! shout out to @tatchi , looked like a non-trivially sized PR!",
      "createdAt": "2022-02-02T16:48:15Z",
      "issue": {
        "id": "I_kwDODYjdCc4-ZUu7",
        "title": "Feature Request: More folding!",
        "url": "https://github.com/ocaml/ocaml-lsp/issues/547"
      },
      "repository": {
        "nameWithOwner": "ocaml/ocaml-lsp"
      }
    },
    "IC_kwDODW7AC849b4vw": {
      "id": "IC_kwDODW7AC849b4vw",
      "body": "On next visit, I will try and create a more MVP setup. I'm in OCaml so infrequent ATM that i'm not motivated at the moment to set it up, but I will certainly do so when I'm back in the rhythm! I can re-open at that point, or file a new issue",
      "createdAt": "2022-02-06T00:29:02Z",
      "issue": {
        "id": "I_kwDODW7AC85AO9rV",
        "title": "bug: LSP highlight annotations fail on edit",
        "url": "https://github.com/ocamllabs/vscode-ocaml-platform/issues/797"
      },
      "repository": {
        "nameWithOwner": "ocamllabs/vscode-ocaml-platform"
      }
    },
    "IC_kwDOBfbSFM49twut": {
      "id": "IC_kwDOBfbSFM49twut",
      "body": "@nilanjansiromani, can you clarify? In the snippet provided, i don't see how libsdir interoperates with the webpackConfig?",
      "createdAt": "2022-02-10T19:40:11Z",
      "issue": {
        "id": "I_kwDOBfbSFM5DYsSX",
        "title": "Not setting 'workspaceLayout' breaks webpack config on @nrwl/next v 13.8.0",
        "url": "https://github.com/nrwl/nx/issues/8924"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDOAn8RLM4-Ckri": {
      "id": "IC_kwDOAn8RLM4-Ckri",
      "body": "For the Javascript Debug Terminal, I'm not sure which `attach` configuration to plop `trace` into. Any advice--I'd like to do some profiling as well :)",
      "createdAt": "2022-02-15T22:29:11Z",
      "issue": {
        "id": "I_kwDOAn8RLM5DfuDE",
        "title": "Since latest update I'm getting \"It's taking a while to configure your breakpoints.\" message",
        "url": "https://github.com/microsoft/vscode/issues/142830"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "IC_kwDOF28jXM4-L3x3": {
      "id": "IC_kwDOF28jXM4-L3x3",
      "body": "wowowow!",
      "createdAt": "2022-02-17T18:51:10Z",
      "issue": {
        "id": "I_kwDOF28jXM5BimPD",
        "title": "RFC: add mutations",
        "url": "https://github.com/supabase/pg_graphql/issues/37"
      },
      "repository": {
        "nameWithOwner": "supabase/pg_graphql"
      }
    },
    "IC_kwDOADgiC84-MvFP": {
      "id": "IC_kwDOADgiC84-MvFP",
      "body": "Thanks @vankop , I will try evaluating this module shortly!",
      "createdAt": "2022-02-17T22:11:57Z",
      "issue": {
        "id": "I_kwDOADgiC85D6mg2",
        "title": "RFC: Add stat reporting for tree-shaken modules",
        "url": "https://github.com/webpack/webpack/issues/15400"
      },
      "repository": {
        "nameWithOwner": "webpack/webpack"
      }
    },
    "IC_kwDOADgiC84-Mzpu": {
      "id": "IC_kwDOADgiC84-Mzpu",
      "body": "Hey @vankop, thx again. In retrospect, I'm already _declaring_ my modules as effect free--getting that added to the stat isn't exactly what I'm after.\r\n\r\nI seek to find which modules were shaken.\r\n\r\nI have high confidence that my thousands of monorepo modules are all sideEffect free, which is why I mark them as such using the `module.rules.[...]` discussed above. By marking them explicitly as effectFree, my codebase will be transformed such that some modules will be shaken.\r\n\r\nI need to observe which modules are shaken, so I can apply a manual audit of them and know with confidence that the `sideEffects: false` declaration was correct.\r\n\r\nIs there an API to _observe_ when something is shaken? Can I tap into a shake event?",
      "createdAt": "2022-02-17T22:28:29Z",
      "issue": {
        "id": "I_kwDOADgiC85D6mg2",
        "title": "RFC: Add stat reporting for tree-shaken modules",
        "url": "https://github.com/webpack/webpack/issues/15400"
      },
      "repository": {
        "nameWithOwner": "webpack/webpack"
      }
    },
    "IC_kwDOADgiC84-R8A6": {
      "id": "IC_kwDOADgiC84-R8A6",
      "body": "Thanks @vankop.\r\n\r\n- ya, the perf remark makes sense\r\n- statoscope--already use it!\r\n\r\nNonetheless, the compiler is doing great work (skipping content), and even with the above--I don't have a solid way to _see_ the content that was dropped, which is important for asserting on the safety of my migration/optimization.\r\n\r\nI've been trying to study the source, and I'm thinking that [the FlagDependencyUsagePlugin](https://github.com/webpack/webpack/blob/dfdc8b133d3d49371251e29efeefb9d31b982c9e/lib/FlagDependencyUsagePlugin.js#L158) may be where dependencies are introspected, identified as unused, then simply _not added_ into the dep graph?  It seems like this very return may implicitly be where tree-shaking occurs?",
      "createdAt": "2022-02-18T17:34:49Z",
      "issue": {
        "id": "I_kwDOADgiC85D6mg2",
        "title": "RFC: Add stat reporting for tree-shaken modules",
        "url": "https://github.com/webpack/webpack/issues/15400"
      },
      "repository": {
        "nameWithOwner": "webpack/webpack"
      }
    },
    "IC_kwDOBHtabs4-bJcI": {
      "id": "IC_kwDOBHtabs4-bJcI",
      "body": "What i'm after is specifically:\r\n\r\nhttps://github.com/webpack-contrib/webpack-bundle-analyzer/tree/e5b617e44df299e7ad4f7dc1bb1cac41e204648c#size-definitions\r\n\r\nIt looks like it's showing `stat` | `gzip`, but it would be awesome to show `parsed`!",
      "createdAt": "2022-02-21T23:50:49Z",
      "issue": {
        "id": "I_kwDOBHtabs5D1VUX",
        "title": "RFC: Clarify numeric values as they relate to webpack compilation",
        "url": "https://github.com/statoscope/statoscope/issues/155"
      },
      "repository": {
        "nameWithOwner": "statoscope/statoscope"
      }
    },
    "IC_kwDOAn8RLM4-eh-X": {
      "id": "IC_kwDOAn8RLM4-eh-X",
      "body": "> Are the size of your workspaces very large?\r\n\r\n**Very**. We are in a monorepo\r\n\r\n> do you hit this issue on smaller, trivial repos\r\n\r\nNo",
      "createdAt": "2022-02-22T20:37:05Z",
      "issue": {
        "id": "I_kwDOAn8RLM5DfuDE",
        "title": "Since latest update I'm getting \"It's taking a while to configure your breakpoints.\" message",
        "url": "https://github.com/microsoft/vscode/issues/142830"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "IC_kwDOAn8RLM4-ekRo": {
      "id": "IC_kwDOAn8RLM4-ekRo",
      "body": "We used to explicitly use the legacy debugger, as it was plenty performant in our large repository. VSCode forced upgraded us to use the new debugger, which is more-or-less unusable due to this issue, and forced our users to use `chrome` debugger. VSCode debugger is certainly preferred--users don't need to leave the editor 😄 . Our project uses `ts-node` for the scripts relevant for debugging, so `outFiles` unfortunately is not an option for us--albeit we did entertain the message.",
      "createdAt": "2022-02-22T20:50:48Z",
      "issue": {
        "id": "I_kwDOAn8RLM5DfuDE",
        "title": "Since latest update I'm getting \"It's taking a while to configure your breakpoints.\" message",
        "url": "https://github.com/microsoft/vscode/issues/142830"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode"
      }
    },
    "IC_kwDOAocbZM4-jqGP": {
      "id": "IC_kwDOAocbZM4-jqGP",
      "body": "Hi @tomMoulard , thank you. I did not realize I was reading old docs. I suppose i assumed that all 2.x docs were the same :), thus thought it was a legit bug.\r\n\r\nThanks for the tips and link.",
      "createdAt": "2022-02-24T06:26:03Z",
      "issue": {
        "id": "I_kwDOAocbZM5EZfpv",
        "title": "Docs suggest middleware config, but yield field not found, node: accesscontrolalloworigin",
        "url": "https://github.com/traefik/traefik/issues/8796"
      },
      "repository": {
        "nameWithOwner": "traefik/traefik"
      }
    },
    "IC_kwDOADHRAs4-mVD7": {
      "id": "IC_kwDOADHRAs4-mVD7",
      "body": "looks to be that core wants `en` & `es`, not the locales 🤔 ",
      "createdAt": "2022-02-24T20:28:43Z",
      "issue": {
        "id": "I_kwDOADHRAs5EhuL8",
        "title": "bug: incorrect locales used in in generated date functions",
        "url": "https://github.com/messageformat/messageformat/issues/359"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDOADHRAs4-mZNv": {
      "id": "IC_kwDOADHRAs4-mZNv",
      "body": "Thanks for the reply @eemeli :)\r\n\r\n> This works like it should\r\n\r\nWe actually tested this case, and believe it to not work per expectation. If you use my provided demonstration and replace `'*'`  with `[en-US, es-MX]` and use _date skeletons_, you can see the unexpected output continue.  @dpchamps found that because `es-MX` is not in the `plurals` language pack, core uses the `en` defaultLocale fallback.\r\n\r\nWe have the case which we want to support, using different translations for the same lang, but different locales:\r\n\r\n`compileModule(mf, { 'es-MX': { foo: /* ... */ }, 'es-ES': { foo: /* ... */ })`, which is why we used the browser-style locale format, as opposed to the `2` or `3` char language code.\r\n\r\n@dpchamps has a patch he'll propose to you. Maybe if you want to halt supporting us here, we can continue the conversation in the inbound pull request (landing shortly), that would be cool 😎 .\r\n\r\n",
      "createdAt": "2022-02-24T20:51:15Z",
      "issue": {
        "id": "I_kwDOADHRAs5EhuL8",
        "title": "bug: incorrect locales used in in generated date functions",
        "url": "https://github.com/messageformat/messageformat/issues/359"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDOBzjle84-nmmS": {
      "id": "IC_kwDOBzjle84-nmmS",
      "body": "Hey @vio , thx for the support! I’ll see if I can grab a stat soon!",
      "createdAt": "2022-02-25T06:37:28Z",
      "issue": {
        "id": "I_kwDOBzjle85EUdOA",
        "title": "webpage performance renders it unusable for large bundle",
        "url": "https://github.com/relative-ci/bundle-stats/issues/2072"
      },
      "repository": {
        "nameWithOwner": "relative-ci/bundle-stats"
      }
    },
    "IC_kwDOAeugBs4-uLm_": {
      "id": "IC_kwDOAeugBs4-uLm_",
      "body": "Will you get the same issue for express? Express types extend the base node types. In the ref’d issue, I observed ClientRequest, not IncomingMessage. Nextjs also uses the basic node primitives—the next issue is disjoint, but related.  I’m willing to attempt a patch with verification of compat between server libs if you’re open to reviewing it",
      "createdAt": "2022-02-26T16:42:09Z",
      "issue": {
        "id": "I_kwDOAeugBs5EmLKS",
        "title": "Handler types are incorrectly coupled to express.js",
        "url": "https://github.com/chimurai/http-proxy-middleware/issues/719"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOAeugBs4-wdxs": {
      "id": "IC_kwDOAeugBs4-wdxs",
      "body": "#721 does this properly. this PR should be closed. this is an abuse of `any`, respectfully",
      "createdAt": "2022-02-27T01:11:01Z",
      "issue": {
        "id": "PR_kwDOAeugBs4wHtnj",
        "title": "Expose HTTP Proxy middleware, so it can be used outside express",
        "url": "https://github.com/chimurai/http-proxy-middleware/pull/687"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOAeugBs4-weE9": {
      "id": "IC_kwDOAeugBs4-weE9",
      "body": "#721 uses the `RequestMiddleware` type, which is callable, and is tested to be (and TS checked)",
      "createdAt": "2022-02-27T01:12:25Z",
      "issue": {
        "id": "I_kwDOAeugBs5EGeO1",
        "title": "TypeScript regression in 2.0.3",
        "url": "https://github.com/chimurai/http-proxy-middleware/issues/713"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOAeugBs4-wewj": {
      "id": "IC_kwDOAeugBs4-wewj",
      "body": "#721 converts:\r\n\r\n```ts\r\n  proxyRes: http.IncomingMessage,\r\n  req: express.Request,\r\n```\r\n\r\nto\r\n\r\n```ts\r\n  proxyRes: http.IncomingMessage,\r\n  req: http.IncomingMessage,\r\n```\r\n\r\nwhich I think satisfies your use case?",
      "createdAt": "2022-02-27T01:15:22Z",
      "issue": {
        "id": "I_kwDOAeugBs5DidZO",
        "title": "responseInterceptor uses more constrained types than onProxyRes provides",
        "url": "https://github.com/chimurai/http-proxy-middleware/issues/708"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOAeugBs4-wf0R": {
      "id": "IC_kwDOAeugBs4-wf0R",
      "body": "I like the intent of this PR, but it does a few things that _aren't ideal_.\r\n\r\n- `@ts-ignore`s are a bit of a code smell, imho\r\n- `next`. it _is_ a middleware library, thus `next` is a key param in middleware impls. i think it's fine to keep it in and require it. if this m/w is used as a final handler, folks can always drop in a noop\r\n\r\ntake a peek @ #721. i'm viewing all of the TS complaint issues, ensuring that #721 appeases all complaints/use-cases, and at this point i _think it does_, with this one perhaps being the exception, due to the _feature request_ of dropping `next`",
      "createdAt": "2022-02-27T01:19:27Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NTA5NDk2ODM3",
        "title": "fix(types): make request & response generic and remove express dependency",
        "url": "https://github.com/chimurai/http-proxy-middleware/pull/478"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOAwORNs4_FQON": {
      "id": "IC_kwDOAwORNs4_FQON",
      "body": "Sorry mate, I didn’t. But, since upgrading many minor versions, I haven’t seen it. I’m not sure if it was the upgrade that addressed it or some other system issue. Good luck!",
      "createdAt": "2022-03-03T18:14:11Z",
      "issue": {
        "id": "MDU6SXNzdWU5NTcxMzM2ODA=",
        "title": "install yields ENOENT: no such file or directory, chmod",
        "url": "https://github.com/pnpm/pnpm/issues/3630"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOAeugBs4_FbvK": {
      "id": "IC_kwDOAeugBs4_FbvK",
      "body": "moved to #723 ",
      "createdAt": "2022-03-03T19:04:31Z",
      "issue": {
        "id": "PR_kwDOAeugBs4zlQs2",
        "title": "refactor: use base node http types",
        "url": "https://github.com/chimurai/http-proxy-middleware/pull/721"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOAeugBs4_h0Xn": {
      "id": "IC_kwDOAeugBs4_h0Xn",
      "body": "@chimurai , any issues, or g2g? saw tasks were cancelled, but tests were lookin good in CI",
      "createdAt": "2022-03-12T07:03:15Z",
      "issue": {
        "id": "PR_kwDOAeugBs4z6UdV",
        "title": "refactor: use base node http types",
        "url": "https://github.com/chimurai/http-proxy-middleware/pull/723"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOAeugBs4_iSP_": {
      "id": "IC_kwDOAeugBs4_iSP_",
      "body": "hmm, odd. locally, they all exit fine. i sent a patch w/ server.close. lets see if it takes. i thought you had cancelled them for other reasons 😆 ",
      "createdAt": "2022-03-12T19:50:41Z",
      "issue": {
        "id": "PR_kwDOAeugBs4z6UdV",
        "title": "refactor: use base node http types",
        "url": "https://github.com/chimurai/http-proxy-middleware/pull/723"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOBzjle84_io6K": {
      "id": "IC_kwDOBzjle84_io6K",
      "body": "Thx for the notification! I completely forgot to post a stat. I'll try it out and re-open as needed :)",
      "createdAt": "2022-03-13T07:39:27Z",
      "issue": {
        "id": "I_kwDOBzjle85EUdOA",
        "title": "webpage performance renders it unusable for large bundle",
        "url": "https://github.com/relative-ci/bundle-stats/issues/2072"
      },
      "repository": {
        "nameWithOwner": "relative-ci/bundle-stats"
      }
    },
    "IC_kwDOAOXXVc4_io-Z": {
      "id": "IC_kwDOAOXXVc4_io-Z",
      "body": ":rage1: 🧹 , stalebot",
      "createdAt": "2022-03-13T07:41:59Z",
      "issue": {
        "id": "I_kwDOAOXXVc5DdW88",
        "title": "[Feature]: Allow effects after test case block exit",
        "url": "https://github.com/jestjs/jest/issues/12367"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "IC_kwDOAAOeZ84_jHV7": {
      "id": "IC_kwDOAAOeZ84_jHV7",
      "body": "> If you are trying to solve a specific problem, we are happy to help. I suggest perhaps opening a new issue\r\n\r\nI am. I'd be happy to add greater details as requested. Please kindly ack that I did describe the problem in the `# Problem` + `# Context` sections. A new issue will look much like the current one, so to best serve you, please let me know where you'd like me expand on.\r\n\r\n> not the appropriate starting place for such a conversation.\r\n\r\nRespectfully, why not? I described a problem, then provided ideas & possible fixes to the problem. Your replies do not address the merits of the issue, which is fine. You owe me nothing (a random dude on the internet). I get that. But as a daily participant across OSS projects, GitHub issues are precisely the place for such conversation, in my experience.\r\n\r\n> Asking to remove a core feature thay would break the entire ecosystem is unfortunately \r\n\r\nI understand migrations can be tedious. Nonetheless, SemVer, versioning at large, hedge this.  I read this remark as \"we can't do breaking changes\", and wasn't clear if that's what you really meant, or ...something else perhaps.\r\n\r\n> to support http/2, meaning req.url would acrually belong to express proper anyway, and not http.IncomingMesaage :)\r\n\r\nI'll trust your judgement here, but perhaps you'd be willing to help me understand further? Using the below as context,\r\n\r\n```js\r\nconst http2 = require(\"http2\");\r\nconst fs = require(\"fs\");\r\nconst server = http2.createSecureServer({ /* snip */ });\r\nserver.on(\"request\", (req) => {\r\n  req.url; // Http2ServerRequest::url\r\n});\r\n```\r\n\r\nI'd _assume_ that a `req` reference may be still be captured and exposed by `express` in the future? For instance, ATM express gives us `(req, res, next) => ...`. unsure what the http2 intfc looks like, but is `req` now hidden?",
      "createdAt": "2022-03-13T19:48:51Z",
      "issue": {
        "id": "I_kwDOAAOeZ85FmO64",
        "title": "RFC: drop mutation of IncomingMessage owned fields, write only to new, augmented fields",
        "url": "https://github.com/expressjs/express/issues/4854"
      },
      "repository": {
        "nameWithOwner": "expressjs/express"
      }
    },
    "IC_kwDOAT9aAc4_orR1": {
      "id": "IC_kwDOAT9aAc4_orR1",
      "body": "> yarn tsc --init --extends @tsconfig/node14\r\n\r\ni skim read the above post, got super stoked, and was so disappointed that it wasn't real! 😉  \r\n\r\ni create a new TS project MAX 1x/day, MIN 3x/week. ya, the flag in question is frivolous at large, but clearly of value enough s.t. ...hey.. here we all are talkin' about it 😄 \r\n\r\nOn the `--extends` flag idea, I often wouldn't want to install `@tsconfig/nodeXY`, just use that as my base.\r\n\r\n```\r\n$ tsc --init --base npm:@tsconfig/node17\r\nDownloading npmjs.org/@tsconfig/node14@latest\r\n\r\nCreated a new tsconfig.json with:                                                                                       \r\n\r\n  target: es2020\r\n  module: commonjs\r\n  strict: true\r\n  esModuleInterop: true\r\n  skipLibCheck: false\r\n  strict: true\r\n\r\nYou can learn more at https://aka.ms/tsconfig.json\r\n```",
      "createdAt": "2022-03-15T06:49:34Z",
      "issue": {
        "id": "I_kwDOAT9aAc48W2GM",
        "title": "tsc --init-basic",
        "url": "https://github.com/microsoft/TypeScript/issues/46150"
      },
      "repository": {
        "nameWithOwner": "microsoft/TypeScript"
      }
    },
    "IC_kwDOAAOeZ84_sGM6": {
      "id": "IC_kwDOAAOeZ84_sGM6",
      "body": "Hey Doug, _great points_. I was maintaining existing functionality, but in retro I think the existing functionality is exactly as you describe--counter to express' design, when it doesn't need to be. Will take it up off yonder",
      "createdAt": "2022-03-15T22:21:56Z",
      "issue": {
        "id": "I_kwDOAAOeZ85FmO64",
        "title": "RFC: drop mutation of IncomingMessage owned fields, write only to new, augmented fields",
        "url": "https://github.com/expressjs/express/issues/4854"
      },
      "repository": {
        "nameWithOwner": "expressjs/express"
      }
    },
    "IC_kwDOAeugBs4_sHdF": {
      "id": "IC_kwDOAeugBs4_sHdF",
      "body": "Perhaps for a different issue, but directly related to this PR's refactors.\r\n\r\nI was speaking w/ dougwilson over in express, and he made a [pretty good callout here](https://github.com/expressjs/express/issues/4854#issuecomment-1066171160), that use of `originalUrl` is likely entirely incorrect in HPM.\r\n\r\nThat is, HPM shouldn't handle the express special pathname case(s) it handles now at all.\r\n\r\nCurrently, HPM+express does this:\r\n\r\n```js\r\napp.use('/api', proxy('http://localhost/')) \r\n// then, GET /api/foo => http://localhost/api/foo\r\n```\r\n\r\nbut it actually should be:\r\n\r\n```js\r\napp.use('/api', proxy('http://localhost/')) \r\n// then, GET /api/foo => http://localhost/foo\r\n```\r\n\r\nIf someone wants the original behavior, then they needed to register the HPM middleware earlier in their app middlewares, and _not_ in the nested app mount. If they wanted something _different_, then they'd need to use one of HPMs many awesome rewrite APIs.\r\n\r\nI think for `v3`, we ought take heed of this warning (from the express maintainer, no less 😄 ). It additionally simplifies a bunch of the tomfoolery i've done here!\r\n\r\nIf agreeable, I'd refactor everything accordingly, possibly in a downstream PR, or here.",
      "createdAt": "2022-03-15T22:30:21Z",
      "issue": {
        "id": "PR_kwDOAeugBs4z6UdV",
        "title": "refactor: use base node http types",
        "url": "https://github.com/chimurai/http-proxy-middleware/pull/723"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOAeugBs4_wkpt": {
      "id": "IC_kwDOAeugBs4_wkpt",
      "body": "I agree, there's lot's going on. It _is_ entirely focused on 1 & 4, sans the jest patch. I'm picking up that you have some _stuff_ in flight you wanna do w/ v3, that perhaps intersects with this work? That's fine. I'm probably at this point not going to send four PRs as you've suggested above. for me, i'd vote for one of the the following:\r\n\r\n1. Option 1: we close this PR, and it can just sit here as reference as you noodle thru your v3 plans. i feel like the types are in a good position as they stand here. additionally, as mentioned earlier, some of the thrash is really just to sustain backwards compat w/ expreess stuff and still have good typescript hygiene. with the deletion of that feature, a lot of that diff thrash disappears out of #723\r\n2. Option 2: accept this PR, and iterate on those other goals. i'm happy to even jump on a call to walk thru this changeset together. v3 is unreleased at this point, so perhaps there's little harm in taking a slightly above average sized changeset.\r\n\r\ni wont be upset if option #1 is the pick :)",
      "createdAt": "2022-03-16T22:24:43Z",
      "issue": {
        "id": "PR_kwDOAeugBs4z6UdV",
        "title": "refactor: use base node http types",
        "url": "https://github.com/chimurai/http-proxy-middleware/pull/723"
      },
      "repository": {
        "nameWithOwner": "chimurai/http-proxy-middleware"
      }
    },
    "IC_kwDOD-HfW85AD-2i": {
      "id": "IC_kwDOD-HfW85AD-2i",
      "body": "came to the issue tracker just for this! let us know if we can help",
      "createdAt": "2022-03-22T06:27:25Z",
      "issue": {
        "id": "I_kwDOD-HfW849fZOA",
        "title": "Ability to pin dependencies to latest version without knowing the specific version number",
        "url": "https://github.com/crewdevio/Trex/issues/109"
      },
      "repository": {
        "nameWithOwner": "crewdevio/Trex"
      }
    },
    "IC_kwDOBuX7GM5Aw5Zz": {
      "id": "IC_kwDOBuX7GM5Aw5Zz",
      "body": "Got it working in my fork.\r\n\r\nhttps://github.com/cdaringe/vscode-jest-runner/runs/5797929175?check_suite_focus=true\r\n\r\nPatches inbound. Pretty straightfoward",
      "createdAt": "2022-04-02T06:10:08Z",
      "issue": {
        "id": "I_kwDOBuX7GM5FJsCP",
        "title": "RFC: automated release cycle",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/242"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOBuX7GM5Aw57f": {
      "id": "IC_kwDOBuX7GM5Aw57f",
      "body": "moving convo to #246 ",
      "createdAt": "2022-04-02T06:19:44Z",
      "issue": {
        "id": "I_kwDOBuX7GM5FJsCP",
        "title": "RFC: automated release cycle",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/242"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOAOXXVc5BX37V": {
      "id": "IC_kwDOAOXXVc5BX37V",
      "body": "clear stalebot",
      "createdAt": "2022-04-12T14:06:59Z",
      "issue": {
        "id": "I_kwDOAOXXVc5DdW88",
        "title": "[Feature]: Allow effects after test case block exit",
        "url": "https://github.com/jestjs/jest/issues/12367"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "IC_kwDOBWeDFs5Bd6hm": {
      "id": "IC_kwDOBWeDFs5Bd6hm",
      "body": "I ended up writing a garbage little script to generate patches from my pnpm project's node_modules, but using `npm` and a temporary workspace to actually generate the patches.\r\n\r\nhttps://gist.github.com/cdaringe/66c7cd5f95f74766f9eb1e699fdd7399\r\n\r\nit's rough around the edges, but gets the job done. YMMV",
      "createdAt": "2022-04-13T18:33:16Z",
      "issue": {
        "id": "MDU6SXNzdWUyNzk2ODU1Njc=",
        "title": "Support pnpm package manager",
        "url": "https://github.com/ds300/patch-package/issues/35"
      },
      "repository": {
        "nameWithOwner": "ds300/patch-package"
      }
    },
    "IC_kwDOAjIRT85BfFjs": {
      "id": "IC_kwDOAjIRT85BfFjs",
      "body": "traversing thru the observablehq forums lead the thru the d3 docs and back to here. was looking for EMWA or movingAverage for 1d data, and found array-blur instead (which is actually more appropriate for my use case anyway :)). great work fil! are the outstanding blockers around whether or not such functionality is relevant/welcome here, or rather outstanding qualms with the interface? just curious :)",
      "createdAt": "2022-04-14T03:17:38Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NDM0MDY0MTcx",
        "title": "d3.blur",
        "url": "https://github.com/d3/d3-array/pull/151"
      },
      "repository": {
        "nameWithOwner": "d3/d3-array"
      }
    },
    "IC_kwDOAA8NzM5BnM11": {
      "id": "IC_kwDOAA8NzM5BnM11",
      "body": "The jest-worker is using the copying execArgv (`--require=/path/to/wrap.js`, `--experimental-loader=...`), which is breaking their worker. I modified the worker source to _ignore_ these options and it went fine :). perhaps these modules can apply a bit of defense to `noop` unless they are the entry processes 🤔 ",
      "createdAt": "2022-04-17T03:26:42Z",
      "issue": {
        "id": "I_kwDOAA8NzM5H5b4P",
        "title": "divergent behavior between `node <script>` and `node-dev <script>`",
        "url": "https://github.com/fgnass/node-dev/issues/288"
      },
      "repository": {
        "nameWithOwner": "fgnass/node-dev"
      }
    },
    "IC_kwDOAA8NzM5BnM7K": {
      "id": "IC_kwDOAA8NzM5BnM7K",
      "body": "`node-dev my-script`\r\n  - `node -r wrap.js --expiremental-loader=... my-script.js { env: { IS_NODE_DEV_ENTRY: 1 } }`\r\n```js\r\n/* wrap.js */ \r\nif (IS_NODE_DEV_ENTRY) { \r\n  delete process.env.IS_NODE_DEV_ENTRY;  // critically, flag this file as a noop in the future!\r\n  doTheNormalWrapStuff()\r\n} else { \r\n  /* noop */ \r\n}\r\n```",
      "createdAt": "2022-04-17T03:30:24Z",
      "issue": {
        "id": "I_kwDOAA8NzM5H5b4P",
        "title": "divergent behavior between `node <script>` and `node-dev <script>`",
        "url": "https://github.com/fgnass/node-dev/issues/288"
      },
      "repository": {
        "nameWithOwner": "fgnass/node-dev"
      }
    },
    "IC_kwDOAA8NzM5BnSSS": {
      "id": "IC_kwDOAA8NzM5BnSSS",
      "body": "hmm. that's odd. i'm getting the same result on two different machines.\r\n\r\n<img width=\"972\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1003261/163704093-46652008-eaa9-42dc-85b4-a2c97308eb64.png\">\r\n\r\nMaybe we could compare envs?\r\n\r\n`npx envinfo`:\r\n\r\n```\r\n  System:\r\n    OS: macOS 11.6\r\n    CPU: (8) arm64 Apple M1\r\n    Memory: 220.23 MB / 8.00 GB\r\n    Shell: 3.2.57 - /bin/bash\r\n  Binaries:\r\n    Node: 17.1.0 - /var/folders/p0/7478zjgn41scns83dcs60c7h0000gn/T/fnm_multishells/32026_1650178274430/bin/node\r\n    Yarn: 1.22.17 - /var/folders/p0/7478zjgn41scns83dcs60c7h0000gn/T/fnm_multishells/32026_1650178274430/bin/yarn\r\n    npm: 8.1.2 - /var/folders/p0/7478zjgn41scns83dcs60c7h0000gn/T/fnm_multishells/32026_1650178274430/bin/npm\r\n  Managers:\r\n    Cargo: 1.61.0 - ~/.cargo/bin/cargo\r\n    Homebrew: 3.4.3 - /opt/homebrew/bin/brew\r\n    pip3: 21.3.1 - /opt/homebrew/bin/pip3\r\n    RubyGems: 3.0.3 - /usr/bin/gem\r\n  Utilities:\r\n    Make: 3.81 - /usr/bin/make\r\n    GCC: 4.2.1 - /usr/bin/gcc\r\n    Git: 2.30.1 - /usr/bin/git\r\n    Clang: 13.0.0 - /usr/bin/clang\r\n    FFmpeg: 5.0 - /opt/homebrew/bin/ffmpeg\r\n  Servers:\r\n    Apache: 2.4.48 - /usr/sbin/apachectl\r\n  Virtualization:\r\n    Docker: 20.10.12 - /usr/local/bin/docker\r\n  IDEs:\r\n    Nano: 2.0.6 - /usr/bin/nano\r\n    VSCode: 1.66.1 - /opt/homebrew/bin/code\r\n    Vim: 8.2 - /usr/bin/vim\r\n    Xcode: /undefined - /usr/bin/xcodebuild\r\n  Languages:\r\n    Bash: 3.2.57 - /bin/bash\r\n    Perl: 5.30.2 - /usr/bin/perl\r\n    PHP: 7.3.29 - /usr/bin/php\r\n    Python: 2.7.16 - /usr/bin/python\r\n    Python3: 3.9.10 - /opt/homebrew/bin/python3\r\n    Ruby: 2.6.3 - /usr/bin/ruby\r\n    Rust: 1.61.0 - /Users/cdaringe/.cargo/bin/rustc\r\n  Databases:\r\n    SQLite: 3.32.3 - /usr/bin/sqlite3\r\n  Browsers:\r\n    Chrome: 100.0.4896.88\r\n    Firefox: 98.0.2\r\n    Safari: 14.1.2\r\n```",
      "createdAt": "2022-04-17T06:53:47Z",
      "issue": {
        "id": "I_kwDOAA8NzM5H5b4P",
        "title": "divergent behavior between `node <script>` and `node-dev <script>`",
        "url": "https://github.com/fgnass/node-dev/issues/288"
      },
      "repository": {
        "nameWithOwner": "fgnass/node-dev"
      }
    },
    "IC_kwDOBfbSFM5B6MiP": {
      "id": "IC_kwDOBfbSFM5B6MiP",
      "body": "Hey all. I consider this kind of a fatal, big-deal kind of bug. Are other people simply _not_ running concurrent executors from the same process?\r\n\r\nAnything I can do to help further?\r\n",
      "createdAt": "2022-04-21T21:23:44Z",
      "issue": {
        "id": "I_kwDOBfbSFM5Fkle9",
        "title": "runExecutor fails running js:serve concurrently",
        "url": "https://github.com/nrwl/nx/issues/9305"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDOHJ8HyM5DJoYA": {
      "id": "IC_kwDOHJ8HyM5DJoYA",
      "body": "<img width=\"47\" alt=\"Screen Shot 2022-05-13 at 5 59 38 PM\" src=\"https://user-images.githubusercontent.com/1003261/168404899-6ad65730-8be7-4cc7-85aa-68b35ad023b9.png\">\r\nHere's a photo i've uploaded :) Just dragged and dropped right into the text box!",
      "createdAt": "2022-05-14T00:59:54Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5JqQuB",
        "title": "Donate",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/13"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOHJ8HyM5DQnwb": {
      "id": "IC_kwDOHJ8HyM5DQnwb",
      "body": "> Under Chemical of the Month: Hydrogen Fluoride, the second half ...\r\n\r\nDone. Please confirm\r\n\r\n> We would like to have a second photo on the home page.\r\n\r\nPhoto added\r\n\r\n> We need a \"Donate\" button and Greg will have to share with you the linkage to our GoFundMe page.\r\n\r\nStill workin on this one",
      "createdAt": "2022-05-17T05:33:18Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5JqQuB",
        "title": "Donate",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/13"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOADgiC85Dk6B9": {
      "id": "IC_kwDOADgiC85Dk6B9",
      "body": "🐝",
      "createdAt": "2022-05-21T18:29:47Z",
      "issue": {
        "id": "I_kwDOADgiC85D6mg2",
        "title": "RFC: Add stat reporting for tree-shaken modules",
        "url": "https://github.com/webpack/webpack/issues/15400"
      },
      "repository": {
        "nameWithOwner": "webpack/webpack"
      }
    },
    "IC_kwDOHJ8HyM5DvKTs": {
      "id": "IC_kwDOHJ8HyM5DvKTs",
      "body": "> donate button\r\n\r\nstill pending for info from Greg\r\n\r\n> Chemical of the Month: Still an issue\r\n\r\nIt’s still not clear to me what is desired after reading your remark. I’ve done a few iterations here. at this point, a spec or visual mock up is probably worthwhile",
      "createdAt": "2022-05-24T21:11:25Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5JqQuB",
        "title": "Donate",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/13"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOBfbSFM5D0d5t": {
      "id": "IC_kwDOBfbSFM5D0d5t",
      "body": "huh, i was unaware that such an executor _already_ existed. will need to study to better understand _why_ `tsc -p libs/foo/bar/tsconfig.json` emits no type errors, but the nrwl/nx executor _does_. I'm assuming the run-typecheck executor does emit errors when errors are present--I haven't actually validated that yet :)\r\n\r\nIf that's the case, it seems that allowing arbitrary additional flags to flow into `compilerOptions` may be the best course of action, that way the executor doesn't need to indefinitely mirror 🪞  the full typescript API. Specifying one-off or arbitrary flags in the executor schema is not a good growth strategy for the `schema.json`. Alternatively, some pattern, maybe `--compilerOptions.foo=bar --compilerOptions.baz=zap` would make that extensibility story work better, where there's some convention for arbitrary flag forwarding.  adding incremental exposure to nx executor entrypoints seems to be a common theme when working w/ nx source.  would be nice to have an improved mechanism for proxying config thru the nx cli into their eventual tooling target.",
      "createdAt": "2022-05-25T20:41:08Z",
      "issue": {
        "id": "I_kwDOBfbSFM5KIrSB",
        "title": "Enable independent typecheck executor / execution step",
        "url": "https://github.com/nrwl/nx/issues/10413"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDOBfbSFM5D0g1Q": {
      "id": "IC_kwDOBfbSFM5D0g1Q",
      "body": "oh, thx! sorry, i only gave a very rapid scan and made some bad assumptions :)",
      "createdAt": "2022-05-25T20:55:00Z",
      "issue": {
        "id": "I_kwDOBfbSFM5KIrSB",
        "title": "Enable independent typecheck executor / execution step",
        "url": "https://github.com/nrwl/nx/issues/10413"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDOHJ8HyM5ECDuH": {
      "id": "IC_kwDOHJ8HyM5ECDuH",
      "body": "Update, still missing donation info. I have free time today if we can get it!",
      "createdAt": "2022-05-30T18:09:50Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5JqQuB",
        "title": "Donate",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/13"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOAYGxTM5EVd38": {
      "id": "IC_kwDOAYGxTM5EVd38",
      "body": "I'm not sure what the existing spec says when you don't consume the body, but it seems like there should be valuable timing state immediately on Response construction? Thus, a persistent reference to (what I assume is an underlying mutable) perf entry is probably equally acceptable vs needing a method to resolve. In other words, the instant a Response is created, perf entries are likely already existent. I assume that such entries shall be updated contingent on additional response behavior, such as reading the stream. I rarely think about the case where: \r\n\r\n```ts\r\nconst res = await fetch(...)\r\nawait doSlowWork()\r\nawait res.json()\r\n```\r\n\r\n...and how that may/may-not impact the perf entries API, such as this. gotta hit the spec :glasses: 📖 \r\n\r\nNonetheless, some link (direct ref, method to get immutable copy, whatever) seems warranted. Today I wrote a `server-timing` in parser in JS to chain to my fetch calls, as we do not have such a linkage natively.",
      "createdAt": "2022-06-04T00:33:44Z",
      "issue": {
        "id": "MDU6SXNzdWUyMDkzMDQ0MzY=",
        "title": "Expose a way to link a call to fetch to an individual PerformanceResourceTiming object ",
        "url": "https://github.com/w3c/resource-timing/issues/102"
      },
      "repository": {
        "nameWithOwner": "w3c/resource-timing"
      }
    },
    "IC_kwDOCXZcSc5Ek4Ep": {
      "id": "IC_kwDOCXZcSc5Ek4Ep",
      "body": "Looks like lint failed. Sorry I never setup the auto formatting. Mind\nrunning the local prettier?\n\nOn Wed, Jun 8, 2022 at 1:56 PM Michael Gagliardo ***@***.***>\nwrote:\n\n> @cdaringe <https://github.com/cdaringe> thanks for the plugin. I'm hoping\n> we can get this one in quick so we can move away from a forked version in\n> our usage. Thanks!\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cdaringe/postgraphile-upsert/pull/360#issuecomment-1150406395>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57PT736MUHK4DCHI47DVOECGDANCNFSM5YH3A47A>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n-- \nSent from Gmail Mobile\n",
      "createdAt": "2022-06-08T23:37:31Z",
      "issue": {
        "id": "PR_kwDOCXZcSc45WUcO",
        "title": "feat: skip table types that do not have primary key constraints",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/360"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5Ep5pO": {
      "id": "IC_kwDOCXZcSc5Ep5pO",
      "body": "ya, it should cut automatically. i'll add a CI check now",
      "createdAt": "2022-06-10T02:04:27Z",
      "issue": {
        "id": "PR_kwDOCXZcSc45W2hW",
        "title": "fix: run prettier",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/362"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOHJ8HyM5EucH-": {
      "id": "IC_kwDOHJ8HyM5EucH-",
      "body": "Donate button added:\r\n\r\n<img width=\"800\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1003261/173208826-29a72e3b-cd41-4b23-9296-7358c21d940b.png\">\r\n",
      "createdAt": "2022-06-12T00:04:24Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5JqQuB",
        "title": "Donate",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/13"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOHJ8HyM5EudKQ": {
      "id": "IC_kwDOHJ8HyM5EudKQ",
      "body": "Chemical of then month content simplified, per request",
      "createdAt": "2022-06-12T00:26:16Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5JqQuB",
        "title": "Donate",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/13"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOHJ8HyM5EudQM": {
      "id": "IC_kwDOHJ8HyM5EudQM",
      "body": "got it. site now has this content",
      "createdAt": "2022-06-12T00:28:13Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5J2ApM",
        "title": "Chemimcal of the month links",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOHJ8HyM5Eud4a": {
      "id": "IC_kwDOHJ8HyM5Eud4a",
      "body": "Live @ https://cdaringe.github.io/clean-air-for-all-now/newsletters",
      "createdAt": "2022-06-12T00:43:38Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5J8LNo",
        "title": "One more item for CAFA-now website",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/16"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOHJ8HyM5Eud71": {
      "id": "IC_kwDOHJ8HyM5Eud71",
      "body": "Moving the CoM questions to the CoM thread. closing as the donate button/link is done",
      "createdAt": "2022-06-12T00:45:05Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5JqQuB",
        "title": "Donate",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/13"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOHJ8HyM5Eud95": {
      "id": "IC_kwDOHJ8HyM5Eud95",
      "body": "Simplified format @ https://cdaringe.github.io/clean-air-for-all-now/chemical-of-the-month",
      "createdAt": "2022-06-12T00:45:49Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5J2ApM",
        "title": "Chemimcal of the month links",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOCXZcSc5E35j6": {
      "id": "IC_kwDOCXZcSc5E35j6",
      "body": "Thanks for the super clear write up, very helpful. Full agreement on your design considerations. Will review shortly",
      "createdAt": "2022-06-14T17:40:56Z",
      "issue": {
        "id": "PR_kwDOCXZcSc45pNbb",
        "title": "fix: Refactor to use constraint names for ON CONFLICT + other fixes",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/370"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5FHdUo": {
      "id": "IC_kwDOCXZcSc5FHdUo",
      "body": "Just writing to let you know, I haven't forgotten about this. It's prompted me to clone your branch, add some extra stuff. Will get it merged in (with your commits) or ask more questions soon. Sorry for the delay",
      "createdAt": "2022-06-18T23:42:34Z",
      "issue": {
        "id": "PR_kwDOCXZcSc45pNbb",
        "title": "fix: Refactor to use constraint names for ON CONFLICT + other fixes",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/370"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5FHp5B": {
      "id": "IC_kwDOCXZcSc5FHp5B",
      "body": "Merged your commits in in #374. added some more TS & an extra case. some tweaks were made. hopefully they work out for ya",
      "createdAt": "2022-06-19T07:04:01Z",
      "issue": {
        "id": "PR_kwDOCXZcSc45pNbb",
        "title": "fix: Refactor to use constraint names for ON CONFLICT + other fixes",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/370"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5FIOfk": {
      "id": "IC_kwDOCXZcSc5FIOfk",
      "body": "now that #370 is in, hopefully this is taken care of",
      "createdAt": "2022-06-19T17:56:46Z",
      "issue": {
        "id": "I_kwDOCXZcSc5LslJL",
        "title": "columns with value 0.0 are removed from ON CONFLICT column list",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/368"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOBe_BA85FX4Sq": {
      "id": "IC_kwDOBe_BA85FX4Sq",
      "body": "Usage of `module.hot` in elm-hot: https://github.com/klazuka/elm-hot/blob/master/resources/hmr.js#L19",
      "createdAt": "2022-06-23T03:36:19Z",
      "issue": {
        "id": "I_kwDOBe_BA85MZFdk",
        "title": "\"Uncaught ReferenceError: module is not defined\" from elm-transformer due to elm-hot webpack coupling",
        "url": "https://github.com/parcel-bundler/parcel/issues/8242"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "IC_kwDOBuX7GM5Fq9TH": {
      "id": "IC_kwDOBuX7GM5Fq9TH",
      "body": "Greetings. No worries. I’m probably not going to come back to this for minimally weeks.\r\n\r\nya, submission to marketplace is done, just needs the secret added in your settings as VSCE_PAT. See https://code.visualstudio.com/api/working-with-extensions/publishing-extension#get-a-personal-access-token",
      "createdAt": "2022-06-28T15:42:43Z",
      "issue": {
        "id": "PR_kwDOBuX7GM41hfLH",
        "title": "feat: automatically publish on trunk branch",
        "url": "https://github.com/firsttris/vscode-jest-runner/pull/246"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOATzjLM5Fr23_": {
      "id": "IC_kwDOATzjLM5Fr23_",
      "body": "This is a great suggestion! I was searching npm for a module that offered this functionality, and hoped it had taps or column vis toggling",
      "createdAt": "2022-06-28T19:16:26Z",
      "issue": {
        "id": "I_kwDOATzjLM5APAUZ",
        "title": "Feature request/usage question: toggle column visibility?",
        "url": "https://github.com/arjunmehta/multiview/issues/24"
      },
      "repository": {
        "nameWithOwner": "arjunmehta/multiview"
      }
    },
    "IC_kwDOCXZcSc5F41WJ": {
      "id": "IC_kwDOCXZcSc5F41WJ",
      "body": "how embarrassing! fixed, and i have added branch protection in `main`",
      "createdAt": "2022-07-01T16:40:44Z",
      "issue": {
        "id": "PR_kwDOCXZcSc45pNbb",
        "title": "fix: Refactor to use constraint names for ON CONFLICT + other fixes",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/370"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5F49G5": {
      "id": "IC_kwDOCXZcSc5F49G5",
      "body": "...the 3.x version has the good stuff specifically. the change to commitlint-circle added a bit of a hiccup in getting the latest bits released because i didn't realize a behavior it had in main, but we're set now",
      "createdAt": "2022-07-01T17:15:56Z",
      "issue": {
        "id": "PR_kwDOCXZcSc45pNbb",
        "title": "fix: Refactor to use constraint names for ON CONFLICT + other fixes",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/370"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOHJ8HyM5F6XYY": {
      "id": "IC_kwDOHJ8HyM5F6XYY",
      "body": "@dennisjomara , all links you posted above have now been fixed to point to pdfs you added.\r\n\r\n1. it's worth noting, there are still some dead links on the site. i was provided these links, so those are what i uploaded. if we need different links for those (mainly those going to the wayback machine), y'all will need to furnish replacement links or documents\r\n2. no word on credentials. i'll leave it to you to personally to get these to me",
      "createdAt": "2022-07-02T16:58:00Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5J2ApM",
        "title": "Chemimcal of the month links",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOGKvm485F-UJk": {
      "id": "IC_kwDOGKvm485F-UJk",
      "body": "Not a maintainer 👋 .  Can you elaborate on why is this unexpected behavior? In your example you explicitly passed the second pair. I’m unclear why the current behavior is undesirable. If the CLI dropped the second pair, couldn’t that be argued as confusing behavior? Is dropping your second pair an option?",
      "createdAt": "2022-07-04T15:57:50Z",
      "issue": {
        "id": "I_kwDOGKvm485NE1kX",
        "title": "Turbo is sending arg `--` (ignore-option) as first argument to script.",
        "url": "https://github.com/vercel/turbo/issues/1477"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOGKvm485F-nih": {
      "id": "IC_kwDOGKvm485F-nih",
      "body": "Sorry about that, my mobile phone rendered `turbo build test -- --my-script-arg=test` as `turbo build test -- --<LINE_BREAK>` giving me the false impression you had simply entered `-- --`. 😆 My bad.\r\n\r\nI whipped up two reproductions:\r\n\r\n- ❌ `yarn@3.x` reproduction: https://github.com/cdaringe/turborepo-1477-yarn-repro\r\n  - fails just as reported\r\n\r\n`yarn dlx turbo run foo --filter=ui -- --bar=baz`\r\n\r\nyields the reported failure mode:\r\n\r\n```js\r\n// foo.js\r\n// console.log(process.argv)\r\nui:foo: [\r\nui:foo:   '/Users/cdaringe/.fnm/node-versions/v18.0.0/installation/bin/node',\r\nui:foo:   '/Users/cdaringe/src/my-turborepo-yarn/packages/ui/foo.js',\r\nui:foo:   '--', # 👀\r\nui:foo:   '--bar=baz'\r\nui:foo: ]\r\n```\r\n\r\n- ✅  `npm` reproduction: https://github.com/cdaringe/turborepo-1477-reproduction, with single edit off of `npx create-turbo` [here](https://github.com/cdaringe/turborepo-1477-reproduction/commit/b9b94d5da1b1d1692c735a4d4bb8c35c84735fed)\r\n  -  works as expected: `npx turbo run foo --filter=ui -- --bar=baz`\r\n\r\n```js\r\n// foo.js\r\n// console.log(process.argv)\r\nui:foo: [\r\nui:foo:   '/Users/cdaringe/.fnm/node-versions/v18.0.0/installation/bin/node',\r\nui:foo:   '/Users/cdaringe/src/my-turborepo/packages/ui/foo.js',\r\nui:foo:   '--bar=baz'\r\nui:foo: ]\r\n```",
      "createdAt": "2022-07-04T18:04:18Z",
      "issue": {
        "id": "I_kwDOGKvm485NE1kX",
        "title": "Turbo is sending arg `--` (ignore-option) as first argument to script.",
        "url": "https://github.com/vercel/turbo/issues/1477"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOAOXXVc5GEzn5": {
      "id": "IC_kwDOAOXXVc5GEzn5",
      "body": "7 days? Come on stalebot.\r\n\r\n/reopen",
      "createdAt": "2022-07-06T01:20:03Z",
      "issue": {
        "id": "I_kwDOAOXXVc5JOOBU",
        "title": "[Bug]: Invalid engines of node@16.10",
        "url": "https://github.com/jestjs/jest/issues/12821"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "IC_kwDOAOXXVc5GE2yj": {
      "id": "IC_kwDOAOXXVc5GE2yj",
      "body": "go away stalebot",
      "createdAt": "2022-07-06T01:33:53Z",
      "issue": {
        "id": "I_kwDOAOXXVc5JOBXl",
        "title": "[Bug]: Memory Leak with --runInBand",
        "url": "https://github.com/jestjs/jest/issues/12820"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "IC_kwDOGKvm485GKX7o": {
      "id": "IC_kwDOGKvm485GKX7o",
      "body": "Small update, setup the dev env and traced handling of the `--` special handling to https://github.com/vercel/turborepo/pull/1432, which looks like we may need to emulate for some versions of yarn.",
      "createdAt": "2022-07-07T06:04:07Z",
      "issue": {
        "id": "I_kwDOGKvm485NE1kX",
        "title": "Turbo is sending arg `--` (ignore-option) as first argument to script.",
        "url": "https://github.com/vercel/turbo/issues/1477"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOGKvm485GVaow": {
      "id": "IC_kwDOGKvm485GVaow",
      "body": "hey @nathanhammond! ya, _tests_. i thought about this a bit more, and despite the simplicity of the current code change, I'm not thrilled with it. the ad-hoc conditionals seem effective, but not particularly elegant.\r\n\r\ni discovered that there's already a nice package-manager abstraction, and that it could be more discoverable/declarative if the separation args were embedded in each, respectively.\r\n\r\nso, that's what I'm trying now, over in #1507\r\n\r\n| pkgmgr | version-rang-to-apply-`--`-arg-separator |\r\n| --- | --- |\r\n| pnpm | `<7` |\r\n| yarn/berry | `<1` |\r\n| npm | `*` |\r\n\r\nover in #1507 i've modeled this, then and tested each package manager, before/at/after the version boundaries. i _think_ it's mo betta. lemme know your thoughts. if you agree, feel free to close this PR!",
      "createdAt": "2022-07-11T06:32:53Z",
      "issue": {
        "id": "PR_kwDOGKvm4846_sgA",
        "title": "fix(yarn): correct argSeparator for yarn >=1.0 invocations",
        "url": "https://github.com/vercel/turbo/pull/1493"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOAOXXVc5GZ9cp": {
      "id": "IC_kwDOAOXXVc5GZ9cp",
      "body": "proactive stalebot hedge",
      "createdAt": "2022-07-12T01:25:27Z",
      "issue": {
        "id": "I_kwDOAOXXVc5JOBXl",
        "title": "[Bug]: Memory Leak with --runInBand",
        "url": "https://github.com/jestjs/jest/issues/12820"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "IC_kwDOCaVDVc5GevEH": {
      "id": "IC_kwDOCaVDVc5GevEH",
      "body": "I’ll reopen if I find compelling new ideas :)",
      "createdAt": "2022-07-12T20:17:50Z",
      "issue": {
        "id": "I_kwDOCaVDVc4-meoH",
        "title": "RFC: support f(browser) => array-of-missing-features",
        "url": "https://github.com/JakeChampion/polyfill-library/issues/1115"
      },
      "repository": {
        "nameWithOwner": "JakeChampion/polyfill-library"
      }
    },
    "IC_kwDOGKvm485HNVHo": {
      "id": "IC_kwDOGKvm485HNVHo",
      "body": "closing in favor of #1507",
      "createdAt": "2022-07-25T21:51:44Z",
      "issue": {
        "id": "PR_kwDOGKvm4846_sgA",
        "title": "fix(yarn): correct argSeparator for yarn >=1.0 invocations",
        "url": "https://github.com/vercel/turbo/pull/1493"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOGKvm485HNVfE": {
      "id": "IC_kwDOGKvm485HNVfE",
      "body": "hey @nathanhammond, it's been a few weeks. were you able to take a peek yet?",
      "createdAt": "2022-07-25T21:53:20Z",
      "issue": {
        "id": "PR_kwDOGKvm4847K6g9",
        "title": "fix: refactor arg separator strategy",
        "url": "https://github.com/vercel/turbo/pull/1507"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOCXZcSc5HXVf0": {
      "id": "IC_kwDOCXZcSc5HXVf0",
      "body": "Can you please beef up the description of the pr? Looks like you got some good stuff in there, but I’m looking for a concise problem statement, motivating use cases, maybe a bit of analysis of why the status quo is an adequate",
      "createdAt": "2022-07-27T19:55:03Z",
      "issue": {
        "id": "PR_kwDOCXZcSc48MmY8",
        "title": "optionally ignore some column updates on conflict",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/402"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOAwORNs5HcX-u": {
      "id": "IC_kwDOAwORNs5HcX-u",
      "body": "I think the bug report may be worded incorrectly. It is correct that `exec` doesn't meddle with PWD. However, ~~pnpm used to resolve bin executables that in 7.x it seems to no longer~~ with the deprecation of `pnpx`, graceful resolving of parent bins is no longer easily acheivable.\r\n\r\nconsider the following repo layout:\r\n\r\n```\r\n/ #<root>\r\n/node_modules/.bin/sass\r\n/packages/foo\r\n```\r\n\r\nNow, try running `pnpm sass` from `<root>` & /packages/foo\r\n\r\n- `<root>`: ✅ \r\n- `/packages/foo`: ❌ \r\n  - `sass` cannot be resolved, because PATH was updated with `/packages/foo/node_modules/.bin`, not `<root>/node_modules/.bin`. thus the following error is omitted:\r\n\r\n```\r\n ERR_PNPM_RECURSIVE_EXEC_FIRST_FAIL  Command failed with ENOENT: sass --help\r\nspawn sass ENOENT\r\n```\r\n\r\nSo, counter to the bug report, I think the issue is really that .bin PATH resolution does not work per expectation. `npm` prefixes many .bin PATHS, but pnpm (used to?) and yarn only prefix the PWD/node_modules/.bin to PATH.\r\n\r\nIf you add a npm script to `packages/foo/package.json` of `{\"echo\": \"echo $PATH\"}`,\r\n\r\n- npm will show many additions to PATH to resolve node executables: `packages/foo/node_modules/.bin;packages/node_modules/.bin;node_modules/.bin;`,\r\n- ...the other pkg managers will have _only_ `packages/foo/node_modules/.bin`\r\n\r\nThus, I can no longer `pnpm <bin>` from any project. In our workspace, we have only a single set of dependencies at `<root>`--we do _not_ use per project dependencies. Thus this lack of ability to resolve from the root .bin is problematic.\r\n",
      "createdAt": "2022-07-28T20:52:47Z",
      "issue": {
        "id": "I_kwDOAwORNs5ONmbG",
        "title": "`pnpm exec` executes with the project root as the CWD even if run from a subdirectory",
        "url": "https://github.com/pnpm/pnpm/issues/5068"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOHRNu6M5HckIS": {
      "id": "IC_kwDOHRNu6M5HckIS",
      "body": "i see, i just saw that you use git submodules from the plasmo repo",
      "createdAt": "2022-07-28T21:55:32Z",
      "issue": {
        "id": "I_kwDOHRNu6M5OxQrz",
        "title": "[Q/A] How to run examples",
        "url": "https://github.com/PlasmoHQ/plasmo/issues/122"
      },
      "repository": {
        "nameWithOwner": "PlasmoHQ/plasmo"
      }
    },
    "IC_kwDOHRNu6M5Hcp3P": {
      "id": "IC_kwDOHRNu6M5Hcp3P",
      "body": "looks like `getIndexList` may be borked for background scripts. dumping that to JSON:\r\n\r\n```json\r\n  \"backgroundIndexList\": [\r\n    \"/Users/c0d01a5/src/plasmo/examples/with-background.chromebackground\",\r\n    \"/Users/c0d01a5/src/plasmo/examples/with-background/index.chromebackground\",\r\n    \"/Users/c0d01a5/src/plasmo/examples/with-backgroundbackground\",\r\n    \"/Users/c0d01a5/src/plasmo/examples/with-background/indexbackground\"\r\n  ]\r\n```\r\n\r\nnon of those have the form `background.ts`",
      "createdAt": "2022-07-28T22:33:39Z",
      "issue": {
        "id": "I_kwDOHRNu6M5OxVd9",
        "title": "[BUG] background scripts not processed",
        "url": "https://github.com/PlasmoHQ/plasmo/issues/123"
      },
      "repository": {
        "nameWithOwner": "PlasmoHQ/plasmo"
      }
    },
    "IC_kwDOD-z6ic5HuNSP": {
      "id": "IC_kwDOD-z6ic5HuNSP",
      "body": "/merge",
      "createdAt": "2022-08-02T23:03:33Z",
      "issue": {
        "id": "I_kwDOD-z6ic5PEJUc",
        "title": "froinars",
        "url": "https://github.com/cdaringe/probot-buddy-testing/issues/13"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuOg1": {
      "id": "IC_kwDOD-z6ic5HuOg1",
      "body": "/merge",
      "createdAt": "2022-08-02T23:12:18Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuPBR": {
      "id": "IC_kwDOD-z6ic5HuPBR",
      "body": "/merge\r\n",
      "createdAt": "2022-08-02T23:16:18Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuP46": {
      "id": "IC_kwDOD-z6ic5HuP46",
      "body": "/merge",
      "createdAt": "2022-08-02T23:18:46Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuQLL": {
      "id": "IC_kwDOD-z6ic5HuQLL",
      "body": "/merge",
      "createdAt": "2022-08-02T23:19:12Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuQUe": {
      "id": "IC_kwDOD-z6ic5HuQUe",
      "body": "/merge",
      "createdAt": "2022-08-02T23:19:24Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuRyv": {
      "id": "IC_kwDOD-z6ic5HuRyv",
      "body": "/merge",
      "createdAt": "2022-08-02T23:23:03Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuSQb": {
      "id": "IC_kwDOD-z6ic5HuSQb",
      "body": "/merge",
      "createdAt": "2022-08-02T23:26:07Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuSaz": {
      "id": "IC_kwDOD-z6ic5HuSaz",
      "body": "/merge",
      "createdAt": "2022-08-02T23:27:30Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuTMP": {
      "id": "IC_kwDOD-z6ic5HuTMP",
      "body": "/merge",
      "createdAt": "2022-08-02T23:33:59Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuT5E": {
      "id": "IC_kwDOD-z6ic5HuT5E",
      "body": "/merge",
      "createdAt": "2022-08-02T23:39:26Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOD-z6ic5HuUBc": {
      "id": "IC_kwDOD-z6ic5HuUBc",
      "body": "/merge",
      "createdAt": "2022-08-02T23:40:29Z",
      "issue": {
        "id": "PR_kwDOD-z6ic48igD3",
        "title": "Update weee",
        "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      }
    },
    "IC_kwDOCXZcSc5IF7BK": {
      "id": "IC_kwDOCXZcSc5IF7BK",
      "body": "You can see it works in typescript from the tests: https://github.com/cdaringe/postgraphile-upsert/blob/main/src/__tests__/main.test.ts#L5\r\n\r\nI’m sorry, but general TS support is for stack overflow",
      "createdAt": "2022-08-09T15:11:30Z",
      "issue": {
        "id": "I_kwDOCXZcSc5PeVO8",
        "title": "error: postgraphile-upsert is not assignable to type 'Plugin'",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/411"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOGKvm485IeluF": {
      "id": "IC_kwDOGKvm485IeluF",
      "body": "I had two functional PRs for this issue, without feedback",
      "createdAt": "2022-08-15T23:24:49Z",
      "issue": {
        "id": "I_kwDOGKvm485NE1kX",
        "title": "Turbo is sending arg `--` (ignore-option) as first argument to script.",
        "url": "https://github.com/vercel/turbo/issues/1477"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOBuX7GM5IfSOB": {
      "id": "IC_kwDOBuX7GM5IfSOB",
      "body": "Hey @firsttris , ya im on board to help out\r\n\r\nhope you’re recovering hastily. godspeed!",
      "createdAt": "2022-08-16T05:22:27Z",
      "issue": {
        "id": "PR_kwDOBuX7GM41hfLH",
        "title": "feat: automatically publish on trunk branch",
        "url": "https://github.com/firsttris/vscode-jest-runner/pull/246"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOHYqig85IiHwm": {
      "id": "IC_kwDOHYqig85IiHwm",
      "body": "sqlx is in, dawg",
      "createdAt": "2022-08-16T16:56:58Z",
      "issue": {
        "id": "I_kwDOHYqig85LLX64",
        "title": "better sql.",
        "url": "https://github.com/cdaringe/witwiki/issues/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/witwiki"
      }
    },
    "IC_kwDOHYqig85IiIAa": {
      "id": "IC_kwDOHYqig85IiIAa",
      "body": "did it! it's pretty rad too!",
      "createdAt": "2022-08-16T16:57:54Z",
      "issue": {
        "id": "I_kwDOHYqig85LJAAt",
        "title": "add seed data in dev-mode",
        "url": "https://github.com/cdaringe/witwiki/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/witwiki"
      }
    },
    "IC_kwDOHYqig85IiNoy": {
      "id": "IC_kwDOHYqig85IiNoy",
      "body": "some sort of password reset token situation required",
      "createdAt": "2022-08-16T17:19:40Z",
      "issue": {
        "id": "I_kwDOHYqig85P6Maq",
        "title": "password reset",
        "url": "https://github.com/cdaringe/witwiki/issues/19"
      },
      "repository": {
        "nameWithOwner": "cdaringe/witwiki"
      }
    },
    "IC_kwDOHJ8HyM5It4X6": {
      "id": "IC_kwDOHJ8HyM5It4X6",
      "body": "Processed!",
      "createdAt": "2022-08-18T21:32:50Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5J2ApM",
        "title": "Chemimcal of the month links",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOHJ8HyM5It4m1": {
      "id": "IC_kwDOHJ8HyM5It4m1",
      "body": "Let's take the next batch of requests to a new issue, https://github.com/cdaringe/clean-air-for-all-now/issues",
      "createdAt": "2022-08-18T21:33:56Z",
      "issue": {
        "id": "I_kwDOHJ8HyM5J2ApM",
        "title": "Chemimcal of the month links",
        "url": "https://github.com/cdaringe/clean-air-for-all-now/issues/14"
      },
      "repository": {
        "nameWithOwner": "cdaringe/clean-air-for-all-now"
      }
    },
    "IC_kwDOEM4sLc5IyZWK": {
      "id": "IC_kwDOEM4sLc5IyZWK",
      "body": "hey @fhammerschmidt , sure thing. I may be off the mark about resolution, but nonetheless, it doesn't work in my project.\r\n\r\n### repro\r\n\r\n1. clone it: clone https://github.com/cdaringe/wit-ml\r\n1. use the git SHA from this moment in time: `cd wit-ml && git checkout c32a238`\r\n1. `pnpm install && pnpm run build`\r\n1. pop open `src/App.res`\r\n1. click the \"Open compiled JS\" button\r\n1. Observe \"No compiled file found\" notification",
      "createdAt": "2022-08-19T23:36:58Z",
      "issue": {
        "id": "I_kwDOEM4sLc5QHHnB",
        "title": "Bug: \"Open compiled\" assumes \"in-source\": true.",
        "url": "https://github.com/rescript-lang/rescript-vscode/issues/555"
      },
      "repository": {
        "nameWithOwner": "rescript-lang/rescript-vscode"
      }
    },
    "IC_kwDOFZKmbc5IzjMr": {
      "id": "IC_kwDOFZKmbc5IzjMr",
      "body": "I was able to do this mapping within my own domain.\r\n\r\n```res\r\nexternal unsafeToJsExn: exn => Js.Exn.t = \"%identity\"\r\n\r\ntype jsexn_or_err<'t> =\r\n  | JsError(Js.Exn.t)\r\n  | Err('t)\r\n\r\ntype rec queryResultR<'queryError, 'queryData> = {\r\n  status: ReactQuery_Types.queryStatus,\r\n  // ..snip\r\n  error: option<jsexn_or_err<'queryError>>,\r\n}\r\n\r\n// useQuery wrapper for doing all Promise modeling with Result types\r\nlet useQueryR = (~queryFn) => {\r\n  let (err, setErr) = React.useState(_ => None)\r\n  let queryFnWithResultHandling = React.useCallback1(opts => {\r\n    queryFn(opts)\r\n    ->Promise.tapError(e => setErr(_ => Some(Err(e))))\r\n    ->Promise.Js.fromResult\r\n    ->Promise.Js.toBsPromise\r\n      |> Js.Promise.catch(exn => {\r\n        let err = exn->%raw(\"(x => x instanceof Error ? x : new Error(String(x)))\")\r\n        setErr(_ => Some(JsError(err)))\r\n        Js.Promise.reject(err)\r\n      })\r\n  }, [queryFn])\r\n  let res = ReactQuery_Query.useQuery(\r\n    ReactQuery_Query.queryOptions(~queryFn=queryFnWithResultHandling, ()),\r\n  )\r\n  {\r\n    status: res.status,\r\n    // ...snip\r\n    error: err,\r\n  }\r\n}\r\n\r\n// Demo!\r\n\r\ntype foo_err = Zed\r\nlet foo = () => {\r\n  if true {\r\n    Ok(1)\r\n  } else {\r\n    Error(Zed)\r\n  }\r\n}\r\n\r\nlet v = useQueryR(~queryFn=_ => Promise.resolved(foo()))\r\n\r\nswitch v.error {\r\n| Some(JsError(e')) => () // e' ~ Js.Exn.t\r\n| Some(Err(e')) => () // e' ~ foo_err\r\n| _ => ()\r\n}->ignore\r\n// v.data //  option<int>\r\n```",
      "createdAt": "2022-08-21T05:40:49Z",
      "issue": {
        "id": "I_kwDOFZKmbc5QHSLA",
        "title": "queryFn signature does not model fallibility for 'queryError",
        "url": "https://github.com/rescriptbr/react-query/issues/2"
      },
      "repository": {
        "nameWithOwner": "rescriptbr/react-query"
      }
    },
    "IC_kwDOCXZcSc5I0dsW": {
      "id": "IC_kwDOCXZcSc5I0dsW",
      "body": "Hey @mgagliardo91, thanks for continued work here.\r\n\r\nI'm still stuck on https://github.com/cdaringe/postgraphile-upsert/pull/402#discussion_r935088672\r\n\r\nI'm not confident that we should allow the ability to specify write behavior from queries vs on the server.\r\nI think most all of this should be moved to the server during sql generation, and clients should have no input/say in the matter. The design would have to allow adaptation on a per table/row basis. These features at the query level feels like a recipe for non-uniformity and decentralized control, which I perceive to be antithetical to postgres. I don't mean to discredit your solution--it definitely works. However, keeping the logic closer to the db (a la postgraphile) seems feasible and more inline with the plugin's core offering.\r\n\r\n What's your take?\r\n",
      "createdAt": "2022-08-22T02:17:34Z",
      "issue": {
        "id": "PR_kwDOCXZcSc48MmY8",
        "title": "optionally ignore some column updates on conflict",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/402"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5I3YdI": {
      "id": "IC_kwDOCXZcSc5I3YdI",
      "body": "Insufficient information in bug report. Please add clear problem statement and reproduction",
      "createdAt": "2022-08-22T14:56:38Z",
      "issue": {
        "id": "I_kwDOCXZcSc5QQdKB",
        "title": " Composite unique indexes not supported?",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/422"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5JH64o": {
      "id": "IC_kwDOCXZcSc5JH64o",
      "body": "logged on to merge this, realized CI isn't running for the branch. that's on me. will probably convert this to GH actions shortly.\r\n\r\nin the interim. the tests are failing, i believe because you need to negate `columnNamesSkippingUpdate.has(col.names[0])`",
      "createdAt": "2022-08-25T06:01:52Z",
      "issue": {
        "id": "PR_kwDOCXZcSc49kZW8",
        "title": "feat: smart tag support for ignoring columns on conflict",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/423"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5JKXhF": {
      "id": "IC_kwDOCXZcSc5JKXhF",
      "body": "I've now setup GitHub actions. CI should run now mo' reliable :)",
      "createdAt": "2022-08-25T15:47:59Z",
      "issue": {
        "id": "PR_kwDOCXZcSc49kZW8",
        "title": "feat: smart tag support for ignoring columns on conflict",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/423"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5JazFY": {
      "id": "IC_kwDOCXZcSc5JazFY",
      "body": "Fixed in 3.1.1",
      "createdAt": "2022-08-30T14:38:46Z",
      "issue": {
        "id": "I_kwDOCXZcSc5Q0AHq",
        "title": "3.1.0 version in npm and yarn are missing files",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/446"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOFH32ws5JgEFo": {
      "id": "IC_kwDOFH32ws5JgEFo",
      "body": "Ya, that worked. I come in and out of ocaml in such wide gaps i forget some of the fundamentals time to time.\r\n\r\nthx",
      "createdAt": "2022-08-31T16:11:50Z",
      "issue": {
        "id": "I_kwDOFH32ws5Q3e4-",
        "title": "docs: install instructions borked",
        "url": "https://github.com/ocaml-multicore/eio/issues/298"
      },
      "repository": {
        "nameWithOwner": "ocaml-multicore/eio"
      }
    },
    "IC_kwDOBDGkb85JqMot": {
      "id": "IC_kwDOBDGkb85JqMot",
      "body": "hey @nickjj , thanks for the feedback. i'm deploying to an ubuntu server:\r\n\r\n```\r\n$ droppy:~# ls /usr/bin/docker\r\ndockerd       docker-init   docker-proxy \r\n```\r\n\r\ncan you point me to the step that installs the binary? i'm finding that its just plain absent. i want to better understand why ansible thinks it can be skipped, when the binary is clearly missing",
      "createdAt": "2022-09-02T18:35:00Z",
      "issue": {
        "id": "I_kwDOBDGkb85RFXFh",
        "title": "docker not installed into /usr/local/bin",
        "url": "https://github.com/nickjj/ansible-docker/issues/119"
      },
      "repository": {
        "nameWithOwner": "nickjj/ansible-docker"
      }
    },
    "IC_kwDOBDGkb85JqNJv": {
      "id": "IC_kwDOBDGkb85JqNJv",
      "body": "I found the step. i can debug solo. thx!",
      "createdAt": "2022-09-02T18:38:18Z",
      "issue": {
        "id": "I_kwDOBDGkb85RFXFh",
        "title": "docker not installed into /usr/local/bin",
        "url": "https://github.com/nickjj/ansible-docker/issues/119"
      },
      "repository": {
        "nameWithOwner": "nickjj/ansible-docker"
      }
    },
    "IC_kwDOAoOyUs5J1WVe": {
      "id": "IC_kwDOAoOyUs5J1WVe",
      "body": "hey all! any interest in pushing this to opam soon? or should i just pin for now :)\r\n",
      "createdAt": "2022-09-06T22:38:22Z",
      "issue": {
        "id": "PR_kwDOAoOyUs4y8zoh",
        "title": "Add support for OCaml 5.00",
        "url": "https://github.com/andrenth/ocaml-stdint/pull/68"
      },
      "repository": {
        "nameWithOwner": "andrenth/ocaml-stdint"
      }
    },
    "IC_kwDOCXZcSc5KFs5b": {
      "id": "IC_kwDOCXZcSc5KFs5b",
      "body": "Please consult the tests. They demonstrate successful setup and consumption",
      "createdAt": "2022-09-11T17:30:53Z",
      "issue": {
        "id": "I_kwDOCXZcSc4_PwV3",
        "title": "GraphiQL using the cli won't load the mutations, but it works on the server",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/251"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOAMEBMs5LF_pP": {
      "id": "IC_kwDOAMEBMs5LF_pP",
      "body": "i'm often behind the bandwagon, as i don't work in ocaml regularly :) i'll see if i can port my ppx to use ppxlib",
      "createdAt": "2022-09-27T17:58:18Z",
      "issue": {
        "id": "I_kwDOAMEBMs5SdDYC",
        "title": "ocaml 5.x support",
        "url": "https://github.com/ocaml-ppx/ppx_tools/issues/91"
      },
      "repository": {
        "nameWithOwner": "ocaml-ppx/ppx_tools"
      }
    },
    "IC_kwDOBuX7GM5Let8O": {
      "id": "IC_kwDOBuX7GM5Let8O",
      "body": "It's an interesting idea, no doubt. Wanna try a POC?\r\n\r\n- getting the extra option to render: https://github.com/firsttris/vscode-jest-runner/blob/master/src/JestRunnerCodeLensProvider.ts\r\n- command registration: https://github.com/firsttris/vscode-jest-runner/blob/aec44ff5bb6d3f816663d91e838e0e9e4ecf36c9/src/extension.ts#L15-L20",
      "createdAt": "2022-10-04T03:21:36Z",
      "issue": {
        "id": "I_kwDOBuX7GM5TLtSE",
        "title": "Add option to run with coverage",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/279"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOH6x9ks5LjcPB": {
      "id": "IC_kwDOH6x9ks5LjcPB",
      "body": "wow, it's staggering that it worked at all! 🤷 Thanks for the ping, i really appreciate it!\r\n\r\nfixed in a721f43",
      "createdAt": "2022-10-04T21:10:01Z",
      "issue": {
        "id": "I_kwDOH6x9ks5TPdH4",
        "title": "Read.eof_seen",
        "url": "https://github.com/cdaringe/protohacks/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/protohacks"
      }
    },
    "IC_kwDOFH32ws5Lznmi": {
      "id": "IC_kwDOFH32ws5Lznmi",
      "body": "indeed, your repro is solid. i split your reader/writer between independent processes, and it still succeeded.\r\n\r\nthanks for your time, sorry for not providing such a reproduction on init of the issue.\r\n\r\nit seems that i have issue getting empty packets from osx into docker. 1 byte packets make it thru, but 0 len packets aren't getting through :|. yarg!",
      "createdAt": "2022-10-07T16:49:25Z",
      "issue": {
        "id": "I_kwDOFH32ws5Tfj7R",
        "title": "datagram_socket t#recv does not return on empty packet",
        "url": "https://github.com/ocaml-multicore/eio/issues/340"
      },
      "repository": {
        "nameWithOwner": "ocaml-multicore/eio"
      }
    },
    "IC_kwDOFH32ws5L0mXW": {
      "id": "IC_kwDOFH32ws5L0mXW",
      "body": "within the container (alpine, luv), both read/write processes work well with the empty packet. only from external of the container (osx->alpine_container) can the empty packet not make it in. i _think_ that implicates osx? i concede, i have newb systems-fu. i went to try forcing a uring backend, but alpine doesn't have the right stuff.\r\n\r\nupdate: i ran the container on a linux native box using `--net=host` to eliminate osx from the equation, and it worked.\r\n\r\n😓 \r\n\r\nthx for the tips! disturbing stuff 😆 ",
      "createdAt": "2022-10-07T20:54:53Z",
      "issue": {
        "id": "I_kwDOFH32ws5Tfj7R",
        "title": "datagram_socket t#recv does not return on empty packet",
        "url": "https://github.com/ocaml-multicore/eio/issues/340"
      },
      "repository": {
        "nameWithOwner": "ocaml-multicore/eio"
      }
    },
    "IC_kwDOH-gt185L1ISf": {
      "id": "IC_kwDOH-gt185L1ISf",
      "body": "Rad thanks! 👍 ",
      "createdAt": "2022-10-08T04:05:16Z",
      "issue": {
        "id": "I_kwDOH-gt185TfNFu",
        "title": "authentication: false still forces the login screen",
        "url": "https://github.com/alexjustesen/speedtest-tracker/issues/45"
      },
      "repository": {
        "nameWithOwner": "alexjustesen/speedtest-tracker"
      }
    },
    "IC_kwDOAwORNs5L7IKY": {
      "id": "IC_kwDOAwORNs5L7IKY",
      "body": "Thanks, I came to report the same issue.\r\n\r\n- on `pnpm link --global .` from a package with `workspace:*`, the ERR_PNPM_NO_MATCHING_VERSION_INSIDE_WORKPACE error is emitted\r\n- looks like the OP sees the same (link directly to his package: https://github.com/jjangga0214/haetae/blob/5e8e50180375eafe427fa704d2554451e10a4326/packages/haetae/package.json#L21-L25)\r\n\r\nthe same occurs if you use the form `pnpm link --global /packages/pkg-to-link`. i thought _perhaps_ trying from the workspace root would provide a different result, but it does not",
      "createdAt": "2022-10-10T20:29:45Z",
      "issue": {
        "id": "I_kwDOAwORNs5Obn9j",
        "title": "fix: `pnpm link` to a package with workspace protocol",
        "url": "https://github.com/pnpm/pnpm/issues/5087"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOAA8NzM5L86zz": {
      "id": "IC_kwDOAA8NzM5L86zz",
      "body": "I went from “not having a node bug since 8.x” to two in the last month. So\ninfrequent that I rarely remember to even check the node version! 😀\n\nThanks for running it\n\nOn Sun, Apr 17, 2022 at 12:45 AM Bjorn Stromberg ***@***.***>\nwrote:\n\n> I'm using node v17.9.0, I tried 17.1.0 and it exhibited the same behavior\n> you described. I don't particularly want to spend more time on debugging\n> the issue, it works on the latest version of 16 and 17.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/fgnass/node-dev/issues/288#issuecomment-1100824703>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57JURQ3NRFK2CX4BHCDVFO6QZANCNFSM5TTA37EA>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n-- \nSent from Gmail Mobile\n",
      "createdAt": "2022-10-11T08:02:22Z",
      "issue": {
        "id": "I_kwDOAA8NzM5H5b4P",
        "title": "divergent behavior between `node <script>` and `node-dev <script>`",
        "url": "https://github.com/fgnass/node-dev/issues/288"
      },
      "repository": {
        "nameWithOwner": "fgnass/node-dev"
      }
    },
    "IC_kwDOCXZcSc5MqZ0X": {
      "id": "IC_kwDOCXZcSc5MqZ0X",
      "body": "Hello! Thanks, feel free to send a docs patch. On bulk upserts, super open to it, but i wont be personally implementing it. ",
      "createdAt": "2022-10-20T21:37:11Z",
      "issue": {
        "id": "I_kwDOCXZcSc5Uef1c",
        "title": "Error in the docs + question",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/483"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5MrN7H": {
      "id": "IC_kwDOCXZcSc5MrN7H",
      "body": "ya for sure! they have a guide here: https://www.graphile.org/postgraphile/extending/",
      "createdAt": "2022-10-21T03:05:04Z",
      "issue": {
        "id": "I_kwDOCXZcSc5Uef1c",
        "title": "Error in the docs + question",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/483"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5Mt91D": {
      "id": "IC_kwDOCXZcSc5Mt91D",
      "body": "Looks like youre on the right track :)",
      "createdAt": "2022-10-21T15:24:14Z",
      "issue": {
        "id": "PR_kwDOCXZcSc5BRsKM",
        "title": "attempt to add multiple insert",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/484"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOH-gt185NNQEI": {
      "id": "IC_kwDOH-gt185NNQEI",
      "body": "Sure! I have this deployed essentially on an Intranet for which the user, if they can even access the thing, is already privileged enough to use the application. I don’t want a redundant authentication system for something for which the user has already authenticated.",
      "createdAt": "2022-10-28T18:22:57Z",
      "issue": {
        "id": "I_kwDOH-gt185TfNFu",
        "title": "authentication: false still forces the login screen",
        "url": "https://github.com/alexjustesen/speedtest-tracker/issues/45"
      },
      "repository": {
        "nameWithOwner": "alexjustesen/speedtest-tracker"
      }
    },
    "IC_kwDOH-gt185NNQag": {
      "id": "IC_kwDOH-gt185NNQag",
      "body": "It’s my presumption that authentication setting, as provided here, is for accessing this very application, not some downstream service associated with a speed test. If I need to authenticate with the Speedtest provider themselves, that’s fine, but it’s my presumption that Speedtest access is open and that authentication here is for this application not the underlying speed test implementation application. ",
      "createdAt": "2022-10-28T18:24:43Z",
      "issue": {
        "id": "I_kwDOH-gt185TfNFu",
        "title": "authentication: false still forces the login screen",
        "url": "https://github.com/alexjustesen/speedtest-tracker/issues/45"
      },
      "repository": {
        "nameWithOwner": "alexjustesen/speedtest-tracker"
      }
    },
    "IC_kwDOE2Nvws5NP0IK": {
      "id": "IC_kwDOE2Nvws5NP0IK",
      "body": "references:\r\n\r\n- binary release uploads for rusty_v8 specified here: https://github.com/denoland/rusty_v8/blob/7091248630744e3e89da51f1c10f4a83b385d324/.github/workflows/ci.yml#L185-L195\r\n\r\n",
      "createdAt": "2022-10-29T21:41:55Z",
      "issue": {
        "id": "MDU6SXNzdWU3NzU4NzM4Nzk=",
        "title": "Provide prebuilt binaries",
        "url": "https://github.com/dudykr/stc/issues/10"
      },
      "repository": {
        "nameWithOwner": "dudykr/stc"
      }
    },
    "IC_kwDOHqMgSs5N1qH5": {
      "id": "IC_kwDOHqMgSs5N1qH5",
      "body": "Thanks for the thoughtful response! No sweat, no need to apply haste or\nhacks! I can shell out to the CLI to get the data in the interim! Perhaps,\nwhen the other deps get in order, a publish could occur!\n\nOn Mon, Nov 7, 2022 at 1:11 AM Federico Dionisi ***@***.***>\nwrote:\n\n> Hey @cdaringe <https://github.com/cdaringe>, thank you for your interest.\n> I'd love to publish both crates, but unfortunately, fast_cli_core relies\n> on atroche/rust-headless-chrome\n> <https://github.com/atroche/rust-headless-chrome>, which is not being\n> published for a very long time. 😔 This forced me to use direct git\n> dependency, which crates.io won't accept.\n>\n> Until a new release is published, I won't be able to proceed to push my\n> crates.\n> I also considered moving to jonhoo/fantoccini\n> <https://github.com/jonhoo/fantoccini>, but it is too much effort right\n> now.\n>\n> But I'm happy to hear and review alternatives that could get this code to\n> crates.io.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/fdionisi/fast-cli/issues/1#issuecomment-1305305721>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAHU57LJLQSVBMOKRAGTEPLWHDBTNANCNFSM6AAAAAARYVPN44>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n-- \nSent from Gmail Mobile\n",
      "createdAt": "2022-11-07T17:01:17Z",
      "issue": {
        "id": "I_kwDOHqMgSs5Vr_dH",
        "title": "mind publishing fast_cli_core?",
        "url": "https://github.com/fdionisi/fast-cli/issues/1"
      },
      "repository": {
        "nameWithOwner": "fdionisi/fast-cli"
      }
    },
    "IC_kwDOFH32ws5O3Y5U": {
      "id": "IC_kwDOFH32ws5O3Y5U",
      "body": "Thanks! I’ll probably have to go back and read the object stuff in OCaml. I skip it every time it comes up, but it would have been vrry useful recently. I appreciate the response!",
      "createdAt": "2022-11-22T06:11:40Z",
      "issue": {
        "id": "I_kwDOFH32ws5W1-Qe",
        "title": "docs: Eio_mock using datagram sockets",
        "url": "https://github.com/ocaml-multicore/eio/issues/372"
      },
      "repository": {
        "nameWithOwner": "ocaml-multicore/eio"
      }
    },
    "IC_kwDOAOXXVc5PpdmC": {
      "id": "IC_kwDOAOXXVc5PpdmC",
      "body": "Bugger off, you stalebot bugger off! Ohhh bugger off, you stalebot buggger off!\r\n\r\nhttps://youtu.be/o8Luriw7e2s",
      "createdAt": "2022-12-03T22:22:41Z",
      "issue": {
        "id": "I_kwDOAOXXVc5JOBXl",
        "title": "[Bug]: Memory Leak with --runInBand",
        "url": "https://github.com/jestjs/jest/issues/12820"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "IC_kwDOBuX7GM5PyJmx": {
      "id": "IC_kwDOBuX7GM5PyJmx",
      "body": "Implicitly asked for is for the extension to (possibly build), resolve, and evaluate code so it could deduce the test name, such that the plugin could give a solid match to jest cli regex pattern. It’s certainly feasible, but introduces (possibly) a lot of complexity, given the build ecosystem of js.\r\n\r\nid personally opt to not support it, or, hear a comprehensive/robust proposal from the community that addresses these challenges, especially a solution that works without invoking jest first to resolve test names.",
      "createdAt": "2022-12-06T01:25:01Z",
      "issue": {
        "id": "I_kwDOBuX7GM5X_JwJ",
        "title": "Support running tests defined with `describe(ClassName.name`",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/286"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOBuX7GM5P-urr": {
      "id": "IC_kwDOBuX7GM5P-urr",
      "body": "> Would parsing with a regex be too complex?\r\n\r\nexplain more!\r\n\r\nwhat's discussed above is a test name discovered by runtime evaluation _of_ the test runner or node.js",
      "createdAt": "2022-12-08T01:27:59Z",
      "issue": {
        "id": "I_kwDOBuX7GM5X_JwJ",
        "title": "Support running tests defined with `describe(ClassName.name`",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/286"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOAT9aAc5QsDh3": {
      "id": "IC_kwDOAT9aAc5QsDh3",
      "body": "> Basically, using imports outside of the root folder could make typescript ... behave oddly.\r\n\r\nhey @quadristan, im having a hard time following. can you ELI5 to help me catch up? It seemed to me that the imports were to dependencies local to the lib or apps local package.json(s) (eg workspace libs), despite being resolved deep off into the pnpm store. What am I missing? Also, hey @ggascoigne , long time no see. I hope you’re well!",
      "createdAt": "2022-12-15T21:26:02Z",
      "issue": {
        "id": "I_kwDOAT9aAc5CqpD4",
        "title": "\"The inferred type of X cannot be named without a reference to Y\" (TS2742) occurs when multiple modules with the same package ID are resolved",
        "url": "https://github.com/microsoft/TypeScript/issues/47663"
      },
      "repository": {
        "nameWithOwner": "microsoft/TypeScript"
      }
    },
    "IC_kwDOAgrPSc5Q0jgf": {
      "id": "IC_kwDOAgrPSc5Q0jgf",
      "body": "hmm.\r\n\r\n```\r\nnode_modules/.pnpm/testcafe-hammerhead@17.1.20/node_modules/testcafe-hammerhead/lib/processing/script/transformers/method-call.js\r\n```\r\n\r\nthis module, i have found, transforms/instruments my browser code in my production builds. however, in development builds, i don't even enter this module for transformation.\r\n\r\nit's a bit hard to discern what conditions lead into my browser modules getting transformed or not. there's a `findTransform` fn somewhere in there that matches in my production application, that i'm not sure is even attempted for my development version application.\r\n\r\ni put a unique sigil into my code right next to the `window.location.assign(...)` call, e.g. `console.log({ foobarbaz: \"sigil\" })`, and I did discover that `function processScript` does receive the script! however, it's still not updated with `__call$` and `__get$` xforms",
      "createdAt": "2022-12-17T02:09:27Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Zd0EL",
        "title": "Certain compilations do not instrument location members correctly",
        "url": "https://github.com/DevExpress/testcafe/issues/7425"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5Q_ZlP": {
      "id": "IC_kwDOAgrPSc5Q_ZlP",
      "body": "Issue traced today down to webpack using https://developer.mozilla.org/en-US/docs/Web/API/TrustedScript\r\n\r\nhammerhead is/was not aware of `TrustedScript` in its AST re-writer. when `__procScript$` is invoked on an `eval`, it only looks for `apply` calls or `scripts` that are of type `string`, not of type `TrustedScript`.\r\n\r\ni monkey patched hammerhead to do `trustedScript.toString()`, and it worked",
      "createdAt": "2022-12-20T03:40:04Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Zd0EL",
        "title": "Certain compilations do not instrument location members correctly",
        "url": "https://github.com/DevExpress/testcafe/issues/7425"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5RLODa": {
      "id": "IC_kwDOAgrPSc5RLODa",
      "body": "> both of these issues are pointing to the same problematic place, but it's difficult to say anything for sure without debugging\r\n\r\nConcretely, testcafe hammerhead, when it processes eval scripts, has no awareness of TrustedScripts.\r\n\r\nHere's the associated lines of code:\r\nhttps://github.com/DevExpress/testcafe-hammerhead/blob/4751c9fd97df3e4a0d505cc909cbd191fd1d227a/src/client/sandbox/code-instrumentation/index.ts#L60-L77\r\n\r\nA reproduction can be furnished easily:\r\n\r\n- A fresh next.js installation (e.g. `npm create-next-app ...`)\r\n- wiring that app thru testcafe with the next.js dev server (`next dev`),\r\n- ...and invocation of `window.location.assign(...)` issued within the next.js development application's source code...\r\n\r\nought demonstrate the issue, if debugging is needed. however, debugging probably isn't strictly needed here, as the  codepath is known. it's not surprising to observe learn that `processScript` may receive a  `TrustedScript` instance. Currently, that function is hardcoded to look only for `string` scripts. No fault of TestCafe's--it's a new API that browser application frameworks are starting to integrate with!\r\n\r\nps, excited to hear about proxyless mode! curious how that works? is there a thread i can follow to learn more about that?",
      "createdAt": "2022-12-21T18:54:20Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Zd0EL",
        "title": "Certain compilations do not instrument location members correctly",
        "url": "https://github.com/DevExpress/testcafe/issues/7425"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5RL7xz": {
      "id": "IC_kwDOAgrPSc5RL7xz",
      "body": "I've tried the experimental proxyless mode. TC launches, TC loads my web app, my web-app loads, but:\r\n\r\n - no TC banner/controls render on the page\r\n - TC halts... it seems to not be present/active. The TC server stdio emits nothing, and the browser is just stopped there, with my app loaded 🤔 . after some timeout, TC reloads the the browser and tries again, but... nil. looking forward to digging in further there",
      "createdAt": "2022-12-21T20:57:59Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Zd0EL",
        "title": "Certain compilations do not instrument location members correctly",
        "url": "https://github.com/DevExpress/testcafe/issues/7425"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5RSMNd": {
      "id": "IC_kwDOAgrPSc5RSMNd",
      "body": "node 16.x, osx 12.x. However the issue affects all versions. Curious why youve closed the issue? Should I read into that? 😀",
      "createdAt": "2022-12-23T08:15:45Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Zd0EL",
        "title": "Certain compilations do not instrument location members correctly",
        "url": "https://github.com/DevExpress/testcafe/issues/7425"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5RSMSE": {
      "id": "IC_kwDOAgrPSc5RSMSE",
      "body": "Oh, marked as dupe. Whoops! Will read the other issue",
      "createdAt": "2022-12-23T08:16:10Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Zd0EL",
        "title": "Certain compilations do not instrument location members correctly",
        "url": "https://github.com/DevExpress/testcafe/issues/7425"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5RSMgi": {
      "id": "IC_kwDOAgrPSc5RSMgi",
      "body": "I looked at the other issue. Seems like different failures, although the same symptoms.",
      "createdAt": "2022-12-23T08:17:28Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Zd0EL",
        "title": "Certain compilations do not instrument location members correctly",
        "url": "https://github.com/DevExpress/testcafe/issues/7425"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5RT7AW": {
      "id": "IC_kwDOAgrPSc5RT7AW",
      "body": "hey @Aleksey28 , thx for the reply. i've dropped `target` from the demo so as to keep this bug report focused on the resolution issue. indeed, i don't need that target, i just used a bunch of the defaults from `tsc --init`, but i appreciate the tip/ref regardless!",
      "createdAt": "2022-12-23T18:38:21Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Z1B8r",
        "title": "es-next/compiler.js fails to resolve module after typescript successfully resolves and compiles it",
        "url": "https://github.com/DevExpress/testcafe/issues/7436"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5RW5Fx": {
      "id": "IC_kwDOAgrPSc5RW5Fx",
      "body": "@Aleksey28  forgive me—the issue should not be closed. The issue should remain open. My above remark was politely stating that your suggestion is not relevant to this specific problem ",
      "createdAt": "2022-12-26T07:22:09Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Z1B8r",
        "title": "es-next/compiler.js fails to resolve module after typescript successfully resolves and compiles it",
        "url": "https://github.com/DevExpress/testcafe/issues/7436"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5RYEwy": {
      "id": "IC_kwDOAgrPSc5RYEwy",
      "body": "@miherlosev,\r\n\r\n- have you read my [above diagnostics](https://github.com/DevExpress/testcafe/issues/7425#issuecomment-1358797135)?\r\n- does your simple script on example.com use `TrustedScript` to testcafe `__procScript$` instrumentation?\r\n- did you consider the link I provided above to the offending lines of code?\r\n\r\nHe're a MVP demo: https://github.com/cdaringe/trustedscript-eval-testcafe-bug . Simple instructions are in the readme. \r\n\r\nAs I've shared above, this code is wrong: https://github.com/DevExpress/testcafe-hammerhead/blob/4751c9fd97df3e4a0d505cc909cbd191fd1d227a/src/client/sandbox/code-instrumentation/index.ts#L60-L77\r\n\r\nThe final line does:\r\n\r\n`return script`\r\n\r\nReturning the script from the function directly is ignoring failure to process the script, silently.\r\n\r\nIt should instead have instead either:\r\n\r\n`option-1`:\r\n\r\n```js\r\nthrow new Error(`unknown type: ${typeof script} detected. cannot process script`)\r\n```\r\n\r\nor, option-2 (**preferred**): `option-1` and handle `TrustedScript` instances\r\n\r\n",
      "createdAt": "2022-12-26T16:06:21Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Zd0EL",
        "title": "Certain compilations do not instrument location members correctly",
        "url": "https://github.com/DevExpress/testcafe/issues/7425"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAgrPSc5RaCnR": {
      "id": "IC_kwDOAgrPSc5RaCnR",
      "body": "@Aleksey28, the example is updated and runnable, with instructions in the repo. thanks!",
      "createdAt": "2022-12-27T10:11:50Z",
      "issue": {
        "id": "I_kwDOAgrPSc5Z1B8r",
        "title": "es-next/compiler.js fails to resolve module after typescript successfully resolves and compiles it",
        "url": "https://github.com/DevExpress/testcafe/issues/7436"
      },
      "repository": {
        "nameWithOwner": "DevExpress/testcafe"
      }
    },
    "IC_kwDOAo2Bcs5RhiAp": {
      "id": "IC_kwDOAo2Bcs5RhiAp",
      "body": "Its not …inactive!",
      "createdAt": "2022-12-30T06:07:38Z",
      "issue": {
        "id": "I_kwDOAo2Bcs5aQbqZ",
        "title": "Is this project active?",
        "url": "https://github.com/cdaringe/pouchy/issues/1252"
      },
      "repository": {
        "nameWithOwner": "cdaringe/pouchy"
      }
    },
    "IC_kwDOBe_BA85Rr10X": {
      "id": "IC_kwDOBe_BA85Rr10X",
      "body": "Nor stale",
      "createdAt": "2023-01-04T03:27:25Z",
      "issue": {
        "id": "I_kwDOBe_BA85Kx1rm",
        "title": "Parcel compilation produces reference to undefined variable",
        "url": "https://github.com/parcel-bundler/parcel/issues/8176"
      },
      "repository": {
        "nameWithOwner": "parcel-bundler/parcel"
      }
    },
    "IC_kwDOA-tE4c5R2fUk": {
      "id": "IC_kwDOA-tE4c5R2fUk",
      "body": "Settings > Locations > (reselect all of the default paths), suddenly it takes",
      "createdAt": "2023-01-06T07:16:03Z",
      "issue": {
        "id": "I_kwDOA-tE4c5XVnWw",
        "title": "Xcode needs to be installed",
        "url": "https://github.com/expo/expo/issues/20226"
      },
      "repository": {
        "nameWithOwner": "expo/expo"
      }
    },
    "IC_kwDOBXnGHs5SDyXe": {
      "id": "IC_kwDOBXnGHs5SDyXe",
      "body": "I'm running this module in tests (it's a transitive dependency). Seems like the big test runners these days (jest, ava) use workers, so the above error pops up. For now, I've disabled workerThreads in my test runner to avoid this issue",
      "createdAt": "2023-01-10T04:37:40Z",
      "issue": {
        "id": "MDU6SXNzdWU1Mjk1NTcwMjA=",
        "title": "Can't run in worker thread",
        "url": "https://github.com/laverdet/isolated-vm/issues/138"
      },
      "repository": {
        "nameWithOwner": "laverdet/isolated-vm"
      }
    },
    "IC_kwDOA4gowc5SIwWN": {
      "id": "IC_kwDOA4gowc5SIwWN",
      "body": "Just came here for this! I think it could be very useful. Consider the case where schema is built up by composing schemas from multiple sources, programatically. Studying code is not a great mechanism then to get a \"feel\" for what the schema is. `mySchema.toJSON()` to allow for printing a nice representation could lend itself for sharing full schemas in a flat, easy to grok format.",
      "createdAt": "2023-01-10T23:24:21Z",
      "issue": {
        "id": "MDU6SXNzdWUyODE0MTYyMDY=",
        "title": "Serialization/Deserialization of Runtypes",
        "url": "https://github.com/runtypes/runtypes/issues/30"
      },
      "repository": {
        "nameWithOwner": "runtypes/runtypes"
      }
    },
    "IC_kwDOA4gowc5SIxOq": {
      "id": "IC_kwDOA4gowc5SIxOq",
      "body": "ah, I see `.show` on the RT prototype is now a thing. will experiment with that",
      "createdAt": "2023-01-10T23:28:56Z",
      "issue": {
        "id": "MDU6SXNzdWUyODE0MTYyMDY=",
        "title": "Serialization/Deserialization of Runtypes",
        "url": "https://github.com/runtypes/runtypes/issues/30"
      },
      "repository": {
        "nameWithOwner": "runtypes/runtypes"
      }
    },
    "IC_kwDOA4gowc5SNgB5": {
      "id": "IC_kwDOA4gowc5SNgB5",
      "body": "@amonks, your URL for runtype-schema is a 404. still have it?",
      "createdAt": "2023-01-11T17:55:32Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDU2MjczNTI=",
        "title": "Map runtypes to JSON schema",
        "url": "https://github.com/runtypes/runtypes/issues/62"
      },
      "repository": {
        "nameWithOwner": "runtypes/runtypes"
      }
    },
    "IC_kwDOA4gowc5SOagk": {
      "id": "IC_kwDOA4gowc5SOagk",
      "body": "I've created such a tool: https://github.com/cdaringe/runtypes-to-jsonschema\r\n\r\npretty basic so far (not JSONSchema feature complete, such as no use of definitions/refs/requiredFields), but the core components work, and we'll make it mo better over time",
      "createdAt": "2023-01-11T21:31:40Z",
      "issue": {
        "id": "MDU6SXNzdWUzNDU2MjczNTI=",
        "title": "Map runtypes to JSON schema",
        "url": "https://github.com/runtypes/runtypes/issues/62"
      },
      "repository": {
        "nameWithOwner": "runtypes/runtypes"
      }
    },
    "IC_kwDOIwpm585So0sc": {
      "id": "IC_kwDOIwpm585So0sc",
      "body": ":tada: This PR is included in version 1.1.0 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/runtypes-to-jsonschema/v/1.1.0)\n- [GitHub release](https://github.com/cdaringe/runtypes-to-jsonschema/releases/tag/v1.1.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2023-01-18T03:29:47Z",
      "issue": {
        "id": "PR_kwDOIwpm585HMNvI",
        "title": "chore(deps): update node.js to v18.13.0",
        "url": "https://github.com/cdaringe/runtypes-to-jsonschema/pull/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/runtypes-to-jsonschema"
      }
    },
    "IC_kwDOIwpm585So0sw": {
      "id": "IC_kwDOIwpm585So0sw",
      "body": ":tada: This PR is included in version 1.1.0 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/runtypes-to-jsonschema/v/1.1.0)\n- [GitHub release](https://github.com/cdaringe/runtypes-to-jsonschema/releases/tag/v1.1.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2023-01-18T03:29:50Z",
      "issue": {
        "id": "PR_kwDOIwpm585Ha4_L",
        "title": "chore(deps): update dependency ava to v5.1.1",
        "url": "https://github.com/cdaringe/runtypes-to-jsonschema/pull/5"
      },
      "repository": {
        "nameWithOwner": "cdaringe/runtypes-to-jsonschema"
      }
    },
    "IC_kwDOAt43r85So17w": {
      "id": "IC_kwDOAt43r85So17w",
      "body": "strong encouragement to check out pnpm workspaces. pnpm workspaces, based on my personal research, trump yarn workspaces by features/stability/performance. my yarn workspace experience is out-of-date by probably 8 months, but pnpm experience is fresh, and it's delightful.",
      "createdAt": "2023-01-18T03:38:03Z",
      "issue": {
        "id": "PR_kwDOAt43r85HbFy4",
        "title": "Use pnpm + workspaces",
        "url": "https://github.com/rjsf-team/react-jsonschema-form/pull/3382"
      },
      "repository": {
        "nameWithOwner": "rjsf-team/react-jsonschema-form"
      }
    },
    "IC_kwDOEZO31c5SpJ6B": {
      "id": "IC_kwDOEZO31c5SpJ6B",
      "body": "if there's an issue for SSG to subscribe to... i'd love to subscribe! i just re-created a small app in aleph \"knowing\" it supported SSG, only find this issue!",
      "createdAt": "2023-01-18T05:43:10Z",
      "issue": {
        "id": "I_kwDOEZO31c5IcO1G",
        "title": "The target of build is wrong",
        "url": "https://github.com/alephjs/aleph.js/issues/460"
      },
      "repository": {
        "nameWithOwner": "alephjs/aleph.js"
      }
    },
    "IC_kwDOA4gowc5TY4Js": {
      "id": "IC_kwDOA4gowc5TY4Js",
      "body": "I want this:\r\n\r\ninput: (schema, value)\r\noutput: validation-result-matching-schema-structure\r\n\r\nexample:\r\n```ts\r\nconst fooRecordSchema = rt.Record({ foo: rt.Literal(\"bar\") });\r\nt(fooRecordSchema, null); // Expected object, got \"null\"\r\nt(fooRecordSchema, { bar: \"bar\" });  // { foo: 'Expected literal `bar`, but was `undefined`' }\r\nt(fooRecordSchema, { foo: \"bar\" }); // undefined, all valid\r\n```\r\n\r\n```ts\r\n/* eslint-disable complexity, @typescript-eslint/no-explicit-any */\r\nimport * as rt from \"runtypes\";\r\n\r\nconst nevAssert = (_: never, msg) => {\r\n  throw new Error(msg);\r\n};\r\n\r\nconst isPojo = (x: unknown): x is object =>\r\n  x !== null &&\r\n  typeof x === \"object\" &&\r\n  Number.isInteger(Object.keys(x).length);\r\n\r\nconst childValue = (parent: unknown, key: string | number) =>\r\n  parent == null ? undefined : parent[key];\r\n\r\ntype IndexedStructuralValidationResult = {\r\n  index: number;\r\n  result: StructuralValidationResult;\r\n};\r\ntype StructuralValidationResult =\r\n  | string\r\n  | undefined\r\n  | IndexedStructuralValidationResult[]\r\n  | { [key: string]: StructuralValidationResult };\r\n\r\nexport function validate<S extends rt.Runtype>(\r\n  schema: S,\r\n  value: unknown\r\n): StructuralValidationResult {\r\n  const r = schema.reflect;\r\n  switch (r.tag) {\r\n    case \"dictionary\": {\r\n      if (isPojo(value)) {\r\n        return Object.entries(value).reduce((acc, [k, v]) => {\r\n          const child = validate(r.value, v);\r\n          return child === undefined ? acc : { ...acc, [k]: child };\r\n        }, {});\r\n      } else {\r\n        return `Expected object, got ${value === null ? \"null\" : typeof value}`;\r\n      }\r\n    }\r\n    case \"record\": {\r\n      if (isPojo(value)) {\r\n        return Object.entries(r.fields).reduce((acc, [k, v]) => {\r\n          const child = validate(v, childValue(value, k));\r\n          return child === undefined ? acc : { ...(acc || {}), [k]: child };\r\n        }, undefined as undefined | { [key: string]: StructuralValidationResult });\r\n      } else {\r\n        return `Expected object, got \"${\r\n          value === null ? \"null\" : typeof value\r\n        }\"`;\r\n      }\r\n    }\r\n    case \"union\": {\r\n      const isValid = r.alternatives.some(\r\n        (subschema) => validate(subschema, value) === undefined\r\n      );\r\n      return isValid\r\n        ? undefined\r\n        : `No alternative schemas in the union matched \"${typeof value}\"`;\r\n    }\r\n    case \"tuple\": {\r\n      const results = r.components\r\n        .map((subschema, i) => {\r\n          const result = validate(subschema, childValue(value, i));\r\n          return result\r\n            ? undefined\r\n            : {\r\n                index: i,\r\n                result,\r\n              };\r\n        })\r\n        .filter(Boolean) as IndexedStructuralValidationResult[];\r\n      return results.length ? undefined : results;\r\n    }\r\n    case \"array\":\r\n    case \"bigint\":\r\n    case \"boolean\":\r\n    case \"brand\":\r\n    case \"constraint\":\r\n    case \"function\":\r\n    case \"instanceof\":\r\n    case \"literal\":\r\n    case \"never\":\r\n    case \"number\":\r\n    case \"optional\":\r\n    case \"string\":\r\n    case \"symbol\":\r\n    case \"void\":\r\n    case \"unknown\": {\r\n      try {\r\n        r.check(value);\r\n        return undefined;\r\n      } catch (err) {\r\n        return err instanceof Error ? err.message : \"invalid data\";\r\n      }\r\n    }\r\n    case \"intersect\": {\r\n      throw new Error(\"unsupported\");\r\n    }\r\n    default: {\r\n      nevAssert(r, `unhandled ${r}`);\r\n    }\r\n  }\r\n  throw new Error(\"unhandled\");\r\n}\r\n\r\n// tests\r\nconst t = (schema: rt.Runtype, value: unknown) =>\r\n  // eslint-disable-next-line no-console\r\n  console.log(validate(schema, value));\r\n\r\nconst fooSchema = rt.Literal(\"foo\");\r\nt(fooSchema, undefined);\r\nt(fooSchema, null);\r\nt(fooSchema, \"bar\");\r\nt(fooSchema, \"foo\");\r\n/*\r\nExpected literal `foo`, but was `undefined`\r\nExpected literal `foo`, but was `null`\r\nExpected literal `foo`, but was `bar`\r\nundefined\r\n*/\r\n\r\nconst fooRecordSchema = rt.Record({ foo: rt.Literal(\"bar\") });\r\nt(fooRecordSchema, null);\r\nt(fooRecordSchema, { bar: \"bar\" });\r\nt(fooRecordSchema, { foo: \"bar\" });\r\n/*\r\nExpected object, got \"null\"\r\n{ foo: 'Expected literal `bar`, but was `undefined`' }\r\nundefined\r\n*/\r\n\r\nconst fooUnionSchema = rt.Union(\r\n  rt.Record({ foo: rt.Literal(\"bar\") }),\r\n  rt.Literal(\"baz\")\r\n);\r\nt(fooUnionSchema, { bar: \"bar\" });\r\nt(fooUnionSchema, { foo: \"bar\" });\r\n/*\r\nNo alternative schemas in the union matched \"object\"\r\nundefined\r\n*/\r\n```",
      "createdAt": "2023-01-20T22:30:06Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTE5NTE3MjY=",
        "title": "Return multiple errors",
        "url": "https://github.com/runtypes/runtypes/issues/8"
      },
      "repository": {
        "nameWithOwner": "runtypes/runtypes"
      }
    },
    "IC_kwDOA4gowc5TaC9a": {
      "id": "IC_kwDOA4gowc5TaC9a",
      "body": "released ^ (with a few fixes) as https://github.com/cdaringe/runtypes-pretty-validation\r\n",
      "createdAt": "2023-01-21T21:33:01Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTE5NTE3MjY=",
        "title": "Return multiple errors",
        "url": "https://github.com/runtypes/runtypes/issues/8"
      },
      "repository": {
        "nameWithOwner": "runtypes/runtypes"
      }
    },
    "IC_kwDOAT9aAc5Tnv95": {
      "id": "IC_kwDOAT9aAc5Tnv95",
      "body": "it's not clear to me exactly how to use this, having read the associated blog post.\r\n\r\n- i have a custom runtime (an emulator for a homegrown system with some globals)\r\n- it looks like we can only use existing lib names, so I'll attempt to squash \"dom\" as a proxy for my emulator types\r\n- using pnpm syntax, i'm linking in my lib DOM replacement via:\r\n\r\n```json5\r\n  \"dependencies\": {\r\n     // ...snip...\r\n    \"@typescript/lib-dom\": \"workspace:concordance-env@*\"\r\n  },\r\n```\r\n\r\n```sh\r\n$ tree node_modules/\\@typescript/lib-dom/src/\r\nnode_modules/@typescript/lib-dom/src/\r\n└── index.d.ts\r\n# all my good stuff!\r\n```\r\n\r\n```ts\r\n// index.d.ts\r\ndeclare var foobar: number;\r\n```\r\n\r\nand specifying:\r\n\r\n```json5\r\n{\r\n  \"extends\": \"concordance-tsconfig/tsconfig.base.json\",\r\n  \"compilerOptions\": {\r\n    // DOM is squashed with concordance env :)\r\n    \"lib\": [\"DOM\"]\r\n  }\r\n}\r\n```\r\n\r\nbut the compiler isn't picking up my symbols 🤔, such as `foobar: number`, as declared above.\r\n\r\ndid I miss a crucial step?\r\n\r\n**update**--i had an `import` in my `.d.ts` which broke it :). removing the `import` made the symbols pick up.",
      "createdAt": "2023-01-25T01:39:45Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzI4NzcxOTgy",
        "title": "Support resolving `@typescript/[lib]` in node modules ",
        "url": "https://github.com/microsoft/TypeScript/pull/45771"
      },
      "repository": {
        "nameWithOwner": "microsoft/TypeScript"
      }
    },
    "IC_kwDOA4gowc5Tr_-7": {
      "id": "IC_kwDOA4gowc5Tr_-7",
      "body": "@pelotom, would something like this be welcome to upstream into runtypes? reflecting a validation report matching the schema structure can be pretty handy, both for users and for machines :)",
      "createdAt": "2023-01-25T18:23:13Z",
      "issue": {
        "id": "MDU6SXNzdWUyMTE5NTE3MjY=",
        "title": "Return multiple errors",
        "url": "https://github.com/runtypes/runtypes/issues/8"
      },
      "repository": {
        "nameWithOwner": "runtypes/runtypes"
      }
    },
    "IC_kwDOCXIH6s5T5DJA": {
      "id": "IC_kwDOCXIH6s5T5DJA",
      "body": "Lang level i think ought merit special consideration for exposure.\r\n\r\nconsider this: JS language levels are fully backwards compatible. They must be, or websites around the world start crashing as engines silently upgrade in browsers, which is explicitly considered by ECMAScript and TC39. The browser engine lang level upgrade scenario is the same scenario discussed here for concord. Runtime modifications, for which nashorn applies _many_, will surely will yield all of the pain during migration. If just the lang level is exposed, setting a max level could hedge most risk. That is, if a maximum value of ES2018 or ES2020 is applied, then the delta between the max allowed spec year and the current year should give years of buffer from hypothetical competing engines to “catch up”. If such an engine doesn't support a high enough language level, it’s probably not worth migrating to. If a mitigation is required and there’s no engine to turn to, drop js support in a major version bump. I love using JS, but one could argue “whats the point of offering JS if JS users cant use JS.”\r\n\r\nJust my 2cents. Coach me! Ill do as the team requests, one way or another.",
      "createdAt": "2023-01-28T18:59:37Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5IuQvE",
        "title": "feat(runtime): up level graal vm js engine lang level",
        "url": "https://github.com/walmartlabs/concord/pull/709"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOHfSsTc5T5drt": {
      "id": "IC_kwDOHfSsTc5T5drt",
      "body": "tried this project out tonight on my sqlite DB. pretty incredible work. worked on the first go. great job. looking forward to seeing mutations land!",
      "createdAt": "2023-01-29T06:08:47Z",
      "issue": {
        "id": "I_kwDOHfSsTc5PYS-y",
        "title": "TODO list / priorities",
        "url": "https://github.com/SeaQL/seaography/issues/34"
      },
      "repository": {
        "nameWithOwner": "SeaQL/seaography"
      }
    },
    "IC_kwDOCXIH6s5T_0E6": {
      "id": "IC_kwDOCXIH6s5T_0E6",
      "body": "Hey all,\r\n\r\n- i've added another commit that adds `ecmascript-level` as an option\r\n   - it's _opt in only_, and it's **just this singular engine option.**\r\n- re: \"we shouldn't expose engine options\"\r\n   - we could delete it in v3, if desired, and during said major release, update graal to a sane lang level by default, rather than the current 1999 version of JS\r\n      - again, i'd wager 99+% of JS expressions still work. re: \"ecmascript is extremely backwards compatible\"\r\n\r\nthus, my proposal is, allow an opt-in flag now, purge it (or not) in the next concord release?\r\n\r\nIn this regard, people can use it now & it mitigates the risk of impacting other users. I'd be happy to re-label it as \"experimental\" or something, but would rely on your coaching :)",
      "createdAt": "2023-01-30T19:47:59Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5IuQvE",
        "title": "feat(runtime): up level graal vm js engine lang level",
        "url": "https://github.com/walmartlabs/concord/pull/709"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOCXIH6s5UA9HD": {
      "id": "IC_kwDOCXIH6s5UA9HD",
      "body": "Totally, I made an erroneous claim. What you proposed is what i originally did (more or less)… but all plugins write to the passed Variables in practice, so i undid that impl, thus undid the pure soln. While less pure, at least i got the handy ergo property. On \"the script _should ..._\", 1) the variables constructor isn't available in the scripting context, and 2) writing to the current context Variables instance is status quo Concord pattern. if `execute` methods didn't all return `void`, that'd be pretty handy, but were in a mutate-the-variables world, so this solution supports the current workflow.",
      "createdAt": "2023-01-30T23:54:18Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5I3Rb9",
        "title": "feat: init easy script Variables instantiation",
        "url": "https://github.com/walmartlabs/concord/pull/711"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOCXIH6s5UOLdx": {
      "id": "IC_kwDOCXIH6s5UOLdx",
      "body": "this was my immutable attempt from a few days ago. i'm not our best java guy--https://github.com/walmartlabs/concord/compare/master...cdaringe:concord:feat/easier-variables-script-instantiation-2?expand=1\r\n\r\nthe objective was to say \"ok, given whatever the backing impl of Variables is, make a copy of it...\" but that may have been naive as well. i need to understand how concord actually resolves variables from context",
      "createdAt": "2023-02-02T01:09:51Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5I3Rb9",
        "title": "feat: init easy script Variables instantiation",
        "url": "https://github.com/walmartlabs/concord/pull/711"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOAT9aAc5USOQr": {
      "id": "IC_kwDOAT9aAc5USOQr",
      "body": "hey @andrewbranch, thanks!\r\n\r\n> You've always been able to add arbitrary global types\r\n\r\n_kind of_! set me straight. these are the kind of global types inclusion by types config field and/or triple-slashes:\r\n\r\n`/// <reference path=\"...\" />` - assumes types are local to my project (they're not!)\r\n`/// <reference types=\"...\" />` - assumes they are @types/ prefixed node packages \r\n`/// <reference lib=\"...\" />` - isn't a general \"lib\", is an enum of env specific libs\r\n\r\nwhat's missing is:\r\n\r\n`/// <reference package=\"...\"` from my perspective.\r\n\r\ndue to reasons, i cannot publish to DefTyped. feasibly i could `path=\"../../node_modules/foo/bar/index.d.ts`, but that's cumbersome in my particular codebase.\r\n\r\nfor that reason, i thought \"well, i could feasibly intercept one of the lib resolvers!\". it ended up having other quirks, so i may pick a new path. but i'd love to have a `<reference package-name='...' />` for this reason",
      "createdAt": "2023-02-02T16:57:14Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzI4NzcxOTgy",
        "title": "Support resolving `@typescript/[lib]` in node modules ",
        "url": "https://github.com/microsoft/TypeScript/pull/45771"
      },
      "repository": {
        "nameWithOwner": "microsoft/TypeScript"
      }
    },
    "IC_kwDOAT9aAc5UT8pz": {
      "id": "IC_kwDOAT9aAc5UT8pz",
      "body": "Holy guacamole, why didnt i even try!? The docs are adequate, but I misinterpreted them. Thx",
      "createdAt": "2023-02-02T23:39:12Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0NzI4NzcxOTgy",
        "title": "Support resolving `@typescript/[lib]` in node modules ",
        "url": "https://github.com/microsoft/TypeScript/pull/45771"
      },
      "repository": {
        "nameWithOwner": "microsoft/TypeScript"
      }
    },
    "IC_kwDOCzdphs5UnvLx": {
      "id": "IC_kwDOCzdphs5UnvLx",
      "body": "Sure! Its closed source, but we pretty much use only listStrings, addString, and listTranslations from the crowdin api client.\r\n\r\nif you look at where handleError is used, it looks to be mainly attached to http client error handlers. handleError expects an Error nested on an .error field, but you can see various places where this re nesting is not occurring. Removing the use of any, and replacing the params with just (error: Error) or (e: { error: Error }) will probably force healthly refactors at call sites within the API client",
      "createdAt": "2023-02-06T20:25:04Z",
      "issue": {
        "id": "I_kwDOCzdphs5dw8dG",
        "title": "RFC: Refactor handleError to explicitly accept Error instances",
        "url": "https://github.com/crowdin/crowdin-api-client-js/issues/225"
      },
      "repository": {
        "nameWithOwner": "crowdin/crowdin-api-client-js"
      }
    },
    "IC_kwDOCXIH6s5UvO31": {
      "id": "IC_kwDOCXIH6s5UvO31",
      "body": "kind and cordial bump. it's been a couple of weeks. thanks!",
      "createdAt": "2023-02-07T23:59:22Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5IuQvE",
        "title": "feat(runtime): up level graal vm js engine lang level",
        "url": "https://github.com/walmartlabs/concord/pull/709"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOCzdphs5U0mYJ": {
      "id": "IC_kwDOCzdphs5U0mYJ",
      "body": "i'm going to try and take a stab at this now",
      "createdAt": "2023-02-08T18:39:42Z",
      "issue": {
        "id": "I_kwDOCzdphs5dw8dG",
        "title": "RFC: Refactor handleError to explicitly accept Error instances",
        "url": "https://github.com/crowdin/crowdin-api-client-js/issues/225"
      },
      "repository": {
        "nameWithOwner": "crowdin/crowdin-api-client-js"
      }
    },
    "IC_kwDOCzdphs5U1WnO": {
      "id": "IC_kwDOCzdphs5U1WnO",
      "body": "most all current tests passed... not sure how to get info from these \"Basic\" checks. clicking the links end up all being self referential 😵 ",
      "createdAt": "2023-02-08T21:38:02Z",
      "issue": {
        "id": "PR_kwDOCzdphs5Jj_mZ",
        "title": "refactor: improved error handling and error types",
        "url": "https://github.com/crowdin/crowdin-api-client-js/pull/226"
      },
      "repository": {
        "nameWithOwner": "crowdin/crowdin-api-client-js"
      }
    },
    "IC_kwDOADHRAs5U79P-": {
      "id": "IC_kwDOADHRAs5U79P-",
      "body": "hey @eemeli, hope all is well. re-reading thru this issue i'm still trying to degrok things, but curious if you'd be willing to give @dpchamps or myself any concrete guidance here for a solution you'd be interested in supporting. Thanks for your time and consideration",
      "createdAt": "2023-02-10T00:09:57Z",
      "issue": {
        "id": "PR_kwDOADHRAs4zb6aU",
        "title": "feat(core): Support locale variants in messages object",
        "url": "https://github.com/messageformat/messageformat/pull/360"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDOCXIH6s5VQguJ": {
      "id": "IC_kwDOCXIH6s5VQguJ",
      "body": "> There's lots of formatting changes. Concord uses the default IDEA formatting rules, please re-format.\r\n\r\nI agree. The format changes are seemingly extreme. I've used both:\r\n\r\n1. the hotkey that ben shared, and\r\n2. the context menu\r\n\r\nboth produce the same results\r\n\r\n<img width=\"504\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1003261/218864911-cc93ce80-9441-4384-a9c0-17baa821e5c1.png\">\r\n\r\ni'm not a java nor intellij common user, so forgive me, but afaik i'm doing the obvious thing. what could i be missing?",
      "createdAt": "2023-02-14T21:18:28Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5IuQvE",
        "title": "feat(runtime): up level graal vm js engine lang level",
        "url": "https://github.com/walmartlabs/concord/pull/709"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOCXIH6s5VQoMp": {
      "id": "IC_kwDOCXIH6s5VQoMp",
      "body": "> dashes in keys aren't great\r\n\r\nreplaced with `esLevel` instead. i don't recall if this team is biased towards `camelCase` or `snake_case` options.",
      "createdAt": "2023-02-14T21:50:20Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5IuQvE",
        "title": "feat(runtime): up level graal vm js engine lang level",
        "url": "https://github.com/walmartlabs/concord/pull/709"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOCXIH6s5Vjeiz": {
      "id": "IC_kwDOCXIH6s5Vjeiz",
      "body": "`MainTests.java` also formatted pretty drastically by intellij autoformatting.\r\n\r\nreview is very easy by using GitHub's `?w=1` flag:\r\n\r\nhttps://github.com/walmartlabs/concord/pull/709/files?w=1",
      "createdAt": "2023-02-17T22:44:55Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5IuQvE",
        "title": "feat(runtime): up level graal vm js engine lang level",
        "url": "https://github.com/walmartlabs/concord/pull/709"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOCXIH6s5VllU0": {
      "id": "IC_kwDOCXIH6s5VllU0",
      "body": "> This cannot be merged until the formatting is fixed. Please use the default code style in IDEA.\r\n\r\neditorconfig plugin was interfering. 7fcbcf6",
      "createdAt": "2023-02-19T07:36:18Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5IuQvE",
        "title": "feat(runtime): up level graal vm js engine lang level",
        "url": "https://github.com/walmartlabs/concord/pull/709"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOCXIH6s5VxQgS": {
      "id": "IC_kwDOCXIH6s5VxQgS",
      "body": "how can i access the logs for the failed `its` jobs?",
      "createdAt": "2023-02-21T19:18:12Z",
      "issue": {
        "id": "PR_kwDOCXIH6s5IuQvE",
        "title": "feat(runtime): up level graal vm js engine lang level",
        "url": "https://github.com/walmartlabs/concord/pull/709"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOJAwOps5Vxfxl": {
      "id": "IC_kwDOJAwOps5Vxfxl",
      "body": "Strangely, df6eeeea56b278603f16bfe7a5c9675c431a1d1b deleted source string `foo_a`, but then 39c857ba9fd3418bf709fd712731dba7799f6986 added it back sometime later. This is hazardous. How to protect against this 🤔 ",
      "createdAt": "2023-02-21T20:14:58Z",
      "issue": {
        "id": "PR_kwDOJAwOps5KdSMQ",
        "title": "New Crowdin updates",
        "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/5"
      },
      "repository": {
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      }
    },
    "IC_kwDOJAwOps5Vxgv3": {
      "id": "IC_kwDOJAwOps5Vxgv3",
      "body": "it also happened in https://github.com/cdaringe/crowdin-github-integration-poc/pull/6/commits/5e30e408c6c3865c279913eae471fee588757d94. a source string was changed, and the first sync _reverts_ the change. there's some off by one issue in the GH integration it seems",
      "createdAt": "2023-02-21T20:18:41Z",
      "issue": {
        "id": "PR_kwDOJAwOps5KdSMQ",
        "title": "New Crowdin updates",
        "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/5"
      },
      "repository": {
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      }
    },
    "IC_kwDOCzdphs5V4Q9N": {
      "id": "IC_kwDOCzdphs5V4Q9N",
      "body": "got some tests goin too: 8ce133c",
      "createdAt": "2023-02-22T21:21:09Z",
      "issue": {
        "id": "PR_kwDOCzdphs5Jj_mZ",
        "title": "refactor: improved error handling and error types",
        "url": "https://github.com/crowdin/crowdin-api-client-js/pull/226"
      },
      "repository": {
        "nameWithOwner": "crowdin/crowdin-api-client-js"
      }
    },
    "IC_kwDOF1oLvc5V5n6E": {
      "id": "IC_kwDOF1oLvc5V5n6E",
      "body": "ah man, i wish you would have filed an issue with me. would have loved to fix/refactor those problems. (:wave: factorio-type-kit guy)",
      "createdAt": "2023-02-23T03:22:29Z",
      "issue": {
        "id": "I_kwDOF1oLvc4-FsA9",
        "title": "What does this do over `factorio-type-kit`?",
        "url": "https://github.com/GlassBricks/typed-factorio/issues/4"
      },
      "repository": {
        "nameWithOwner": "GlassBricks/typed-factorio"
      }
    },
    "IC_kwDOF1oLvc5V5oA9": {
      "id": "IC_kwDOF1oLvc5V5oA9",
      "body": "...this is much better :)",
      "createdAt": "2023-02-23T03:23:16Z",
      "issue": {
        "id": "I_kwDOF1oLvc4-FsA9",
        "title": "What does this do over `factorio-type-kit`?",
        "url": "https://github.com/GlassBricks/typed-factorio/issues/4"
      },
      "repository": {
        "nameWithOwner": "GlassBricks/typed-factorio"
      }
    },
    "IC_kwDOAt43r85Xb4-T": {
      "id": "IC_kwDOAt43r85Xb4-T",
      "body": "As a nx user and a pnpm user and a pnpm+nx user, there are many reasons why would or wouldnt. Reasons to not would be high maintenance costs, poor debugging story, high noise:signal ratio of boilerplate, stringly typed references to workspace/project entities. There are good reasons as well (affected). Not sure nx is worth the effort for a project of this size. Were i the maintainer, Id opt out until something demanded it",
      "createdAt": "2023-03-13T20:44:01Z",
      "issue": {
        "id": "PR_kwDOAt43r85HbFy4",
        "title": "Use pnpm + workspaces",
        "url": "https://github.com/rjsf-team/react-jsonschema-form/pull/3382"
      },
      "repository": {
        "nameWithOwner": "rjsf-team/react-jsonschema-form"
      }
    },
    "IC_kwDOGKvm485X8gVQ": {
      "id": "IC_kwDOGKvm485X8gVQ",
      "body": "per reading #4188, users are supposed to generate the cargo.yaml through a bit of manual & (subjectively slow) process. Should a _default_ Cargo.yaml be placed there, and nextpack dev _overriddes/updates_ it?\r\n\r\nminimally, an patch to `CONTRIBUTING.md` is warranted",
      "createdAt": "2023-03-20T01:23:06Z",
      "issue": {
        "id": "I_kwDOGKvm485hOlp7",
        "title": "[turbopack] rust-analyzer broken due to missing Cargo.toml in #4188",
        "url": "https://github.com/vercel/turbo/issues/4260"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOGKvm485X8gi8": {
      "id": "IC_kwDOGKvm485X8gi8",
      "body": "blarg, the `--sync` script fails:\r\n\r\n```\r\nSynchronizing nextpack Cargo.toml with Turbo and Next.js…\r\nconflicting dependency:\r\n  next:  httpmock = { default-features = false, version = \"0.6.7\" }\r\n  turbo: httpmock = \"0.6.7\"\r\nconflicting dependency:\r\n  next:  turbo-tasks-fetch = { default-features = false }\r\n  turbo: turbo-tasks-fetch = {}\r\nSynchronizing nextpack Cargo.lock with Turbo and Next.js…\r\nconfliction lockfile entry dependencies:\r\n  next:  twox-hash 1.6.3 -> cfg-if = 0.1.10\r\n  turbo: twox-hash 1.6.3 -> cfg-if = 1.0.0\r\n\r\n### Merged with conflicts: 2 conflicts in Cargo.toml, 1 conflicts in Cargo.lock ###\r\n```\r\n\r\ni think it's worth doing a rethink on how this integration works, and if `turborepos` rust IDE toolchain need be coupled to an external project's cargo config",
      "createdAt": "2023-03-20T01:24:55Z",
      "issue": {
        "id": "I_kwDOGKvm485hOlp7",
        "title": "[turbopack] rust-analyzer broken due to missing Cargo.toml in #4188",
        "url": "https://github.com/vercel/turbo/issues/4260"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOAd3Usc5YQI0K": {
      "id": "IC_kwDOAd3Usc5YQI0K",
      "body": "this thread was critical for me! the clap docs & guide didn't call out `default_value = ...`, just `default_value_t = ...`\r\n\r\nthanks!",
      "createdAt": "2023-03-23T05:29:58Z",
      "issue": {
        "id": "I_kwDOAd3Usc5ZdVL7",
        "title": "Support non-Display types with `default_value_t`",
        "url": "https://github.com/clap-rs/clap/issues/4558"
      },
      "repository": {
        "nameWithOwner": "clap-rs/clap"
      }
    },
    "IC_kwDOEqZVJM5YaB-t": {
      "id": "IC_kwDOEqZVJM5YaB-t",
      "body": "i've converted the agent binary to rust, and pushed an improved CLI. hopefully this all snaps together more easily.",
      "createdAt": "2023-03-24T18:09:31Z",
      "issue": {
        "id": "I_kwDOEqZVJM5BENHO",
        "title": "invalid refspec",
        "url": "https://github.com/cdaringe/freshawair/issues/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/freshawair"
      }
    },
    "IC_kwDOFGMkc85Zd5ZE": {
      "id": "IC_kwDOFGMkc85Zd5ZE",
      "body": "the issue is closed, but i don't see the solve. can you elaborate?",
      "createdAt": "2023-04-09T00:54:01Z",
      "issue": {
        "id": "I_kwDOFGMkc85gltnA",
        "title": "Deno instructions",
        "url": "https://github.com/StefanTerdell/zod-to-json-schema/issues/47"
      },
      "repository": {
        "nameWithOwner": "StefanTerdell/zod-to-json-schema"
      }
    },
    "IC_kwDODqUnoM5aO1jN": {
      "id": "IC_kwDODqUnoM5aO1jN",
      "body": "if there was a blessed place to put such code, even checkin results from main, i could be game to add some cases. could be snazzy to--during ci--generate some results, possibly dump a little SVG chart showing commit history against perf.\r\n\r\ndeno does something akin to this: https://deno.land/benchmarks.\r\n\r\nmaybe plop said results in a gh-pages build",
      "createdAt": "2023-04-18T21:56:31Z",
      "issue": {
        "id": "I_kwDODqUnoM5jei02",
        "title": "Benchmark with competitors",
        "url": "https://github.com/colinhacks/zod/issues/2327"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "IC_kwDOBfbSFM5b1SWJ": {
      "id": "IC_kwDOBfbSFM5b1SWJ",
      "body": "hey @AgentEnder, despite improvements, even in the latest, workspace load & inlining is still entirely synchronous. minimally, i'd think nx should be loading all projects into the workspace model concurrently",
      "createdAt": "2023-05-09T18:40:44Z",
      "issue": {
        "id": "I_kwDOBfbSFM5lXGEJ",
        "title": "performance: slow graph load",
        "url": "https://github.com/nrwl/nx/issues/16869"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDOBfbSFM5b1tf3": {
      "id": "IC_kwDOBfbSFM5b1tf3",
      "body": "got it. ya, i'm looking at it from a lens of CI and local. sounds like there are some challenges to making it _rip_ in all scenarios. given that the daemon really only applies to local, i'm prone to keeping the issue open. thoughts?",
      "createdAt": "2023-05-09T19:53:41Z",
      "issue": {
        "id": "I_kwDOBfbSFM5lXGEJ",
        "title": "performance: slow graph load",
        "url": "https://github.com/nrwl/nx/issues/16869"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDODqUnoM5crIB2": {
      "id": "IC_kwDODqUnoM5crIB2",
      "body": "hey friends, this is a pretty simple PR to review. let me know if there's anything i can do to reduce your review burden. i annotated the changes, for example, as a mechanism to make your review more straight forward. i know maintenance is a huge effort, so I want to be courteous of your precious time!",
      "createdAt": "2023-05-19T16:16:36Z",
      "issue": {
        "id": "PR_kwDODqUnoM5QvyfO",
        "title": "fix: ZodEffect in discriminatedUnion",
        "url": "https://github.com/colinhacks/zod/pull/2441"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "IC_kwDOIwpm585dwvzY": {
      "id": "IC_kwDOIwpm585dwvzY",
      "body": "Ya that makes sense. Send a patch n ill accept it, surely. ",
      "createdAt": "2023-06-02T02:47:44Z",
      "issue": {
        "id": "I_kwDOIwpm585njflH",
        "title": "No 'required' field on output schema",
        "url": "https://github.com/cdaringe/runtypes-to-jsonschema/issues/20"
      },
      "repository": {
        "nameWithOwner": "cdaringe/runtypes-to-jsonschema"
      }
    },
    "IC_kwDOIwpm585eiKnk": {
      "id": "IC_kwDOIwpm585eiKnk",
      "body": "hey @cedw032, i pulled your branch and started tinkering with it tonight. i wanted to see if i could dodge the callback and extra options. i think i made it work.\r\n\r\ni apologize for the delay and not taking your commits.\r\n\r\nperhaps you can lend feedback on my impl here?: https://github.com/cdaringe/runtypes-to-jsonschema/commit/9881f9c9a7c9150734b311963a3cd4bc0f6d5dad\r\n\r\ni think it does the trick.\r\n\r\nnow... to fix the auto-publish 🙄 ",
      "createdAt": "2023-06-11T04:41:20Z",
      "issue": {
        "id": "PR_kwDOIwpm585R9ePx",
        "title": "feat: make fields required by default",
        "url": "https://github.com/cdaringe/runtypes-to-jsonschema/pull/21"
      },
      "repository": {
        "nameWithOwner": "cdaringe/runtypes-to-jsonschema"
      }
    },
    "IC_kwDOADHRAs5equ3H": {
      "id": "IC_kwDOADHRAs5equ3H",
      "body": "We integrate with next.js via a webpack plugin.\r\n\r\nThe plugin looks for a .ts file (e.g. messages.ts), and then the loader parser the TS file, gets all of the keys, finds the locale file of interest (e.g. en-US.yaml), parses the file, pumps that parsed k-v pairs of translations thru messageformat, and blamo--has the loader return that very generated module.\r\n\r\nit's straightforward, but... not obvious given that it's many steps required to success",
      "createdAt": "2023-06-12T23:54:28Z",
      "issue": {
        "id": "MDU6SXNzdWU5MTU4MDY5NjI=",
        "title": "@messageformat/react does not support support easy integration with NextJS",
        "url": "https://github.com/messageformat/messageformat/issues/326"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDODqUnoM5e3W79": {
      "id": "IC_kwDODqUnoM5e3W79",
      "body": "hey @colinhacks! hope all is well. this PR has been sitting for a bit, and is a pretty staightforward fix. i don't want to irk anyone on the team, but can i expect feedback anytime soon?",
      "createdAt": "2023-06-14T16:12:12Z",
      "issue": {
        "id": "PR_kwDODqUnoM5QvyfO",
        "title": "fix: ZodEffect in discriminatedUnion",
        "url": "https://github.com/colinhacks/zod/pull/2441"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "IC_kwDOADHRAs5e3foO": {
      "id": "IC_kwDOADHRAs5e3foO",
      "body": ">  I'm a bit concerned about the expansion of state during the compilation\r\n\r\njustifiably so! dig in at your convenience, let me know your thoughts\r\n\r\n> the plural arg is a bit badly named, but I would've thought that it was already tracking the current locale?\r\n\r\nthe `plural/plurals` doesn't track locale. it has a `locale` field, but it's not honest. it's really just the lang, disguised as the locale.\r\n\r\nfor recollection:\r\n\r\n```js\r\nplurals = {\r\n  // Record<LANG_STRING, PluralData>\r\n  en: { cardinals: ..., lc: 'en', locale: 'en' }\r\n}\r\n```\r\n\r\nLogically, this makes sense. A `plural` data-structure _shouldn't_ know about a locale--plural rules are lang driven and not locale associative. If anything, a locale data-structure could have a reference to a plural ruleset, but not vice-versa.\r\n\r\nThus, i couldn't use the `lc` from `plural`. I need the actual/full locale code, e.g. `en-US`, not just the lang.",
      "createdAt": "2023-06-14T16:27:08Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDOADHRAs5e3lrj": {
      "id": "IC_kwDOADHRAs5e3lrj",
      "body": "I've now also updated & fixed the docs.",
      "createdAt": "2023-06-14T16:41:58Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDODWGI885e39oJ": {
      "id": "IC_kwDODWGI885e39oJ",
      "body": "At Walmart, our c, java, and javascript ICU MFv1 implementations use extensive markup, _without_ the need for ICU MF direct markup support. I was surprised to see markup supported here in MFv2. As a heavy user of markup, I am biased to MF offering a pattern of IOC--giving me full control of-all-things-formatting-and-templating--as opposed to a limited markup DSL within MF.  That's a bit abstract, so allow me to share a micro-demo below.\r\n\r\nTo support not only markup, but all other use cases where a user may want to _tap_ or _map_ over formatted strings, we extended MFv1 to add an optional `fmt`/callback at each visit to `variable`:\r\n\r\nDemo:\r\n\r\n```yaml\r\ntermsAndConditions: Read and agree to our {termsText, select, other {Terms of Use}} and ...SNIP...\r\n```\r\n\r\n\r\n```tsx\r\nm(messages, \"termsAndConditions\", {\r\n  termsText: {\r\n    fmt: (x) => (\r\n      <Link className=\"dark-gray\" href={externalTermsHref}>\r\n        {x}\r\n      </Link>\r\n    ),\r\n  }\r\n})\r\n```\r\n\r\nObservations:\r\n\r\n- on visit-exit of `termsText`, our MFv1 compiler says \"hey, i see `fmt` present. i'll pass the result of the `select` into this format function before continuing to fold my full formatting\r\n- in my `fmt` function, i unlock the following features\r\n   - **unconstrained markup**: I decorate `select` output with rich html/javascript\r\n   - **unconstrained data**: I add _externally scoped data_ directly into my markup. My MF string needs no knowledge of `externalTermsHref`, which is powerful.\r\n   - **unconstrained return type**: I return a `React` component, not a `string`!\r\n\r\nWith respect to the markup DSL,\r\n\r\n1. the markup DSL forces me to encode data that I don't want in my MF strings (e.g. button hrefs, or other non translation relevant content).\r\n1. the markup DSL encourages churn--visual changes likely invoke translation workflows. changing a button href, for example ought not invoke translations submissions, which I'd wager _they would_ practically for development teams\r\n1. the markup DSL locks me into strings\r\n\r\nI do not mean to disparage the markup DSL--I see it's pragmatism too, especially for highly static content!\r\n\r\nHowever, as a MF+markup power-user, I don't want the markup DSL--I want a more powerful format capability that puts markup generation in my control and out of MF entirely.\r\n\r\n1. **I'd need a better way to _enter_ my markup formatting** logic. \r\n   1. In my demo, you can see i abuse the `select` to enter my formatting. Just invoking my format on vars in MFv2 could possibly do the trick:\r\n      2. ` termsAndConditions: Read and agree to our $termsText and ...SNIP...`\r\n2. If MFv2 could offer extension points natively, like my `fmt` callback, really interesting and portable designs could be achieved.\r\n   - For instance, you saw me above map MF => React. Other mappings could occur. For example, I could take my MF outputs and map it into some `AndroidViewPrimitive`, simply by means of letting me participate in the fold/map cycle of MF formatting. **The markup design limits MF to just string output, when the output could possibly support other runtime with an IOC-formatting pattern**.\r\n\r\nFood for thought!\r\n\r\n",
      "createdAt": "2023-06-14T17:45:15Z",
      "issue": {
        "id": "I_kwDODWGI885jA63B",
        "title": "What's left to discuss on markup?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/375"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e4IKO": {
      "id": "IC_kwDODWGI885e4IKO",
      "body": "First off, thank you for thoughtful response.\r\n\r\n> You seem to want to make a proposal for an ICU API??\r\n\r\nI'll take your guidance here. My paramount goal is to ensure that in the next iteration of MessageFormat, something like this can be natively supported _or_ extended in without fuss. In the current state, we have a hacked/modified version of the [JS MessageFormat compiler](https://github.com/messageformat/messageformat) to support this, which is undesirable.\r\n\r\n> Note that this is the MFv2 WG, which is a subcommittee of CLDR-TC, and not the ICU-TC.\r\n\r\nYes yes, apologies for my misleading, grandiose claim :). Sometimes I accidentally equate MF & ICU... just because MF is oft my primary point-of-entry for achieving i18n goals 😄 .\r\n\r\n> A few comments ... associate the country/country code with the phone number rather than hardcoding it into the message pattern\r\n\r\n**Yes**, agreed!\r\n\r\n> A few comments ... intention is for us to include a function into MFv2, the proposal should follow the MFv2 ABNF structure. \r\n\r\n**Yes**, that is my ideal outcome. Further the enum-ish options you've specified looks _spot on_.\r\n\r\nI don't know what to say other than \"your proposal is pretty much exactly what I want!\"",
      "createdAt": "2023-06-14T18:19:25Z",
      "issue": {
        "id": "I_kwDODWGI885ogZ-7",
        "title": "RFC: Support locale phone formatting in future spec or impl ",
        "url": "https://github.com/unicode-org/message-format-wg/issues/391"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e4MCe": {
      "id": "IC_kwDODWGI885e4MCe",
      "body": "> Your architecture forces new DOM generation on each translation\r\n\r\nThis is actually not the case. I am using react in my demo, and react uses VDOM. There are other mitigations to this in React to avoid creating a new ad-hoc react component, but i will omit as the demo above was for MVP only 😄 .\r\n\r\n> Updating translation should preserve identity of elements where possible.\r\n\r\nI agree. I'd posit that using the markup API _or_ the IOC pattern i've discussed above are subjected to the same amount of re-ordering/parenting. I don't see any characteristics that really support one soln or the other w.r.t. to this topic, albeit in my demo, there is bulk _de-duplication_ of markup tags/attributes as it's consolidated to a single callsite. In MFv2, because of the top-level flat nature of nested translations, the markup would likely need be duplicated for n of N match branches (thus arguably many opportunities for hierarchy shifts), but that is really of negligible risk.\r\n\r\n> I believe your architecture won't scale to those.\r\n\r\nMaybe! I looked at your link, and i didn't see anything resonate, even weakly so. You probably see something I don't. [#11` is avoid churn](https://github.com/zbraniecki/fluent-domoverlays-js/wiki/New-Features-%28rev-3%29#11-minimize-churn), which i think the markup DSL offers up a handy footgun to churn.\r\n\r\n\r\nI need to study the spec a little deeply, candidly, because it _could be the case_ that my proposal is solvable thru `:function` formatters. However, i'd want _ad-hoc_ formatter functions, not top level formatters, as the formatting in my demo is _localized_ only to the message being formatted.",
      "createdAt": "2023-06-14T18:31:06Z",
      "issue": {
        "id": "I_kwDODWGI885jA63B",
        "title": "What's left to discuss on markup?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/375"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e4Oop": {
      "id": "IC_kwDODWGI885e4Oop",
      "body": "> the markup DSL forces me to encode data...\r\n\r\n> I doesn't. MF2 markup elements do not have to store attributes that are not localizable\r\n\r\nSorry, maybe I was unclear.  I could have said to be more complete:\r\n\r\n> If my application demands rich attributes in my HTML, MFv2 markup DSL invites me to put this content in translation files. MFv2 does not have another means to attach these attributes to my markup around translated entities, thus they must be placed here. Consequently, I must now expand my markup generation from one system to two systems--my usual HTML generation system (e.g. react, jekyll, gatsy, hugo, vanilla-html|js) AND my MFv2 translation system.\"\r\n",
      "createdAt": "2023-06-14T18:40:16Z",
      "issue": {
        "id": "I_kwDODWGI885jA63B",
        "title": "What's left to discuss on markup?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/375"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e4WlD": {
      "id": "IC_kwDODWGI885e4WlD",
      "body": "> the markup DSL locks me into strings\r\n\r\n> Can you extend that point, I do not understand this concern.\r\n\r\nSure, gladly. Thanks for the callout.\r\n\r\nMF's goal is to offer templatized string => string translations. Markup formats can be supported because they happen to be string based. That's all fine and good!\r\n\r\nStyling/formatting/semantic wrapping of translated content is highly desirable. We all agree that such capability is needed sometimes _within_ a translation. That's certainly settled, as evidenced by the markup DSL to begin with. e.g. `User, please <button href='...'>click here!</button>`.\r\n\r\nThe _core_ problem is that stringy-markup is not a portable between runtimes/environments. Not all users of MFv2 necessarily support stringy-markup-based rendering capabilities. Android and iOS for instance are two extremely common environments where translations get in front of users' eyes & ears, but do not use a stringly-based-markup DSL (sans webview) as their primary rendering primitive. Even in my example in web--I use react as the mechanism for providing renderable content, not strings. MFv2 may support markup, but I needed to put my content in a React component, not a string. Thus, I posit that there is both a more portable mechanism to use the core value of MF (translatable template string generation) whilst supporting _any_ given runtime.\r\n\r\n\r\nMF operates as follows:\r\n\r\n**Current state:**\r\n\r\nGiven an input `I`,\r\nproduce a translated output `string`.\r\n\r\n`<I>(input: I) => string`\r\n\r\nAs discussed, this practically works only in limited environments.\r\n\r\n**Desired state:**\r\n\r\nGiven an input `I`, and\r\ngiven a formatter to adapt translated `string` to my environment/runtime,\r\nproduce a translated output `O`,\r\nwhere `O`\r\n\r\n- default: `<I>(input: I) => string`\r\n- `<I, O>(input: I) => (formattedTranslation: string) => O`\r\n\r\n\r\nMF can continue to do _all_ of the great stuff it does. However, rather than making the assumption that the target runtime wants strings only, allow user-space and/or adapters to tailor the output to work in their environment. This would allow not only _formatting/styling_ to happen in a technology agnostic way, but also greatly _increase_ the capability of MF to run portably across different systems. TLDR, let users provide formatting, map translated outputs. It arguably _could void_ the need for a markup DSL, which I weakly suggest may not be _required_, because given a generic formatting API, voids the need to even embed styling/formatting/markup concerns _in_ my translation content files at all.",
      "createdAt": "2023-06-14T19:06:43Z",
      "issue": {
        "id": "I_kwDODWGI885jA63B",
        "title": "What's left to discuss on markup?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/375"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e4b0U": {
      "id": "IC_kwDODWGI885e4b0U",
      "body": ">  MF2 is not React specific, nor any other high level UI toolkit.\r\n\r\nStrong agreed.\r\n\r\nThe problem though, is UI toolkits that apply formatting _don't all use stringy markup_ for formatting. \r\nText is for UIs, but only few UIs support string markup. Raw HTML does... but is HTML generation _really_ the only possible UI target MF should be compatible with? I think with some small change, MF could be much more widely applicable.\r\n\r\nI suggest that MF could offer the option _not concern itself with markup_ at all. Instead, let the `MF` callee own taking the translated strings, and converting them into the UI primitive of choice.\r\n\r\nMF should organize formatted raw string content (it already does). It is an over-step, or an undersight, IMHO, for MF to assume that it should do a `formattedParts.join(\"\")` at the end of the formatting process. By default, I think MF really should be doing something like:\r\n\r\n```js\r\nthis.compiler.envAdapter.format(opts, ...orderedTranslatedStringParts)\r\n```\r\n\r\nMF could _get out of the game_ of producing final strings, and instead focus on the production and ordering of translatable entities, and letting the runtime figure out how to present them. Psuedo code examples:\r\n\r\n```jsx\r\n// js-strings\r\nconst format: (opts, parts: TranslatedStringPart[]) => parts.map(p => opts.fmt[p.key] ? opts.fmt(p.key, p.valu,) : p.value;\r\n\r\n// react strings\r\nconst format: (opts, parts: TranslatedStringPart[]) => <>parts.map(p => opts.fmt[p.key] ? opts.fmt(p.key, p.value) : p.value</>\r\n```\r\n\r\n```java\r\nFormatFn format: (opts, parts: ArrayList<TranslatedStringPart>) => parts.stream().map(p -> {\r\n  if (opts.fmt[p.key])(\r\n    return opts.fmt(p.key, p.value);\r\n  }\r\nreturn p.value;\r\n}).collect().join(\"\")\r\n```\r\n\r\nSorry if I'm too verbose 🤓 . Just trying to articulate clearly. We're also clearly both at our keyboards at the same time, so our responses are a bit out-of-order 😄 .",
      "createdAt": "2023-06-14T19:23:40Z",
      "issue": {
        "id": "I_kwDODWGI885jA63B",
        "title": "What's left to discuss on markup?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/375"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e5YME": {
      "id": "IC_kwDODWGI885e5YME",
      "body": "Hey @eemeli! As usual, great points. Thanks for helping disambiguate. Your feedback prompted me to challenge some of my assumptions.\r\n\r\n`resolveMessage` is precisely the type of output i'm talking about. Thanks for sharing that snippet. In my naive perception of the world, such an output would indeed be _part of the MF2_ spec, vs the interface being a pure implementation detail for any given runtime, such as the `Intl` API.\r\n\r\n> Are your concerns related to the shape of MF2 messages, or the APIs for formatting them?\r\n\r\nThe APIs for formatting them.\r\n\r\nIn my myopic understanding of the ecosystem, I would think that this WG could specify some amount interface definitions for binding impls to satisfy. By specifying some well-known interfaces, such as  `resolveMessage`, it _could_ promote language or runtime impls that ensure MessageFormat works _great_ for all end-user developers. For example, my ios friend had a very challenging time adapting his `C`lang MFv1 impl to support formatting/styling/layout. MFv2 markup wouldn't help him. Markup pretty much only works for web. That's not an absolutely claim (there are obviously more markup languages than HTML), but practically speaking, MFv2 now has a subjectively \"web only\" feature in it. I think that's a mistake. We're giving a formatting API to web devs who use direct HTML explicitly via markup, but we're not giving any similar API to any other type of user. The iOS dev had to hack his MF impl deeply to de-stringify it. What a delight it would have been to say \"the MFv1 API output yields structured data of known form (see `resolveMessage` output). Because of this, you can easily adapt it to your runtime\".\r\n\r\n>  practically speaking, MFv2 now has a subjectively \"web only\" feature in it. I think that's a mistake.\r\n\r\nI think it's fair to posit that defining implementation interfaces is not MF's role. MF could define the input only, and any given engine could define how to parse and produce output freely. I do, however, think it would be _beneficial_ to specify at least some subjective amount of API contract. I believe cases _just like this_ are actually quite easy to overlook. A naive implementer for any given runtime may produce a string-only output API, not a lovely `resolveMessage` API as you have presented. You have the experience and wisdom to author smart bindings like that. Could MF itself not promote such wise bindings as part of its specification? If `messageformat-haxe-bindings` came into existence tomorrow, should we not recommend `resolveMessage`, or give the haxe implementer a suite of golden cases to test compliance against?\r\n\r\nI'm thinking out loud. Thanks for reading this far.\r\n\r\nI was looking at the [goals](https://github.com/unicode-org/message-format-wg/blob/d5976c043135b2821d52f1cec1364a36eae84612/docs/goals.md#goals) page. Goals 4 & 6 both somewhat suggest this WG _could_ promote such an interface, but goal 6 also kind _demotes_ the idea too 😄 .\r\n\r\nI can imagine something like:\r\n\r\n```md\r\n# MessageFormat\r\n\r\nDefinition: A suite of specifications promoting developer-friendly translation workstreams regarding the production of user-facing text.\r\n\r\n## Specifications\r\n\r\n- Syntax: ...\r\n- Required APIs:\r\n   - (t: JSONInput) => ResolvedMessageOutput\r\n- Recommended APIs:\r\n   - ResolvedMessageOutput => string\r\n   - <O>(o: ResolvedMessageOutput) => O \r\n- Golden data (input/output cases): ... \r\n```\r\n\r\nI'll be mulling over this more.\r\n",
      "createdAt": "2023-06-14T22:57:42Z",
      "issue": {
        "id": "I_kwDODWGI885jA63B",
        "title": "What's left to discuss on markup?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/375"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e-mPL": {
      "id": "IC_kwDODWGI885e-mPL",
      "body": "Interesting discussion!\r\n\r\n> What is the requirement in MF for markup support?\r\n\r\n@aphillips, my gut tells me that this is (maybe?) somewhat of a secondary question. I'm hunting through these issues, trying to to see the roots of the markup discussion. I cordially ask, could the primary question more accurately be:\r\n\r\n> How shall MFv2 robustly allow for the enhancement of MFv2 messages?\r\n\r\n...where enhancement could be loosely defined as \"customization of the resultant message to add styling, accessibility, or other functionality within the target runtime\". Markup is one mechanism to achieve that end-goal. However, markup does not serve many users in the MF userbase (re: #272).\r\n\r\n| Supported Runtimes or Devtools | MF Text Enhancement Feature  |\r\n| --- | --- |\r\n| HTML, XHTML, XML, SVG, markup langs, templating engines (which all serialize to an aforementioned format) |  `markup` |\r\n| iOS, Android, ...most-native app toolkits, ...most-browser-side-web-frameworks, ...most-game-dev-frameworks |  🚨 **none/missing** |\r\n\r\nIf we support markup, we do so knowing that it has limited utility. For huge swaths of MF interested users, it has _no_ use at all. @mihnita [has been saying the same thing](https://github.com/unicode-org/message-format-wg/issues/272#issuecomment-1133448343) more or less, this time, last year. I think it's a pretty tough argument to make that MF should implement markup, given how low utility it is in _so many programming contexts_. I do however, deeply desire the capability that markup offers, but I seek it via a mechanism that works for everyone.\r\n\r\nI weakly hold the position that if we want to support a goal of enhancing translated text, we should do it once, do it well, and support everyone. Eemile pointed to [MessageValue](https://github.com/tc39/proposal-intl-messageformat#messagevalue) as a standard output of MF libs that could be a \"works everywhere\" way for every runtime to apply markup-like-enhancements. It does not offer formatting directly like markup does, but it offers an intermediate representation that let's us achieve the same goals.\r\n\r\nFwiw, eemile [explicitly disagrees](https://github.com/unicode-org/message-format-wg/issues/272#issuecomment-1315351036) with making this output _part of the MF spec_. I respect his opinion, so that gives me pause. However, if we agree that all users should be able to apply enhancements, should we really be including a redundant feature--`markup`--at all? My current stance is no. We shouldn't offer markup for enhancements because it's not x-platform. We should offer some formalism that allows enhancements everywhere.",
      "createdAt": "2023-06-15T17:25:42Z",
      "issue": {
        "id": "I_kwDODWGI885e6Nf1",
        "title": "Clarify that standalone markup is permitted.",
        "url": "https://github.com/unicode-org/message-format-wg/issues/356"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e-nkJ": {
      "id": "IC_kwDODWGI885e-nkJ",
      "body": "@zbraniecki, i didn't realize until this morning that #272 is more or less a dupe of this conversation. i'll take it up over there or in #356. apologies for leaking this topic between issues",
      "createdAt": "2023-06-15T17:29:46Z",
      "issue": {
        "id": "I_kwDODWGI885jA63B",
        "title": "What's left to discuss on markup?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/375"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e_WZe": {
      "id": "IC_kwDODWGI885e_WZe",
      "body": "edit: I've collapsed my distracting comments below. Fundamentally, conversations in the working group have had ambiguity over the meaning of term \"markup\", and my comment is me not understanding the context for which this conversation was happening. I kept it there, but it's just noise 😄 \r\n\r\n<details>\r\n> @cdaringe, do you think that this is too much to include?\r\n\r\nHey eemeli, point taken. I interpret your point internally as \"Hey, the spec here is minimal, it's open/flexible, it's really low cost of ownership, and likely empowering to many users\". That's my expanded interpretation--and if i'm somewhat close to your intent--it's a fair point!\r\n\r\nI _would_ still posit that markup support is too much to include (with again, a weakly held stance). I'm thinking and typing simultaneously--here are a few reasons that came to mind against inclusion:\r\n\r\n1. **churn**. Inclusion invites churn from user space. In practice, for example, in teams that I work with, any time a source translation file is changed, it triggers a wholistic translation process. If I added `id=foo` to `<span>Greetings, {friend}!</span>`, in most teams I partner with, that would trigger a translation push and pull cycle. I think it's an avoidable hazard. That is extremely subjective, I am aware, but based on experience, it would happen for many teams. Is it MF's role to concern itself with this? Maybe not, but we could certainly prevent it in favor of something better!\r\n2. **dev-ux**. Inclusion couples runtime-specific-text-enhancements inside the translation system, vs inside of the runtime system. If I'm a swift-ui developer, I'm used to enhancing content with swift-ui tools. Sure, maybe there's some markup processor that my translation team uses that pre-processes stuff for swift-ui, but now I'm getting enhancements from _two_ sources, and the pre-processor could also be entirely avoided with a better MFv2 promoted design (e.g. MessageValue processing). We could all easily keep runtime enhancements out of our translation system and only keep enhancements within our runtime system. Capabilities are also diminished. If i needed to bind a programatic reference inside of one my enhancements, such as a converting some text into a clickable button with a callback function, how am I to represent that in the markup? Keeping enhancements in the runtime is really much more flexible than a flexible markup DSL.\r\n3. **empathy**. Our ICU MFv1 translators do not like translating source with markup in it. Their tools _help_ them sift through this, but it creates a high noise:signal ratio in some circumstances. For instance, we have some styled email templates that are markup rich that my translation partners loathe getting patches to.\r\n4. **universality**. if it doesn't work for everybody, pick something else. We can keep the spec tighter, and instead have a sound universal solution.\r\n\r\nPoints 1 & 4 are a bit weak, but i think 2 & 3 have some real merit. software is art 🎨 . Please interpret my massive response just as exploration of the topic, not as passionate argument against😄 .\r\n\r\n> you keep repeating a claim that markup does not work for many UI toolkits\r\n\r\nForgive me, I just perceived this to be clear on the surface. I'd love to see any evidence on how markup _could_ work _pragmatically_ with other toolkits. In lieu, I present an example. Let's suppose that I own and operate the following apps:\r\n\r\n1. an android app, using compose,\r\n1. an android app, using vanilla android provisions\r\n1. an ios app using swift ui\r\n1. an ios app using vanilla ios provisions,\r\n1. a web app using vue,\r\n1. a web app using react,\r\n1. a web app using vanilla-js/html\r\n\r\nGreat! Now, my company WhizBangCorp™ needs to up update their terms of service in their various UXes.  The \"foo bar baz\" warning wasn't **bold** enough. Sure. Ok, every dev team now needs to go make something bold.\r\n\r\nMarkup is the ICU MFv2 text enhancement strategy. It's not coupled to web, can it work everywhere? If we need to make something bold, surely we can use markup! Let's try it:\r\n\r\nOld message: `foo bar baz `. \r\nInput string: `foo {+b}bar{-b} baz`. \r\n\r\nQuestion: What is (likely) rendered on 6 of 7 of my UIs?\r\nAnswer: the markup is _literally_ rendered, not processed. All of the aforementioned toolkits, besides the native html version, do not _natively_ process markup. I make a logical leap here, and assume/imply that the MFv2 libs in these ecosystems offer _similar_ APIs to those that exist now for MFv1.\r\n\r\nOne could say, either:\r\n\r\n1. \"hey! you used the wrong type of markup! you need to use markup that is tailored to each platform!\"\r\n   1. Markup processing is not part of the default behavior for any of these extremely common toolkits.\r\n      1. a markup pre-processor would need to be added in front of each call.\r\n         6. pre-processing markup would be a subjectively poor design for all of these platforms\r\n            7. it is totally avoidable subsystem. a standard API output type like `MessageValue` would void the need for any markup parsing.\r\n            8. markup processing possibly incurs non-trivial performance penalties\r\n            9. using markup requires shimming support in for non-native DSL. e.g. in android, maybe i'd need to parse `pug` syntax and convert it to `Spannable`\r\n           10. I cannot imagine mobile devs wanting to to apply any markup processing for their formatting needs.\r\n1. \"It's not up to MFv2 to define the APIs allowing each platform to apply enhancements, including how to process any markup\"\r\n   1.  Then why offer markup at all? MFv2 markup support is unambiguously allowing **runtime enhancements** into the MFv2 grammar. MFv2, in my opinion, is saying \"hey, we're not a UI toolkit. buuuuut when you are compelled, feel free to embed a bunch of your runtime content in your translation content. If you're runtime doesn't allow you to embedded your enhancements within our DSL, you're out of luck.\"\r\n\r\n\r\nWoof, that was a serious wall of content. Hopefully it clarifies my perception.\r\n</details>",
      "createdAt": "2023-06-15T20:09:55Z",
      "issue": {
        "id": "I_kwDODWGI885e6Nf1",
        "title": "Clarify that standalone markup is permitted.",
        "url": "https://github.com/unicode-org/message-format-wg/issues/356"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885e_uQP": {
      "id": "IC_kwDODWGI885e_uQP",
      "body": "i'm using [markup](https://developer.mozilla.org/en-US/docs/Glossary/markup) as my interpretation of markup. i perceive this is what the others are referring to as well. zibi & eemeli are asserting that this WG supports the most abstract/open as possible markup, no particular flavor.\r\n\r\n> To clarify: I don't thing supporting \"markup\" is very useful if by that we mean \"real markup\" ... very important to support a way to tag sections of a string in certain ways.\r\n\r\nyes and yes! this is a fine concise synopsis :). markup alone doesn't get us the tagging we need for other platforms' text-enhancement needs.\r\n",
      "createdAt": "2023-06-15T21:47:06Z",
      "issue": {
        "id": "I_kwDODWGI885e6Nf1",
        "title": "Clarify that standalone markup is permitted.",
        "url": "https://github.com/unicode-org/message-format-wg/issues/356"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885fGjrT": {
      "id": "IC_kwDODWGI885fGjrT",
      "body": "A stripped down, constrained version of the status-quo MFv2 markup syntax.\r\n\r\n```yaml\r\nMFv2 (current): foo {+bar}bar{-bar} baz\r\nMFv2 (proposed): foo {@bar}bar{/@bar} baz\r\n# MFv2 (proposed): föö bäz {@bar}baari{/@bar}\r\n```\r\n\r\nIn terms of [resolveMessage](https://github.com/tc39/proposal-intl-messageformat#messagevalue), creation of a spec-blessed `MessageMarker`, in exchange of `MessageMarkup`.\r\nIf a message can be considered a 1-dimensional collection of ordered UI parts, a `MessageMarker` is a named index/position in that ordering.\r\n\r\nIn this minimal example, the _markup_ messages and _marker_ messages were semantically indistinguishable, so it is not very interesting.\r\n\r\nA more interesting example:\r\n\r\n```yaml\r\nMFv1: Click <a href={url}>here</a> to continue\r\nMFv2 (current): \"{Click {+a href=$url}here{-a} to continue}\"\r\n\r\n# allowed, preferred from user-space\r\nMFv2 (proposed): \"{Click {@a}here{/@a} to continue}\"\r\n# still allowed, less preferred from user-space\r\nMFv2 (proposed): \"{Click <a href={$url}>here</a> to continue}\"\r\n```\r\n\r\n**Q:** Where's the URL in the first `MFv2 (proposed)` example?\r\n**A:** Intentionally removed. Where markup permits value/options, a marker does not--text enhancement must happen in application code, using the runtime of interest.\r\n\r\n**Q:** How do we apply enhancements/formatting/TTS/accessibility-hints in application-space runtimes?\r\n**A:** See [here](https://github.com/tc39/proposal-intl-messageformat#messagevalue). It's wonderfully written, and is the exact solution we need in _all_ MFv2 contexts, not just in JS. Runtime bindings may now gracefully author runtime compatible `MessageValue` processors. Promoting `MessageValue` into the MFv2 specification as a well-known format promotes MFv2 capability to more programming contexts.\r\n\r\nSupposing that `MessageValue` was indeed promoted into MFv2, here's what runtime consumption could look like. I've used three runtimes (html/js, react/js, and gtk/ocaml) as three valid MFv2 consumers who need `string/markup`, `React.Node`, and `GtkText.text` primitives respectively to apply enhancements in their associated runtimes. In the following examples, an arbitrary marker, `\"a\"`, is used to create a span-region to apply link formatting/decoration. Hidden from the below snippets are `resolveMessage` implementations and map-reduction of the `MessageValue` innards to map captured `\"a\"` `MessageValue` nodes into their enhanced versions. **[source code here](https://github.com/cdaringe/message-format-v2-runtime-message-value-binding-demos/tree/main)**\r\n\r\n```js\r\n// demo: HTML target runtime\r\n// runtime-demos/js/html/index.mjs\r\nconst url = \"https://example.com\";\r\nconst html = htmlBinding.fmt(\"en\", \"{Click {@a}here{/@a} to continue}\", null, {\r\n  a: (children) => [`<a href=\"${url}\">`, ...children, `</a>`], // html: string productions are fine!\r\n});\r\nconsole.log(html); // Click <a href=\"https://example.com\">here</a>\r\n```\r\n\r\n```js\r\n// demo: React target runtime\r\nconst url = \"https://example.com\";\r\nconst MyReactComponent = reactBindings.fmt(\"en\", \"{Click {@a}here{/@a} to continue}\", null, {\r\n  a: (children) =>\r\n    React.createElement( // react: React.ReactElements are required\r\n      \"a\",\r\n      { href: url },\r\n      children.map((c) => (c instanceof MessageValue ? c.toString() : c))\r\n    ),\r\n});\r\nReactDom.renderToString(MyReactComponent); // Click <a href=\"https://example.com\">here</a>\r\n```\r\n\r\n```ocaml\r\n(* demo: ocaml + GTK target runtime *)\r\nmodule MF = struct\r\n  (* (text, gtk_tags_to_decorate_partial_buffers *)\r\n  type formatted = (string * string list)\r\n  let fmt locale msg data ?(enhancer_map=GtkEnhancer.empty) (buffer:GText.buffer) =\r\n      resolve_msg locale msg data\r\n      |> snip_snip_snip\r\nend\r\n\r\nlet fmt_link children: formatted list =\r\n  let fn (text, tags) = (text, List.cons \"link\" tags) in\r\n  List.map fn children\r\nlet enhancer_map = GtkEnhancer.of_list [(\"a\", fmt_link)]\r\nlet fmt_gtext = fmt ~enhancer_map \"en\" \"{Click {@a}here{/@a} to continue}\" None\r\nbuffer#create_tag ~name:\"link\" [`FOREGROUND \"blue\"] |> ignore;\r\n\r\nfmt_gtext buffer |> ignore;\r\nw#show ();\r\n```\r\n\r\nI added OCaml + GTK as perhaps _less_ common toolkits in order to demonstrate how promoting `MessageValue` into the spec could make MFv2 very widely applicable. E.g. if it works here, it could work anywhere.\r\n<img width=\"277\" alt=\"image\" src=\"https://github.com/unicode-org/message-format-wg/assets/1003261/21a947ef-817c-4ba7-9349-411d0d3b69b9\">\r\n",
      "createdAt": "2023-06-17T00:55:15Z",
      "issue": {
        "id": "I_kwDODWGI885e6Nf1",
        "title": "Clarify that standalone markup is permitted.",
        "url": "https://github.com/unicode-org/message-format-wg/issues/356"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885fOXVZ": {
      "id": "IC_kwDODWGI885fOXVZ",
      "body": "1. Could this PR be considered part of an _unmentioned_ step in https://github.com/unicode-org/message-format-wg/pull/396? Could this data-model is may be just one of many in play? This model reads to me like a `ParsedMessage` data-model, where message parsing is actually the first unmentioned step of #396.\r\n2. I can forsee other possible data models, like your `MessageValue` structure, also being a spec deliverable.\r\n\r\nIn the case of a central message provider dispatching messages to N-type-clients, perhaps in some systems:\r\n\r\n- sending the raw `ParsedMessage` model over-the-wire could be applicable (data was not available to the central provider, thus unable to progress thru resolution & selection), or\r\n- sending the `MessageValue` over the wire could be applicable (data was available to the central provider, thus able to progress thru resolution & selection, but defers formatting to the client),\r\n\r\n...depending on data availability in either context. Being able to distribute the parsing _could_ be beneficial (as clearly evidenced by this PR)!\r\n\r\n",
      "createdAt": "2023-06-19T18:32:12Z",
      "issue": {
        "id": "PR_kwDODWGI885TQkW3",
        "title": "Add interchange data model description + JSON Schema definition",
        "url": "https://github.com/unicode-org/message-format-wg/pull/393"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885fPTm7": {
      "id": "IC_kwDODWGI885fPTm7",
      "body": "hey @stasm,\r\n\r\n>  I don't think we need to explicitly ban options to such functions (like the href).\r\n\r\nperhaps not. i'm going to _pause_ my opposition as I do a bit more research and practice using the beta impls a bit more in order to make more informed claims.\r\n\r\n> the API you suggested implicitly requires that open/close markers\r\n\r\n...ehh it wasn't intended to do so :). the fact that I closed them was really just for ease of review/grokking the concept, not a strict requirement.",
      "createdAt": "2023-06-19T22:46:08Z",
      "issue": {
        "id": "I_kwDODWGI885e6Nf1",
        "title": "Clarify that standalone markup is permitted.",
        "url": "https://github.com/unicode-org/message-format-wg/issues/356"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885fVgDe": {
      "id": "IC_kwDODWGI885fVgDe",
      "body": "Thx @aphillips. My contribution is on behalf of my employer, so I'm working with them to sign the agreement s.t. I can sign on behalf of them. Is there any special place for my employer to sign?",
      "createdAt": "2023-06-20T20:46:56Z",
      "issue": {
        "id": "PR_kwDODWGI885TYUx6",
        "title": "docs: add roundtrip to glossary",
        "url": "https://github.com/unicode-org/message-format-wg/pull/400"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885fWqD-": {
      "id": "IC_kwDODWGI885fWqD-",
      "body": "Alright! Disregard all prior comments here :) I've read through all of the history on the matter, and created a timeline of markup related events: https://github.com/unicode-org/message-format-wg/pull/401\r\n\r\nI think markup has both settled design and unsettled design. I'd like to make some assertions about both. Please correct my incorrect assertions 😄 \r\n\r\n**Settled**\r\n\r\n- MFv2 has no opinion on \"markup\", in the traditional definition of the word\r\n  - Users may enter markup into messages, but MFv2 makes no guarantee that your markup-lang of choice is strictly compatible. Escapes may be needed.\r\n- MFv2 has a \"mf-markup\" capability (my own wording). \"mf-markup\" is not really markup at all--it's just _functions_. These functions can be used to decorate text with markup, or map into any other UI primitive. Alternatively, markup can be used by a `formatToParts` API to apply markup.\r\n   - <small>Aside, we may consider renaming our internal documentation/syntax/verbiage away from the term markup in order to avoid ambiguity, but that's a secondary discussion!</small>\r\n\r\n**Unsettled**\r\n\r\nI think each of the following needs assertive answers, based on outstanding community discussions (as captured in #401):\r\n\r\n1. **MARKUP_FN_SIGNATURES**: What will the signature for markup functions be? Will function calls be truly standard, or will extra data be present in invocations?\r\n1. **RUNTIME_FORMATTING_EXTENSIBILITY**: Where in the spec shall we declare that MF implementations must offer a runtime extension for formatting functions? (This may already be completed 😄 )\r\n1. **MARKUP_SPANS**: Will the opening and closing of markup syntax have any influence on the formatting function inputs? e.g., if markup is open-closed balanced, is the formatting function called with the internal contents? If not, see: **FORMAT_TO_PARTS**, because it would be the _only_ other mechanism to identify spans, and becomes much more important for spec-promotion.\r\n2. **FORMAT_TO_PARTS**: Will the `formatToParts` API input/output interfaces be rolled into the specification? If so, where?\r\n3. **MARKUP_XML**: Will we support or drop any squishy desires to pair our syntax with something XML-ish? This question came and went with the tides 😄 🌊 ",
      "createdAt": "2023-06-21T00:34:23Z",
      "issue": {
        "id": "I_kwDODWGI885jA63B",
        "title": "What's left to discuss on markup?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/375"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885fcOvU": {
      "id": "IC_kwDODWGI885fcOvU",
      "body": "> \"MF2\" rather than \"MFv2\".\r\n\r\nhandled in 1fd3730",
      "createdAt": "2023-06-21T16:59:56Z",
      "issue": {
        "id": "PR_kwDODWGI885TfKsm",
        "title": "docs: markup feature history",
        "url": "https://github.com/unicode-org/message-format-wg/pull/401"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODqUnoM5fcQcn": {
      "id": "IC_kwDODqUnoM5fcQcn",
      "body": "Hey all, friendly bump. Thanks for your time and support",
      "createdAt": "2023-06-21T17:05:29Z",
      "issue": {
        "id": "PR_kwDODqUnoM5QvyfO",
        "title": "fix: ZodEffect in discriminatedUnion",
        "url": "https://github.com/colinhacks/zod/pull/2441"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "IC_kwDOADHRAs5fcYGC": {
      "id": "IC_kwDOADHRAs5fcYGC",
      "body": "Hey @eemeli, i know i'm blowing up your mentions this week 😄 . I'll go silent in all other forums if it helps! Would you be willing to give me some 👀 on this anytime soon?",
      "createdAt": "2023-06-21T17:17:23Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDODWGI885gF5Bf": {
      "id": "IC_kwDODWGI885gF5Bf",
      "body": "Signing on behalf of self, working on the corporate sig for long term",
      "createdAt": "2023-06-28T21:55:34Z",
      "issue": {
        "id": "PR_kwDODWGI885TYUx6",
        "title": "docs: add roundtrip to glossary",
        "url": "https://github.com/unicode-org/message-format-wg/pull/400"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDOADHRAs5gSzw-": {
      "id": "IC_kwDOADHRAs5gSzw-",
      "body": "No worries. Please, ignore this, and enjoy your vacation :)\r\n\r\n> The current locale should be available within the plural object\r\n\r\nIndeed! However, locale is not in actuality available. As I [mention in my comment above](https://github.com/messageformat/messageformat/pull/403#issuecomment-1591605774), `locale` is not actually `locale` at all. It's pretty much just `lang`, which is too lossy.\r\n",
      "createdAt": "2023-07-01T06:18:23Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDODqUnoM5g0tBY": {
      "id": "IC_kwDODqUnoM5g0tBY",
      "body": "Hey all, friendly bump. Thanks for your time and support",
      "createdAt": "2023-07-06T23:27:34Z",
      "issue": {
        "id": "PR_kwDODqUnoM5QvyfO",
        "title": "fix: ZodEffect in discriminatedUnion",
        "url": "https://github.com/colinhacks/zod/pull/2441"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "IC_kwDOAOXXVc5g7rro": {
      "id": "IC_kwDOAOXXVc5g7rro",
      "body": "not stale",
      "createdAt": "2023-07-07T22:08:48Z",
      "issue": {
        "id": "I_kwDOAOXXVc5oGa3U",
        "title": "[Bug]: Object.defineProperty setter gets called twice on a single set",
        "url": "https://github.com/jestjs/jest/issues/14186"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "IC_kwDOAq81uM5hIApz": {
      "id": "IC_kwDOAq81uM5hIApz",
      "body": "thanks, definitely helps!\r\n\r\non any given project, it takes a couple seconds to execute lint directly with eslint. with the extension, it takes _minutes_ (if it completes at all), ...but mainly because the extension never finishes is loading cycle. this happens probably because of the default config loading pattern, which is not monorepo specific.\r\n\r\nswapping to `\"eslint.workingDirectories\": [{ \"pattern\": \"./libs/*/\" }],` **almost works great**, but isn't precise enough.\r\n\r\n> the pattern can only match against a folder not a file. I see what you want to achieve but this is not possible right now\r\n\r\nwould you accept a PR for this? i could do an [`fs.statSync(filename).isDir() ? filename : path.dirname(filename)` or similar, right about here](https://github.com/microsoft/vscode-eslint/blob/74679eac34a9cca5c1c82795c5b941439768763b/client/src/client.ts#L759) (with more safety around the call, of course)",
      "createdAt": "2023-07-10T18:32:05Z",
      "issue": {
        "id": "I_kwDOAq81uM5q9uMw",
        "title": "RFC: extension performance debugging",
        "url": "https://github.com/microsoft/vscode-eslint/issues/1679"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode-eslint"
      }
    },
    "IC_kwDOAq81uM5hOpaD": {
      "id": "IC_kwDOAq81uM5hOpaD",
      "body": "> Can you clarify this ...snip... Do you see such a notification.\r\n\r\nPlease forgive me, I mis-spoke. The extension does boot. As you've said, the cost is more or less equivalent to `eslint -c /path/to/config FILENAME`. Indeed, in my prior disfunctional configuration, I perceived no activity from debug output as a hang, when really... the extension probably just received the lint request, and eslint was so slow when linting a file, that I _thought_ the extension was hanging.\r\n\r\nFor example (real, abbreviated output):\r\n\r\n```sh\r\ntime pnpm exec eslint -c ./.eslintrc.dev.json libs/foo/bar/page.tsx\r\nFATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory\r\n 1: 0x102d633b4 node::Abort() [/Users/c0d01a5/Library/Application Support/fnm/node...\r\n// SNIP\r\nreal    4m13.813s\r\nuser    1m32.824s\r\nsys     0m14.474s\r\n```\r\n\r\nBased on your prior explanation, this is probably what I was experiencing _behind the scenes_. Now, I have configured `libs/foo/bar/` as a workingDirectory path and lint completes quickly in 1-2 seconds.\r\n\r\n**Takeaway**: monorepos with subproject lint config _must_ adhere to this repos monorepo configuration guidelines! Failure to do so may yield fatal results, as I experienced.\r\n\r\n> I am open for improvements however I didn't see how checking for a file will help. The pattern is always matched against a file path and if it matches the match will be uses as a working directory\r\n\r\nPlease allow me to retry communicating this.\r\n\r\nMy projects have arbitrary folder depth. The only indicator I have if a folder is a lintable project or not is is a specific file, such as `package.json` or `project.json`. Consequently, producing a _folder detecting_ glob is challenging unless the glob could detect one of those key sigil files instead. You've stated \"the glob must locate a folder\", but my glob could only reliably find the file, not the folder that the file is in. Thus, I was requesting, \"let me glob on a file, then take the dirname of the found file\".\r\n\r\nTruth be told, my project is _so large_ that globbing my whole folder heirarchy for these sigil files would likely yield poor performance. I've instead decided to inline my full 2k paths into the `eslint.workingDirectories = [...pathsToAll2kProjects]` to avoid the monster disk search.\r\n\r\nThanks for the support!",
      "createdAt": "2023-07-11T17:38:05Z",
      "issue": {
        "id": "I_kwDOAq81uM5q9uMw",
        "title": "RFC: extension performance debugging",
        "url": "https://github.com/microsoft/vscode-eslint/issues/1679"
      },
      "repository": {
        "nameWithOwner": "microsoft/vscode-eslint"
      }
    },
    "IC_kwDODFyPQc5hPrGo": {
      "id": "IC_kwDODFyPQc5hPrGo",
      "body": "workaround is trivial, but tracing was a bit wonky! https://github.com/cdaringe/axe-html/blob/main/src/mod.ts#L18-L19",
      "createdAt": "2023-07-11T20:57:02Z",
      "issue": {
        "id": "I_kwDODFyPQc5rRJlA",
        "title": "incompatibility with axe due to field missing in prototype",
        "url": "https://github.com/capricorn86/happy-dom/issues/978"
      },
      "repository": {
        "nameWithOwner": "capricorn86/happy-dom"
      }
    },
    "IC_kwDOAje1wM5hV9iW": {
      "id": "IC_kwDOAje1wM5hV9iW",
      "body": "The field is present on instantiation, but not on the prototype. The polyfill checks the prototype, which im unclear is correct or incorrect behavior. MDN says that the field should exist on Node. The spec doesnt seem to suggest that prototype specially is guaranteed to have the field https://dom.spec.whatwg.org/#node, or that it’s even statically available. Seems like some impla do use prototypical inheritance, but im not clear if its required (appears not). My gut says the polyfill detection may be too presumptive. Tldr, happy-dom doesnt set the field on the prototype, that seems OK, but axe then mutates a getter on happy-dom and breaks happy-dom",
      "createdAt": "2023-07-12T20:14:38Z",
      "issue": {
        "id": "I_kwDOAje1wM5rRdu8",
        "title": "RFC: option to disable polyfills",
        "url": "https://github.com/dequelabs/axe-core/issues/4087"
      },
      "repository": {
        "nameWithOwner": "dequelabs/axe-core"
      }
    },
    "IC_kwDOAje1wM5hV90C": {
      "id": "IC_kwDOAje1wM5hV90C",
      "body": "Typing from Phone, sorry for the brevity or terseness",
      "createdAt": "2023-07-12T20:15:40Z",
      "issue": {
        "id": "I_kwDOAje1wM5rRdu8",
        "title": "RFC: option to disable polyfills",
        "url": "https://github.com/dequelabs/axe-core/issues/4087"
      },
      "repository": {
        "nameWithOwner": "dequelabs/axe-core"
      }
    },
    "IC_kwDOADHRAs5hWToQ": {
      "id": "IC_kwDOADHRAs5hWToQ",
      "body": "Hm. Interesting. Shucks, I feel like that there may be a modeling issue in the existing plurals interface? I would ask \"is a subtag a locale?\". I'd suggest it is _not_. Either way, it's probably worth me learning OR us collaborating on what the correct nomenclature is for `lang + region` unambiguously. Perhaps `PluralObject` warrants some refinement?\r\n\r\n> array should probably be initialised not with all locales, but with the default locale ... the lookup should set the locale in the plural object according to the key\r\n\r\ni'm ...kinda following, but not 100%. i'm not confident enough to send a patch on this yet. i think you're talking about in the `Compiler::compile` method, maybe creating a new `PluralObject` on the fly with narrowed _stuff_.\r\n\r\nIf something were to happen with the above, would it be a mandatory precursor to this PR?\r\n",
      "createdAt": "2023-07-12T21:29:45Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDOBI3Iys5hWtM-": {
      "id": "IC_kwDOBI3Iys5hWtM-",
      "body": "Greetings! Came here just to see if it had been added! I have a fn that depletes/consumes content out of an object, and want the returned value to reflect that. seems like robustness concerns have been lightly discussed and covered here: https://stackoverflow.com/questions/55539387/deep-omit-with-typescript\r\n\r\nany hinderences? ",
      "createdAt": "2023-07-12T23:47:19Z",
      "issue": {
        "id": "MDU6SXNzdWU1NDAzMDY2MTk=",
        "title": "DeepOmit<T, K> type",
        "url": "https://github.com/piotrwitek/utility-types/issues/129"
      },
      "repository": {
        "nameWithOwner": "piotrwitek/utility-types"
      }
    },
    "IC_kwDOAje1wM5hbEl_": {
      "id": "IC_kwDOAje1wM5hbEl_",
      "body": "No problem, thanks for writing back with a thorough response. I think it’s a fair take. ",
      "createdAt": "2023-07-13T15:48:16Z",
      "issue": {
        "id": "I_kwDOAje1wM5rRdu8",
        "title": "RFC: option to disable polyfills",
        "url": "https://github.com/dequelabs/axe-core/issues/4087"
      },
      "repository": {
        "nameWithOwner": "dequelabs/axe-core"
      }
    },
    "IC_kwDOADHRAs5h0FdQ": {
      "id": "IC_kwDOADHRAs5h0FdQ",
      "body": "😵 Got it! Thanks for setting me straight. I now understand much better and see your perspective.\r\n\r\nI've adapted the PR to your request, and it has shrunk up a bit 😄 !",
      "createdAt": "2023-07-18T21:54:33Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDODWGI885h6XL2": {
      "id": "IC_kwDODWGI885h6XL2",
      "body": "> Actually, no. I don't think we are required to mandate any specific APIs.\r\n\r\nIt sounds like all parties agree a firm API is not part of the specification, but there is good discussion on defining a structural definition of a `formatted-part`/`MessageFormatPart` type that, were such APIs implemented, they should satisfy? Please confirm/assert. In other words, `new org.unicode.icu.MF2(...).formatToParts(...)` is not a required method, _but_, we are defining a spec-supported structural type such that, if an API was implemented, it should adhere to the type?\r\n\r\n@aphillips you mention you're \"trying to lay out ... an approach to organizing the formatting spec\". Forgive me, I'm not tracking how the rest of your message correlates to that end. I observe commentary on the parts schema design. Can you help set me straight, in simple terms?\r\n\r\n",
      "createdAt": "2023-07-19T20:10:56Z",
      "issue": {
        "id": "MDU6SXNzdWU1NjMzNTYyODA=",
        "title": "formatToParts-like Iterator",
        "url": "https://github.com/unicode-org/message-format-wg/issues/41"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885h6qVg": {
      "id": "IC_kwDODWGI885h6qVg",
      "body": "+0. Voicing pure neutrality on this one. This is 🎨 . The OCaml'er and pgpsql'er in me is fine with the pipes. The more common lang developer in me (TS, rust) is fine with the quotes. We're in a DSL. I like to think that consumers of DSLs have a natural intuition of  \"DSL rules apply here, not my own presumptions\", ...but given the correlation/pairing that MF2 has with programming concepts, it's a nice byproduct to have literal grouping aligned between paradigms. `\"` is the unambiguous, ubiquitous char for bounding text content in written language, so I'd lean that way, but not powerfully enough to voice a strong stake. ",
      "createdAt": "2023-07-19T21:14:13Z",
      "issue": {
        "id": "PR_kwDODWGI885U6eQa",
        "title": "Use `\"` or `'` instead of `|` as quote delimiter",
        "url": "https://github.com/unicode-org/message-format-wg/pull/414"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885h6suT": {
      "id": "IC_kwDODWGI885h6suT",
      "body": "Option 2. Give the opportunity to implementations that need max performance the ability to achieve max performance.",
      "createdAt": "2023-07-19T21:23:59Z",
      "issue": {
        "id": "I_kwDODWGI885R8Xp2",
        "title": "When do we evaluate the local variables?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/299"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDODWGI885iAXhr": {
      "id": "IC_kwDODWGI885iAXhr",
      "body": "The above dialog is a deep dive in the assessing the feasibility of mutability--more of a \"How would we do\", rather than a  \"should we do it\".\r\n\r\n**Are there practical, compelling use cases for mutable variables?** By compelling, I propose a subjective (& surely not to be agreed by all) threshold to be:\r\n\r\n- authoring a class of MF2 messages is not achievable without mutability\r\n- authoring a class of MF2 messages without mutability creates an arduous burden on the author in greater than 1 in 1000 message creation cases, where arduous may loosely be defined as doubling the mental burden or labor duration in furnishing the message\r\n\r\nI know this is 🎨 , but I _personally_ do not find the hypotheticals in #310 compelling, nor do I posit that they'd satisfy my self-authored self-declared thresholds.\r\n\r\nMy vote is for immutability at current time.",
      "createdAt": "2023-07-20T16:51:52Z",
      "issue": {
        "id": "I_kwDODWGI885qnZFT",
        "title": "Should variables be mutable?",
        "url": "https://github.com/unicode-org/message-format-wg/issues/413"
      },
      "repository": {
        "nameWithOwner": "unicode-org/message-format-wg"
      }
    },
    "IC_kwDOADHRAs5iPnhU": {
      "id": "IC_kwDOADHRAs5iPnhU",
      "body": "1. locale is now always a param in formatting fn invocation, per discussion\r\n2. long var names compacted, per discussion\r\n\r\n> [setFormatter] These arguments would be clearer for me with reversed order\r\n\r\nThis method is used in many places, and reversing the params would be a breaking change requiring a bulk edit in this module. Give me another review pass now that it's been through a first round of requested edits and assert that you still want this.",
      "createdAt": "2023-07-24T16:48:22Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDOCXZcSc5it9pV": {
      "id": "IC_kwDOCXZcSc5it9pV",
      "body": "Githib should show ya the contributing.md, but a link would be nice too. Feel free to add those patches inline here.\r\n\r\nhttps://github.com/cdaringe/postgraphile-upsert/blob/main/.github/contributing.md\r\n\r\nmissing is the call fir need of docker for integration tests to run",
      "createdAt": "2023-07-28T19:25:19Z",
      "issue": {
        "id": "PR_kwDOCXZcSc5WqpYp",
        "title": "feat: support upserting tables with only unique constraint(s)",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/680"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5ivMrf": {
      "id": "IC_kwDOCXZcSc5ivMrf",
      "body": "Thanks!",
      "createdAt": "2023-07-29T03:35:48Z",
      "issue": {
        "id": "PR_kwDOCXZcSc5WqpYp",
        "title": "feat: support upserting tables with only unique constraint(s)",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/680"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5ivMsf": {
      "id": "IC_kwDOCXZcSc5ivMsf",
      "body": "Ah crap i meant to release it as a breaking change ",
      "createdAt": "2023-07-29T03:36:03Z",
      "issue": {
        "id": "PR_kwDOCXZcSc5WqpYp",
        "title": "feat: support upserting tables with only unique constraint(s)",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/680"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5iwKS8": {
      "id": "IC_kwDOCXZcSc5iwKS8",
      "body": "No big deal :) thx for the patches!",
      "createdAt": "2023-07-29T17:13:44Z",
      "issue": {
        "id": "PR_kwDOCXZcSc5WqpYp",
        "title": "feat: support upserting tables with only unique constraint(s)",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/680"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCXZcSc5iwOKu": {
      "id": "IC_kwDOCXZcSc5iwOKu",
      "body": "all about it, but let's visit when v5 goes public! unless you know if there's an easy way to achieve cross compat _and_ test it :)",
      "createdAt": "2023-07-29T18:00:00Z",
      "issue": {
        "id": "I_kwDOCXZcSc5lMrMl",
        "title": "Is this plugin (already) v5 compatible?",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/646"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDODFNiyc5iwecz": {
      "id": "IC_kwDODFNiyc5iwecz",
      "body": "Right, something like this ought be considered.\r\n\r\nBy default, Vercel deploy sets _multiple_ domains for which you can access your app:\r\n\r\n1. your primary/default domain\r\n2. a branch domain\r\n3. a temp deployment domain\r\n\r\nThis SDK kind of _only_ wants to be compatible with a single one of those domains at a time.\r\n\r\nI think this SDK should either derive the current domain as proposed above, or allow me to simply specify the domain at runtime at callsites. My app **is supportive of N simultaneous domains**, but this SDK pigeonholes me into a single.",
      "createdAt": "2023-07-29T20:30:38Z",
      "issue": {
        "id": "I_kwDODFNiyc5s7uUe",
        "title": "Remove the requirement to configure the `AUTH0_BASE_URL`",
        "url": "https://github.com/auth0/nextjs-auth0/issues/1330"
      },
      "repository": {
        "nameWithOwner": "auth0/nextjs-auth0"
      }
    },
    "IC_kwDOADHRAs5i5JKv": {
      "id": "IC_kwDOADHRAs5i5JKv",
      "body": "Alrighty, pass #3, complete! Back to you!",
      "createdAt": "2023-07-31T20:54:16Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDOADHRAs5jA_Ny": {
      "id": "IC_kwDOADHRAs5jA_Ny",
      "body": "pass 4 complete. back to you! thanks for the feedback. i think the PR is in much better shape that it was on first pass",
      "createdAt": "2023-08-01T22:49:43Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDODqUnoM5jF9UB": {
      "id": "IC_kwDODqUnoM5jF9UB",
      "body": "scram stalebot",
      "createdAt": "2023-08-02T16:12:36Z",
      "issue": {
        "id": "I_kwDODqUnoM5lBvQk",
        "title": "safeParse throws if refine throws",
        "url": "https://github.com/colinhacks/zod/issues/2401"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "IC_kwDOADHRAs5jGqYF": {
      "id": "IC_kwDOADHRAs5jGqYF",
      "body": "sound good. please see #408 ",
      "createdAt": "2023-08-02T17:49:59Z",
      "issue": {
        "id": "PR_kwDOADHRAs5S7ykb",
        "title": "feat: support locale-specific customFormatters",
        "url": "https://github.com/messageformat/messageformat/pull/403"
      },
      "repository": {
        "nameWithOwner": "messageformat/messageformat"
      }
    },
    "IC_kwDOAOXXVc5jXNtJ": {
      "id": "IC_kwDOAOXXVc5jXNtJ",
      "body": "not stale",
      "createdAt": "2023-08-07T00:47:12Z",
      "issue": {
        "id": "I_kwDOAOXXVc5oGa3U",
        "title": "[Bug]: Object.defineProperty setter gets called twice on a single set",
        "url": "https://github.com/jestjs/jest/issues/14186"
      },
      "repository": {
        "nameWithOwner": "jestjs/jest"
      }
    },
    "IC_kwDODqUnoM5kIJRp": {
      "id": "IC_kwDODqUnoM5kIJRp",
      "body": "ah jamon. have had a patch open for this issue for months",
      "createdAt": "2023-08-16T02:01:17Z",
      "issue": {
        "id": "I_kwDODqUnoM5mMBHZ",
        "title": "superRefine breaks compatibility with discriminatedUnion",
        "url": "https://github.com/colinhacks/zod/issues/2440"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "IC_kwDODqUnoM5kTrwJ": {
      "id": "IC_kwDODqUnoM5kTrwJ",
      "body": "> But if Zod catches these errors, there's no way to opt-out of this and allow errors to bubble up\r\n\r\nI hear your argument. I may have some js bug inside my parse logic, and catching that isnt your intent. When calling .safeParse, semantically, it seems I’m completely operating within the context of a zod parsing operation and expecting failure as a possible output. If i was not expecting failure, i would have used .parse.\r\n\r\nsafeParse, in your position, is only catching failing validations. Its just that… its not really safe. I guess im caught up in the semantics. It seems more correct for a safe thing to handle errors than a safe thing to… change the return type relative to a sibling method. I would maybe advocate for .validate (which returns a Result like type) or .validateExn which throws. This is an ocaml convention that is p nice.\r\n\r\nclosing, but food for thought \r\n\r\n",
      "createdAt": "2023-08-17T19:51:20Z",
      "issue": {
        "id": "I_kwDODqUnoM5lBvQk",
        "title": "safeParse throws if refine throws",
        "url": "https://github.com/colinhacks/zod/issues/2401"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "IC_kwDOKGwIaM5khtHa": {
      "id": "IC_kwDOKGwIaM5khtHa",
      "body": "Ya, definitely need these in there. Same with c and f sharp",
      "createdAt": "2023-08-21T15:33:01Z",
      "issue": {
        "id": "I_kwDOKGwIaM5u1rN_",
        "title": "C/C++ aren't here",
        "url": "https://github.com/cdaringe/programming-language-selector/issues/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/programming-language-selector"
      }
    },
    "IC_kwDOAwORNs5kxFmt": {
      "id": "IC_kwDOAwORNs5kxFmt",
      "body": "@zkochan, can we send a PR or option for this? We really want to make sure our lockfiles _are not corrupted_. A member of our team got 🟢 in CI, but corrupted the lockfile, which we consider a paramount failure. ",
      "createdAt": "2023-08-23T20:25:24Z",
      "issue": {
        "id": "I_kwDOAwORNs5eVK2p",
        "title": "Ignoring broken lockfile in a CI env ",
        "url": "https://github.com/pnpm/pnpm/issues/6084"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOAwORNs5kxOuI": {
      "id": "IC_kwDOAwORNs5kxOuI",
      "body": "nah, that's different. this is much more focused. \"the lockfile is broken, but never do i want to allow the lockfile to exist in broken state. if you find it broken, fail rather than ignore\"",
      "createdAt": "2023-08-23T20:55:52Z",
      "issue": {
        "id": "I_kwDOAwORNs5eVK2p",
        "title": "Ignoring broken lockfile in a CI env ",
        "url": "https://github.com/pnpm/pnpm/issues/6084"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOAwORNs5kxZgR": {
      "id": "IC_kwDOAwORNs5kxZgR",
      "body": "a lockfile was corrupted on checkin, no .npmrc configs are set (--frozen-lockfile or otherwise), and pnpm is _ok_ with it right now but it should not be. that's my problem statement.\r\n\r\nare you implicitly suggesting that i should be using frozen-lockfile?\r\n\r\nfrom my perspective, that's just a whole different discussion.",
      "createdAt": "2023-08-23T21:30:52Z",
      "issue": {
        "id": "I_kwDOAwORNs5eVK2p",
        "title": "Ignoring broken lockfile in a CI env ",
        "url": "https://github.com/pnpm/pnpm/issues/6084"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOKGwIaM5lPCT5": {
      "id": "IC_kwDOKGwIaM5lPCT5",
      "body": "c & c++ added. i didn't do a _deep_ scan of how well they were modeled in all domains, but smoke checked a few (like Desktop Applications, thinking about QT, wxwidgets, etc), and it seems to be doin ok. my C is probably a bit more _off_ than my cpp assessement",
      "createdAt": "2023-08-30T03:39:45Z",
      "issue": {
        "id": "I_kwDOKGwIaM5u1rN_",
        "title": "C/C++ aren't here",
        "url": "https://github.com/cdaringe/programming-language-selector/issues/3"
      },
      "repository": {
        "nameWithOwner": "cdaringe/programming-language-selector"
      }
    },
    "IC_kwDOCo1SFM5mD8FP": {
      "id": "IC_kwDOCo1SFM5mD8FP",
      "body": "i want the format in JS, as my `linked` packages need to be looked up automatically, as a different entity controls this contraint. would be great to produce my linked packages, ...which then allows comments intrinsically :)",
      "createdAt": "2023-09-08T22:47:10Z",
      "issue": {
        "id": "I_kwDOCo1SFM5iJFZ7",
        "title": "Support comments in config files",
        "url": "https://github.com/changesets/changesets/issues/1125"
      },
      "repository": {
        "nameWithOwner": "changesets/changesets"
      }
    },
    "IC_kwDOAwORNs5miimz": {
      "id": "IC_kwDOAwORNs5miimz",
      "body": "Interesting. Would you want something like —top-level to maintain current behavior? Or is current behavior not worth maintaining in your perspective, supposing a breaking change was accepted into some future release?",
      "createdAt": "2023-09-15T00:41:58Z",
      "issue": {
        "id": "I_kwDOAwORNs5xFw4r",
        "title": "pnpm link support for transitive dependencies",
        "url": "https://github.com/pnpm/pnpm/issues/7095"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOAwORNs5m5WOt": {
      "id": "IC_kwDOAwORNs5m5WOt",
      "body": "i think this is _undefined_ behavior as specified by npm, which pnpm attempts some amount of compliance: https://docs.npmjs.com/cli/v6/configuring-npm/package-json#bin\r\n\r\ni _personally_ wouldn't label it as a bug, as it violates some norms:\r\n\r\n- `@` in the executable--do you really want an executable with a `@` in it? fwiw, npm installs an executable just called `ui`. \r\n- `/` in the executable--what would that produce? a subfolder in bin? if that's the case, `.bin/` housing executables would be an implicit violation of expectations\r\n\r\nalbeit the current behavior of doing _nothing_ is agreeably not ideal (a warning perhaps would be warranted), expecting a bin name of that to work is also subjectively not a fair/reasonable expectation either.\r\n\r\ni'd change the bin name to `ui` to proceed. maybe add logging/warns to this case during the bin linking\r\n",
      "createdAt": "2023-09-19T18:54:08Z",
      "issue": {
        "id": "I_kwDOAwORNs5xaHmT",
        "title": "pnpm doesn't add binary to `node_modules/.bin` if bin command is prefixed (@prefix/package-name)",
        "url": "https://github.com/pnpm/pnpm/issues/7112"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDODqUnoM5nNQ6b": {
      "id": "IC_kwDODqUnoM5nNQ6b",
      "body": "None. I submitted a patch, but it has idled. I ended up just using .union\r\n\r\nOn Fri, Sep 22, 2023 at 7:26 AM Jonathan Avila ***@***.***>\r\nwrote:\r\n\r\n> Just hit this bug. Any workaround?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/colinhacks/zod/issues/2440#issuecomment-1731517695>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAHU57OLSAKLULUDI7VMMMDX3WNZXANCNFSM6AAAAAAYFOZBP4>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "createdAt": "2023-09-22T14:34:16Z",
      "issue": {
        "id": "I_kwDODqUnoM5mMBHZ",
        "title": "superRefine breaks compatibility with discriminatedUnion",
        "url": "https://github.com/colinhacks/zod/issues/2440"
      },
      "repository": {
        "nameWithOwner": "colinhacks/zod"
      }
    },
    "IC_kwDOAwORNs5nQeRc": {
      "id": "IC_kwDOAwORNs5nQeRc",
      "body": "this is a local issue, almost certainly. some other pd is getting picked up. `bash $(which pd)` picks up per expectation, but just `pd` doesn't. need to apply some unix-fu to discern what pointer in my term emulator is up",
      "createdAt": "2023-09-23T17:33:22Z",
      "issue": {
        "id": "I_kwDOAwORNs5x12xS",
        "title": "CONTRIBUTING.md bootstrap of pd does not yield usable pd artifact",
        "url": "https://github.com/pnpm/pnpm/issues/7129"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOAwORNs5nQeVw": {
      "id": "IC_kwDOAwORNs5nQeVw",
      "body": "haha, two years ago, apparently i added:\r\n\r\n`alias pd=\"pnpm dlx\"` to my dotfiles 😆 \r\n\r\napologies for the github noise",
      "createdAt": "2023-09-23T17:34:46Z",
      "issue": {
        "id": "I_kwDOAwORNs5x12xS",
        "title": "CONTRIBUTING.md bootstrap of pd does not yield usable pd artifact",
        "url": "https://github.com/pnpm/pnpm/issues/7129"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOAwORNs5nQh77": {
      "id": "IC_kwDOAwORNs5nQh77",
      "body": "I have my dev env setup and have located _some_ of the relevant code paths. On `pd link ../debug` into a project where it is used transitively,\r\n\r\n- `pkg-manager/plugin-commands-installation/src/link.ts`,  `handler` starts to build up the link options for an installation mutation\r\n   - we eventually call into `install` with the 2nd param being `MutationOptions`\r\n   - I _think_ an `overrides` specification will likely live in these mutation options?\r\n      - I did try a naive splatting of `overrides: { debug: ... } }` into the mutationOptions with no success, but it was not a thoughtful attempt 😄 \r\n- `pkg-manager/core/src/install/index.ts` builds up a call stack of `install` => `_install` => `headlessInstall`\r\n   - `headlessInstall` seems to be where _most_ of the magic happens\r\n   - i'm having a bit of a hard time discerning which options would need to be set inside of headless install, such that I can make the patches work _back up_ in the callee functions\r\n\r\nIf you would be willing to give me a few pointers, that would be helpful. Random thought's I've had on the matter:\r\n\r\n- Do I need to request _re-resolution_ explicitly for packages that _depend_ on `debug`... or should that happen implicitly within existing logic?\r\n- Should an `in-mem`-only modification of the logical `{ pnpm: { overrides: { debug: ..... } }` be all that is needed, or are there possibly more cases to consider?\r\n\r\nThanks for your time! I'll be poking around a bit more, but a new codebase is often hard to navigate without a little bit of coaching 😄 !",
      "createdAt": "2023-09-23T18:50:54Z",
      "issue": {
        "id": "I_kwDOAwORNs5xFw4r",
        "title": "pnpm link support for transitive dependencies",
        "url": "https://github.com/pnpm/pnpm/issues/7095"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOAwORNs5nQidz": {
      "id": "IC_kwDOAwORNs5nQidz",
      "body": "`createVersionsOverrider` 🤔 is probably in play here, too. i see it used when backfilling default options",
      "createdAt": "2023-09-23T19:02:25Z",
      "issue": {
        "id": "I_kwDOAwORNs5xFw4r",
        "title": "pnpm link support for transitive dependencies",
        "url": "https://github.com/pnpm/pnpm/issues/7095"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOAwORNs5ngwmU": {
      "id": "IC_kwDOAwORNs5ngwmU",
      "body": "Hmm. Sincere ask, is it worth doing at all if we persist?\r\n\r\nGenerally, I use `link` for temporary testing only. Persisting to package.json is a somewhat permanent-like thing, especially given that it is a tracked file.\r\n\r\nI'm _personally in favor_ of one of the two options:\r\n\r\n- make `pnpm link ...` work with overrides _without_ persisting changes to `package.json`, or...\r\n- just recommend people use `overrides` directly\r\n\r\n`link` doesn't persist in the other pkg managers. it would possibly violate common expectations if it did in `pnpm`? then again, `pnpm link`'s current behavior is also a bit different than the others :)",
      "createdAt": "2023-09-27T04:09:39Z",
      "issue": {
        "id": "I_kwDOAwORNs5xFw4r",
        "title": "pnpm link support for transitive dependencies",
        "url": "https://github.com/pnpm/pnpm/issues/7095"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOCXIH6s5nyK6J": {
      "id": "IC_kwDOCXIH6s5nyK6J",
      "body": "awesome!",
      "createdAt": "2023-09-29T16:51:15Z",
      "issue": {
        "id": "I_kwDOCXIH6s5yABTO",
        "title": "RFC: Generate JSONSchema for YAML DSL",
        "url": "https://github.com/walmartlabs/concord/issues/814"
      },
      "repository": {
        "nameWithOwner": "walmartlabs/concord"
      }
    },
    "IC_kwDOAEE5685okB80": {
      "id": "IC_kwDOAEE5685okB80",
      "body": "Bummer. MultiBranch jenkins isn’t available to me",
      "createdAt": "2023-10-10T03:17:53Z",
      "issue": {
        "id": "I_kwDOAEE5685zSTCs",
        "title": "RFC: support for ENV to filter out PR builds",
        "url": "https://github.com/jenkinsci/embeddable-build-status-plugin/issues/251"
      },
      "repository": {
        "nameWithOwner": "jenkinsci/embeddable-build-status-plugin"
      }
    },
    "IC_kwDOA1197M5qAhsN": {
      "id": "IC_kwDOA1197M5qAhsN",
      "body": "uggggh thank you.",
      "createdAt": "2023-10-25T05:09:13Z",
      "issue": {
        "id": "MDU6SXNzdWU4NDI1NTEzMzI=",
        "title": "Mod download 403",
        "url": "https://github.com/OpenFactorioServerManager/factorio-server-manager/issues/272"
      },
      "repository": {
        "nameWithOwner": "OpenFactorioServerManager/factorio-server-manager"
      }
    },
    "IC_kwDOApTQ9s5qFmms": {
      "id": "IC_kwDOApTQ9s5qFmms",
      "body": "Seems like the AST parser may be making incorrect assumptions about the node on visit. Saw similar failure for a different type in our project as well.",
      "createdAt": "2023-10-25T18:46:05Z",
      "issue": {
        "id": "I_kwDOApTQ9s5A-f0H",
        "title": "v0.52.0 Unique Names causes generation to fail when using generics",
        "url": "https://github.com/YousefED/typescript-json-schema/issues/454"
      },
      "repository": {
        "nameWithOwner": "YousefED/typescript-json-schema"
      }
    },
    "IC_kwDOA1197M5qVAwF": {
      "id": "IC_kwDOA1197M5qVAwF",
      "body": "I was trying to pass —verbose to diagnose a mod that was failing to load. Since learned that Factorio fails silently when it is attempting to load mods and just skips them so it didn’t actually help me :-) I was just missing a dependency.",
      "createdAt": "2023-10-28T18:34:29Z",
      "issue": {
        "id": "PR_kwDOA1197M5dtkeS",
        "title": "feat: allow CLI tuning",
        "url": "https://github.com/OpenFactorioServerManager/factorio-server-manager/pull/364"
      },
      "repository": {
        "nameWithOwner": "OpenFactorioServerManager/factorio-server-manager"
      }
    },
    "IC_kwDOA1197M5qVIK-": {
      "id": "IC_kwDOA1197M5qVIK-",
      "body": "same thing happened to me. \"I think Krastorio is supposed to happen pretttttty soon here?\"\r\n\r\nlaunched rocket, was still waiting for krast 😄 ",
      "createdAt": "2023-10-28T21:20:15Z",
      "issue": {
        "id": "PR_kwDOA1197M5dtkeS",
        "title": "feat: allow CLI tuning",
        "url": "https://github.com/OpenFactorioServerManager/factorio-server-manager/pull/364"
      },
      "repository": {
        "nameWithOwner": "OpenFactorioServerManager/factorio-server-manager"
      }
    },
    "IC_kwDOIrwj9s5qbbFz": {
      "id": "IC_kwDOIrwj9s5qbbFz",
      "body": "Im on 20.8.0",
      "createdAt": "2023-10-30T16:21:29Z",
      "issue": {
        "id": "I_kwDOIrwj9s51Pz8R",
        "title": "run only single test",
        "url": "https://github.com/connor4312/nodejs-testing/issues/21"
      },
      "repository": {
        "nameWithOwner": "connor4312/nodejs-testing"
      }
    },
    "IC_kwDOIr5Pj85qkxqL": {
      "id": "IC_kwDOIr5Pj85qkxqL",
      "body": "I linked here because it was suggested that this added log viewing back in. I can't find the interface to open logs! 😄 . Thus, i'm not clear what the extension does. Would be super helpful to drop a quick note about the provided functionality",
      "createdAt": "2023-10-31T20:57:50Z",
      "issue": {
        "id": "I_kwDOIr5Pj85fX-yY",
        "title": "README",
        "url": "https://github.com/alebcay/openlens-node-pod-menu/issues/27"
      },
      "repository": {
        "nameWithOwner": "alebcay/openlens-node-pod-menu"
      }
    },
    "IC_kwDOF1oLvc5q5o1b": {
      "id": "IC_kwDOF1oLvc5q5o1b",
      "body": "Im going to mark my ftk as “dont use” and point here",
      "createdAt": "2023-11-04T16:53:12Z",
      "issue": {
        "id": "I_kwDOF1oLvc4-FsA9",
        "title": "What does this do over `factorio-type-kit`?",
        "url": "https://github.com/GlassBricks/typed-factorio/issues/4"
      },
      "repository": {
        "nameWithOwner": "GlassBricks/typed-factorio"
      }
    },
    "IC_kwDOBHbPFs5q516E": {
      "id": "IC_kwDOBHbPFs5q516E",
      "body": "```ts\r\n// node_modules/.pnpm/parjs@0.16.1/node_modules/parjs/dist/lib/internal/combinators/then.js\r\n                    else if (ps.isSoft) {\r\n                        ps.kind = result_1.ResultKind.HardFail;\r\n                        // if a i > 0 parser failed softly, this is a hard fail for us.\r\n                        // also, propagate the internal expectation.\r\n                        return;\r\n                    }\r\n```\r\n\r\nThis is the block. I'm not grokking this block promotes a soft failure to a hard failure. This block prevents my `maybe()` combinator. Any insight here?",
      "createdAt": "2023-11-04T20:33:50Z",
      "issue": {
        "id": "I_kwDOBHbPFs51Q1oc",
        "title": "Hard failure when soft expected",
        "url": "https://github.com/GregRos/parjs/issues/65"
      },
      "repository": {
        "nameWithOwner": "GregRos/parjs"
      }
    },
    "IC_kwDOAzqfmc5q6_1w": {
      "id": "IC_kwDOAzqfmc5q6_1w",
      "body": "Some entity in the compile toolchain is generating code that looks like this:\r\n\r\n```js\r\nexports.ArrowSvg = void 0; // exports is not defined here\r\nvar react_1 = require(\"react\");\r\nvar ArrowSvg = function (_a) { /* SNIP */ }\r\nexports.ArrowSvg = ArrowSvg;\r\n```\r\n\r\nThis is still an issue using all `@storybook/*` packages with TS.\r\n\r\nVersions:\r\n\r\n`$ cat package.json | grep storybook`:\r\n\r\n```txt\r\n    \"@storybook/addon-essentials\": \"^7.5.2\",\r\n    \"@storybook/addon-interactions\": \"^7.5.2\",\r\n    \"@storybook/addon-links\": \"^7.5.2\",\r\n    \"@storybook/blocks\": \"^7.5.2\",\r\n    \"@storybook/nextjs\": \"^7.5.2\",\r\n    \"@storybook/react\": \"^7.5.2\",\r\n    \"@storybook/testing-library\": \"0.2.2\",\r\n    \"eslint-plugin-storybook\": \"^0.6.15\",\r\n    \"storybook\": \"^7.5.2\",\r\n```\r\n\r\n```ts\r\nimport type { StorybookConfig } from \"@storybook/nextjs\";\r\nimport assert from \"assert\";\r\nimport TsconfigPathsPlugin from \"tsconfig-paths-webpack-plugin\";\r\n\r\nconst config: StorybookConfig = {\r\n  stories: [\"../src/**/*.mdx\", \"../src/**/*.stories.@(js|jsx|ts|tsx)\"],\r\n  addons: [\r\n    \"@storybook/addon-links\",\r\n    \"@storybook/addon-essentials\",\r\n    \"@storybook/addon-interactions\",\r\n  ],\r\n  framework: {\r\n    name: \"@storybook/nextjs\",\r\n    options: {},\r\n  },\r\n  docs: {\r\n    autodocs: \"tag\",\r\n  },\r\n  webpackFinal: async (config) => {\r\n    assert(config.resolve);\r\n    config.resolve.plugins = [new TsconfigPathsPlugin()];\r\n    return config;\r\n  },\r\n};\r\nexport default config;\r\n",
      "createdAt": "2023-11-05T21:26:51Z",
      "issue": {
        "id": "MDU6SXNzdWUzMTA5NDI3OTY=",
        "title": "Error: exports is not defined",
        "url": "https://github.com/storybookjs/storybook/issues/3346"
      },
      "repository": {
        "nameWithOwner": "storybookjs/storybook"
      }
    },
    "IC_kwDOGKvm485q7s4c": {
      "id": "IC_kwDOGKvm485q7s4c",
      "body": "Would be great to get some debug info outta https://github.com/vercel/turbo/blob/3d44253bd9519ea0a551349c5bc3dffa36ac0538/crates/turbopack-ecmascript/src/typescript/resolve.rs#L105. It's yielding failures for me with `../../tsconfig.json`, which resolves in no-turbo mode (and just by plain inspection 😄, and cmd+click)!",
      "createdAt": "2023-11-06T03:38:04Z",
      "issue": {
        "id": "I_kwDOGKvm4851KBrF",
        "title": "[turbopack] NextJs 14 An issue occurred while parsing a tsconfig.json file. extends doesn't resolve correctly",
        "url": "https://github.com/vercel/turbo/issues/6298"
      },
      "repository": {
        "nameWithOwner": "vercel/turbo"
      }
    },
    "IC_kwDOBHbPFs5rBnfw": {
      "id": "IC_kwDOBHbPFs5rBnfw",
      "body": "Thanks for these great suggestions and advice! I will be picking up my project again shortly and will revisit with your guidance",
      "createdAt": "2023-11-06T17:28:02Z",
      "issue": {
        "id": "I_kwDOBHbPFs51Q1oc",
        "title": "Hard failure when soft expected",
        "url": "https://github.com/GregRos/parjs/issues/65"
      },
      "repository": {
        "nameWithOwner": "GregRos/parjs"
      }
    },
    "IC_kwDOA_tQf85r0mEp": {
      "id": "IC_kwDOA_tQf85r0mEp",
      "body": "Hey friends, what is needed to progress this forward? If there's something concrete that needs to happen, can you enumerate it? Getting some of these types corrected would be a great help",
      "createdAt": "2023-11-13T19:55:34Z",
      "issue": {
        "id": "MDExOlB1bGxSZXF1ZXN0MjM1Mjc4MTgx",
        "title": "Update typescript definitions (BREAK CHANGES)",
        "url": "https://github.com/enquirer/enquirer/pull/82"
      },
      "repository": {
        "nameWithOwner": "enquirer/enquirer"
      }
    },
    "IC_kwDOAkkOTc5sdm3d": {
      "id": "IC_kwDOAkkOTc5sdm3d",
      "body": "@benjie! long time, no-GitHub-see :)\r\n\r\n> Either way, the order should be stable in my opinion ...\r\n\r\nJust to clarify, are you asserting that you think, in the spec, `EnumTypeDefinition` should specify that entries are ordered?",
      "createdAt": "2023-11-20T19:51:27Z",
      "issue": {
        "id": "I_kwDOAkkOTc53X-0-",
        "title": "On specifying ordered vs unordered enum definitions",
        "url": "https://github.com/graphql/graphql-spec/issues/1062"
      },
      "repository": {
        "nameWithOwner": "graphql/graphql-spec"
      }
    },
    "IC_kwDOAkkOTc5slDct": {
      "id": "IC_kwDOAkkOTc5slDct",
      "body": "Sounds good. Let’s move subsequent convo over there",
      "createdAt": "2023-11-21T20:46:24Z",
      "issue": {
        "id": "I_kwDOAkkOTc53X-0-",
        "title": "On specifying ordered vs unordered enum definitions",
        "url": "https://github.com/graphql/graphql-spec/issues/1062"
      },
      "repository": {
        "nameWithOwner": "graphql/graphql-spec"
      }
    },
    "IC_kwDOAkkOTc5slGHZ": {
      "id": "IC_kwDOAkkOTc5slGHZ",
      "body": "The prior presence of “set” to me unambiguously implied unordered. Your switch to “list” i think is likely? a weaker implicit association with ordering for serialized content via introspection.\r\n\r\nThis proposal definitely works (happy to support it), but i think we needed top level or inline definitions/assertions about what terms (eg list) apply ordered or not.",
      "createdAt": "2023-11-21T20:54:29Z",
      "issue": {
        "id": "PR_kwDOAkkOTc5gBDTE",
        "title": "[RFC] Type system ordering of: object interfaces, directive arguments, input object fields, enum values",
        "url": "https://github.com/graphql/graphql-spec/pull/1063"
      },
      "repository": {
        "nameWithOwner": "graphql/graphql-spec"
      }
    },
    "IC_kwDOCWGyT85smBDK": {
      "id": "IC_kwDOCWGyT85smBDK",
      "body": "@thw0rted , i think we should keep this open. msw also has refs to other libdom types, like `File` which are (correctly?) not in node. There are a variety of globals not correctly modeled in node and referenced in msw. MSW i think probably still needs to consume only guaranteed types present in libdom and @types/node ",
      "createdAt": "2023-11-22T00:29:35Z",
      "issue": {
        "id": "I_kwDOCWGyT851__C5",
        "title": "Types refer to missing global interface ResponseInit",
        "url": "https://github.com/mswjs/msw/issues/1836"
      },
      "repository": {
        "nameWithOwner": "mswjs/msw"
      }
    },
    "IC_kwDOAwORNs5ssOVg": {
      "id": "IC_kwDOAwORNs5ssOVg",
      "body": "just ended up using overrides.",
      "createdAt": "2023-11-22T21:27:14Z",
      "issue": {
        "id": "I_kwDOAwORNs5xFw4r",
        "title": "pnpm link support for transitive dependencies",
        "url": "https://github.com/pnpm/pnpm/issues/7095"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOHMl6O85tB_pc": {
      "id": "IC_kwDOHMl6O85tB_pc",
      "body": "Just tried with a v3 as well. Seems like we may be stuck.\r\n\r\nTheir docs suggest this is feasible still, as of April 2023. See https://support.wyze.com/hc/en-us/articles/360031490871-How-to-flash-your-Wyze-Cam-firmware-manually\r\n\r\nNonetheless, I failed to succeed. Tried looking thru the bin on a hex editor too, trying to find a version number in there. Probably could give it more of a deeper go--we could try fiddling with that, seeing if we can find a bypass.\r\n\r\n",
      "createdAt": "2023-11-28T07:15:12Z",
      "issue": {
        "id": "I_kwDOHMl6O85son7l",
        "title": "is the firmware still working anymore? I can't get the light turn solid",
        "url": "https://github.com/Lukejb14/Wyze-RTSP/issues/4"
      },
      "repository": {
        "nameWithOwner": "Lukejb14/Wyze-RTSP"
      }
    },
    "IC_kwDOCxSf385tP2hB": {
      "id": "IC_kwDOCxSf385tP2hB",
      "body": "> TypeError: onInit is not a function\r\n\r\nya, get that all of the time. same general issue as discussed in the root report",
      "createdAt": "2023-11-29T23:41:11Z",
      "issue": {
        "id": "I_kwDOCxSf3852Q0IT",
        "title": "Experimental grpc plugin async onInit conflicts with testing norms",
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues/4266"
      },
      "repository": {
        "nameWithOwner": "open-telemetry/opentelemetry-js"
      }
    },
    "IC_kwDOA7dBp85tZuDl": {
      "id": "IC_kwDOA7dBp85tZuDl",
      "body": "Thanks! It was pretty surprising to not be able to call very basic pure functions in gleam in guards. It's something i do quite often in ocaml. Would be rad if gleam tracked purity somehow (??maybe not possible??) and allowed a bit more capability than erlang does here... even if it means drastically different compiled output?\r\n\r\ni dunno, i'm a rookie. don't listen to me ;)",
      "createdAt": "2023-12-01T04:55:13Z",
      "issue": {
        "id": "I_kwDOA7dBp85RhPcd",
        "title": "Allow arithmetic guard expressions",
        "url": "https://github.com/gleam-lang/gleam/issues/1756"
      },
      "repository": {
        "nameWithOwner": "gleam-lang/gleam"
      }
    },
    "IC_kwDOCXZcSc5tfoSn": {
      "id": "IC_kwDOCXZcSc5tfoSn",
      "body": "Sounds reasonable. Can you expand on your example a bit more? My gut says sure, make a PR, but id appreciate a bit more detail first ",
      "createdAt": "2023-12-02T02:56:26Z",
      "issue": {
        "id": "I_kwDOCXZcSc54fdHy",
        "title": "Support attribute omitting for upsert mutation in standard omit smart tag",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/696"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOBuX7GM5tpCOm": {
      "id": "IC_kwDOBuX7GM5tpCOm",
      "body": "It’s not the answer you’re looking for unfortunately, but ultimately, this is a VS code issue, not an issue with this extension. \r\n\r\nThe VS code team would probably suggest it’s a user issue as well… But a case could be made to at least improve the UX around the failure to them.\r\n\r\nYour issue is certainly related to the referenced issue. TLDR if you launch your editor in such a fashion that the editor doesn’t see node on PATH, nothing that launches child processes dependent on node are going to work.\r\n\r\n",
      "createdAt": "2023-12-04T21:03:44Z",
      "issue": {
        "id": "I_kwDOBuX7GM54rgZ4",
        "title": "Debug not finding node",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/344"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOBuX7GM5tpDd_": {
      "id": "IC_kwDOBuX7GM5tpDd_",
      "body": "cd project && nmv use && code .\r\n\r\nand ur good to go",
      "createdAt": "2023-12-04T21:07:39Z",
      "issue": {
        "id": "I_kwDOBuX7GM54rgZ4",
        "title": "Debug not finding node",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/344"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOBuX7GM5txE5o": {
      "id": "IC_kwDOBuX7GM5txE5o",
      "body": "https://github.com/firsttris/vscode-jest-runner/issues/344#issuecomment-1839478655\r\n\r\ncourtesly closing as wont do. if you feel otherwise, please take it up with vscode and feel free to cross ref this issue",
      "createdAt": "2023-12-05T20:42:48Z",
      "issue": {
        "id": "I_kwDOBuX7GM54rgZ4",
        "title": "Debug not finding node",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/344"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOBuX7GM5txFXr": {
      "id": "IC_kwDOBuX7GM5txFXr",
      "body": "3+ months stale without repro. please reopen with example if required ",
      "createdAt": "2023-12-05T20:44:19Z",
      "issue": {
        "id": "I_kwDOBuX7GM5uH2Mq",
        "title": "Debug Test doesn't support multiply-nested test",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/326"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOBuX7GM5txF7o": {
      "id": "IC_kwDOBuX7GM5txF7o",
      "body": "Solutions demonstrated with existing APIs",
      "createdAt": "2023-12-05T20:46:11Z",
      "issue": {
        "id": "I_kwDOBuX7GM5qOudR",
        "title": "Allow to use global jest",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/320"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOBuX7GM5txGLY": {
      "id": "IC_kwDOBuX7GM5txGLY",
      "body": "NODE_OPTIONS is a great solve.",
      "createdAt": "2023-12-05T20:46:53Z",
      "issue": {
        "id": "I_kwDOBuX7GM5ngApz",
        "title": "It possible to define node with --openssl-legacy-provider parameter before run test?",
        "url": "https://github.com/firsttris/vscode-jest-runner/issues/316"
      },
      "repository": {
        "nameWithOwner": "firsttris/vscode-jest-runner"
      }
    },
    "IC_kwDOCXZcSc5t5K-j": {
      "id": "IC_kwDOCXZcSc5t5K-j",
      "body": "Thanks!",
      "createdAt": "2023-12-06T21:16:26Z",
      "issue": {
        "id": "PR_kwDOCXZcSc5hVkds",
        "title": "Update readme.md",
        "url": "https://github.com/cdaringe/postgraphile-upsert/pull/697"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDODeIY385uczie": {
      "id": "IC_kwDODeIY385uczie",
      "body": "clients _shouldnt_ be able to head http-only cookies--that's quite literally the entire purpose of http-only cookies--preventing client side access.",
      "createdAt": "2023-12-12T23:52:31Z",
      "issue": {
        "id": "MDU6SXNzdWU2ODI1MjAwMDc=",
        "title": "How I can get http-only and secure cookies on android device",
        "url": "https://github.com/react-native-cookies/cookies/issues/76"
      },
      "repository": {
        "nameWithOwner": "react-native-cookies/cookies"
      }
    },
    "IC_kwDOAwORNs5uhmxb": {
      "id": "IC_kwDOAwORNs5uhmxb",
      "body": "I ended up augmenting my internal greenkeeper-like product to run a post process that scans for these and runs update one by one. npm:semver is pretty sensitive to how it parses pre release versions if you try yourself. I had to convert my prerelease versions from #.#.#-TAG-#### to #.#.#-TAG.####, and it works nicely.",
      "createdAt": "2023-12-13T16:42:34Z",
      "issue": {
        "id": "I_kwDOAwORNs53o43S",
        "title": "pnpm outdated does not yield expected results on pre-release dist tag packages",
        "url": "https://github.com/pnpm/pnpm/issues/7339"
      },
      "repository": {
        "nameWithOwner": "pnpm/pnpm"
      }
    },
    "IC_kwDOGuS9Ts5uqNI7": {
      "id": "IC_kwDOGuS9Ts5uqNI7",
      "body": "Sorry for the delay. Ill get it in shipshape shortly",
      "createdAt": "2023-12-14T20:41:55Z",
      "issue": {
        "id": "PR_kwDOGuS9Ts5hmv1t",
        "title": "feat: add logo",
        "url": "https://github.com/gleam-lang/packages/pull/27"
      },
      "repository": {
        "nameWithOwner": "gleam-lang/packages"
      }
    },
    "IC_kwDOKAiibM5v7Las": {
      "id": "IC_kwDOKAiibM5v7Las",
      "body": "fixed by a recent (unpublished) musl PR",
      "createdAt": "2024-01-04T21:28:30Z",
      "issue": {
        "id": "I_kwDOKAiibM57Kd8L",
        "title": "📚 Prerequisites for linux installation",
        "url": "https://github.com/biomejs/biome/issues/1435"
      },
      "repository": {
        "nameWithOwner": "biomejs/biome"
      }
    },
    "IC_kwDOFuaTfc5wCqQS": {
      "id": "IC_kwDOFuaTfc5wCqQS",
      "body": "Host system, CI, etc.",
      "createdAt": "2024-01-06T16:27:48Z",
      "issue": {
        "id": "I_kwDOFuaTfc57R5Dp",
        "title": "HOWTO: cargo test",
        "url": "https://github.com/Rahix/avr-hal-template/issues/28"
      },
      "repository": {
        "nameWithOwner": "Rahix/avr-hal-template"
      }
    },
    "IC_kwDOFuaTfc5wDMNg": {
      "id": "IC_kwDOFuaTfc5wDMNg",
      "body": "right. i'm still a noob. `.cargo/config.toml` applies to the whole project, but i was hoping that, if theres not a great way to do this all intra crate, that perhaps i'd at least be able to do it in a workspace? any ideas on how to make that work? sorry if you think it's outta scope for the template. i dunno--testing seems important enough to include in the recipe imho!",
      "createdAt": "2024-01-07T00:04:10Z",
      "issue": {
        "id": "I_kwDOFuaTfc57R5Dp",
        "title": "HOWTO: cargo test",
        "url": "https://github.com/Rahix/avr-hal-template/issues/28"
      },
      "repository": {
        "nameWithOwner": "Rahix/avr-hal-template"
      }
    },
    "IC_kwDOG0yFq85wEq56": {
      "id": "IC_kwDOG0yFq85wEq56",
      "body": "> so you'll have to stick to attribute(\"role\", ...) \r\n\r\nnp!\r\n\r\n> What are you building? 👀\r\n\r\na control gui for a pan/tilt gimbal :)",
      "createdAt": "2024-01-08T01:26:52Z",
      "issue": {
        "id": "PR_kwDOG0yFq85jaRoW",
        "title": "feat: add role attr",
        "url": "https://github.com/lustre-labs/lustre/pull/34"
      },
      "repository": {
        "nameWithOwner": "lustre-labs/lustre"
      }
    },
    "IC_kwDODPjJTc5wR472": {
      "id": "IC_kwDODPjJTc5wR472",
      "body": ":tada: This PR is included in version 3.0.0 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/3.0.0)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v3.0.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2024-01-09T20:27:52Z",
      "issue": {
        "id": "PR_kwDODPjJTc5jncwR",
        "title": "chore(deps): update dependency semantic-release-cli to v5.4.6",
        "url": "https://github.com/cdaringe/primitivify/pull/553"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "IC_kwDODPjJTc5wR4-b": {
      "id": "IC_kwDODPjJTc5wR4-b",
      "body": ":tada: This PR is included in version 3.0.0 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https://www.npmjs.com/package/primitivify/v/3.0.0)\n- [GitHub release](https://github.com/cdaringe/primitivify/releases/tag/v3.0.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "createdAt": "2024-01-09T20:27:55Z",
      "issue": {
        "id": "PR_kwDODPjJTc5jnc-4",
        "title": "chore(deps): update typescript-eslint monorepo to v6 (major)",
        "url": "https://github.com/cdaringe/primitivify/pull/554"
      },
      "repository": {
        "nameWithOwner": "cdaringe/primitivify"
      }
    },
    "IC_kwDOA7dBp85xG_Sl": {
      "id": "IC_kwDOA7dBp85xG_Sl",
      "body": "we have `pub type Foo`, but we could also entertain rust type `pub (module) type Foo` for scoped public-ness.\r\n\r\nin this respect, i could put my `pub (module) opaque type` in internal/*, and because it's a `pub (module) ...`, it's permitted to be consumed in my module.\r\n\r\ni may not be grokking the proposal perfectly, but I _prefer_ something like the rust strategy over `@internal`. in the example above, `encode` was decorated with `@internal` to work around an issue with `Wibble`. my intuition suggests that fixing the scoping with `Wibble` can and should be handled at `Wibble`, rather than by _consumers_ of `Wibble`.\r\n\r\n🤔 ",
      "createdAt": "2024-01-18T02:15:42Z",
      "issue": {
        "id": "I_kwDOA7dBp856dswO",
        "title": "✨ Introduce an `@internal` attribute for individual declarations.",
        "url": "https://github.com/gleam-lang/gleam/issues/2486"
      },
      "repository": {
        "nameWithOwner": "gleam-lang/gleam"
      }
    },
    "IC_kwDOAT9aAc5xMPbV": {
      "id": "IC_kwDOAT9aAc5xMPbV",
      "body": "I support something _like_ this request, purely on the merits of the following observation for tsconfig:\r\n\r\n`JSON` != `JSONC`\r\n\r\nhttps://code.visualstudio.com/docs/languages/json#_json-with-comments\r\n\r\nI have zero qualms with JSON. However, labeling a file as JSON immediately invokes expectations of its content.\r\n\r\nI have been using tsconfig.json happily for years without issue.\r\n\r\nToday, this naming misnomer caused a demonstrably competent, smart, senior engineer to make a smart, but incorrect assumption. A formatter update started appending commas to final items in arrays in our tsconfig. \"That's not valid JSON\" they noticed, which prompted a bunch of activity to protect our automated builds/release pipelines... which was all not necessary, because of course, **tsconfig.json is not json**. I've observed peer developers on more than one occasion try and read/parse tsconfig.json with JSON.parse, etc unsuccessfully.\r\n\r\nBy marking a non-json file as json, developer friction has observably ensued. It's not a huge deal, but it's completely avoidable for an enormous population of users.\r\n\r\nDropping tsconfig.json support is a non-starter (I presume all parties are aligned there). Going forward, however, I advocate the default config file extension should be honest about its format.\r\n\r\n`tsconfig.jsonc` or `tsconfig.yml` would be be better defaults, as there is no ambiguity.\r\n",
      "createdAt": "2024-01-18T18:52:47Z",
      "issue": {
        "id": "MDU6SXNzdWU2NzgwNTk3NzQ=",
        "title": "Allow tsconfig.yaml in addition to tsconfig.json",
        "url": "https://github.com/microsoft/TypeScript/issues/40027"
      },
      "repository": {
        "nameWithOwner": "microsoft/TypeScript"
      }
    },
    "IC_kwDOJiMXlc5xWeS-": {
      "id": "IC_kwDOJiMXlc5xWeS-",
      "body": "i'd like to 'em attached to each node 😄  e.g. `Node(comments: List(Comment), ..)`\r\n\r\nthat way i can AST -> transform -> AST with comments fully functional.\r\n\r\nJS has a commentless AST, and every parser does it differently, if at all. very painful over there, specifically because comments are used by coverage instrumentation tools, which get totally borked easily in different projects.",
      "createdAt": "2024-01-20T03:37:41Z",
      "issue": {
        "id": "I_kwDOJiMXlc5tBTrc",
        "title": "✨ Consider keeping doc comments in the parsed AST.",
        "url": "https://github.com/lpil/glance/issues/2"
      },
      "repository": {
        "nameWithOwner": "lpil/glance"
      }
    },
    "IC_kwDOLHZfjs5xYgWX": {
      "id": "IC_kwDOLHZfjs5xYgWX",
      "body": "### Renovate Ignore Notification\n\nBecause you closed this PR without merging, Renovate will ignore this update. You will not get PRs for *any* future `1.x` releases. But if you manually upgrade to `1.x` then Renovate will re-enable `minor` and `patch` updates automatically.\n\nIf you accidentally closed this PR, or if you changed your mind: rename this PR to get a fresh replacement PR.",
      "createdAt": "2024-01-20T19:43:49Z",
      "issue": {
        "id": "PR_kwDOLHZfjs5kohIP",
        "title": "Update dependency gleam_json to v1",
        "url": "https://github.com/cdaringe/renovate-npm-testerooni/pull/6"
      },
      "repository": {
        "nameWithOwner": "cdaringe/renovate-npm-testerooni"
      }
    },
    "IC_kwDOFOAMbc5xklX9": {
      "id": "IC_kwDOFOAMbc5xklX9",
      "body": "looks like:\r\n\r\n```\r\n  cli.register(InstallGemCommand);\r\n  cli.register(InstallNpmCommand);\r\n```\r\n\r\nredundantly register `InstallToolCommand`, which creates dupe entries. commenting those two out restores execution to working order",
      "createdAt": "2024-01-23T07:05:12Z",
      "issue": {
        "id": "I_kwDOFOAMbc585KZT",
        "title": "Launching dev container and pnpm start <args> yields ambiguous error",
        "url": "https://github.com/containerbase/base/issues/2030"
      },
      "repository": {
        "nameWithOwner": "containerbase/base"
      }
    },
    "IC_kwDOFOAMbc5xk498": {
      "id": "IC_kwDOFOAMbc5xk498",
      "body": "> Why are you running that command?\r\n\r\ndebugging\r\n\r\n> Eg is it documented that you need to run it?\r\n\r\njust common JS idioms for running stuff, and it was indeed present. Thus, I inferred it is present for running 🙂\r\n\r\nI was able to use it to successfully debug my failure and get to a functional state",
      "createdAt": "2024-01-23T08:10:06Z",
      "issue": {
        "id": "I_kwDOFOAMbc585KZT",
        "title": "Launching dev container and pnpm start <args> yields ambiguous error",
        "url": "https://github.com/containerbase/base/issues/2030"
      },
      "repository": {
        "nameWithOwner": "containerbase/base"
      }
    },
    "IC_kwDOFOAMbc5xruWI": {
      "id": "IC_kwDOFOAMbc5xruWI",
      "body": "I think we're good for a 2nd pass",
      "createdAt": "2024-01-24T03:18:01Z",
      "issue": {
        "id": "PR_kwDOFOAMbc5konwU",
        "title": "feat: add gleam installer",
        "url": "https://github.com/containerbase/base/pull/2018"
      },
      "repository": {
        "nameWithOwner": "containerbase/base"
      }
    },
    "IC_kwDOFOAMbc5xwHAg": {
      "id": "IC_kwDOFOAMbc5xwHAg",
      "body": "Blarg, i think one of my arch urls is slightly off. Will patch soon",
      "createdAt": "2024-01-24T16:04:58Z",
      "issue": {
        "id": "PR_kwDOFOAMbc5konwU",
        "title": "feat: add gleam installer",
        "url": "https://github.com/containerbase/base/pull/2018"
      },
      "repository": {
        "nameWithOwner": "containerbase/base"
      }
    },
    "IC_kwDOFOAMbc5xwIPi": {
      "id": "IC_kwDOFOAMbc5xwIPi",
      "body": "0bfc3ec07e808aa11e186dc14eaea6372b360a85 should fix the bad URL",
      "createdAt": "2024-01-24T16:07:26Z",
      "issue": {
        "id": "PR_kwDOFOAMbc5konwU",
        "title": "feat: add gleam installer",
        "url": "https://github.com/containerbase/base/pull/2018"
      },
      "repository": {
        "nameWithOwner": "containerbase/base"
      }
    },
    "IC_kwDOFExXwM5xxL23": {
      "id": "IC_kwDOFExXwM5xxL23",
      "body": "~~i'm on `0.71.3`, that doesnt work for me. opens my prior dir~~ nm, it takes. thx :)",
      "createdAt": "2023-02-03T19:00:40Z",
      "issue": {
        "id": "I_kwDOFExXwM59GkIE",
        "title": "allow launching from shell with arguments",
        "url": "https://github.com/zed-industries/zed/issues/5911"
      },
      "repository": {
        "nameWithOwner": "zed-industries/zed"
      }
    },
    "IC_kwDOKAiibM5x6U4m": {
      "id": "IC_kwDOKAiibM5x6U4m",
      "body": "🚨 opinions stated as fact, for brevity sake.\r\n\r\nThe heuristic should be:\r\n\r\n- is this file regularly edited by humans?\r\n  - if yes, include in formatting set\r\n  - if no, it implies it's a machine mantained file (e.g. lockfile), and should not partake in formatting\r\n\r\nthe formatting and linting separation is valid, and thus these two workstreams should consider these files independently. ",
      "createdAt": "2024-01-25T22:43:01Z",
      "issue": {
        "id": "I_kwDOKAiibM59NAhJ",
        "title": "📝 Unable to format `package.json`",
        "url": "https://github.com/biomejs/biome/issues/1668"
      },
      "repository": {
        "nameWithOwner": "biomejs/biome"
      }
    },
    "IC_kwDOFOAMbc5yNbff": {
      "id": "IC_kwDOFOAMbc5yNbff",
      "body": "* requested actions completed\r\n* conversations resolved\r\n* docs updated",
      "createdAt": "2024-01-30T05:48:33Z",
      "issue": {
        "id": "PR_kwDOFOAMbc5konwU",
        "title": "feat: add gleam installer",
        "url": "https://github.com/containerbase/base/pull/2018"
      },
      "repository": {
        "nameWithOwner": "containerbase/base"
      }
    },
    "IC_kwDOLHwTPM5ykwhN": {
      "id": "IC_kwDOLHwTPM5ykwhN",
      "body": "Oh ok, cool. Ill need to patch a few other parts too. Will get to that. Is there actual significance here, or just desired convention?",
      "createdAt": "2024-02-01T21:02:53Z",
      "issue": {
        "id": "PR_kwDOLHwTPM5lrq4Z",
        "title": "Use Gleam casing in example",
        "url": "https://github.com/cdaringe/gserde/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/gserde"
      }
    },
    "IC_kwDOLHwTPM5ym7xU": {
      "id": "IC_kwDOLHwTPM5ym7xU",
      "body": "updated the ollll docs too with the example mo flushed out",
      "createdAt": "2024-02-02T04:42:48Z",
      "issue": {
        "id": "PR_kwDOLHwTPM5lrq4Z",
        "title": "Use Gleam casing in example",
        "url": "https://github.com/cdaringe/gserde/pull/2"
      },
      "repository": {
        "nameWithOwner": "cdaringe/gserde"
      }
    },
    "IC_kwDOBKgTAs5zGBNG": {
      "id": "IC_kwDOBKgTAs5zGBNG",
      "body": "i now see this is `shfmt` behavior 🤔 ",
      "createdAt": "2024-02-06T23:44:59Z",
      "issue": {
        "id": "I_kwDOBKgTAs5-eAxU",
        "title": "Trailing slashes removed in Dockerfile RUN command",
        "url": "https://github.com/foxundermoon/vs-shell-format/issues/374"
      },
      "repository": {
        "nameWithOwner": "foxundermoon/vs-shell-format"
      }
    },
    "IC_kwDOBKgTAs5zGB6Z": {
      "id": "IC_kwDOBKgTAs5zGB6Z",
      "body": "dupe with #304",
      "createdAt": "2024-02-06T23:47:17Z",
      "issue": {
        "id": "I_kwDOBKgTAs5-eAxU",
        "title": "Trailing slashes removed in Dockerfile RUN command",
        "url": "https://github.com/foxundermoon/vs-shell-format/issues/374"
      },
      "repository": {
        "nameWithOwner": "foxundermoon/vs-shell-format"
      }
    },
    "IC_kwDOBKgTAs5zGCR3": {
      "id": "IC_kwDOBKgTAs5zGCR3",
      "body": "The shfmt crew says explicitly that dockerfile is _not_ supported. It seems like we should perhaps _prune_ Dockerfile support out of this extension?",
      "createdAt": "2024-02-06T23:48:11Z",
      "issue": {
        "id": "I_kwDOBKgTAs5WovCC",
        "title": "Bug: trailing backslash removed in Dockerfile",
        "url": "https://github.com/foxundermoon/vs-shell-format/issues/304"
      },
      "repository": {
        "nameWithOwner": "foxundermoon/vs-shell-format"
      }
    },
    "IC_kwDOCo1SFM5zOFgC": {
      "id": "IC_kwDOCo1SFM5zOFgC",
      "body": "I did some debugging.\r\n\r\n- there exists a function, `shouldBumpMajor`. this is causing my `minor` release to be promoted to a `major` against expectation\r\n- it happens due to some sort of `peerDependency` check logic, which candidly, doesn't seem correct to me at all, especially that my peer is using workspace: syntax and all deps are linked. will report more.\r\n\r\n",
      "createdAt": "2024-02-07T22:57:40Z",
      "issue": {
        "id": "I_kwDOCo1SFM55O7Sy",
        "title": "Version Bump not as expected",
        "url": "https://github.com/changesets/changesets/issues/1279"
      },
      "repository": {
        "nameWithOwner": "changesets/changesets"
      }
    },
    "IC_kwDOCo1SFM5zOGFi": {
      "id": "IC_kwDOCo1SFM5zOGFi",
      "body": "Looks like the logic that put this in place is ~4 years old. https://github.com/changesets/changesets/pull/412\r\n\r\n",
      "createdAt": "2024-02-07T22:59:57Z",
      "issue": {
        "id": "I_kwDOCo1SFM55O7Sy",
        "title": "Version Bump not as expected",
        "url": "https://github.com/changesets/changesets/issues/1279"
      },
      "repository": {
        "nameWithOwner": "changesets/changesets"
      }
    },
    "IC_kwDOBJLedM5z0PNN": {
      "id": "IC_kwDOBJLedM5z0PNN",
      "body": "Lockfile maintenance also lookin good: https://github.com/cdaringe/gserde/pull/8",
      "createdAt": "2024-02-14T04:43:18Z",
      "issue": {
        "id": "PR_kwDOBJLedM5kodLh",
        "title": "feat: support gleam lang",
        "url": "https://github.com/renovatebot/renovate/pull/26767"
      },
      "repository": {
        "nameWithOwner": "renovatebot/renovate"
      }
    },
    "IC_kwDOGuS9Ts5z0V3G": {
      "id": "IC_kwDOGuS9Ts5z0V3G",
      "body": "<img width=\"607\" alt=\"image\" src=\"https://github.com/gleam-lang/packages/assets/1003261/19f4a1a3-3760-42de-8d66-e0fa61eeb7f8\">\r\n\r\nstill lookin good. also loaded it onto my iphone--looks good there too.\r\n\r\nalso, i had a hard time getting this to run with the deps on 0.34.x, so i rolled the deps fwd and they are runnin well. hopefully that's cool? it's definitely off topic, but 🤷 .\r\n\r\n\r\nsorry this took so long, i thought i was done. didn't realize there were conflicts",
      "createdAt": "2024-02-14T05:21:31Z",
      "issue": {
        "id": "PR_kwDOGuS9Ts5hmv1t",
        "title": "feat: add logo",
        "url": "https://github.com/gleam-lang/packages/pull/27"
      },
      "repository": {
        "nameWithOwner": "gleam-lang/packages"
      }
    },
    "IC_kwDODCKAoM507NJ7": {
      "id": "IC_kwDODCKAoM507NJ7",
      "body": "I have a suspicion that text inputs are modeled as controlled fields, which creates unnecessary work on every key stroke . ",
      "createdAt": "2024-02-23T16:58:50Z",
      "issue": {
        "id": "I_kwDODCKAoM58hKUn",
        "title": "[bug]: laggy text input",
        "url": "https://github.com/hoppscotch/hoppscotch/issues/3762"
      },
      "repository": {
        "nameWithOwner": "hoppscotch/hoppscotch"
      }
    },
    "IC_kwDOCxSf3851F-qG": {
      "id": "IC_kwDOCxSf3851F-qG",
      "body": "Not stale",
      "createdAt": "2024-02-26T16:00:49Z",
      "issue": {
        "id": "I_kwDOCxSf3854X3T3",
        "title": "RFC: Allow concurrent testing without excessive warning noise",
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues/4337"
      },
      "repository": {
        "nameWithOwner": "open-telemetry/opentelemetry-js"
      }
    },
    "IC_kwDOGfylDM52mJpU": {
      "id": "IC_kwDOGfylDM52mJpU",
      "body": "I have a sneaking suspicion there may be something conflicting also with\r\nthe enable pin. On my board, the enable pin shares a trace with the\r\ndiagnostic pin, only because I have it slammed into a breadboard :-)\r\n\r\nSent from Gmail Mobile\r\n\r\n\r\nOn Mon, Mar 11, 2024 at 10:31 AM Peter Polidoro ***@***.***>\r\nwrote:\r\n\r\n> Interesting, I have not tested the DIAG pin output, but it would be great\r\n> to figure out how to make this work.\r\n>\r\n> The datasheet says:\r\n> DIAG is pulsed by StallGuard when SG_RESULT falls below SGTHRS. It is only\r\n> enabled in StealthChop\r\n> mode, and when TCOOLTHRS ≥ TSTEP > TPWMTHRS\r\n>\r\n> One or more of those conditions must not be true. I will have to\r\n> experiment with this when I have some time. If you figure it out in the\r\n> mean time, please let me know!\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/janelia-arduino/TMC2209/issues/58#issuecomment-1989030205>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAHU57IQSXWWD3ILJ3HOS2TYXXZ6FAVCNFSM6AAAAABEPDTSCKVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSOBZGAZTAMRQGU>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "createdAt": "2024-03-12T00:54:19Z",
      "issue": {
        "id": "I_kwDOGfylDM6Bzrai",
        "title": "High level interface for enabling StallGuard DIAG pin to fire",
        "url": "https://github.com/janelia-arduino/TMC2209/issues/58"
      },
      "repository": {
        "nameWithOwner": "janelia-arduino/TMC2209"
      }
    },
    "IC_kwDOGfylDM53YfDY": {
      "id": "IC_kwDOGfylDM53YfDY",
      "body": "My `TSTEP` & `TCOOLTHRS` were within a percent of one another. I put a >=1% gap on them, and it triggers now. 😄 . Interesting that SW detection could trigger but not HW. Who knows, maybe weird analog digital conversion malarkey.",
      "createdAt": "2024-03-18T04:28:31Z",
      "issue": {
        "id": "I_kwDOGfylDM6Bzrai",
        "title": "High level interface for enabling StallGuard DIAG pin to fire",
        "url": "https://github.com/janelia-arduino/TMC2209/issues/58"
      },
      "repository": {
        "nameWithOwner": "janelia-arduino/TMC2209"
      }
    },
    "IC_kwDOB_QrUM54cPOj": {
      "id": "IC_kwDOB_QrUM54cPOj",
      "body": "It didn’t exist at the time.",
      "createdAt": "2024-03-26T14:59:10Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTY3ODg3MDQ=",
        "title": "show-deno: deno module search & browser",
        "url": "https://github.com/denoland/deno/issues/1478"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "IC_kwDOBJLedM54gkBa": {
      "id": "IC_kwDOBJLedM54gkBa",
      "body": "My goodness, I thought i was waiting for reviews 🤦 . Builds were failing, my bad! Hopefully these go green now that tests+coverage _should_ be fixed.",
      "createdAt": "2024-03-27T02:24:08Z",
      "issue": {
        "id": "PR_kwDOBJLedM5kodLh",
        "title": "feat: support gleam lang",
        "url": "https://github.com/renovatebot/renovate/pull/26767"
      },
      "repository": {
        "nameWithOwner": "renovatebot/renovate"
      }
    },
    "IC_kwDOB_QrUM54l0F6": {
      "id": "IC_kwDOB_QrUM54l0F6",
      "body": "It's open source, friend! Who is _them_? We _are_ them!",
      "createdAt": "2024-03-27T16:18:52Z",
      "issue": {
        "id": "MDU6SXNzdWUzOTY3ODg3MDQ=",
        "title": "show-deno: deno module search & browser",
        "url": "https://github.com/denoland/deno/issues/1478"
      },
      "repository": {
        "nameWithOwner": "denoland/deno"
      }
    },
    "IC_kwDOBJLedM55Nsi4": {
      "id": "IC_kwDOBJLedM55Nsi4",
      "body": "Ya. I appreciate everyone's time in this.\r\n\r\nI'm feeling a wee bit burnt out. Terse/curt PR discussion kind of exacerbates the effect for me, so I closed just to signal that I'm taking a short break.\r\n\r\nI'd like to pick it up again in the future.",
      "createdAt": "2024-04-03T06:08:09Z",
      "issue": {
        "id": "PR_kwDOBJLedM5kodLh",
        "title": "feat: support gleam lang",
        "url": "https://github.com/renovatebot/renovate/pull/26767"
      },
      "repository": {
        "nameWithOwner": "renovatebot/renovate"
      }
    },
    "IC_kwDOBok8rs56VPVC": {
      "id": "IC_kwDOBok8rs56VPVC",
      "body": "- '@semantic-release/npm': 12.0.0\r\n- semantic-release: 23.0.8",
      "createdAt": "2024-04-12T19:15:31Z",
      "issue": {
        "id": "I_kwDOBok8rs6Fi6H7",
        "title": "ERR_INVALID_AUTH triggered by semantic-release npm despite not having this field set in checkout directory",
        "url": "https://github.com/semantic-release/npm/issues/777"
      },
      "repository": {
        "nameWithOwner": "semantic-release/npm"
      }
    },
    "IC_kwDOBok8rs56Vh6J": {
      "id": "IC_kwDOBok8rs56Vh6J",
      "body": "Ok, i've learned some more.\r\n\r\n- in my working checkout dir, `npm config list` reads data from `<workspace>/.npmrc` and my `<prefix>/globalconfig`.\r\n- when sem-rel processes, it thinks my configs are `<workspace>/.npmrc` and `../../<workspace>/.npmrc`, which is a grantparent. More specifically:\r\n\r\n```\r\n13:04:37   \"configs\": [\r\n13:04:37     \"/mnt/jenkinspan/.npmrc\", # this config file is not processed by npm list config when run in my project checkout\r\n13:04:37     \"/mnt/jenkinspan/workspace/myorg/foo/ws/.npmrc\"\r\n13:04:37   ]\r\n```\r\n\r\n```js\r\n// set-npmrc-auth.js\r\nimport rc from \"rc\";\r\n\r\nrc();\r\n```\r\n\r\n**tldr, sem-rels use of rc() writes an incompatible npm config with my system, where if it used just my checkout's npm config, it would work successfully**. `rc` does not appear to match the way npm sources configuration files? still digging.\r\n\r\nMy intuition says that this config generation method creates opporitunity for desync.\r\n\r\nInstead of reading files and checking for valid auth, we should seriously consider querying npm to produce it's full configuration. We're we to have captured `npm config list` as the source of config before calling verify-auth, it would have said \"ya, this system is auth ready.\" However, instead of consulting npm, we tried to re-create what npm does, but it was not aligned, and can lead to two different failures:\r\n\r\n1. first, reading in a previously unread file (which corrupted my config), and second,\r\n2. not consulting the prefix/global config file (which dropped my critical, correct auth config!)\r\n\r\n",
      "createdAt": "2024-04-12T20:15:03Z",
      "issue": {
        "id": "I_kwDOBok8rs6Fi6H7",
        "title": "ERR_INVALID_AUTH triggered by semantic-release npm despite not having this field set in checkout directory",
        "url": "https://github.com/semantic-release/npm/issues/777"
      },
      "repository": {
        "nameWithOwner": "semantic-release/npm"
      }
    },
    "IC_kwDOBfbSFM56Wcv7": {
      "id": "IC_kwDOBfbSFM56Wcv7",
      "body": "The root cause is that my plugin was crashing and doing pure evil",
      "createdAt": "2024-04-12T23:52:34Z",
      "issue": {
        "id": "I_kwDOBfbSFM6FlNgu",
        "title": "nx postinstall exits with code 23 and no output",
        "url": "https://github.com/nrwl/nx/issues/22812"
      },
      "repository": {
        "nameWithOwner": "nrwl/nx"
      }
    },
    "IC_kwDOLHwTPM56Zkkc": {
      "id": "IC_kwDOLHwTPM56Zkkc",
      "body": "Yep, need to do that\r\n\r\nSent from Gmail Mobile\r\n\r\n\r\nOn Fri, Apr 12, 2024 at 1:12 PM Lukas Weber ***@***.***>\r\nwrote:\r\n\r\n> Hi 👋\r\n>\r\n> it seems like gserde is trying to parse my .mjs file i have next to my\r\n> .gleam files and panics. Might be a good idea to add a check and only\r\n> parse .gleam files.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/cdaringe/gserde/issues/9>, or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAHU57PJK2VXN3G6GIL3HULY5A53NAVCNFSM6AAAAABGEXCS26VHI2DSMVQWIX3LMV43ASLTON2WKOZSGI2DAOBSGY3DSOI>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n",
      "createdAt": "2024-04-13T06:27:44Z",
      "issue": {
        "id": "I_kwDOLHwTPM6FkE1L",
        "title": "Panic if there is a js file next to the gleam sources",
        "url": "https://github.com/cdaringe/gserde/issues/9"
      },
      "repository": {
        "nameWithOwner": "cdaringe/gserde"
      }
    },
    "IC_kwDOLHwTPM56b8QO": {
      "id": "IC_kwDOLHwTPM56b8QO",
      "body": "1.2.1 published",
      "createdAt": "2024-04-14T18:20:07Z",
      "issue": {
        "id": "I_kwDOLHwTPM6FkE1L",
        "title": "Panic if there is a js file next to the gleam sources",
        "url": "https://github.com/cdaringe/gserde/issues/9"
      },
      "repository": {
        "nameWithOwner": "cdaringe/gserde"
      }
    },
    "IC_kwDOFo02Bc56wHCP": {
      "id": "IC_kwDOFo02Bc56wHCP",
      "body": "Thank you for the thoughtful response. Will give it a whirl. Seems adequate, or perhaps trait-able :)",
      "createdAt": "2024-04-16T15:58:48Z",
      "issue": {
        "id": "I_kwDOFo02Bc6FjVGO",
        "title": "RFC: improved deserialization failure output",
        "url": "https://github.com/oxidecomputer/progenitor/issues/774"
      },
      "repository": {
        "nameWithOwner": "oxidecomputer/progenitor"
      }
    },
    "IC_kwDOBdhfKc568ZtZ": {
      "id": "IC_kwDOBdhfKc568ZtZ",
      "body": "I dug into the source. By the time I make it to this line: https://github.com/redhat-developer/yaml-language-server/blob/dfccc6fc095faeb5d07051b51f308478cdac70fd/src/languageservice/services/yamlSchemaService.ts#L164, the `.schema` property will not be present. some sort of config and remapping would need occur at or before this point.",
      "createdAt": "2024-04-17T23:27:03Z",
      "issue": {
        "id": "I_kwDOBdhfKc6GE5uW",
        "title": "RFC: Support schema from a child definition",
        "url": "https://github.com/redhat-developer/yaml-language-server/issues/960"
      },
      "repository": {
        "nameWithOwner": "redhat-developer/yaml-language-server"
      }
    },
    "IC_kwDOLGR95857Pv0d": {
      "id": "IC_kwDOLGR95857Pv0d",
      "body": "Will publish when at my deks this afternoon. Thank you!",
      "createdAt": "2024-04-20T16:42:20Z",
      "issue": {
        "id": "PR_kwDOLGR9585tP4fF",
        "title": "up gleam for fix opaque warnings",
        "url": "https://github.com/cdaringe/fswalk/pull/4"
      },
      "repository": {
        "nameWithOwner": "cdaringe/fswalk"
      }
    },
    "IC_kwDOBok8rs58xqGf": {
      "id": "IC_kwDOBok8rs58xqGf",
      "body": "> npm plugin once npm dropped support ... does the version you mentioned above match the one\r\n\r\nThe error message is directly from sem-rel running of the latest version of `npm` (latest at the time of writing). And indeed, I can assert latest versions of all sem-rel packages were being used. The failure mode is/was isolated to the latest version of the npm sem-rel plugin (this package).\r\n\r\nThis package can generate an incorrect .npmrc, used in its temdir. My CI system had an old, incorrect evil floating .npmrc file on disk somewhere in a parent folder, which I did not place, nor do I service as a user of this CI system. I talked with the CI admin to remove it. NPM_TOKEN or no NPM_TOKEN, this package has code which concats all parent npmrcs which is no longer correct behavior, ref https://docs.npmjs.com/cli/v7/configuring-npm/npmrc#files\r\n\r\nI think we're aligned on that, but re-expressing just for clarity sake.\r\n\r\n> but it is important to understand ... if this is done as expected\r\n\r\nThis is incorrect. The following is all stated with courtesy. This lib currently supports checking for `_auth`, and can fail incorrectly due to bad concat'ing. \"done as expected\" is surprising language given the state of the code.  The lib supports this _now_ despite the unsupported claim: https://github.com/semantic-release/npm/blob/86011db51801fedf17eec1e9611b1cbe8e46cafa/lib/set-npmrc-auth.js#L21-L26\r\n\r\n_Even if I had set NPM_TOKEN, that failing code block would have triggered and my publish failed_ due to the `rc` concatenating in a dead rc file. FWIW, I do rely on my auth being provided by my CI providing team, so `NPM_TOKEN` isn't available to me, which is... a thing 😵 .\r\n\r\nIt's a subtle and nuanced failure mode, no doubt.\r\n\r\n",
      "createdAt": "2024-05-03T16:52:27Z",
      "issue": {
        "id": "I_kwDOBok8rs6Fi6H7",
        "title": "ERR_INVALID_AUTH triggered by semantic-release npm despite not having this field set in checkout directory",
        "url": "https://github.com/semantic-release/npm/issues/777"
      },
      "repository": {
        "nameWithOwner": "semantic-release/npm"
      }
    },
    "IC_kwDOCicdos59H5SJ": {
      "id": "IC_kwDOCicdos59H5SJ",
      "body": "Yes to all!",
      "createdAt": "2024-05-07T20:12:58Z",
      "issue": {
        "id": "I_kwDOCicdos6GsagD",
        "title": "Feature Request: support body from ReadableStream",
        "url": "https://github.com/leoek/fetch-to-curl/issues/55"
      },
      "repository": {
        "nameWithOwner": "leoek/fetch-to-curl"
      }
    },
    "IC_kwDOBok8rs59Jx76": {
      "id": "IC_kwDOBok8rs59Jx76",
      "body": "> does this mean that the trouble you faced is resolved in your case?\r\n\r\nYep!\r\n\r\n> honestly appreciate the persistence ... since #437\r\n\r\nya no problem.\r\n\r\n> what i'm not clear about from your statement is what you mean about \"bad concat'ing\". \r\n\r\nIndeed, I should have used more precise language. I intended to mean \"[referring my point] that some found files should not be concat'ed because of the mismatch with default npm behavior\".\r\n\r\nEdit: I realized you did grok my point above 😵 , so my expansion below wasn't needed :)\r\n<details>\r\nLet me lay it out a bit more clearly.\r\n\r\n0. We use the `rc` lib to take a best guess at what the `npm` config is here: https://github.com/semantic-release/npm/blob/86011db51801fedf17eec1e9611b1cbe8e46cafa/lib/set-npmrc-auth.js#L11 This is in fact the problem, because it returned an array of configs that included a `.npmrc` that npm itself would not include.\r\n1. This line https://github.com/semantic-release/npm/blob/86011db51801fedf17eec1e9611b1cbe8e46cafa/lib/set-npmrc-auth.js#L18 printed that naughty npm config file that npm itself would not have loaded.\r\n2. We then concatenated it and used it https://github.com/semantic-release/npm/blob/86011db51801fedf17eec1e9611b1cbe8e46cafa/lib/set-npmrc-auth.js#L21\r\n\r\n...so, `npm` complained and said \"@cdaringe, my friend, this is bad _auth\" and i said to it, \"sir! sir! surely you are mistaken!\" But it was not mistaken 😄 \r\n</details>",
      "createdAt": "2024-05-08T04:25:59Z",
      "issue": {
        "id": "I_kwDOBok8rs6Fi6H7",
        "title": "ERR_INVALID_AUTH triggered by semantic-release npm despite not having this field set in checkout directory",
        "url": "https://github.com/semantic-release/npm/issues/777"
      },
      "repository": {
        "nameWithOwner": "semantic-release/npm"
      }
    },
    "IC_kwDOBok8rs59J_Ln": {
      "id": "IC_kwDOBok8rs59J_Ln",
      "body": "Awesome, ya let's close!",
      "createdAt": "2024-05-08T05:28:32Z",
      "issue": {
        "id": "I_kwDOBok8rs6Fi6H7",
        "title": "ERR_INVALID_AUTH triggered by semantic-release npm despite not having this field set in checkout directory",
        "url": "https://github.com/semantic-release/npm/issues/777"
      },
      "repository": {
        "nameWithOwner": "semantic-release/npm"
      }
    },
    "IC_kwDOCXZcSc59rezm": {
      "id": "IC_kwDOCXZcSc59rezm",
      "body": "convo fizzled out. please revive as seen fit",
      "createdAt": "2024-05-13T18:38:48Z",
      "issue": {
        "id": "I_kwDOCXZcSc54fdHy",
        "title": "Support attribute omitting for upsert mutation in standard omit smart tag",
        "url": "https://github.com/cdaringe/postgraphile-upsert/issues/696"
      },
      "repository": {
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      }
    },
    "IC_kwDOCicdos59rz94": {
      "id": "IC_kwDOCicdos59rz94",
      "body": "So I started working on it, and i hit a few snags. I ended up wanting\r\n\r\n1. TS (#56 ) enough,\r\n2. a single entrypoint (e.g. just `fetchToCurl`)\r\n3. support for node and web streams\r\n\r\n...that I just forked.\r\n\r\nhttps://github.com/cdaringe/fetch-to-curl-ts\r\n\r\nWith that said, i'm happy to close the fork _iff_ you're interested in the totality of the changes!\r\n\r\nI just kinda got to hackin... and I either was gonna send you a massive PR, a wave a PRs, or this fork, and all were kinda overwhelming feeling (but i wanted stuff _now_)!\r\n\r\nSorry for the noise. Lemme know what you think.\r\n\r\n-CD",
      "createdAt": "2024-05-13T19:24:15Z",
      "issue": {
        "id": "I_kwDOCicdos6GsagD",
        "title": "Feature Request: support body from ReadableStream",
        "url": "https://github.com/leoek/fetch-to-curl/issues/55"
      },
      "repository": {
        "nameWithOwner": "leoek/fetch-to-curl"
      }
    },
    "IC_kwDODyzufs5_n47O": {
      "id": "IC_kwDODyzufs5_n47O",
      "body": "I got it working, but had to update the app.\r\n\r\nNot sure _exactly_ which change did the trick, but my hunch is removing the app \"sandbox\" from the xcode project.\r\n\r\nThe downside is that I couldn't get the `LaunchAtLogin` dep to work, _but_, you can still install it and set it up manually to get it to launch at startup.\r\n\r\nHere's my recipe:\r\n\r\n- Open my fork https://github.com/cdaringe/bluesnooze in xcode\r\n- Product > Schems > BluesnoozeRelease\r\n- Product > Build\r\n- In the product navigator tab > Products > Bluesnooze (Right Click!) > Show In Finder\r\n  - Drag to Applications folder\r\n- Mac system settings > Login Items > Add item > Select Bluesnooze!\r\n\r\nNot a macos dev, just managed to hack this together. Surely some saintly mac person will find this atrocious, but it works! ",
      "createdAt": "2024-05-31T03:19:12Z",
      "issue": {
        "id": "I_kwDODyzufs579nkj",
        "title": "Hide icon via `defaults` not working?",
        "url": "https://github.com/odlp/bluesnooze/issues/37"
      },
      "repository": {
        "nameWithOwner": "odlp/bluesnooze"
      }
    },
    "IC_kwDOBx5_rM6Ahbb6": {
      "id": "IC_kwDOBx5_rM6Ahbb6",
      "body": "Thanks for the thoughtful response. I acknowledge that the YAML spec nods to non-string native types being supported on parse. I’m curious from your perspective, as the library author, why treating keys as strings isn’t the default behavior, given that traditionally POJOs are our mapping type in JS. In other words, I would’ve guessed that non-string scalar keys would be behind a flag, and string keys would be the default. Maybe as I research the fail safe flag I’ll learn more :-)",
      "createdAt": "2024-06-09T00:45:11Z",
      "issue": {
        "id": "I_kwDOBx5_rM6LkFe3",
        "title": "\"null\" key parses as the empty string",
        "url": "https://github.com/eemeli/yaml/issues/554"
      },
      "repository": {
        "nameWithOwner": "eemeli/yaml"
      }
    },
    "IC_kwDOBx5_rM6AjHEG": {
      "id": "IC_kwDOBx5_rM6AjHEG",
      "body": "> explicitly allows and supports non-string keys\r\n\r\nsure, but just because yaml supports it doesn’t mean it must be processed. Some languages dont even have null. I presume they get parsed as “null”.\r\n\r\nIs it incorrect to parse as strings? A casual scan of the spec suggests that it is not a problem.\r\n\r\nThus, why wouldn’t we parse using JS friendly behavior first? What use cases in JS would someone want non strings parsed into a JS object key?",
      "createdAt": "2024-06-09T16:25:13Z",
      "issue": {
        "id": "I_kwDOBx5_rM6LkFe3",
        "title": "\"null\" key parses as the empty string",
        "url": "https://github.com/eemeli/yaml/issues/554"
      },
      "repository": {
        "nameWithOwner": "eemeli/yaml"
      }
    },
    "IC_kwDOAocbZM6CMBB7": {
      "id": "IC_kwDOAocbZM6CMBB7",
      "body": "My use case is that I host game servers. Clients connect over UDP. When the session halts (e.g. no datagrams for sometime), I want to be able to `docker pause` the expensive server. When access is attempted, I want to be able to `docker resume`. The ability to be able to trigger such behavior is observability of such connections.",
      "createdAt": "2024-06-22T20:57:45Z",
      "issue": {
        "id": "MDU6SXNzdWU3OTQyNDYzMDE=",
        "title": "Access log for TCP routers",
        "url": "https://github.com/traefik/traefik/issues/7800"
      },
      "repository": {
        "nameWithOwner": "traefik/traefik"
      }
    },
    "IC_kwDOAocbZM6CMBgb": {
      "id": "IC_kwDOAocbZM6CMBgb",
      "body": "Not an expert, but seems like a little access logging could be added in the listener:\r\n\r\n- UDP: https://github.com/traefik/traefik/blob/6d8407893dd03ef550ab6542c527a1b4e11c521c/pkg/udp/conn.go#L140-L162\r\n- TCP: uhh errr uhh maybe will look further here another time :)",
      "createdAt": "2024-06-22T21:05:27Z",
      "issue": {
        "id": "MDU6SXNzdWU3OTQyNDYzMDE=",
        "title": "Access log for TCP routers",
        "url": "https://github.com/traefik/traefik/issues/7800"
      },
      "repository": {
        "nameWithOwner": "traefik/traefik"
      }
    },
    "IC_kwDOJDErcs6DmlWW": {
      "id": "IC_kwDOJDErcs6DmlWW",
      "body": "Came here to request it!",
      "createdAt": "2024-07-04T02:50:48Z",
      "issue": {
        "id": "I_kwDOJDErcs6Ey7fh",
        "title": "Add restart server command",
        "url": "https://github.com/maurobalbi/glas/issues/19"
      },
      "repository": {
        "nameWithOwner": "maurobalbi/glas"
      }
    }
  },
  "pullRequests": {
    "MDExOlB1bGxSZXF1ZXN0NDY4MTMz": {
      "additions": 48,
      "body": "This small chunk of code is a brute force method used to force a stop in any axis s.t. axis motors do not instantaneously switch directions and have to overcome the inertia of an imperfectly rigid mass.\n\nLong term such a feature should be encapsulated via the SW slicer and a G4 should be issued to the controller.  However, until then, I have been successfully using this to prevent skipping steps.  It is particularly useful on thin features where an axis will very rapidly oscillate and change directions.\n\nTested on gen6 h/w.\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2011-11-06T23:08:25Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY4MTMz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjcyOTgz",
        "nameWithOwner": "kliment/Sprinter"
      },
      "state": "CLOSED",
      "title": "Forced oscillation reduction",
      "url": "https://github.com/kliment/Sprinter/pull/115"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY4NTI1": {
      "additions": 48,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2011-11-07T06:32:23Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY4NTI1",
      "mergedAt": "2011-11-07T06:33:32Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjcyOTgz",
        "nameWithOwner": "kliment/Sprinter"
      },
      "state": "MERGED",
      "title": "oscillation re-routed to experimental",
      "url": "https://github.com/kliment/Sprinter/pull/116"
    },
    "MDExOlB1bGxSZXF1ZXN0MTQ4NDU2MjY=": {
      "additions": 36,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2014-04-16T20:47:14Z",
      "deletions": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ4NDU2MjY=",
      "mergedAt": "2014-04-30T16:19:14Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MzExMDkz",
        "nameWithOwner": "rushis/asana-api"
      },
      "state": "MERGED",
      "title": "Added http delete & delete task",
      "url": "https://github.com/rushis/asana-api/pull/4"
    },
    "MDExOlB1bGxSZXF1ZXN0MTUwMzg5NTE=": {
      "additions": 15,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2014-04-22T22:01:52Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUwMzg5NTE=",
      "mergedAt": "2014-06-03T13:22:58Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMjA2NTQ2",
        "nameWithOwner": "winstonjs/winston"
      },
      "state": "MERGED",
      "title": "README - dynamically change log levels",
      "url": "https://github.com/winstonjs/winston/pull/388"
    },
    "MDExOlB1bGxSZXF1ZXN0MTU3NTI0NTA=": {
      "additions": 2,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2014-05-12T06:29:18Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTU3NTI0NTA=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzk5MzQyOA==",
        "nameWithOwner": "xml/xl-activetabs"
      },
      "state": "OPEN",
      "title": "update note from 'show' to 'find'",
      "url": "https://github.com/xml/xl-activetabs/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2NzM2ODc=": {
      "additions": 5455,
      "body": "",
      "changedFiles": 874,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 13
      },
      "createdAt": "2014-07-21T19:17:57Z",
      "deletions": 239750,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzM2ODc=",
      "mergedAt": "2014-07-23T00:20:40Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjA3MjE0Nw==",
        "nameWithOwner": "MRN-Code/datacube-image-slicer"
      },
      "state": "MERGED",
      "title": "Initial updates s.t. we may both branch from a common trunk",
      "url": "https://github.com/MRN-Code/datacube-image-slicer/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg3NTI2MDc=": {
      "additions": 47,
      "body": "",
      "changedFiles": 4,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2014-07-23T01:36:58Z",
      "deletions": 8,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg3NTI2MDc=",
      "mergedAt": "2014-07-23T01:37:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjA3MjE0Nw==",
        "nameWithOwner": "MRN-Code/datacube-image-slicer"
      },
      "state": "MERGED",
      "title": "Added idle scroller",
      "url": "https://github.com/MRN-Code/datacube-image-slicer/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0MTkxMDM4NTI=": {
      "additions": 9610,
      "body": "",
      "changedFiles": 12,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2014-07-30T17:22:26Z",
      "deletions": 136,
      "id": "MDExOlB1bGxSZXF1ZXN0MTkxMDM4NTI=",
      "mergedAt": "2014-07-30T17:22:32Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjA3MjE0Nw==",
        "nameWithOwner": "MRN-Code/datacube-image-slicer"
      },
      "state": "MERGED",
      "title": "Initial release",
      "url": "https://github.com/MRN-Code/datacube-image-slicer/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk1NTc5Njk=": {
      "additions": 1,
      "body": "Here's a browserified, standalone of your lib at least until the build process gets updated\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2014-08-08T23:49:46Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk1NTc5Njk=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxOTIwMzc2",
        "nameWithOwner": "Qix-/color-string"
      },
      "state": "CLOSED",
      "title": "Added browser standalone",
      "url": "https://github.com/Qix-/color-string/pull/10"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk2MjAwNDk=": {
      "additions": 83,
      "body": "",
      "changedFiles": 7,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2014-08-11T18:57:48Z",
      "deletions": 22,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk2MjAwNDk=",
      "mergedAt": "2014-08-11T18:57:59Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjA3MjE0Nw==",
        "nameWithOwner": "MRN-Code/datacube-image-slicer"
      },
      "state": "MERGED",
      "title": "Idle bugfix, performance, and documentation update",
      "url": "https://github.com/MRN-Code/datacube-image-slicer/pull/4"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk2Mjc0Njc=": {
      "additions": 172,
      "body": "",
      "changedFiles": 11,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2014-08-11T21:02:14Z",
      "deletions": 33,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk2Mjc0Njc=",
      "mergedAt": "2014-08-11T21:02:22Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjA3MjE0Nw==",
        "nameWithOwner": "MRN-Code/datacube-image-slicer"
      },
      "state": "MERGED",
      "title": "Merge cd to mater",
      "url": "https://github.com/MRN-Code/datacube-image-slicer/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA0NzQ5MDc=": {
      "additions": 15,
      "body": "I tried to keep your styling.  Your suggestion referred me to a private var in the appCacheNanny closure.  I had to either expose the var or build a new function.\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2014-08-28T23:59:22Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA0NzQ5MDc=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjY3NTU3Mg==",
        "nameWithOwner": "gr2m/appcache-nanny"
      },
      "state": "CLOSED",
      "title": "Added setUpdateInterval",
      "url": "https://github.com/gr2m/appcache-nanny/pull/6"
    },
    "MDExOlB1bGxSZXF1ZXN0MjE3MjYzMDA=": {
      "additions": 709,
      "body": "# Generic Settings Loader\n## Background\n\nI have two features in development, separate from this PR, that involve accessing OctoPrint settings.  I feel that the settings protocol is a little clunky in current state, and disliked that the settings must be explicitly and redundantly called out in the code.  This PR serves to make getting/setting of settings simpler exclusively for the developer.  I foolishly branched from foosel/master instead of foosel/devel, so I'd like to request to do the PR now, then after issues are settled, perform the conflict resolution.  This is a **large** PR, so I would be happy to annotate it heavily to help the review process OR schedule time to review together online.\n## Changed Setting Loading Behavior\n### Server Side\n1. Made the get/set methods **generic** in the Settings class and the Settings API.  I.e., just call `get()` vs. `getInt/getBool/etc`.  Uses new function `coercePrimative()` to infer native type when passed js stringified IO.  Additionally this permits us to reduce the number of times all of the settings are explicity laid out in each file (from 4x => 2x [1x for server 1x for client].  Perhaps a package build process can reduce this need further as Python Dictionary and js Object syntax are ~equivalent.\n2. Server ajax set/get \"all\" functions now use a generic setting **iterator**, vs. explicity calling out each setting.\n3. To facilitate the above, the default settings are intially broken into two dictionaries. 1) settings usable and exposed to the client, then 2) another dictionary that is not exposed to the client.  They are zipped back into a single default_settings variable on init.  The ajax getters/setters determine which properties to send by looking at the client dictionary.\n### Client Side\n1. Similair to server, I have listed settings for client only once in settings.js, then **auto-generate ko observables** (commonly listed as `koos`).\n   _This means you must only add your new setting to settings.py and settings.js a single time per file, and your new setting is accessible on server and client!_\n### Helpers\n\n`eachDeep()` and `dict_merge()` were introduced in collectionUtils.py as a means to recurse through the settings and to zip dictionaries together, respectively.\n## Updated folder setting loading scheme\n\nBecause folder get/set functions are reliant on getBaseFolder/setBaseFolder (file IO), the the batch get/set of the ajax requests couldn't be handled without special cases.\nTo permit using the generic functions and still update the folders properly:\n1. Auto create the default folders on load via setUserDirs()\n2. After the ajax set is executed, run setUserDirs() again to build the new dir immediately.\n\n```\nNote--the *pre-existing* upload feature has a bug wherein if you change the upload dir, you must restart the server for the change to take place.  I will have a follow up PR to resolve this.\n```\n## General\n1. Linted js -- fixed syntax errors (missing ;'s, == vs. ===, etc)\n2. Alphabetized all settings dictionaries (server) & objects (client) for consistency\n3. Alphabetized some file's member functions for readability (settings.js)\n4. **Unified setting names between client and server**\n",
      "changedFiles": 13,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 17
      },
      "createdAt": "2014-09-24T16:24:20Z",
      "deletions": 757,
      "id": "MDExOlB1bGxSZXF1ZXN0MjE3MjYzMDA=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3Mzg2Nzk5",
        "nameWithOwner": "OctoPrint/OctoPrint"
      },
      "state": "CLOSED",
      "title": "Generic Settings Loader",
      "url": "https://github.com/OctoPrint/OctoPrint/pull/591"
    },
    "MDExOlB1bGxSZXF1ZXN0MjU4NzI4NzM=": {
      "additions": 17,
      "body": ".README (1) Inform that target options are passed to clean-css (2) Remove `keepSpecialComments` option, as it's maintained in clean-css project (3) Add addt'l usage example\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2014-12-11T02:37:58Z",
      "deletions": 8,
      "id": "MDExOlB1bGxSZXF1ZXN0MjU4NzI4NzM=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1NzIxODM3",
        "nameWithOwner": "gruntjs/grunt-contrib-cssmin"
      },
      "state": "CLOSED",
      "title": "Improve target options usage documentation",
      "url": "https://github.com/gruntjs/grunt-contrib-cssmin/pull/150"
    },
    "MDExOlB1bGxSZXF1ZXN0MjczNzUzNTU=": {
      "additions": 14,
      "body": "Document FormView specific options {}\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-01-14T19:19:44Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MjczNzUzNTU=",
      "mergedAt": "2015-01-14T20:40:36Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDQzNTY4Ng==",
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      },
      "state": "MERGED",
      "title": "README - add options detail",
      "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/26"
    },
    "MDExOlB1bGxSZXF1ZXN0Mjc3MDAxNjY=": {
      "additions": 7,
      "body": "# Problem statement\n\nIf a form uses `autoAppend: false`, it assumes that I am already providing an element to the form.  Indeed, on new InputView, I pass an `el`.  However, that el is disregarded, and no bindings are wired up.\n# Solution\n\nIf an el is provided, set it, and call render immediately to wire the bindings/etc.  Only renderWithTemplate if there is no el present.\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-01-20T18:26:13Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjc3MDAxNjY=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDQ1NTAzNg==",
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      },
      "state": "CLOSED",
      "title": "Enable usage of existing input",
      "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/41"
    },
    "MDExOlB1bGxSZXF1ZXN0Mjc3OTMzNTI=": {
      "additions": 23,
      "body": "# Problem Statement\n\nIf I pass the FieldView an `el` which is an input, the validation nodes never render, and associated bindings/events never fire.\n# Solution\n\nAccommodate passing an input/textarea to the form.  Let user's know that their DOM will be mutated gently per the README.\n1. Detect if passed el is an input\n2. Render immediately, as the input itself is likely already rendered (and the form will likely be using `autoAppend: false`, otherwise you'd be less likely to provide an `el` to begin with)\n3. Render the default template\n4. Swap user specified input with default input\n\nReview ignoring whitespace (sorry, truncated trailing spaces!): https://github.com/AmpersandJS/ampersand-input-view/pull/42/files?w=1\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-01-21T20:47:41Z",
      "deletions": 11,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjc3OTMzNTI=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDQ1NTAzNg==",
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      },
      "state": "CLOSED",
      "title": "Feature/use el with validation",
      "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/42"
    },
    "MDExOlB1bGxSZXF1ZXN0MjgzNDIyOTE=": {
      "additions": 7,
      "body": "# Problem Statement\n\nPeriodically, the `.value` of an input is set directly.  This doesn't always fire `input` events.  Example, selecting a date on a jquery UI datepicker won't update the input FieldView's value.\n# Solution\n\nCheck to see if `inputValue` and `this.input.value` have diverged when calling the `fieldView.value`.  To be successful, caching must be disabled as we can no longer rely on 'inputValue' alone to calculate the true field value.\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 19
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-01-30T07:10:32Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MjgzNDIyOTE=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDQ1NTAzNg==",
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      },
      "state": "CLOSED",
      "title": "Handle case: value change and no DOM events emitted",
      "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/43"
    },
    "MDExOlB1bGxSZXF1ZXN0Mjk1NjM3NTY=": {
      "additions": 1,
      "body": "I updated this to fit my own needs, but it may bode nicely with yours as well.  Let me know your thoughts!\n1. Added demo.  Run command as shown in package.json, open url, then suffix /index.html to it\n2. bugfix.  `.call` swapped for `.apply`\n3. feature, permit user specified classes\n   1. added supporting test\n4. bugfix/feature?  if field was originally empty, only then hide the label && message combo from the user.  tying the two together may be controversial, however, in the event that they are tied together, if the field is empty but the field is also still invalid, then the warning message rests behind the control.  more logic could be added to circumvent this, however, I think this is satisfactory\n5. updated lib to support latest ampersand-input-view upstream\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-02-18T21:16:00Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk1NjM3NTY=",
      "mergedAt": "2015-02-23T04:46:27Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDA0ODgyMg==",
        "nameWithOwner": "datuhealth/ampersand-floatinglabel-input-view"
      },
      "state": "MERGED",
      "title": "Features: demo, apply user provided classes, bugfix",
      "url": "https://github.com/datuhealth/ampersand-floatinglabel-input-view/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MzA2NTU5NTg=": {
      "additions": 29,
      "body": "Primarily to update `url` docs, but some other minor tidying too.  Comment annotated.\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-03-06T16:02:45Z",
      "deletions": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0MzA2NTU5NTg=",
      "mergedAt": "2015-03-06T16:57:37Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzgxNTEyOQ==",
        "nameWithOwner": "AmpersandJS/ampersand-model"
      },
      "state": "MERGED",
      "title": "README - url clarifications to address repeat gitter questions",
      "url": "https://github.com/AmpersandJS/ampersand-model/pull/41"
    },
    "MDExOlB1bGxSZXF1ZXN0MzEwMjIzNTU=": {
      "additions": 210,
      "body": "Hi all:\n\nSometimes, a guy/girl just needs a kebab.\n\n![Doner Kebab](http://blackgirlinberlin.com/wp-content/uploads/2013/10/doner-kebab-mix.png)\nNon-traditional, but doner kebabs (kebaps?) are the best!\n\nI tested everything in sauce and local--they all checked out.  However, just prior to PR, my `npm test` fails no matter what, even if all tests are passing (note: it was working prior even with all of my changes in).  I think it's an issue just to my local machine, but FYI, I bypassed the precommit hook :(.  Still looking into whats going on w/ my npm.\n\nLet me know if i left anything out!  Thanks.\n",
      "changedFiles": 46,
      "comments": {
        "totalCount": 11
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2015-03-12T10:15:51Z",
      "deletions": 70,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEwMjIzNTU=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMzQ4Njc4OQ==",
        "nameWithOwner": "AmpersandJS/amp"
      },
      "state": "CLOSED",
      "title": "release/to-kebab-case",
      "url": "https://github.com/AmpersandJS/amp/pull/88"
    },
    "MDExOlB1bGxSZXF1ZXN0MzEwNTg0MjM=": {
      "additions": 1,
      "body": "5.3.5 fails on `preg_match`s.  And im in big trouble because of it! :$\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 9
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-03-12T17:24:59Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEwNTg0MjM=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4ODU0NDQ2",
        "nameWithOwner": "f3-factory/F3com-data"
      },
      "state": "CLOSED",
      "title": "Update to 5.3.10.",
      "url": "https://github.com/f3-factory/F3com-data/pull/64"
    },
    "MDExOlB1bGxSZXF1ZXN0MzEwODc0MjQ=": {
      "additions": 5,
      "body": "Announce the `views` property\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-03-12T23:19:04Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEwODc0MjQ=",
      "mergedAt": "2015-03-13T19:36:58Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDY2MzM4Mw==",
        "nameWithOwner": "AmpersandJS/ampersand-collection-view"
      },
      "state": "MERGED",
      "title": "Update README.md",
      "url": "https://github.com/AmpersandJS/ampersand-collection-view/pull/31"
    },
    "MDExOlB1bGxSZXF1ZXN0MzExNzI1MTQ=": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-03-13T23:32:22Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MzExNzI1MTQ=",
      "mergedAt": "2015-04-09T07:31:05Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDE4NzA4Mg==",
        "nameWithOwner": "Unitech/pm2"
      },
      "state": "MERGED",
      "title": "Update README.md",
      "url": "https://github.com/Unitech/pm2/pull/1092"
    },
    "MDExOlB1bGxSZXF1ZXN0MzExOTI2ODk=": {
      "additions": 48,
      "body": "# problem statement\n\nampersand-form-view auto-renders.  it shouldn't have to, as it's not always desirable. \n# solution\n\npermit `autoRender: false` as with other views.  ampersand-form-view generally renders then initializes too, which is seemingly backwards against the status quo.  swapping this order introduces breaking changes, hence the semver bump.\n\nsuffixing `?w=1` to the URL string may help review to filter out whitespace\n",
      "changedFiles": 6,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2015-03-15T00:11:45Z",
      "deletions": 31,
      "id": "MDExOlB1bGxSZXF1ZXN0MzExOTI2ODk=",
      "mergedAt": "2015-04-01T17:26:37Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDQzNTY4Ng==",
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      },
      "state": "MERGED",
      "title": "Permit No AutoRendering",
      "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/35"
    },
    "MDExOlB1bGxSZXF1ZXN0MzEyMTc0NDM=": {
      "additions": 155,
      "body": "This PR fixes https://github.com/AmpersandJS/ampersand-select-view/issues/5.  The module and tests appeared to be designed intentionally to not fail when setting a bogus value.  I.e., if the available options are `['a', 'b', 'c']` and you call `setValue('d')`, the select would just revert to the 0th index option or unselectedText.  This behavior is dangerous.  Issue 5 and self experience would indicate the there is a bug in the application code, thus, we now trigger errors when this situation occurs.\n\nThis PR additionally:\n1. Enforces that the returned value is _always a string_.  Only if `unselectedText` option is selected could `undefined` possibly be appropriate.  Would like feedback on this.  `.value` on empty `<select>`s is generally the empty string, DOM-wise.\n2. Denotes a plan for 4.x release\n3. adds more tests for numeric cases\n4. small tidy ups\n",
      "changedFiles": 6,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2015-03-16T05:08:47Z",
      "deletions": 69,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyMTc0NDM=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgxMTI4Mg==",
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      },
      "state": "CLOSED",
      "title": "3.0.0 RC",
      "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/34"
    },
    "MDExOlB1bGxSZXF1ZXN0MzE4ODA2NzM=": {
      "additions": 392,
      "body": "**tldr: this PR is large.  we can setup core-crew talky to go over this change if desired.**\n\nThis PR fixes https://github.com/AmpersandJS/ampersand-select-view/issues/5.  It addresses a variety of other opens as well.\n\nPer the new README.md changelog:\n## changelog\n1. Improve general option edge cases, and add supporting test cases.  Primarily targets falsy option value handling.\n2. Validate immediately to assist when parent FormView tests onload for field validity.  Update `skipValidation` to `skipValidationMessage`, permit immediate validation, but conditionally display messages.\n3. Throw an `Error` when trying to `setValue(value)` and an option _matching the requested `value`_ does not exist.  The exception to this is when the provided value is `null`, `undefined`, or `''`, and a `null` option value exists.  Because the DOM can only recognize a single empty value for any `<option>`, which is the empty string `''`, only a single empty-ish option can only be supported by the view.\n4. Support `0` value options, both in Model id's and array values.\n5. Add `eagerValidate`.\n6. Denote a plan for 4.x release\n7. bulk update README, and some cody tidying\n",
      "changedFiles": 8,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-03-24T23:31:23Z",
      "deletions": 169,
      "id": "MDExOlB1bGxSZXF1ZXN0MzE4ODA2NzM=",
      "mergedAt": "2015-03-27T15:44:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgxMTI4Mg==",
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      },
      "state": "MERGED",
      "title": "3.0.0 RC",
      "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/36"
    },
    "MDExOlB1bGxSZXF1ZXN0MzE5OTY5MTY=": {
      "additions": 6,
      "body": "Formalizes activity agreed upon in https://github.com/AmpersandJS/ampersand-select-view/issues/35#issuecomment-86120193\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-03-26T08:22:11Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MzE5OTY5MTY=",
      "mergedAt": "2015-03-26T15:23:35Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgxMTI4Mg==",
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      },
      "state": "MERGED",
      "title": "handle unavailable CI testing",
      "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/38"
    },
    "MDExOlB1bGxSZXF1ZXN0MzI0ODEzMjA=": {
      "additions": 5,
      "body": "Thanks, btw\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-04-02T03:55:38Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI0ODEzMjA=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NTk2MjY5",
        "nameWithOwner": "jpinsonault/sublime-kpl"
      },
      "state": "OPEN",
      "title": "Update README.md",
      "url": "https://github.com/jpinsonault/sublime-kpl/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MzI2MzAxMTQ=": {
      "additions": 144,
      "body": "Follow-up commits to #39.\n- Fix README.md syntax\n- make `beforeSubmit` extendable in view\n- update collection behavior to try and first maintain existing `value`, otherwise, select 0th index\n- adjust to support `render()`ing last, as `autoRender` false will soon need support\n- update to support discussions in #39\n- add and update a couple supporting tests\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-04-04T06:53:48Z",
      "deletions": 53,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI2MzAxMTQ=",
      "mergedAt": "2015-04-06T19:17:54Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMzA4NDQ4Mg==",
        "nameWithOwner": "nickryall/ampersand-select-view"
      },
      "state": "MERGED",
      "title": "Support #39 improvements",
      "url": "https://github.com/nickryall/ampersand-select-view/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MzI2NjA5ODU=": {
      "additions": 40,
      "body": "1. Handles https://github.com/AmpersandJS/ampersand-input-view/issues/2\n2. Handles https://github.com/AmpersandJS/ampersand-input-view/issues/26\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-04-06T04:06:13Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI2NjA5ODU=",
      "mergedAt": "2015-04-07T18:59:37Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDQ1NTAzNg==",
        "nameWithOwner": "AmpersandJS/ampersand-input-view"
      },
      "state": "MERGED",
      "title": "Handles #2, handles all InputView updates for #26",
      "url": "https://github.com/AmpersandJS/ampersand-input-view/pull/59"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMwOTMwNzc=": {
      "additions": 1,
      "body": "Correct README.md typo\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-04-11T00:01:58Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMwOTMwNzc=",
      "mergedAt": "2015-04-11T20:33:57Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDkzNTgxOA==",
        "nameWithOwner": "DataTables/DataTablesSrc"
      },
      "state": "MERGED",
      "title": "Update Readme.md 'pug-in' => 'plug-in'",
      "url": "https://github.com/DataTables/DataTablesSrc/pull/39"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMxMDk2ODU=": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-04-11T20:45:01Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMxMDk2ODU=",
      "mergedAt": "2015-04-13T22:09:24Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDc5MzcyOA==",
        "nameWithOwner": "AmpersandJS/ampersand-view-conventions"
      },
      "state": "MERGED",
      "title": "correct assertion to match original intent",
      "url": "https://github.com/AmpersandJS/ampersand-view-conventions/pull/9"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMxMTA1NTY=": {
      "additions": 164,
      "body": "# problem statements\n- `autoRender` not supported\n- common fieldView functions not supported (think uniform fieldView interface).  `clear`, `reset`, etc\n- not extendable with `State`\n- dependencies out of date\n# solution\n- extend from &-view\n- add supporting tests\n- update docs\n- update dependencies\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-04-11T21:43:58Z",
      "deletions": 124,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTA1NTY=",
      "mergedAt": "2015-05-29T16:03:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDcxMjc1Nw==",
        "nameWithOwner": "AmpersandJS/ampersand-checkbox-view"
      },
      "state": "MERGED",
      "title": "3.0.0 rc",
      "url": "https://github.com/AmpersandJS/ampersand-checkbox-view/pull/7"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMxMTQ0ODQ=": {
      "additions": 280,
      "body": "# problem statements\n- formView is doesn't have `State`.  various requests have been made by the community to support this (including myself)\n- support #28 (yeya!)\n- `clean` has a fully duplicated/copied test\n- mixed spacing in callbacks.js\n- ampersand-checkbox-view not included in test suite, but has annotations to be included\n# solutions\n- convert module to extend &-view, enabling &-state within\n  - move `getData()` to simple derived `data` property. leave `getData()` behind for deprecated support\n- add all methods from #28, and add a handful of tests\n- update README.md :smile:, always\n- support setting predefined values on construction, similar to the request in #28\n- update callbacks.js to 4sp, like the rest of the repo files\n- add ampersand-checkbox-view to test suite\n\n**dependent on https://github.com/AmpersandJS/ampersand-checkbox-view/pull/7 closing** as the tests expect ampersand-checkbox-view not to `render()` on construction per https://github.com/AmpersandJS/ampersand-form-view/issues/41\n",
      "changedFiles": 6,
      "comments": {
        "totalCount": 15
      },
      "commits": {
        "totalCount": 8
      },
      "createdAt": "2015-04-12T03:59:39Z",
      "deletions": 152,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTQ0ODQ=",
      "mergedAt": "2015-06-19T16:59:57Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDQzNTY4Ng==",
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      },
      "state": "MERGED",
      "title": "&-view conversion and closes #28",
      "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/42"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMxMTU0MTA=": {
      "additions": 7,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-04-12T05:52:05Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTU0MTA=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgwNzYyNA==",
        "nameWithOwner": "latentflip/tape-suite"
      },
      "state": "OPEN",
      "title": "URL & basic deps update",
      "url": "https://github.com/latentflip/tape-suite/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMxMTU0ODc=": {
      "additions": 36,
      "body": "resolving merge conflicts.  will see if we can't get this one finally +1'd :$\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2015-04-12T06:00:59Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTU0ODc=",
      "mergedAt": "2015-04-14T18:06:28Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMzA4NDQ4Mg==",
        "nameWithOwner": "nickryall/ampersand-select-view"
      },
      "state": "MERGED",
      "title": "Nickryall master",
      "url": "https://github.com/nickryall/ampersand-select-view/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMxMTYzODI=": {
      "additions": 448,
      "body": "Closes #42, #2, #22 (tests added)\n\nclosing #39 will drop this commit diff down to just a few.  closing #39 is higher priority\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-04-12T07:39:27Z",
      "deletions": 362,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTYzODI=",
      "mergedAt": "2015-04-16T16:18:17Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgxMTI4Mg==",
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      },
      "state": "MERGED",
      "title": "4.0.0 RC",
      "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/43"
    },
    "MDExOlB1bGxSZXF1ZXN0MzM0NzA4MTU=": {
      "additions": 10,
      "body": "Closes #44\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-04-16T16:52:42Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM0NzA4MTU=",
      "mergedAt": "2015-04-27T18:49:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgxMTI4Mg==",
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      },
      "state": "MERGED",
      "title": "Bugfix/handle empty options",
      "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/45"
    },
    "MDExOlB1bGxSZXF1ZXN0MzM3MzM5MDc=": {
      "additions": 28,
      "body": "# problem statement\n\n`.rendered` yields true when the view is **not** rendered\n http://requirebin.com/?gist=34edb359882bce0c85ae\n# solution\n- detect if the `el` is attached to the document body\n  - unfortunately, disable caching as event based solutions are apparently out-of-the-question. [1](http://www.w3.org/TR/DOM-Level-3-Events/#event-type-DOMNodeRemovedFromDocument), [2](https://groups.google.com/forum/#!topic/mozilla.dev.platform/L0Lx11u5Bvs)\n- add supporting test\n\ni have not tested this in production code yet.  will be making some widgets shortly.  until then, tests passing, ready for review\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 11
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-04-21T07:02:45Z",
      "deletions": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM3MzM5MDc=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzc4ODI1OA==",
        "nameWithOwner": "AmpersandJS/ampersand-view"
      },
      "state": "CLOSED",
      "title": "bugfix/report-rendered-when-on-dom",
      "url": "https://github.com/AmpersandJS/ampersand-view/pull/115"
    },
    "MDExOlB1bGxSZXF1ZXN0MzQ5ODQ3NDQ=": {
      "additions": 59,
      "body": "# problem statement\n\ni have a collection defined that I intend on using _after_ doing some processing in a webworker.  i want to be able to use `mycollection.fetch` as it has my API mapping already sorted out and ready to go.  i need raw data to pass to the webworker, otherwise passing in models/model-collections make webworkers explode for 'not being able to clone object's.  plus, it just doesn't make sense to `model/state`-ize the response until any `parse`-like mutations are done.\n# solution\n\nadd config option in fetch to not update the collection!  in this regard, I can still get the collections data, just in raw form!\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-05-08T06:58:36Z",
      "deletions": 8,
      "id": "MDExOlB1bGxSZXF1ZXN0MzQ5ODQ3NDQ=",
      "mergedAt": "2015-05-20T16:07:19Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxODU0ODA5NQ==",
        "nameWithOwner": "AmpersandJS/ampersand-collection-rest-mixin"
      },
      "state": "MERGED",
      "title": "feature/add-noset",
      "url": "https://github.com/AmpersandJS/ampersand-collection-rest-mixin/pull/25"
    },
    "MDExOlB1bGxSZXF1ZXN0MzUzNTc5MTk=": {
      "additions": 146,
      "body": "# problem statement\n\n`.rendered` yields true when the view is **not** rendered\n http://requirebin.com/?gist=34edb359882bce0c85ae\n# solution\n- wrap user provided render/remove setters and getters to manage `rendered` state\n\nthis is an alternative implementation to https://github.com/AmpersandJS/ampersand-view/pull/115\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 17
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2015-05-13T18:46:25Z",
      "deletions": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0MzUzNTc5MTk=",
      "mergedAt": "2015-06-16T21:18:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzc4ODI1OA==",
        "nameWithOwner": "AmpersandJS/ampersand-view"
      },
      "state": "MERGED",
      "title": "bugfix/report-rendered-honestly",
      "url": "https://github.com/AmpersandJS/ampersand-view/pull/119"
    },
    "MDExOlB1bGxSZXF1ZXN0MzUzODg5MTQ=": {
      "additions": 42,
      "body": "# problem statement\n\nI source data for a table from a huge array.  This array represents a `Collection` of `Model`s.  When each [`Model`](https://github.com/AmpersandJS/ampersand-model) is instantiated, it become quite a data rich object.  If I instantiate the each Model in the array immediately, the browser will choke when the array is large.  Instead, for performance reasons, if I can mutate the DT row data immediately before column population, I can do mutations (i.e. create my data-rich Models) **just-in-time** and only worry about processing those items that DataTables is rendering!\n# solution\n\nmimic `createdRow`'s implentation, as it's purpose is nearly the same, but should be fired _before_ the row is populated, not after.\n# review\n\nAny docs/etc that may need updating, I am happy to do.  Just give me a boost with some pointers! :+1: \n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-05-14T02:23:29Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MzUzODg5MTQ=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDkzNTgxOA==",
        "nameWithOwner": "DataTables/DataTablesSrc"
      },
      "state": "CLOSED",
      "title": "Add preRowPopulate callback option",
      "url": "https://github.com/DataTables/DataTablesSrc/pull/42"
    },
    "MDExOlB1bGxSZXF1ZXN0MzU1NTAzNTM=": {
      "additions": 2,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-05-15T21:00:03Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU1NTAzNTM=",
      "mergedAt": "2015-05-15T21:03:36Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzY3NzUyMg==",
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      },
      "state": "MERGED",
      "title": "Correct README.md syntax error",
      "url": "https://github.com/AmpersandJS/ampersand-collection/pull/62"
    },
    "MDExOlB1bGxSZXF1ZXN0MzU2MDM1NzM=": {
      "additions": 2,
      "body": "The problem statement for this issue is described here:\nhttps://github.com/DataTables/DataTables/issues/557\nThis was the only other spot found using `$.map` in the vulnerable way\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-05-18T05:28:33Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU2MDM1NzM=",
      "mergedAt": "2015-05-18T15:06:06Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDkzNTgxOA==",
        "nameWithOwner": "DataTables/DataTablesSrc"
      },
      "state": "MERGED",
      "title": "jq 2.1.4 sppt",
      "url": "https://github.com/DataTables/DataTablesSrc/pull/43"
    },
    "MDExOlB1bGxSZXF1ZXN0MzYwNDM3MTA=": {
      "additions": 26,
      "body": "# problem statement\n\nempty unselectedText not honored, and selects first options from options list instead\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-05-22T15:47:43Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0MzYwNDM3MTA=",
      "mergedAt": "2015-06-19T19:31:55Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgxMTI4Mg==",
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      },
      "state": "MERGED",
      "title": "Closes #47",
      "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/48"
    },
    "MDExOlB1bGxSZXF1ZXN0MzYyNTU5MTE=": {
      "additions": 0,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-05-26T23:27:28Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MzYyNTU5MTE=",
      "mergedAt": "2015-05-27T16:38:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgxMTI4Mg==",
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      },
      "state": "MERGED",
      "title": "remove 4.0.0 release plan from README (4.0.0 merged)",
      "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/50"
    },
    "MDExOlB1bGxSZXF1ZXN0MzcyOTg4NDg=": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-06-09T20:56:16Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MzcyOTg4NDg=",
      "mergedAt": "2015-06-10T00:41:14Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDE2MjA2MQ==",
        "nameWithOwner": "npm/npm-expansions"
      },
      "state": "MERGED",
      "title": "Nail Polishing Minions",
      "url": "https://github.com/npm/npm-expansions/pull/473"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzc1ODEyODU=": {
      "additions": 5,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-06-12T16:29:12Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc1ODEyODU=",
      "mergedAt": "2015-06-12T16:29:29Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgxMTI4Mg==",
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      },
      "state": "MERGED",
      "title": "add publish scripts",
      "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/52"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzc2MzEyNzI=": {
      "additions": 2540,
      "body": "Hello:\n\nThe following supports an admittedly quick hack to work with CommonJS.\n- Sorry, I auto-trimmed white space, which made it look like ~a gazillion changes.  review w/ ?w=1 in the query string to minimize that effect\n- I was going to rebase to compress all of these into a single commit, but big whoop!\n",
      "changedFiles": 15,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2015-06-13T20:59:55Z",
      "deletions": 352,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc2MzEyNzI=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzkwNTE5",
        "nameWithOwner": "LarryBattle/YASMIJ.js"
      },
      "state": "CLOSED",
      "title": "Support CommonJS Browserify",
      "url": "https://github.com/LarryBattle/YASMIJ.js/pull/15"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzc2MzE5NTg=": {
      "additions": 4539,
      "body": "# problem statement\n\nunable to use with packaging system, specifically, common js.\n# solution\n\ncommonjsify.  **minimal** logic changes (maybe a couple lines, tops).  Use CommonJS system for dev.  permit use of `require` for CommonJS users and bundlers.\n\nSupport existing method of including directly on the window directly by means of _built_ file, `dist/yasmij.js`.  This file can actually be used by AMD,CommonJS(node/browserify), or the window as it's a UMD module via browserify's standalone option.  The dist file gets updated on every commit.  However, the dist file must be committed in a subsequent commit.\n\nAll tests passing.  Added demo using CommonJS to `demo/common.js`.  Can be run simply via `node demo/common.js`.\n\nI also `lint`ed.  Consequently, it looks like a drillion :smile: lines changed.  Use https://github.com/LarryBattle/YASMIJ.js/pull/16/files?w=1 to hack out some whitespace changes.\n",
      "changedFiles": 22,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-06-13T21:49:30Z",
      "deletions": 2362,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc2MzE5NTg=",
      "mergedAt": "2015-06-18T05:02:29Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzkwNTE5",
        "nameWithOwner": "LarryBattle/YASMIJ.js"
      },
      "state": "MERGED",
      "title": "release 2.6.0",
      "url": "https://github.com/LarryBattle/YASMIJ.js/pull/16"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzc4NDM1NjM=": {
      "additions": 5,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-06-16T21:27:04Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc4NDM1NjM=",
      "mergedAt": "2015-06-16T22:03:47Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzc4ODI1OA==",
        "nameWithOwner": "AmpersandJS/ampersand-view"
      },
      "state": "MERGED",
      "title": "release publish scripts",
      "url": "https://github.com/AmpersandJS/ampersand-view/pull/129"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzk3ODM0ODg=": {
      "additions": 39,
      "body": "# problem statement\n\n1) &-form-view does not support templating properly.  it also redundantly supports `autoRender` in `initialize` vs `extend`, which is non-standard.  this PR re-syncs these behaviors to fall in line with expectations for a View which extends &-View!\n2) field view updates trigger a `'change:fieldName'` event from FormView.  This event is fired before the formView processes the field view's impact to its state.  this is undesirable as listeners on the event want to see the updated state of the form, which they cannot.  e.g., a field change makes the form `valid`. however, if listeners test if the form is valid, then the form can still report `false` because the formView hasn't updated its state yet!\n3) make `valid` a prop so as to make it event-able!\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-07-13T06:54:57Z",
      "deletions": 22,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODM0ODg=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDQzNTY4Ng==",
        "nameWithOwner": "AmpersandJS/ampersand-form-view"
      },
      "state": "CLOSED",
      "title": "improve render and update behavior",
      "url": "https://github.com/AmpersandJS/ampersand-form-view/pull/46"
    },
    "MDExOlB1bGxSZXF1ZXN0NDA1NzE2MTI=": {
      "additions": 10,
      "body": "`render()`/`remove()` fns have special setters/getters, enabling the over-riding of the functions and still guaranteeing to the user that they get corresponding named events.  i.e. if you override `render()`, you don't need to call `this.trigger('render')` from within.  &-view handles it on your behalf.  `'render'` and `'remove'` events are triggered when the `rendered` bit flips, through the `rendered` derived attribute.  On initialization, I had set an initial `rendered` state on the view, forgetting that it would emit an event!  this PR serves to set that state, but in a _silent_ manner.  Tests updated.\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-07-22T14:35:21Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA1NzE2MTI=",
      "mergedAt": "2015-07-22T20:46:26Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzc4ODI1OA==",
        "nameWithOwner": "AmpersandJS/ampersand-view"
      },
      "state": "MERGED",
      "title": "prevent bogus `remove` event thrown",
      "url": "https://github.com/AmpersandJS/ampersand-view/pull/141"
    },
    "MDExOlB1bGxSZXF1ZXN0NDE2MjI5NTQ=": {
      "additions": 5,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/44216658470838\n# problem statement\n\nthe build process should also be the deploy process. it's cumbersome to need to ssh to deploy targets and pull git repos\n# solution\n- set build target for which version of code to build for (this PR does this!).  See [coins-grunt-env](https://github.com/MRN-Code/coins-grunt-env)\n- rsync all code to build targets\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-08-04T22:01:36Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE2MjI5NTQ=",
      "mergedAt": "2015-08-21T20:34:01Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMTA0MzA0NQ==",
        "nameWithOwner": "trendscenter/node_boilerplate"
      },
      "state": "MERGED",
      "title": "add grunt-env and coins settings",
      "url": "https://github.com/trendscenter/node_boilerplate/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NDMzMDcxOTI=": {
      "additions": 15,
      "body": "Support the following:\n]\n<img width=\"475\" alt=\"screen shot 2015-08-25 at 9 25 16 am\" src=\"https://cloud.githubusercontent.com/assets/1003261/9472652/aa4a4cd6-4b0b-11e5-9ef8-2eeca0850505.png\">\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-08-25T16:29:12Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0NDMzMDcxOTI=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNjY5ODc4Mg==",
        "nameWithOwner": "macalinao/shrug"
      },
      "state": "CLOSED",
      "title": "support shrugging of user input",
      "url": "https://github.com/macalinao/shrug/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NDQwMjM5NDI=": {
      "additions": 28,
      "body": "# problem statement\n\nI often need my derived attributes serialized.  I end up extending serialize, calling the prototype, then modifying the serialized object in each definition.\n# solution\n\npermit serialize to serialize other attr types on demand\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-02T18:11:22Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQwMjM5NDI=",
      "mergedAt": "2015-09-04T23:50:19Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzgxNTE3Nw==",
        "nameWithOwner": "AmpersandJS/ampersand-state"
      },
      "state": "MERGED",
      "title": "add serialize([options]) support",
      "url": "https://github.com/AmpersandJS/ampersand-state/pull/193"
    },
    "MDExOlB1bGxSZXF1ZXN0NDQ0ODcxNjk=": {
      "additions": 47,
      "body": "# problem statement\n\ni want to index on a derived attribute. i am unable to in the current state.  i have a justifiable case where my datasource cannot provide a reliably unique ID, but I can compute one from the composite data object.\n# solution\n- detect if `mainIndex` is part of the derived definition as a last check when assigning the key\n- if found, compute the derived id\n- proceed as normal!\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-08T21:46:44Z",
      "deletions": 14,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODcxNjk=",
      "mergedAt": "2015-09-12T00:25:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzY3NzUyMg==",
        "nameWithOwner": "AmpersandJS/ampersand-collection"
      },
      "state": "MERGED",
      "title": "feature: permit indexing on derived",
      "url": "https://github.com/AmpersandJS/ampersand-collection/pull/67"
    },
    "MDExOlB1bGxSZXF1ZXN0NDQ2MDk3MTY=": {
      "additions": 43,
      "body": "#### asana\n\nhttps://app.asana.com/0/22730822790060/49248646380196\n# problem statement\n\ni want to run the api in a different mode\n# solution\n\npermit overriding for the active process\n\n<img width=\"602\" alt=\"screen shot 2015-09-09 at 3 42 24 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/9776121/0f0ba048-570a-11e5-8d7a-cc2d5bfff011.png\">\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-09-09T22:44:18Z",
      "deletions": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ2MDk3MTY=",
      "mergedAt": "2015-09-11T01:15:46Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "feature/env-override",
      "url": "https://github.com/trendscenter/nodeapi/pull/25"
    },
    "MDExOlB1bGxSZXF1ZXN0NDQ2MTQ4ODY=": {
      "additions": 60,
      "body": "### asana\n\nhttps://app.asana.com/0/22730822790060/49248646380200\n#### note\n\nthis PR consumes https://github.com/MRN-Code/nodeapi/pull/25\n# problem statement\n\ndeveloping locally is difficult to do on the same server in coinstac.  accessing a pouchdb instance creates a lock on the db.  thus, coinstac and the nodeapi cannot access it as a datastore.  one will have exclusive access.\n# solution\n\na datastore server is needed to provide both clients access.  pouchdb-server/couchdb/cloudant are all valid options.  for our needs, we can simply use couchdb, at least in dev, as specified by the default.json.  \n# discussion\n\nnow that nodeapi `is-a-thing`, we must decide how to handle this when it gets to PRD. install a couch instance on PRD?  that's probably not the best options.  perhaps set `production.json` to point to the cloudant host?  discussion welcomed!\n\n@swashcap @rsskmr @dylancwood \n",
      "changedFiles": 8,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-09-09T23:59:47Z",
      "deletions": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ2MTQ4ODY=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "CLOSED",
      "title": "Feature/use couch in dev",
      "url": "https://github.com/trendscenter/nodeapi/pull/26"
    },
    "MDExOlB1bGxSZXF1ZXN0NDQ3MzI4MjQ=": {
      "additions": 1,
      "body": "see title :)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-10T23:44:48Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ3MzI4MjQ=",
      "mergedAt": "2015-09-10T23:44:55Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "add osx default.ini path",
      "url": "https://github.com/trendscenter/nodeapi/pull/27"
    },
    "MDExOlB1bGxSZXF1ZXN0NDUxOTgwNTk=": {
      "additions": 0,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/50612557154796\n## problem statement\n\nmy commands don't run!\n## background\n\nhttps://liquibase.jira.com/browse/CORE-1943\n## solution\n\nupdate to latest jar\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-16T17:04:59Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDUxOTgwNTk=",
      "mergedAt": "2015-09-16T19:13:37Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMTY1OTY1OA==",
        "nameWithOwner": "trendscenter/grunt-liquibase"
      },
      "state": "MERGED",
      "title": "update liquibase.jar",
      "url": "https://github.com/trendscenter/grunt-liquibase/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NDU0NjA2NTU=": {
      "additions": 9,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/51285523166851\n# problem statement\n\nno problem, per se.  this is purely pedantic, if it is accepted. in the API, we use `.data` to be the point of access to data embedded in a request.  similarly, i was putting data in `.data` on the COINSTAC client for a generic data container in an analysis aggregate document, where `.result` was achieving the same intent on the server.  i thought it'd be nice to use the same named bucket in both places. `.aggregate: true/false` already indicates the type of doc.  therefore, if the aggregate needs a generic container for the varying types of analysis, `.data` already has some usage and reduces the fields to mentally recall.  the same logic could be applied for when we flip flop between `name` and `label` on varying docs/db-records (where i generally agree with COINS `label` precedence!).\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-09-18T22:47:43Z",
      "deletions": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0NDU0NjA2NTU=",
      "mergedAt": "2015-09-24T18:51:03Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "move .result => .data",
      "url": "https://github.com/trendscenter/nodeapi/pull/29"
    },
    "MDExOlB1bGxSZXF1ZXN0NDU1ODUwNzU=": {
      "additions": 16,
      "body": "# problem statement\n\nno problem.  just wanting to stay fresh ♨️ 🍊\n# solution\n\nrev those dependencies!\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-21T18:51:35Z",
      "deletions": 9,
      "id": "MDExOlB1bGxSZXF1ZXN0NDU1ODUwNzU=",
      "mergedAt": "2015-09-21T19:03:35Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzgxNTEyOQ==",
        "nameWithOwner": "AmpersandJS/ampersand-model"
      },
      "state": "MERGED",
      "title": "rev deps, notably &-state to 4.6.0 (minor bump)",
      "url": "https://github.com/AmpersandJS/ampersand-model/pull/62"
    },
    "MDExOlB1bGxSZXF1ZXN0NDU2OTE4OTA=": {
      "additions": 3,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-22T17:24:21Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDU2OTE4OTA=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjM2OTUxMQ==",
        "nameWithOwner": "M-Zuber/npm-watch"
      },
      "state": "CLOSED",
      "title": "Add file type warning",
      "url": "https://github.com/M-Zuber/npm-watch/pull/8"
    },
    "MDExOlB1bGxSZXF1ZXN0NDU3Mzc0NDM=": {
      "additions": 98,
      "body": "# problem statement\n\na ways back, @pgilad rolled collision detection into &-state.  smart.  today, I observed a strange symptom of uncaught collision detection. by having a `Parent` State with a `prop` then a `Child` State with `derived` attr of the same name (silent collision), my derived was caching to a bogus value on initialization.\n# solution\n\nimprove collision detection\n# notes\n\nboy, it took me a while to find.  it's obvious now, but I can't imagine an novice &-js user being able to debug it.  The code doesn't violate our styles, but I'm super open to all opinions on formatting (and general feature implementation of course too).\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 13
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2015-09-23T01:56:46Z",
      "deletions": 31,
      "id": "MDExOlB1bGxSZXF1ZXN0NDU3Mzc0NDM=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzgxNTE3Nw==",
        "nameWithOwner": "AmpersandJS/ampersand-state"
      },
      "state": "CLOSED",
      "title": "feature/improve-collision-detection",
      "url": "https://github.com/AmpersandJS/ampersand-state/pull/196"
    },
    "MDExOlB1bGxSZXF1ZXN0NDYzNDMzMTA=": {
      "additions": 10,
      "body": ":wave: Hello!\n\nWe’re all trying to keep our software up to date, yet stable at the same time.\n\nThis is the first in a series of automatic PRs to help you achieve this goal. It pins all of the dependencies in your `package.json`, so you have complete control over the exact state of your software.\n\nFrom now on you’ll receive PRs whenever one of your dependencies updates – in real time. This way you get all the benefits of up-to-date dependencies, while having them pinned at the same time. This means:\n- No more surprises because some of your dependencies didn’t follow [SemVer](http://semver.org/). Your software is always in a state you know about, regardless of _when_ someone does `$ npm install`.\n- If you have continuous integration set up for this repo, it’ll run automatically. Ideally, it will pass and you'll stay up to date with the press of a button. If the updated dependency _does_ break your software, it won’t affect your users, because their dependencies are still pinned to the working state.\n- You can immediately identify which dependency updates break your software, because each one is tested in isolation. You’ll also have a branch ready to work on, so adapting to new APIs is way faster.\n\nMerge this PR and you’ll have up-to-date software without the headaches :sparkles:\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-29T23:01:07Z",
      "deletions": 10,
      "id": "MDExOlB1bGxSZXF1ZXN0NDYzNDMzMTA=",
      "mergedAt": "2015-10-05T07:15:49Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "MERGED",
      "title": "Pinned all dependencies",
      "url": "https://github.com/cdaringe/pouchy/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NDYzNDMzNTI=": {
      "additions": 1,
      "body": ":wave: Hello!\n\nWe’re all trying to keep our software up to date, yet stable at the same time.\n\nThis is the first in a series of automatic PRs to help you achieve this goal. It pins all of the dependencies in your `package.json`, so you have complete control over the exact state of your software.\n\nFrom now on you’ll receive PRs whenever one of your dependencies updates – in real time. This way you get all the benefits of up-to-date dependencies, while having them pinned at the same time. This means:\n- No more surprises because some of your dependencies didn’t follow [SemVer](http://semver.org/). Your software is always in a state you know about, regardless of _when_ someone does `$ npm install`.\n- If you have continuous integration set up for this repo, it’ll run automatically. Ideally, it will pass and you'll stay up to date with the press of a button. If the updated dependency _does_ break your software, it won’t affect your users, because their dependencies are still pinned to the working state.\n- You can immediately identify which dependency updates break your software, because each one is tested in isolation. You’ll also have a branch ready to work on, so adapting to new APIs is way faster.\n\nMerge this PR and you’ll have up-to-date software without the headaches :sparkles:\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-29T23:01:36Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDYzNDMzNTI=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjkxNzY0OQ==",
        "nameWithOwner": "cdaringe/shrugy"
      },
      "state": "OPEN",
      "title": "Pinned all dependencies",
      "url": "https://github.com/cdaringe/shrugy/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NDYzNDM0MTA=": {
      "additions": 6,
      "body": ":wave: Hello!\n\nWe’re all trying to keep our software up to date, yet stable at the same time.\n\nThis is the first in a series of automatic PRs to help you achieve this goal. It pins all of the dependencies in your `package.json`, so you have complete control over the exact state of your software.\n\nFrom now on you’ll receive PRs whenever one of your dependencies updates – in real time. This way you get all the benefits of up-to-date dependencies, while having them pinned at the same time. This means:\n- No more surprises because some of your dependencies didn’t follow [SemVer](http://semver.org/). Your software is always in a state you know about, regardless of _when_ someone does `$ npm install`.\n- If you have continuous integration set up for this repo, it’ll run automatically. Ideally, it will pass and you'll stay up to date with the press of a button. If the updated dependency _does_ break your software, it won’t affect your users, because their dependencies are still pinned to the working state.\n- You can immediately identify which dependency updates break your software, because each one is tested in isolation. You’ll also have a branch ready to work on, so adapting to new APIs is way faster.\n\nMerge this PR and you’ll have up-to-date software without the headaches :sparkles:\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-29T23:02:15Z",
      "deletions": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0NDYzNDM0MTA=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MDgwMzkzNg==",
        "nameWithOwner": "cdaringe/asana-cache-local"
      },
      "state": "OPEN",
      "title": "Pinned all dependencies",
      "url": "https://github.com/cdaringe/asana-cache-local/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0NDYzNTcwOTM=": {
      "additions": 1,
      "body": ":rocket:\n\nOne of your dependencies has just updated, so this PR bumps the corresponding version number in your `package.json`.\n\nYou can now check that the dependency update doesn't break your code, and then release the new version of your software safe in the knowledge that it will stay in this working state, regardless of _when_ your users do `$ npm install`.\n\nHave a good day!\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-09-30T03:07:35Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDYzNTcwOTM=",
      "mergedAt": "2015-10-05T07:19:15Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "MERGED",
      "title": "Updated pouchdb-find to version 0.4.0",
      "url": "https://github.com/cdaringe/pouchy/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY1ODEyMjM=": {
      "additions": 4,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/54646066551730\n# problem statement\n\nenv building doesnt work in node api per build process expectations\n# solution\n\nadd it in!\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-01T21:47:05Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY1ODEyMjM=",
      "mergedAt": "2015-10-01T22:15:35Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "add grunt-env and coins-grunt-env for build process",
      "url": "https://github.com/trendscenter/nodeapi/pull/36"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY1ODEyOTc=": {
      "additions": 4,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/54646066551730\n# problem statement\n\nenv building doesnt work in node api per build process expectations\n# solution\n\nadd it in!\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-01T21:47:43Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY1ODEyOTc=",
      "mergedAt": "2015-10-01T21:56:11Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "add grunt-env and coins-grunt-env for build process",
      "url": "https://github.com/trendscenter/nodeapi/pull/37"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY2NjEyNzU=": {
      "additions": 66,
      "body": "# problem statement\n#105 already adequately describes the issue. bindings get scrapped after remove is called, despite many users wanting to re-render a view instance after it's removed.  such an action will not work in the status quo state\n# solution\n\nsimple.  do the binding initialization steps as usual, but outsource them to a helper utility.  on render, double check that those bindings still initialized.  on remove, remove them per the status quo (again, oursourced to a helper method).  now on render again, when you do your test, you will find that the bindings have been removed, but we will now restore them.  this preserves the original intent of letting garbage collection happen, but patches the presence of the bindings for next render.  we may consider removing them from `initialize` entirely, though that would take some extra work.\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-10-02T17:36:26Z",
      "deletions": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY2NjEyNzU=",
      "mergedAt": "2015-10-14T00:09:26Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzc4ODI1OA==",
        "nameWithOwner": "AmpersandJS/ampersand-view"
      },
      "state": "MERGED",
      "title": "persist bindings thru lifecycle. Closes #105",
      "url": "https://github.com/AmpersandJS/ampersand-view/pull/146"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY4MzkyMDE=": {
      "additions": 1,
      "body": ":rocket:\n\nasana just published version 0.11.0, so that’s now up to date in your `package.json`.\n\nCheck that it doesn’t break your code and release the new version of your software safe in the knowledge that it will stay in this working state.\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-05T21:55:07Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY4MzkyMDE=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MDgwMzkzNg==",
        "nameWithOwner": "cdaringe/asana-cache-local"
      },
      "state": "CLOSED",
      "title": "Updated asana to version 0.11.0",
      "url": "https://github.com/cdaringe/asana-cache-local/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY4NjA2MDA=": {
      "additions": 1,
      "body": ":rocket:\n\npath just published version 0.12.7, so that’s now up to date in your `package.json`.\n\nCheck that it doesn’t break your code and release the new version of your software safe in the knowledge that it will stay in this working state.\n\n---\n\n[GitHub Release](https://github.com/jinder/path/releases/tag/v0.12.7)\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-06T04:03:14Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY4NjA2MDA=",
      "mergedAt": "2015-10-13T03:44:31Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "MERGED",
      "title": "Updated path to version 0.12.7",
      "url": "https://github.com/cdaringe/pouchy/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY5MDA0Mjg=": {
      "additions": 1,
      "body": ":rocket:\n\npouchdb just published version 5.0.0, so that’s now up to date in your `package.json`.\n\nCheck that it doesn’t break your code and release the new version of your software safe in the knowledge that it will stay in this working state.\n\n---\n\nThe new version differs by 54 commits (ahead by 54, behind by 6).\n- [cbc2543](https://github.com/pouchdb/pouchdb/commit/cbc2543ed28955f7c2bba8c1a4d5fbdf3febaff2): (#4412) - pouchdb 5.0.0 blog post\n- [25da9e5](https://github.com/pouchdb/pouchdb/commit/25da9e52a34b20f92cb871d410affd94d717670f): (#4329) - clean up docs, add fruitdown safari test\n- [a0fc6a9](https://github.com/pouchdb/pouchdb/commit/a0fc6a972a3332b91877f5f5c23efad903b7dc84): (#4329) - Add fruitdown as a supported adapter\n- [2457a2b](https://github.com/pouchdb/pouchdb/commit/2457a2b2d91d080a18ec10720fd6531cd6db3b08): (#4402) - fix Firefox FileReader in a WW\n- [87c60b6](https://github.com/pouchdb/pouchdb/commit/87c60b69d09cac0cbaf3f3b7af4e5080a2995c53): (#4414) - chore(package): update istanbul to version 0.3.22\n- [3cc683c](https://github.com/pouchdb/pouchdb/commit/3cc683c916415b6fc2749b4fd41914d36105e1c4): (#4407) - chore(package): update replace to version 0.3.0\n- [6c20bc9](https://github.com/pouchdb/pouchdb/commit/6c20bc9adc65c79cb4ad9b407addedf1b978e7e2): (#4406) - chore(package): update express-pouchdb to version 0.17.3\n- [db6eadc](https://github.com/pouchdb/pouchdb/commit/db6eadc3dee6109381319a829955fc8d3137c107): (#2982) - Add heartbeat to keep alive long connections\n- [31cdcf8](https://github.com/pouchdb/pouchdb/commit/31cdcf8993924414d13f0d3df080d60220ba2b87): (#4276) - Maintain cancelled state in replicator better\n- [be3366a](https://github.com/pouchdb/pouchdb/commit/be3366ab379d23801d9b9164f84bad28629b06cd): (#4401) - chore(package): update watchify to version 3.4.0\n- [e099d05](https://github.com/pouchdb/pouchdb/commit/e099d05f93034dd6980e85d2771df2473bbed349): (#4399) - chore(package): update commander to version 2.8.1\n- [f7280a7](https://github.com/pouchdb/pouchdb/commit/f7280a792ff73a76cd7145166326dd0feb0bde78): (#4397) - chore(package): update wd to version 0.3.12\n- [eb1ff86](https://github.com/pouchdb/pouchdb/commit/eb1ff8631d03a91404209ddc4eaeed7d4ac285e2): (#4395) - Clarify the merge procedure\n- [e50326f](https://github.com/pouchdb/pouchdb/commit/e50326f306f85f85d900ed0da28557f7fb407956): (#4393) - allow custom map/reduce implementations\n- [567e395](https://github.com/pouchdb/pouchdb/commit/567e395d6a4213d29e420e46669fb924dac26c23): (#4932) - chore(package): update chai to version 3.3.0\n\nThere are 54 commits in total. See the [full diff](https://github.com/pouchdb/pouchdb/compare/e3b6323a2e3912e03bdee9c0fd68c3a8d267c91a...cbc2543ed28955f7c2bba8c1a4d5fbdf3febaff2).\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-06T13:12:21Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY5MDA0Mjg=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "CLOSED",
      "title": "Updated pouchdb to version 5.0.0",
      "url": "https://github.com/cdaringe/pouchy/pull/4"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY5NzcyOTg=": {
      "additions": 1,
      "body": ":rocket:\n\nasana just published version 0.12.0, so that’s now up to date in your `package.json`.\n\nCheck that it doesn’t break your code and release the new version of your software safe in the knowledge that it will stay in this working state.\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-07T01:08:47Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY5NzcyOTg=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MDgwMzkzNg==",
        "nameWithOwner": "cdaringe/asana-cache-local"
      },
      "state": "CLOSED",
      "title": "Updated asana to version 0.12.0",
      "url": "https://github.com/cdaringe/asana-cache-local/pull/4"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY5OTI2Mzk=": {
      "additions": 1,
      "body": ":rocket:\n\ntestem just published version 0.9.7, so that’s now up to date in your `package.json`.\n\nCheck that it doesn’t break your code and release the new version of your software safe in the knowledge that it will stay in this working state.\n\n---\n\nThe new version differs by 8 commits (ahead by 8, behind by 0).\n- [c71081d](https://github.com/airportyh/testem/commit/c71081dfb187d784a86a193b66354c14d5784c1f): 0.9.7\n- [7cf6e33](https://github.com/airportyh/testem/commit/7cf6e330eba1713df44664e3b143fff4da512772): Merge pull request #644 from asakusuma/query-param-config\n- [516aa82](https://github.com/airportyh/testem/commit/516aa82ed651bb2bd9da1c6de05013d5ce19ecf7): Add query_params config\n- [18ef335](https://github.com/airportyh/testem/commit/18ef3355dd533742eac68bd0e6dcf766b5d1462d): 0.9.6\n- [e6b363d](https://github.com/airportyh/testem/commit/e6b363d52105e759261e531971de88744b685794): Merge pull request #643 from asakusuma/config-path\n- [3a2b899](https://github.com/airportyh/testem/commit/3a2b899be999533346b4b4268269551858f4dbe7): Allow custom path for config directory\n- [8beb615](https://github.com/airportyh/testem/commit/8beb615eeea8a718d6390c0e9ac9eef01957df81): Merge pull request #641 from johanneswuerbach/socket-137\n- [60bcdbb](https://github.com/airportyh/testem/commit/60bcdbb8c52eaf0991e22d44816a0be094c7438c): socket.io v1.3.7\n\nSee the [full diff](https://github.com/airportyh/testem/compare/ab885947875f81748c9de1b7767bc18f4939d298...c71081dfb187d784a86a193b66354c14d5784c1f).\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-07T06:58:20Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY5OTI2Mzk=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "CLOSED",
      "title": "Updated testem to version 0.9.7",
      "url": "https://github.com/cdaringe/pouchy/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0NDcwMDQ5NjI=": {
      "additions": 1,
      "body": ":rocket:\n\ntape just published version 4.2.1, so that’s now up to date in your `package.json`.\n\nCheck that it doesn’t break your code and release the new version of your software safe in the knowledge that it will stay in this working state.\n\n---\n\nThe new version differs by 7 commits (ahead by 7, behind by 0).\n- [0dc9313](https://github.com/substack/tape/commit/0dc93136f0e6e1ae83a9cb5e1117b72028fd9d47): v4.2.1\n- [77e1848](https://github.com/substack/tape/commit/77e184843f955722e261f81e50c5cc10f06784fd): Use `string.prototype.trim` instead of relying on `String#trim`, for ES3.\n- [1e22819](https://github.com/substack/tape/commit/1e22819419ca4230e9a86e0405f51cee17c99972): Merge pull request #195 from wbinnssmith/patch-1\n- [df62458](https://github.com/substack/tape/commit/df624584d8420848bfcb340a62701dcd717867af): Add Node v4\n- [0e407f0](https://github.com/substack/tape/commit/0e407f05d66c6e29ef26989d659db99b86b40a64): Bumping `defined` to v1.0.0 - no implementation change, just follows semver now.\n- [4711573](https://github.com/substack/tape/commit/47115739d4fb7360891c807335cc1ffbf2a2a0d6): Merge pull request #189 from gritzko/master\n- [c22ad78](https://github.com/substack/tape/commit/c22ad7857655b779fdab6002a0b4902e4e130d9b): add tape-dom link to the readme\n\nSee the [full diff](https://github.com/substack/tape/compare/aadcf4a95ed6810fa404dbe01f3b745252d4f12e...0dc93136f0e6e1ae83a9cb5e1117b72028fd9d47).\n\n---\n\nThis pull request was created by [greenkeeper.io](http://greenkeeper.io/).\nIt keeps your software, up to date, all the time.\n\n<sub>\nTired of seeing this sponsor message? Upgrade to the supporter plan!\nYou'll also get your pull requests faster :zap:\n</sub>\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-07T09:32:53Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcwMDQ5NjI=",
      "mergedAt": "2015-10-13T03:45:14Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "MERGED",
      "title": "Updated tape to version 4.2.1",
      "url": "https://github.com/cdaringe/pouchy/pull/6"
    },
    "MDExOlB1bGxSZXF1ZXN0NDcyMDk2MTY=": {
      "additions": 1,
      "body": "# problem statement\n\nmcrypt fails on install, constantly.\n# solution\n\nuse a version of it that the package author recommends.  confirmed successful install\n# tests\n\nthey pass.\n\n<img width=\"179\" alt=\"screen shot 2015-10-08 at 2 34 46 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/10380622/be5d7622-6dc9-11e5-8cad-fedf945afa73.png\">\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-08T21:34:59Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcyMDk2MTY=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "CLOSED",
      "title": "use mcrypt 0.0.15 per package author: tinyurl.com/nlmaae5",
      "url": "https://github.com/trendscenter/nodeapi/pull/38"
    },
    "MDExOlB1bGxSZXF1ZXN0NDcyMTAxODQ=": {
      "additions": 112,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/56599786332684\n# problem statement\n\ncan't require this module from other modules that use babel polyfill.\nhttp://stackoverflow.com/questions/31282702/conflicting-use-of-babel-register#comment50561555_31282702\n# solution\n- build it for distribution\n- add build file on every commit (no build left behind)\n- build in pre-commit hooks\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-10-08T21:40:34Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcyMTAxODQ=",
      "mergedAt": "2015-10-08T22:03:53Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNDAzMDQ0MA==",
        "nameWithOwner": "trendscenter/bookshelf-shield"
      },
      "state": "MERGED",
      "title": "Feature/babel build",
      "url": "https://github.com/trendscenter/bookshelf-shield/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0NDcyMjA2NDA=": {
      "additions": 497,
      "body": "## \n",
      "changedFiles": 8,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-10-08T23:52:03Z",
      "deletions": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcyMjA2NDA=",
      "mergedAt": "2015-10-08T23:53:23Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNDAzMDQ0MA==",
        "nameWithOwner": "trendscenter/bookshelf-shield"
      },
      "state": "MERGED",
      "title": "fix missing babel references by babelifying all files",
      "url": "https://github.com/trendscenter/bookshelf-shield/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0NDcyMjQyNDk=": {
      "additions": 111,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/56599786332714\n# problem statement\n\ni want to use one node for everything. i don't want to have to rebuild modules or switch node contexts to use this particular prog (not snarky*, FTR:) )\n# solution\n\nuse babel-polyfill to waive specific env requirement\n# ps\n\nnot that we _need_ to build it, it def could come in handy at somepoint.  e.g. `var api = require('nodeapi'); api.run()`.\n\n`postinstall` is rad!  install cmd... then builds way down the line!  we could just SQUASH the normal files to have the build produce file paths === the src.\n<img width=\"652\" alt=\"screen shot 2015-10-08 at 6 14 14 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/10383813/94a7ede8-6de8-11e5-8ca0-b03af545ce72.png\">\n",
      "changedFiles": 67,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 18
      },
      "createdAt": "2015-10-09T00:56:40Z",
      "deletions": 63,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcyMjQyNDk=",
      "mergedAt": "2015-10-13T01:01:08Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "Feature/remove iojs",
      "url": "https://github.com/trendscenter/nodeapi/pull/39"
    },
    "MDExOlB1bGxSZXF1ZXN0NDczMzg0NTI=": {
      "additions": 31,
      "body": "- first off. holy tests!  wow.  so many tests!\n# problem statement\n\n`leveldown not available` could be more user friendly when user believes that it should be available\n# context\n\nlet's get real.  sometimes we have to change node environments. it's terrible, it really is. it's also wonderful, & we all get it.  the detection of leveldown was intended to help alleviate #3110.  however, it's unintended consequence is that it swallows other errors that happen during `require('leveldown')`.\n# solution\n\nDetect a common case were leveldown is available, but incompatible.  The intent of the PR is not to cover all cases... just this little guy!  However, we could instead listen for the specific `not found` error:\n\n``` bash\ncdieringer@Snapper-osx:~/node/pouchdb$ node\n> require('abcd')\nError: Cannot find module 'abcd'\n```\n# test discussion\n\nit's a tricky one to write tests for, as it requires different prebuilt leveldown versions.  not sure if folks think it's a worthwhile thing to test.  regardless, i installed pouch with node 0.12.7, ran the tests (pass), switched to iojs 2.5.0, ran the tests, and confirmed that the helpful error was present:\n\n<img width=\"544\" alt=\"1_tests_pass\" src=\"https://cloud.githubusercontent.com/assets/1003261/10409498/fc3195aa-6ed7-11e5-8ba1-496c0c112d9f.png\">\n<img width=\"534\" alt=\"2_switch_to_iojs\" src=\"https://cloud.githubusercontent.com/assets/1003261/10409499/fc33d356-6ed7-11e5-8a00-b6f3a9d7e9b0.png\">\n<img width=\"683\" alt=\"3_observe_new_error\" src=\"https://cloud.githubusercontent.com/assets/1003261/10409500/fc344bb0-6ed7-11e5-888e-3968f236981d.png\">\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2015-10-10T05:49:08Z",
      "deletions": 16,
      "id": "MDExOlB1bGxSZXF1ZXN0NDczMzg0NTI=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3MTQwNzQ=",
        "nameWithOwner": "pouchdb/pouchdb"
      },
      "state": "CLOSED",
      "title": "Add friendly error message for common leveldown error case",
      "url": "https://github.com/pouchdb/pouchdb/pull/4448"
    },
    "MDExOlB1bGxSZXF1ZXN0NDc1ODYwOTE=": {
      "additions": 433,
      "body": "# problem statement\n- rebuilds are slow for large projects\n- rebuilds re-build content that doesn't _need to be rebuilt_\n# solution\n- maintain a cache of modules that have been built\n- rebuild only those modules that have not been built since last `electron-rebuild`\n  - because we cannot control users from doing something like `rm -rf node_modules/some_module`, our cache is at risk of being invalided.  Therefore, cache `node_modules/some_folder`'s  `stat.ctime`, and assert that the cached `ctime` === the folders current `ctime`.  If they're not ===, fallback safely by just rebuilding `some_module`\n",
      "changedFiles": 9,
      "comments": {
        "totalCount": 10
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-10-13T20:46:33Z",
      "deletions": 79,
      "id": "MDExOlB1bGxSZXF1ZXN0NDc1ODYwOTE=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNTAyMzk1Ng==",
        "nameWithOwner": "electron/rebuild"
      },
      "state": "CLOSED",
      "title": "feature/quick-rebuilds",
      "url": "https://github.com/electron/rebuild/pull/28"
    },
    "MDExOlB1bGxSZXF1ZXN0NDc5NjU0NDg=": {
      "additions": 162,
      "body": "# problem statement\n\nrace conditions were preventing tests from passing successfully\n# solution\n\nadd explicit doc level events to progress test flow and simplify doc type centric workflows\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-10-16T22:01:22Z",
      "deletions": 130,
      "id": "MDExOlB1bGxSZXF1ZXN0NDc5NjU0NDg=",
      "mergedAt": "2015-10-16T22:07:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "feature/add-consortium-doc-events",
      "url": "https://github.com/trendscenter/nodeapi/pull/40"
    },
    "MDExOlB1bGxSZXF1ZXN0NTAzMzcwMjc=": {
      "additions": 10,
      "body": "#### asana\n\nhttps://app.asana.com/0/22730822790060/64966662605378\n# problem\n\nwe want to use the api client in our many applications, but it is currently bundled in the nodeapi\n# solution\n\npull it out!  release it on it's own!  see [halfpenny](https://www.npmjs.com/package/halfpenny)\n",
      "changedFiles": 11,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2015-11-11T01:27:57Z",
      "deletions": 770,
      "id": "MDExOlB1bGxSZXF1ZXN0NTAzMzcwMjc=",
      "mergedAt": "2015-12-08T20:19:30Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "extract api client",
      "url": "https://github.com/trendscenter/nodeapi/pull/45"
    },
    "MDExOlB1bGxSZXF1ZXN0NTEyOTE5OTY=": {
      "additions": 3285,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/67550252004702\n# problem statement\n- future plans include exploiting webpack plugins, namely, the `DefinePlugin`\n# solution\n- change build to use webpack\n- update modules to be CommonJS, but export UMD compatible package\n\nno package business logic intended changes were made in the PR (or at least intended to be :) )\n# review\n\nrecommend reviewing with: https://github.com/MRN-Code/coins-logon-widget/pull/3/files?w=1\n",
      "changedFiles": 18,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-11-19T22:36:12Z",
      "deletions": 3444,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEyOTE5OTY=",
      "mergedAt": "2015-11-20T18:27:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzOTkxOTAzMA==",
        "nameWithOwner": "trendscenter/coins-logon-widget"
      },
      "state": "MERGED",
      "title": "feature/build-with-wepack",
      "url": "https://github.com/trendscenter/coins-logon-widget/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0NTE0NTc4MDg=": {
      "additions": 686,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/68059429222401\n# problem statement\n- need to set auth cookie to support x-env login\n- no tests\n# solution\n- mandate authCookieName on construction\n- add tests.  the test set now is admittedly a little weak.  need to beef it up!  however, good basic assurances are met\n- node_boilderplate align _most_ of the things.  i know there's mixed feelings on some of the boilerplate conventions.  let's make sure to get the boilerplate rev'd if any updates are needed.\n# test\n1. pull\n2. npm i\n3. `grunt test`\n#### ps\n\nsaturday night. ya, i know--don't judge me! :) biked all afternoon and worked a pretty minimal day on friday.  here's to a hint of catch-up!\n\n<img width=\"584\" alt=\"screen shot 2015-11-21 at 9 46 02 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/11322151/4287dd68-909b-11e5-8cc0-23dafb52d4fc.png\">\n",
      "changedFiles": 25,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 13
      },
      "createdAt": "2015-11-22T05:05:30Z",
      "deletions": 61,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE0NTc4MDg=",
      "mergedAt": "2015-11-24T23:26:59Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzOTkxOTAzMA==",
        "nameWithOwner": "trendscenter/coins-logon-widget"
      },
      "state": "MERGED",
      "title": "Feature/cross env sessions",
      "url": "https://github.com/trendscenter/coins-logon-widget/pull/4"
    },
    "MDExOlB1bGxSZXF1ZXN0NTE1NTMyNDI=": {
      "additions": 12,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/68281845672373\n# problem statement\n- errors occur logging in x-env.  this is because the JWT-based cookie clashes x-env\n# solution\n\nmake cookie env specific\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-11-23T17:24:00Z",
      "deletions": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE1NTMyNDI=",
      "mergedAt": "2015-11-25T19:22:33Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "adapt auth cookie based on env",
      "url": "https://github.com/trendscenter/nodeapi/pull/47"
    },
    "MDExOlB1bGxSZXF1ZXN0NTQxNTYyOTU=": {
      "additions": 1,
      "body": "#### todo\n- [ ] https://github.com/nodesource/distributions/issues/198\n#### asana\n\nhttps://app.asana.com/0/10663154302695/75198154311831\n# problem statement\n# solution\n\ntrack with node LTS\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-12-18T22:17:04Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQxNTYyOTU=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "CLOSED",
      "title": "upgrade for latest node lts",
      "url": "https://github.com/trendscenter/nodeapi/pull/48"
    },
    "MDExOlB1bGxSZXF1ZXN0NTQxNTY0NDE=": {
      "additions": 1,
      "body": "#### todo\n- [x] https://github.com/nodesource/distributions/issues/198\n#### asana\n\nhttps://app.asana.com/0/10663154302695/75198154311831\n# problem statement\n# solution\n\ntrack with node LTS\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2015-12-18T22:18:52Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQxNTY0NDE=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "CLOSED",
      "title": "upgrade for latest node lts",
      "url": "https://github.com/trendscenter/nodeapi/pull/49"
    },
    "MDExOlB1bGxSZXF1ZXN0NTQ0MjQ4MTE=": {
      "additions": 607,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/76076528244858\n# problem statement\n\nmanual UMD maintenance can be tricksie\n# solution\n\nsimplify our lives by doing pure commonjs, but export a UMD compatible build w/ webpack\n\npost `npm link` in halfpenny and `npm link halfpenny` in nodeapi...\n<img width=\"620\" alt=\"screen shot 2015-12-22 at 3 57 25 pm\" src=\"https://cloud.githubusercontent.com/assets/1003261/11967997/c1cccb88-a8c4-11e5-82f0-86dfc228814f.png\">\n",
      "changedFiles": 20,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2015-12-22T22:59:07Z",
      "deletions": 647,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjQ4MTE=",
      "mergedAt": "2016-01-06T19:09:58Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0NTk0Njc3Mg==",
        "nameWithOwner": "trendscenter/halfpenny"
      },
      "state": "MERGED",
      "title": "feature/commonjsify-with-umd-export",
      "url": "https://github.com/trendscenter/halfpenny/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NTU1ODczNDY=": {
      "additions": 2,
      "body": "Add documentation update to sppt #4024\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-01-11T05:05:46Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU1ODczNDY=",
      "mergedAt": "2016-01-11T13:42:54Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk5Mzg0MjY3",
        "nameWithOwner": "electron/electron"
      },
      "state": "MERGED",
      "title": "Specify enumerable property accessibility",
      "url": "https://github.com/electron/electron/pull/4056"
    },
    "MDExOlB1bGxSZXF1ZXN0NTY5Mjc0MzE=": {
      "additions": 3153,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/83171730635795\n# problem statement\n\nhalfpenny wont build \"postinstall\" because it needs its dev dependencies\n# solution\n\nbuild pre-commit, vs post-install\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-01-22T19:01:53Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5Mjc0MzE=",
      "mergedAt": "2016-01-22T19:02:12Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0NTk0Njc3Mg==",
        "nameWithOwner": "trendscenter/halfpenny"
      },
      "state": "MERGED",
      "title": "Hotfix/build post commit vs post install",
      "url": "https://github.com/trendscenter/halfpenny/pull/4"
    },
    "MDExOlB1bGxSZXF1ZXN0NTY5Mjc5Mzg=": {
      "additions": 1,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/83171730635795\n# problem statement\n\nhalfpenny wouldnt install\n# solution\n\nbump halfpenny to version that does need devDeps for any postinstall tasks\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-01-22T19:06:30Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5Mjc5Mzg=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "CLOSED",
      "title": "bump halfpenny to x-env installable version",
      "url": "https://github.com/trendscenter/nodeapi/pull/58"
    },
    "MDExOlB1bGxSZXF1ZXN0NTY5Mjc5ODg=": {
      "additions": 1,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/83171730635795\n# problem statement\n\nhalfpenny wouldnt install\n# solution\n\nbump halfpenny to version that does need devDeps for any postinstall tasks\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-01-22T19:07:04Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5Mjc5ODg=",
      "mergedAt": "2016-01-22T19:07:49Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "bump halfpenny to x-env installable version",
      "url": "https://github.com/trendscenter/nodeapi/pull/59"
    },
    "MDExOlB1bGxSZXF1ZXN0NTczNzAyNjk=": {
      "additions": 53,
      "body": "# problem statement\n\nif an unexpected application error occurs in `handleSubmit`, it will swallow it.  this is because handleSubmit _expects_ an error filled with error messages for respective fields.  however, async actions can be complicated.  400s, 500s, bad application code, etc can all be at play, and simply get eaten up because of thoughtful, but risky strategy of using all rejections as mechanisms to put `error`s strictly into form state.\n\nfor me, this meant meaningful information about my failing application was hidden from me.\n# solution\n\ndistinguish between expected errors and unexpected errors.\n\nmy proposed strategy is to wrap all submission/validation errors in a `SubmissionError`.  if any other error occurs, the rejection will flow to the users `.catch` or `.on('uncaughtRejection', ...)` handler.\n\nin this regard, we can safely know to update the state, or explode because our app died.  if the reviewer finds such a strategy agreeable, it's well known that this is a major bump and requires documentation updates. i'd imagine some folks may really not like having to type all 15 characters of `SubmissionError`, but I think it's well worth it.  Alternatives may be a `cb(errorFields)` strategy, but no matter what, separating good errors from bad errors is a major.  This is actually a pretty low impact, code-wise!\n",
      "changedFiles": 6,
      "comments": {
        "totalCount": 14
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-01-27T14:53:39Z",
      "deletions": 10,
      "id": "MDExOlB1bGxSZXF1ZXN0NTczNzAyNjk=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MDAxMzQzNQ==",
        "nameWithOwner": "redux-form/redux-form"
      },
      "state": "CLOSED",
      "title": "fixes #596 - handle unexpected/unhandled async error",
      "url": "https://github.com/redux-form/redux-form/pull/602"
    },
    "MDExOlB1bGxSZXF1ZXN0NTc4MDg0MjM=": {
      "additions": 3,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-02-01T08:18:39Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc4MDg0MjM=",
      "mergedAt": "2016-02-05T03:13:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDUzMDA1NQ==",
        "nameWithOwner": "latentflip/ampersand-avatar-input-view"
      },
      "state": "MERGED",
      "title": "Update package.json",
      "url": "https://github.com/latentflip/ampersand-avatar-input-view/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NTc4OTM0NjU=": {
      "additions": 24,
      "body": "#### asana\n\nhttps://app.asana.com/0/22730822790060/86041838112584\n# problem\n\ni cant logout when running local nodeapi instance\n# solution\n\nassert hawk required headers present no matter what!\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-02-01T20:15:05Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc4OTM0NjU=",
      "mergedAt": "2016-02-02T20:55:15Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "feature/auto-add-x-forwarded-host",
      "url": "https://github.com/trendscenter/nodeapi/pull/61"
    },
    "MDExOlB1bGxSZXF1ZXN0NTgwNDk2ODQ=": {
      "additions": 26,
      "body": "#### asana\n\nhttps://app.asana.com/0/15801361345988/86703372571156\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-02-02T21:04:21Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTgwNDk2ODQ=",
      "mergedAt": "2016-02-02T21:04:25Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "feature/strip-api-url-prefix",
      "url": "https://github.com/trendscenter/nodeapi/pull/62"
    },
    "MDExOlB1bGxSZXF1ZXN0NTg2OTM0NTU=": {
      "additions": 15,
      "body": "# problem statement\n\n~~user is having issues over in #66~~\ntest missing case setting select value when options are formatted as `[ [0, 'zero'], [1, 'one'] ]`, specifically when calling `setValue(withSomeNumber)`.\n# solution\n\nconfirm behavior is as expected via test\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2016-02-09T01:20:51Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg2OTM0NTU=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDgxMTI4Mg==",
        "nameWithOwner": "AmpersandJS/ampersand-select-view"
      },
      "state": "OPEN",
      "title": "Feature/test arr num values",
      "url": "https://github.com/AmpersandJS/ampersand-select-view/pull/67"
    },
    "MDExOlB1bGxSZXF1ZXN0NTk0MDIwOTg=": {
      "additions": 294,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/90520988960982\n# problem statement\n- API request logging events should happen in the request lifecycle and be automatic (e.g. no manual logging in each route)\n  - some manual logging occurs, which is loose and not widely implemented.  consequently, said logging doesn't offer the API any actionable value\n  -  most requests are _not logged_ at all which is OK\n  - because logging lifecycle hooks have not been added in, #67 was added to facilitate discussion on this\n- `onPossiblyUncaughtExceptions` is no longer needed explicitly. `bluebird` promises tap onto `process.on('unhandledRejected')`. See [here](http://bluebirdjs.com/docs/api/error-management-configuration.html#global-rejection-events) for ref.\n- error handlers are not commonized between `uncaughtException` and `unhandledRejection`\n- some log activity is silenced because logger is not registered early enough\n- redundant logging activity occurs per long design discussion in #44 \n- #56\n# solution\n- primarily, address #44.  the other issues simply get bundled in as consequence\n- close #56\n- tidy index.js.  you will see a lot of RED. open it in just raw mode.  enjoy it's simplicity! :)\n# discussion\n- note the new content that shows up when you run the api.  that should have been present the whole time!\n- note how we never error, log, then throw again.  this is **antipattern**.  throw, log, and crash.  OR, throw, recover, optionally log, continue\n  - if you are _not_ going to recover, don't `try` wrap or `.catch` wrap.  no recovery means non-deterministic state, and the global error handlers which log and kill should kick in.\n",
      "changedFiles": 36,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 32
      },
      "createdAt": "2016-02-15T18:59:50Z",
      "deletions": 391,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk0MDIwOTg=",
      "mergedAt": "2016-04-01T07:18:34Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "tidy error handling and logging",
      "url": "https://github.com/trendscenter/nodeapi/pull/68"
    },
    "MDExOlB1bGxSZXF1ZXN0NTk5MDc4NzI=": {
      "additions": 1,
      "body": "# problem statement\n\nforked repo has travis bound to old paularmstrong fork\n# solution\n\ncreate travis linkage here :)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-02-19T05:55:56Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk5MDc4NzI=",
      "mergedAt": "2016-02-19T06:05:30Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "bump travis",
      "url": "https://github.com/node-swig/swig-templates/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0NTk5MDg3OTg=": {
      "additions": 2,
      "body": "branches #4, resolves conflicts!\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-02-19T06:12:13Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk5MDg3OTg=",
      "mergedAt": "2016-02-19T06:12:26Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "Paulcpederson badge",
      "url": "https://github.com/node-swig/swig-templates/pull/6"
    },
    "MDExOlB1bGxSZXF1ZXN0NjAyNjc2MjM=": {
      "additions": 3,
      "body": "# problem statement\n\nmy inputs are mutated.  this is unexpected.  i have need for my inputs as originally written in other parts of my code\n# solution\n\nclone inputs, don't mutate user input\n# discussion\n\ntests are currently broken in master.  this change is so darned simple i hope we can let it through anyway :), or get tests back up\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-02-23T00:36:59Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAyNjc2MjM=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MDAyMTQ1MA==",
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      },
      "state": "CLOSED",
      "title": "protect user input",
      "url": "https://github.com/gr2m/spawn-pouchdb-server/pull/33"
    },
    "MDExOlB1bGxSZXF1ZXN0NjA2Mjc5OTc=": {
      "additions": 41,
      "body": "#### problem statement\n- linting is a little out-of-date!\n#### solution\n- address #11 \n- add `git-validate`, which installs a generic git `pre-commit` hook\n  - add `pre-commit` tasks in `package.json`, particularly the `\"lint\"` task\n  - remove the old `pre-commit` script\n- make files comply with new `.eslintrc.js`\n#### discussion\n\ni'd really like a \"zero configuration\" eslint setting, in that regard we never debate or discuss opinions on rules.  _but_ arrrg, no-unused-vars was really killin me!  if we're all cool with this, just as it stands, great, we can use it and not make a fuss.  or, if someone wants to try another standard, no-sweat!\n",
      "changedFiles": 20,
      "comments": {
        "totalCount": 14
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2016-02-25T05:33:23Z",
      "deletions": 104,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA2Mjc5OTc=",
      "mergedAt": "2016-02-29T21:29:33Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "Feature/eslint",
      "url": "https://github.com/node-swig/swig-templates/pull/12"
    },
    "MDExOlB1bGxSZXF1ZXN0NjExMzQzNDQ=": {
      "additions": 4,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-02-29T19:54:36Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NjExMzQzNDQ=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3MTQwNzQ=",
        "nameWithOwner": "pouchdb/pouchdb"
      },
      "state": "CLOSED",
      "title": "Add Pouchy to external.md",
      "url": "https://github.com/pouchdb/pouchdb/pull/4935"
    },
    "MDExOlB1bGxSZXF1ZXN0NjExOTY1OTg=": {
      "additions": 12,
      "body": "# problem statement\n- whist spawn-pdbs sniffs for its sever to come up before calling back, it checks for a string present in a log file\n  - this is unreliable--logFile content is dependent on `logLevel`, which may not echo anything\n  - my server \"wouldn't come up\", and I found it was because express-pouchdb wasn't logging the `match`ed content, even though the server was indeed up\n# solution\n- test for server-up by polling the server primary URL via `GET` instead of checking log file\n\ncheers! :beers: \n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-03-01T05:51:54Z",
      "deletions": 12,
      "id": "MDExOlB1bGxSZXF1ZXN0NjExOTY1OTg=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MDAyMTQ1MA==",
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      },
      "state": "CLOSED",
      "title": "fix: test for serverUp from server vs logLevel depedent logFile",
      "url": "https://github.com/gr2m/spawn-pouchdb-server/pull/34"
    },
    "MDExOlB1bGxSZXF1ZXN0NjEzMDE5MTk=": {
      "additions": 1,
      "body": "unless it was intentional!\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-03-01T20:20:10Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NjEzMDE5MTk=",
      "mergedAt": "2016-03-01T20:28:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1ODE0Mzg0",
        "nameWithOwner": "AndreasMadsen/clarify"
      },
      "state": "MERGED",
      "title": "Fix package description typo",
      "url": "https://github.com/AndreasMadsen/clarify/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0NjQxMTA0MTc=": {
      "additions": 149,
      "body": "#### asana\n\nhttps://app.asana.com/0/22730822790060/104803654726126\n# problem statement\n\nsee asana\n# solution\n\nsee asana (and code! :))\n",
      "changedFiles": 24,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 27
      },
      "createdAt": "2016-03-24T22:48:04Z",
      "deletions": 208,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQxMTA0MTc=",
      "mergedAt": "2016-03-29T20:42:09Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "stage babel removal",
      "url": "https://github.com/trendscenter/nodeapi/pull/71"
    },
    "MDExOlB1bGxSZXF1ZXN0NjQyOTE4MzM=": {
      "additions": 113,
      "body": "",
      "changedFiles": 5,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 28
      },
      "createdAt": "2016-03-28T05:54:51Z",
      "deletions": 128,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQyOTE4MzM=",
      "mergedAt": "2016-03-28T05:54:55Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MTMwNjgzNg==",
        "nameWithOwner": "trendscenter/coins-validate"
      },
      "state": "MERGED",
      "title": "coins-validate bump",
      "url": "https://github.com/trendscenter/coins-validate/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0NjQzOTkzNDU=": {
      "additions": 15,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/105562875202004\n# problem statement\n- client path is not to final webpack'd client\n# solution\n- client path **is** to final webpack'd client\n- pin cowbody deps\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-03-29T00:58:30Z",
      "deletions": 12,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQzOTkzNDU=",
      "mergedAt": "2016-03-29T20:42:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "Feature/use actual compiled client",
      "url": "https://github.com/trendscenter/nodeapi/pull/72"
    },
    "MDExOlB1bGxSZXF1ZXN0NjQ1MzU0NTg=": {
      "additions": 157,
      "body": "- [ ] pending closure of #68 \n#### asana\n\nhttps://app.asana.com/0/10663154302695/106001237085846\n# problem statement\n- nodeapi is the backbone of the things, and we don't know how well it's tests\n# solution\n- add coverage\n- enforce coverage\n",
      "changedFiles": 15,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2016-03-29T21:16:45Z",
      "deletions": 192,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQ1MzU0NTg=",
      "mergedAt": "2016-04-01T20:35:54Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "Feature/coverage",
      "url": "https://github.com/trendscenter/nodeapi/pull/73"
    },
    "MDExOlB1bGxSZXF1ZXN0NjQ1NTMwMzM=": {
      "additions": 64,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/106084980186695\n# problem statement\n- the api client isn't x-env compatible\n# solution\n- make it so\n",
      "changedFiles": 12,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2016-03-29T23:57:39Z",
      "deletions": 77,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQ1NTMwMzM=",
      "mergedAt": "2016-04-01T20:35:54Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "Feature/browser compat client",
      "url": "https://github.com/trendscenter/nodeapi/pull/74"
    },
    "MDExOlB1bGxSZXF1ZXN0NjQ4NTYyOTM=": {
      "additions": 203,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/107053111894717\n# problem statement\n- package logic was all just crushed into index, reducing readability and maintainability\n- consitentify logic with with templates to match package.json scripts\n  - i.e. if a template already exists, don't overwrite it (as is the behavior with installing npm scripts)\n  - need to brainstorm ways to still get updates from the latest coins-validate version.\n    - @rsskmr and i discussed a cli-mode for c-v that compares your packages state vs. coins-validate's latest proposed state\n    - BKM TBD, soliciting feedback!  see #4 for discussion\n# solution\n- break logic up into logic files, micro-packages if you will\n- apply the template .eslintrc to itself\n- test some of the complicated stuff\n",
      "changedFiles": 14,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-03-31T20:49:12Z",
      "deletions": 98,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQ4NTYyOTM=",
      "mergedAt": "2016-04-13T19:09:48Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MTMwNjgzNg==",
        "nameWithOwner": "trendscenter/coins-validate"
      },
      "state": "MERGED",
      "title": "Feature/structur ify",
      "url": "https://github.com/trendscenter/coins-validate/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0NjUxODM1ODY=": {
      "additions": 22,
      "body": "#### asana\n\nhttps://app.asana.com/0/10663154302695/108000325129766\n# problem statement\n- our users and apps will use halfpenny to connect to the nodeapi, thus the nodeapi should use it too for its own integration tests\n# solution\n- wire in halfpenny\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-04-04T17:39:03Z",
      "deletions": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUxODM1ODY=",
      "mergedAt": "2016-04-05T16:55:00Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "MERGED",
      "title": "Feature/browser compat client",
      "url": "https://github.com/trendscenter/nodeapi/pull/81"
    },
    "MDExOlB1bGxSZXF1ZXN0NjU3MjcwMzI=": {
      "additions": 9,
      "body": "PR for public vis!\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-04-08T02:00:08Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0NjU3MjcwMzI=",
      "mergedAt": "2016-04-08T02:00:12Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "Feature/2.0.0 release",
      "url": "https://github.com/node-swig/swig-templates/pull/16"
    },
    "MDExOlB1bGxSZXF1ZXN0NjU4MzYyMjQ=": {
      "additions": 98,
      "body": "# ps\n- no static api docs generated\n- bizarre models generated in swagger.json\n# solution\n- add building of docs\n- label payload models to tidy swagger.json\n",
      "changedFiles": 21,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 10
      },
      "createdAt": "2016-04-08T19:33:55Z",
      "deletions": 88,
      "id": "MDExOlB1bGxSZXF1ZXN0NjU4MzYyMjQ=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMDkzOTcyMg==",
        "nameWithOwner": "trendscenter/nodeapi"
      },
      "state": "OPEN",
      "title": "Feature/make api client bitchin",
      "url": "https://github.com/trendscenter/nodeapi/pull/95"
    },
    "MDExOlB1bGxSZXF1ZXN0NjYwMjU4NTM=": {
      "additions": 19,
      "body": "# problem statement\n- i didn't understand why my packages weren't being linked as claimed by the lerna docs\n# investigation\n- per investigation, linking does not happen in the traditional sense, and there is a caret range requirement for the linking.\n# solution\n- clarify in docs how this process occurs\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-04-11T16:48:22Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NjYwMjU4NTM=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0NzM5NDc3Ng==",
        "nameWithOwner": "lerna/lerna"
      },
      "state": "CLOSED",
      "title": "add FAQ with our first FAQ!",
      "url": "https://github.com/lerna/lerna/pull/100"
    },
    "MDExOlB1bGxSZXF1ZXN0NjcwOTkwMDc=": {
      "additions": 5,
      "body": "# ps\n- no styling in descriptions\n# solution\n- enable styling in descriptions\n# post-test\n\nplease `npm run publish-minor`\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-04-19T22:13:09Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NjcwOTkwMDc=",
      "mergedAt": "2016-04-20T17:31:18Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MTMwNjgzNg==",
        "nameWithOwner": "trendscenter/coins-validate"
      },
      "state": "MERGED",
      "title": "md jsdoc descriptions",
      "url": "https://github.com/trendscenter/coins-validate/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0Njc0MjMzMTA=": {
      "additions": 13,
      "body": "# problem statements\n- if docs are under version control, dates generate frivolous diffs\n- the cmd is suuper long\n# solution\n- don't generate doc date stamps\n- hide complexity into the existing jsdoc.json\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-04-21T21:12:47Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0Njc0MjMzMTA=",
      "mergedAt": "2016-04-21T21:12:59Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MTMwNjgzNg==",
        "nameWithOwner": "trendscenter/coins-validate"
      },
      "state": "MERGED",
      "title": "hide generated dates",
      "url": "https://github.com/trendscenter/coins-validate/pull/6"
    },
    "MDExOlB1bGxSZXF1ZXN0Njc4MDAwMDY=": {
      "additions": 27,
      "body": "# problem statement\n- lodash deps are all inlined, and make for a bigger bundle\n# solution\n- require sub-package lodash functions\n- remove unused dep\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2016-04-25T22:36:30Z",
      "deletions": 29,
      "id": "MDExOlB1bGxSZXF1ZXN0Njc4MDAwMDY=",
      "mergedAt": "2016-04-26T06:03:06Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzc4ODI1OA==",
        "nameWithOwner": "AmpersandJS/ampersand-view"
      },
      "state": "MERGED",
      "title": "improve lodash dep bundling",
      "url": "https://github.com/AmpersandJS/ampersand-view/pull/166"
    },
    "MDExOlB1bGxSZXF1ZXN0Njg0Nzk3Njg=": {
      "additions": 1,
      "body": "# problem statement\n- `$elemMatch` not supported in old nedb\n# solution\n- bump `nedb`.\n\ntests pass :)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-04-30T21:41:53Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg0Nzk3Njg=",
      "mergedAt": "2016-05-06T16:03:08Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNzYxMDc1Mg==",
        "nameWithOwner": "scottwrobinson/camo"
      },
      "state": "MERGED",
      "title": "bump nedb",
      "url": "https://github.com/scottwrobinson/camo/pull/70"
    },
    "MDExOlB1bGxSZXF1ZXN0Njg3NDA4ODM=": {
      "additions": 3,
      "body": "# problem statement\n- istanbul doesn't work with multiprocess programs\n# solution\n- use nyc, which wraps istanbul and handles multiprocess apps.  raynos recommended it in the istanbul threads\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-05-03T17:11:12Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg3NDA4ODM=",
      "mergedAt": "2016-05-03T18:07:22Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MTMwNjgzNg==",
        "nameWithOwner": "trendscenter/coins-validate"
      },
      "state": "MERGED",
      "title": "feature/istanbul-to-nyc",
      "url": "https://github.com/trendscenter/coins-validate/pull/7"
    },
    "MDExOlB1bGxSZXF1ZXN0Njk3NTE5NTA=": {
      "additions": 1,
      "body": "#### solution\n\nhttps://app.asana.com/0/10663154302695/132251720013463\n# problem statement\n- excess tasks\n# solution\n- consolidate\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-05-11T22:20:00Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0Njk3NTE5NTA=",
      "mergedAt": "2016-05-13T16:05:41Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MTMwNjgzNg==",
        "nameWithOwner": "trendscenter/coins-validate"
      },
      "state": "MERGED",
      "title": "drop posttest",
      "url": "https://github.com/trendscenter/coins-validate/pull/13"
    },
    "MDExOlB1bGxSZXF1ZXN0NzEzMzQxMjg=": {
      "additions": 24,
      "body": "#### problem statement\n- non-native promises are not supported\n#### solution\n- support non-native promises\n#### discussion\n\nthere is a lot of talk on how-to-detect if something is a promise or not.  many people respond to the question with something like \"don't try to detect a promise, just `Promise.resolve` it if you need promise behavior.\"  it's a strange response that doesn't address the intent of question--how to do proper type detection on Promises.  it's tricky because a Promise describes both a formal type as well as a behavioral expectation.  due to this complication, detecting a promise is not so simple. @zcbenz already denoted that a simple `.then` check is out of the question, and right fully so.  hence, the strategy taken should cover ~99.9% of promise implementations, with the downside that it takes many type checks to reach a conclusion.\n\ncloses #5633\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-05-25T05:55:27Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0NzEzMzQxMjg=",
      "mergedAt": "2016-05-26T04:49:40Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk5Mzg0MjY3",
        "nameWithOwner": "electron/electron"
      },
      "state": "MERGED",
      "title": "Support non-native promises",
      "url": "https://github.com/electron/electron/pull/5689"
    },
    "MDExOlB1bGxSZXF1ZXN0NzE5MzI0NjM=": {
      "additions": 66,
      "body": "#### problem statement\n- sort documentation is unclear.\n- sort documentation has cruft (e.g. `pagination/query/etc` code) that distracts from the actual sorting content\n- sort documentation, whilst accurate,  is hard to disambiguate between the many usages of the term `sort` (e.g. the imported sort function, the sort-related state, and the sorted content)\n#### solution\n- provide a discrete outline for how to sort your table data\n- vary terminology to prevent possible ambiguation\n- remove cruft\n#### discussion\n\nthanks for the great lib!  respectfully, it took me too long to interpret exactly what was going on here.  i patched the existing docs such that someone can open, read from top to bottom, and have absolute clarity on how to get their data sorted. hopefully the change will be welcomed!  it may be able to view the file raw/rendered vs looking at the diff\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-05-30T19:34:49Z",
      "deletions": 50,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE5MzI0NjM=",
      "mergedAt": "2016-05-31T04:56:01Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyOTQ4NjMwOQ==",
        "nameWithOwner": "reactabular/reactabular"
      },
      "state": "MERGED",
      "title": "clarify sort usage",
      "url": "https://github.com/reactabular/reactabular/pull/139"
    },
    "MDExOlB1bGxSZXF1ZXN0NzIxOTU1MTA=": {
      "additions": 47,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-06-01T14:54:57Z",
      "deletions": 14,
      "id": "MDExOlB1bGxSZXF1ZXN0NzIxOTU1MTA=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1NzQxMzAxMg==",
        "nameWithOwner": "trendscenter/decentralized-laplacian-ridge-regression"
      },
      "state": "CLOSED",
      "title": "some convergence checks",
      "url": "https://github.com/trendscenter/decentralized-laplacian-ridge-regression/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0NzI2MTc2NDI=": {
      "additions": 2,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-06-05T01:17:28Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI2MTc2NDI=",
      "mergedAt": "2016-06-06T09:26:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MzczNzE4NQ==",
        "nameWithOwner": "msmesnik/reconsider"
      },
      "state": "MERGED",
      "title": "Update README.md",
      "url": "https://github.com/msmesnik/reconsider/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NzI2MTgxNTM=": {
      "additions": 43,
      "body": "hello:\n\nthanks for the great package.  i noticed there could be some possible improvements in the package.json.  some of these changes are opinionated propositions, but have shown to be super helpful in a series of packages I've published and worked with in ampersand-js.  hopefully you'll find these useful.\n# problem statements\n- jsdoc & rethinkdbdash dependencies are missing \n- docs aren't persisted to the web on-module publish (user's have to download the repo and open the html)\n- linting, testing, and package-validation could benefit from being run on every commit (quality control!)\n- dependencies are out of date\n# solution\n- add missing deps\n- auto-generate and publish docs to the web on-publish\n  - add `postpublish` script that deploys docs!\n  - ref: http://cdaringe.github.io/reconsider/index.html\n- add `git-validate` to support `pre-commit` tasks (re: lint/test/validate oncommit)\n- update dependencies\n- add git friendly auto-versioning+publish scripts\n  - e.g. `npm run publish-patch` would bump the patch version, push a tagged release to github, and publish to npm.\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-06-05T01:52:45Z",
      "deletions": 24,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI2MTgxNTM=",
      "mergedAt": "2016-06-06T09:26:02Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MzczNzE4NQ==",
        "nameWithOwner": "msmesnik/reconsider"
      },
      "state": "MERGED",
      "title": "Feature/deploy docs",
      "url": "https://github.com/msmesnik/reconsider/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0NzI3MzY4OTI=": {
      "additions": 33,
      "body": "ref https://github.com/MRN-Code/coinstac-common/pull/52\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2016-06-06T16:17:11Z",
      "deletions": 17,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI3MzY4OTI=",
      "mergedAt": "2016-06-14T17:47:24Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1ODU2OTk0OA==",
        "nameWithOwner": "MRN-Code/coinstac-example-computation-bisect-converge"
      },
      "state": "MERGED",
      "title": "migrate for promisified common",
      "url": "https://github.com/MRN-Code/coinstac-example-computation-bisect-converge/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NzI4MDY0MTk=": {
      "additions": 45,
      "body": "@ref https://github.com/MRN-Code/coinstac-common/pull/52\n\n@pliz, on closure of the above PR, would like your assistance in verifying.  algo does converge, but perhaps not exactly where it was before?  TBD\n",
      "changedFiles": 7,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-06-07T02:17:16Z",
      "deletions": 151,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI4MDY0MTk=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1NzQxMzAxMg==",
        "nameWithOwner": "trendscenter/decentralized-laplacian-ridge-regression"
      },
      "state": "CLOSED",
      "title": "Feature/promisify",
      "url": "https://github.com/trendscenter/decentralized-laplacian-ridge-regression/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0NzMyODk2ODc=": {
      "additions": 137,
      "body": "#### asana\n\nhttps://app.asana.com/0/45796090191289/142762383487722\n# problem statement\n\npouchdb doesn't export ajax like it used to.  hawkifying strategy must be altered to get headers on per hawk/coinstac reqs\n# solution\n- change hawkify to export a function that takes as input an ajax function to wrap, vs a `PouchDB` ref\n  https://mrncode.slack.com/archives/coinstac/p1465503146000354\n# review\n\n`git mv` blew it, and shows lots of red & lots of green.  the core package didn't change much!  you may want to review the two commits indepedently\n",
      "changedFiles": 7,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-06-09T21:32:43Z",
      "deletions": 172,
      "id": "MDExOlB1bGxSZXF1ZXN0NzMyODk2ODc=",
      "mergedAt": "2016-06-13T23:39:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MjgyMjcwMg==",
        "nameWithOwner": "trendscenter/hawkify-pouchdb"
      },
      "state": "MERGED",
      "title": "Feature/pouchdb 5.4.x",
      "url": "https://github.com/trendscenter/hawkify-pouchdb/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NzM5NTk2Nzc=": {
      "additions": 22,
      "body": "#### asana\n\nnone.\n# problem statement\n\n[see here](https://mrncode.slack.com/archives/D06JVT0HH/p1466012713000042).\n# solution\n\npostinstall hook.\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-06-15T18:22:59Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NzM5NTk2Nzc=",
      "mergedAt": "2016-06-15T19:37:38Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MjQ5NzkwOQ==",
        "nameWithOwner": "trendscenter/coinstac"
      },
      "state": "MERGED",
      "title": "postinstall electron-rebuild hack.",
      "url": "https://github.com/trendscenter/coinstac/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0NzM5ODgzMzM=": {
      "additions": 8,
      "body": "# problem statement\n\ncomps may not all be loaded. only diffs loaded into state on change.\n# solution\n\nload 'em all up.\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-06-15T21:35:11Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0NzM5ODgzMzM=",
      "mergedAt": "2016-06-15T21:42:07Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MjQ5NzkwOQ==",
        "nameWithOwner": "trendscenter/coinstac"
      },
      "state": "MERGED",
      "title": "feature/eager-fetch-tia-comps-on-init",
      "url": "https://github.com/trendscenter/coinstac/pull/6"
    },
    "MDExOlB1bGxSZXF1ZXN0NzQwMDY2NTE=": {
      "additions": 100,
      "body": "# problem statement\n- group step plugin removes complexity from the algorithm, yet the complexity is still manually maintained in this implementation\n- callback style code is deprecated in favor or pure value or promise based return\n# solution\n- adjust code for non-callback style syntax\n- use group-step plugin\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-06-16T00:39:25Z",
      "deletions": 187,
      "id": "MDExOlB1bGxSZXF1ZXN0NzQwMDY2NTE=",
      "mergedAt": "2016-06-16T22:52:30Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1NzQxMzAxMg==",
        "nameWithOwner": "trendscenter/decentralized-laplacian-ridge-regression"
      },
      "state": "MERGED",
      "title": "Feature/plugin time",
      "url": "https://github.com/trendscenter/decentralized-laplacian-ridge-regression/pull/4"
    },
    "MDExOlB1bGxSZXF1ZXN0NzQxMzQ2ODk=": {
      "additions": 83,
      "body": "#### asana\n\nhttps://app.asana.com/0/45796090191289/144424823898999\n# problem statement\n\nuser Computation errors happen. but no one knows about them.\n# solution\n\ndistribute them via the RemoteComputationResult\n",
      "changedFiles": 6,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-06-16T19:05:53Z",
      "deletions": 14,
      "id": "MDExOlB1bGxSZXF1ZXN0NzQxMzQ2ODk=",
      "mergedAt": "2016-06-16T19:17:21Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MjQ5NzkwOQ==",
        "nameWithOwner": "trendscenter/coinstac"
      },
      "state": "MERGED",
      "title": "Distribute user Errors.",
      "url": "https://github.com/trendscenter/coinstac/pull/7"
    },
    "MDExOlB1bGxSZXF1ZXN0NzQxNzAxOTk=": {
      "additions": 1408,
      "body": "# problem statement\n- this DecentralizedComputation, as shipped to users, doesn't take files as input.  we designed it assuming FS data had be parsed and formatted already.\n# solution\n- take freesurfer files as input.\n# discussion\n- as previously discussed, it's a _little_ messy to be mixing the algorithm with the consumption of the algorithm.  for now, this repo _is a COINSTAC DecentralizedComputation_.  if needed, we can later pull out the regression components to another package.  in that regards, all the _math/algo_ content goes in one place and all the coinstac related calls to-said algos stay here.\n- this PR loads some _DUMMY_ FreeSurfer files into `test/demo/[controls|substanceUsers]` <a href=\"#vince-look-here\"></a>\n  - in `freesurefer-parser` i have a basic freesurfer file generator, used to produce these files. they can be adjusted to produce different freesurfer values/etc as needed.  let me know if you don't like my dummy inputs.\n  - all of the `substanceUsers` have 5% total gray matter than `controls`\n  - there are two users in this sim.  each user runs 5 controls and 5 sustanceUsers, for a total of 20 users to run against.\n\nto run: `coinstac-simulator -d test/declaration-total-gray-with-fs-files.js`\n\nplease provide input!\n",
      "changedFiles": 23,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-06-16T23:46:07Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0NzQxNzAxOTk=",
      "mergedAt": "2016-06-24T03:57:03Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1NzQxMzAxMg==",
        "nameWithOwner": "trendscenter/decentralized-laplacian-ridge-regression"
      },
      "state": "MERGED",
      "title": "init freesurfer-gray-matter-demo.",
      "url": "https://github.com/trendscenter/decentralized-laplacian-ridge-regression/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0NzQzMTY4MjM=": {
      "additions": 121,
      "body": "#### asana\n\nhttps://app.asana.com/0/45796090191289/145273873879209\n# problem statement\n- auto-publishing docs isn't really a thing w/ mono-repo.\n# solution\n- make it a thing.  check it.  mrn-code.github.io/coinstac\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-06-17T23:05:51Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0NzQzMTY4MjM=",
      "mergedAt": "2016-06-20T17:47:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MjQ5NzkwOQ==",
        "nameWithOwner": "trendscenter/coinstac"
      },
      "state": "MERGED",
      "title": "Feature/auto docs",
      "url": "https://github.com/trendscenter/coinstac/pull/8"
    },
    "MDExOlB1bGxSZXF1ZXN0NzQ4ODMyNDM=": {
      "additions": 35,
      "body": "#### asana\n\nnope.\n# problem statement\n\ncomputations is missin'\n# solution\n\nadd 'em\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-06-23T01:26:02Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NzQ4ODMyNDM=",
      "mergedAt": "2016-06-23T01:33:44Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MjQ5NzkwOQ==",
        "nameWithOwner": "trendscenter/coinstac"
      },
      "state": "MERGED",
      "title": "Feature/proxy computations",
      "url": "https://github.com/trendscenter/coinstac/pull/9"
    },
    "MDExOlB1bGxSZXF1ZXN0NzU1NDAwNDU=": {
      "additions": 7,
      "body": "wanting to share this script w/ some teamsters.  wouldn't work on my machine!  also, sub-docs folders arent being published for some reason as written now. (i.e. try to get to coinstac-client-core docs on mrn-code.github.io).  will debug this.\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-06-28T19:57:13Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0NzU1NDAwNDU=",
      "mergedAt": "2016-06-28T19:57:37Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MjQ5NzkwOQ==",
        "nameWithOwner": "trendscenter/coinstac"
      },
      "state": "MERGED",
      "title": "env friendly file i/o calls.",
      "url": "https://github.com/trendscenter/coinstac/pull/11"
    },
    "MDExOlB1bGxSZXF1ZXN0ODIxMjEyMjU=": {
      "additions": 3,
      "body": "# problem statement\n\n`live` replication and changes listeners don't generally emit `complete` events, but do if they've been cancelled.  this is undocumented.\n# solution\n\ndocument it!\n# discussion\n\ncloses https://github.com/pouchdb/express-pouchdb/issues/316\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-08-21T23:50:06Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0ODIxMjEyMjU=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3MTQwNzQ=",
        "nameWithOwner": "pouchdb/pouchdb"
      },
      "state": "CLOSED",
      "title": "docs: live replication complete event",
      "url": "https://github.com/pouchdb/pouchdb/pull/5588"
    },
    "MDExOlB1bGxSZXF1ZXN0ODIzMTQ5ODQ=": {
      "additions": 8,
      "body": "# problem statement\n- it's dead\n# solution\n- revive it!\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-08-23T07:23:01Z",
      "deletions": 15,
      "id": "MDExOlB1bGxSZXF1ZXN0ODIzMTQ5ODQ=",
      "mergedAt": "2016-08-23T18:26:31Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MDAyMTQ1MA==",
        "nameWithOwner": "gr2m/spawn-pouchdb-server"
      },
      "state": "MERGED",
      "title": "de-unmaintain-ify",
      "url": "https://github.com/gr2m/spawn-pouchdb-server/pull/49"
    },
    "MDExOlB1bGxSZXF1ZXN0ODQzODE2NzA=": {
      "additions": 68,
      "body": "see #2 \n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2016-09-07T22:01:12Z",
      "deletions": 62,
      "id": "MDExOlB1bGxSZXF1ZXN0ODQzODE2NzA=",
      "mergedAt": "2016-09-07T22:01:17Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NzE2OTk1NQ==",
        "nameWithOwner": "cdaringe/front-end-challenge"
      },
      "state": "MERGED",
      "title": "Youngbob split challenge tooling",
      "url": "https://github.com/cdaringe/front-end-challenge/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0ODU2NTQ1NjU=": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-09-16T23:40:31Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0ODU2NTQ1NjU=",
      "mergedAt": "2017-01-31T23:18:44Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDY3NDY4OA==",
        "nameWithOwner": "akhikhl/gretty"
      },
      "state": "MERGED",
      "title": "Update README.md",
      "url": "https://github.com/akhikhl/gretty/pull/293"
    },
    "MDExOlB1bGxSZXF1ZXN0ODc1MjgwNDA=": {
      "additions": 4,
      "body": "# problem statement\n- master & the published version can come out of sync w/out CD configured\n- release tagging isn't formally a thing\n# solution\n\nin &-js, we have a convention that i like.  that is, no one ever manually runs `npm publish`.  rather, if you want to roll a minor, you run `npm run publish-minor`.  this does some biz rules enforcement, tags a GH release, and finally deploys to npm.\n# discussion\n\ni created a mismatch between master and our published source as described in #27.  :(  trying to do some corrective actions here!\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-09-30T16:47:18Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0ODc1MjgwNDA=",
      "mergedAt": "2016-10-06T01:15:27Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": ":art: robustify publish.",
      "url": "https://github.com/node-swig/swig-templates/pull/28"
    },
    "MDExOlB1bGxSZXF1ZXN0ODc1MzU4OTU=": {
      "additions": 574,
      "body": "# todo\n- [ ] fix `npm run docs`\n# problem statement\n- continuation of #24. coverage/docs are busted\n# solution\n- fix coverage, docs\n",
      "changedFiles": 35,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 10
      },
      "createdAt": "2016-09-30T17:41:17Z",
      "deletions": 1265,
      "id": "MDExOlB1bGxSZXF1ZXN0ODc1MzU4OTU=",
      "mergedAt": "2016-10-06T01:21:55Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "Docs",
      "url": "https://github.com/node-swig/swig-templates/pull/29"
    },
    "MDExOlB1bGxSZXF1ZXN0ODc3ODYzMTI=": {
      "additions": 1,
      "body": "# problem statement\n- which vulnerabilities are checked for is not immediately apparent, something `nsp` consumers may be interested in viewing.\n# solution\n- add link.\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-10-03T20:33:38Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0ODc3ODYzMTI=",
      "mergedAt": "2016-10-03T20:41:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODI3MzIwNg==",
        "nameWithOwner": "nodesecurity/nsp"
      },
      "state": "MERGED",
      "title": ":memo: add link to known vulns.",
      "url": "https://github.com/nodesecurity/nsp/pull/135"
    },
    "MDExOlB1bGxSZXF1ZXN0ODg3NTMzNzU=": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-10-11T00:32:12Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0ODg3NTMzNzU=",
      "mergedAt": "2016-10-11T10:43:36Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MzMxNTA1NA==",
        "nameWithOwner": "apparena/patterns"
      },
      "state": "MERGED",
      "title": ":bug: fix link to reach out of github.",
      "url": "https://github.com/apparena/patterns/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0ODg4Nzk0MjA=": {
      "additions": 14,
      "body": "# problem statement\n- gotta love docker!\n# solution\n- provide basic Dockerfile & instructions\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 11
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-10-11T17:53:01Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0ODg4Nzk0MjA=",
      "mergedAt": "2017-01-10T18:44:40Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MjM0MTA1OQ==",
        "nameWithOwner": "kkemple/greenkeeper-keeper"
      },
      "state": "MERGED",
      "title": ":art: dockerify.",
      "url": "https://github.com/kkemple/greenkeeper-keeper/pull/32"
    },
    "MDExOlB1bGxSZXF1ZXN0ODkxMzM0NDU=": {
      "additions": 45,
      "body": "# problem statement(s)\n- #1 identified some biz rules & opinions that don't play nicely with all projects\n- manually versioning stinks... let's try semantic-release!\n# solution\n- merge #1 via pulling in 5aba7be\n- install semantic-release (configure CI for it, too, of course)\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2016-10-13T04:02:43Z",
      "deletions": 23,
      "id": "MDExOlB1bGxSZXF1ZXN0ODkxMzM0NDU=",
      "mergedAt": "2016-10-13T04:05:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTgwODkwNQ==",
        "nameWithOwner": "cdaringe/ripcord"
      },
      "state": "MERGED",
      "title": "semantically release, merge #1",
      "url": "https://github.com/cdaringe/ripcord/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0ODkxMzQzMzY=": {
      "additions": 8,
      "body": "# problem statement\n- #2 didn't actually do all the great work it was intended to! semantic release... wasn't really happening\n# solution\n- make her buck\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-10-13T04:16:44Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0ODkxMzQzMzY=",
      "mergedAt": "2016-10-13T04:16:59Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTgwODkwNQ==",
        "nameWithOwner": "cdaringe/ripcord"
      },
      "state": "MERGED",
      "title": "fix(package): semantic-release config.",
      "url": "https://github.com/cdaringe/ripcord/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0OTA0NjM0MzQ=": {
      "additions": 47,
      "body": "# problem statement\n- i need more fields from my package.json when doing dep reports than reported by default\n# solution\n- permit specifying `extraFields` \n# discussion\n- please feel free to rename `extraFields` any way seen fit. not attached to the API name, just the functionality\n- _great code_ guys.  seriously, excellent work.  very readable.  i was able to get in and get out no problem.  some API docs or doc blocks _could_ be handy, but thank you regardless :)  the `deps.js` file methods are pretty long and could be broken up some, but hey, 👍 \n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2016-10-22T00:37:26Z",
      "deletions": 11,
      "id": "MDExOlB1bGxSZXF1ZXN0OTA0NjM0MzQ=",
      "mergedAt": "2016-10-24T16:38:06Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDEwODYxOA==",
        "nameWithOwner": "snyk/resolve-deps"
      },
      "state": "MERGED",
      "title": "permit pkg.json extra field extraction",
      "url": "https://github.com/snyk/resolve-deps/pull/25"
    },
    "MDExOlB1bGxSZXF1ZXN0OTEwODczMjI=": {
      "additions": 35,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-10-26T21:00:06Z",
      "deletions": 40,
      "id": "MDExOlB1bGxSZXF1ZXN0OTEwODczMjI=",
      "mergedAt": "2016-10-26T21:00:40Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTgwODkwNQ==",
        "nameWithOwner": "cdaringe/ripcord"
      },
      "state": "MERGED",
      "title": "fix(sync): handle package versions",
      "url": "https://github.com/cdaringe/ripcord/pull/17"
    },
    "MDExOlB1bGxSZXF1ZXN0OTE3MDc1MjU=": {
      "additions": 5,
      "body": "# problem statement\r\n\r\n- i needed to resolve the jsdoc bin as well\r\n\r\n# solution\r\n\r\n- i abstracted it into a separate pkg\r\n\r\n# discussion\r\n\r\n- there were some missing edge cases (i.e. if an invalid root dir was provided, if no dir was found at all) that are now implemented and tested (cross platform!)",
      "changedFiles": 2,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-10-31T23:04:57Z",
      "deletions": 39,
      "id": "MDExOlB1bGxSZXF1ZXN0OTE3MDc1MjU=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMTQ0Mzc5Nw==",
        "nameWithOwner": "mrjoelkemp/jsdoc3-parser"
      },
      "state": "CLOSED",
      "title": "feat(pkg): use resolve-jsdoc-bin",
      "url": "https://github.com/mrjoelkemp/jsdoc3-parser/pull/10"
    },
    "MDExOlB1bGxSZXF1ZXN0OTQyODU4NTk=": {
      "additions": 5,
      "body": "# problem statements\r\n\r\n- lots of unused deps are declared in common\r\n- i want to use `Base` in a different project knowing the `joi` i use is the same that `joi` that common will use\r\n\r\n# solution\r\n\r\n- tidy deps\r\n- expose `joi`",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2016-11-18T01:16:06Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0OTQyODU4NTk=",
      "mergedAt": "2016-11-18T01:30:12Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MjQ5NzkwOQ==",
        "nameWithOwner": "trendscenter/coinstac"
      },
      "state": "MERGED",
      "title": "Feature/common tidy",
      "url": "https://github.com/trendscenter/coinstac/pull/99"
    },
    "MDExOlB1bGxSZXF1ZXN0OTU0MzEwNDQ=": {
      "additions": 1,
      "body": "Reverts cdaringe/ripcord#38",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-11-28T02:54:07Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0OTU0MzEwNDQ=",
      "mergedAt": "2016-11-28T02:54:12Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTgwODkwNQ==",
        "nameWithOwner": "cdaringe/ripcord"
      },
      "state": "MERGED",
      "title": "Revert \"Update perish to version 1.0.0 🚀\"",
      "url": "https://github.com/cdaringe/ripcord/pull/40"
    },
    "MDExOlB1bGxSZXF1ZXN0OTYxOTQxODU=": {
      "additions": 4740,
      "body": "",
      "changedFiles": 77,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 8
      },
      "createdAt": "2016-12-01T23:42:11Z",
      "deletions": 1512,
      "id": "MDExOlB1bGxSZXF1ZXN0OTYxOTQxODU=",
      "mergedAt": "2016-12-02T01:02:38Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTgwODkwNQ==",
        "nameWithOwner": "cdaringe/ripcord"
      },
      "state": "MERGED",
      "title": "Feature/ui reporting",
      "url": "https://github.com/cdaringe/ripcord/pull/53"
    },
    "MDExOlB1bGxSZXF1ZXN0OTYyMDI3ODA=": {
      "additions": 1512,
      "body": "Reverts cdaringe/ripcord#53",
      "changedFiles": 77,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-12-02T01:03:25Z",
      "deletions": 4740,
      "id": "MDExOlB1bGxSZXF1ZXN0OTYyMDI3ODA=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTgwODkwNQ==",
        "nameWithOwner": "cdaringe/ripcord"
      },
      "state": "CLOSED",
      "title": "Revert \"Feature/ui reporting\"",
      "url": "https://github.com/cdaringe/ripcord/pull/54"
    },
    "MDExOlB1bGxSZXF1ZXN0OTYzODE4Mjk=": {
      "additions": 15,
      "body": "# problem statement\r\n\r\ni use `only` with grids, and depending on the screen size, I decide whether to render my vertical menu or my horizontal menu.  because i do my side menu with `only='large screen'`, i want to programmatically ensure I include all other sizes in the mobile menu.\r\n\r\n# solution\r\n\r\nexpose the only set, such that i can slice it between all available screen sizes with tight coupling.\r\n\r\n## discussion\r\n\r\ni'm not 100% sure how the sizes in `only` relate to one another.  not sure if `widescreen` could apply in both `mobile` and `computer` scenarios? this PR may be void if they aren't truly a size stepped set.",
      "changedFiles": 5,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2016-12-03T01:57:11Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0OTYzODE4Mjk=",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNzczNDIyNg==",
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      },
      "state": "CLOSED",
      "title": "feat(Grid): expose only enum",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/979"
    },
    "MDExOlB1bGxSZXF1ZXN0MTAwNTUxNTIz": {
      "additions": 105,
      "body": "# problem statement\r\n\r\n- `react-scripts` does not offer ready-to-roll jest debugging.\r\n\r\n# solution \r\n\r\n- add it!\r\n  - i selected a natural model where `--debug-brk` and `debug` are working flags passed to `npm test`.  that is `npm test -- --debug-brk` works.  i think this is a nice entry point into the system.\r\n  - auto-handle other flags that need to be massaged to make debugging work.  that is, disable watch and enable runInBand\r\n\r\n![debug-react-scripts mov](https://cloud.githubusercontent.com/assets/1003261/21738111/20de177a-d435-11e6-965a-51afe9f8434e.gif)\r\n\r\ncloses #594 \r\n",
      "changedFiles": 10,
      "comments": {
        "totalCount": 24
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-01-07T01:11:26Z",
      "deletions": 29,
      "id": "MDExOlB1bGxSZXF1ZXN0MTAwNTUxNTIz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MzUzNzI0OQ==",
        "nameWithOwner": "facebook/create-react-app"
      },
      "state": "CLOSED",
      "title": "feature/add-first-class-debugging-support-for-tests",
      "url": "https://github.com/facebook/create-react-app/pull/1360"
    },
    "MDExOlB1bGxSZXF1ZXN0MTAyMDA2MDc0": {
      "additions": 18,
      "body": "# problem statement\r\n\r\n- there are various PRs & issues discussing es6 support & js polyfills. in the current state, it is unclear where create-react-app stands in regards to support for these es6 features.\r\n\r\n# solution\r\n\r\n- document our current state\r\n\r\nref: https://github.com/facebookincubator/create-react-app/issues/1104#issuecomment-272011266",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-01-18T06:13:56Z",
      "deletions": 8,
      "id": "MDExOlB1bGxSZXF1ZXN0MTAyMDA2MDc0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MzUzNzI0OQ==",
        "nameWithOwner": "facebook/create-react-app"
      },
      "state": "CLOSED",
      "title": ":memo: Clarify ES6 & Polyfill support",
      "url": "https://github.com/facebook/create-react-app/pull/1404"
    },
    "MDExOlB1bGxSZXF1ZXN0MTAzNjU5NTIz": {
      "additions": 2,
      "body": "# problem statement\r\n\r\n- usage xref can ease user search\r\n\r\n# solution\r\n\r\n- add xref",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-01-29T20:50:26Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTAzNjU5NTIz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjAzMTQwNA==",
        "nameWithOwner": "hapijs/good-console"
      },
      "state": "CLOSED",
      "title": ":memo: add example reference. closes #82",
      "url": "https://github.com/hapijs/good-console/pull/83"
    },
    "MDExOlB1bGxSZXF1ZXN0MTAzODIzNDgw": {
      "additions": 7,
      "body": "# problem statement\r\n\r\n- ~dux~ ducks doesn't provision a practice on where to land side effects, which effect most web applications\r\n\r\n# solution\r\n\r\n- include a provision for side effects",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-01-30T21:26:30Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTAzODIzNDgw",
      "mergedAt": "2017-05-04T19:45:09Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MTY3NjAwNg==",
        "nameWithOwner": "erikras/ducks-modular-redux"
      },
      "state": "MERGED",
      "title": ":memo: include side effects in proposal",
      "url": "https://github.com/erikras/ducks-modular-redux/pull/50"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA0OTI0ODk4": {
      "additions": 1,
      "body": "# problem statement\r\n\r\n- no relatable toilet\r\n\r\n# solution\r\n\r\n- add friendly toilet",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-02-07T02:28:09Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA0OTI0ODk4",
      "mergedAt": "2017-05-16T22:24:50Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4MDY4NDA4Nw==",
        "nameWithOwner": "max-mapper/toiletdb"
      },
      "state": "MERGED",
      "title": ":toilet: toiletify. closes #6",
      "url": "https://github.com/max-mapper/toiletdb/pull/7"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA2NDIxNjYw": {
      "additions": 12862,
      "body": "## WIP\r\n\r\n- [ ] **PR for alpha review only**\r\n",
      "changedFiles": 312,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 20
      },
      "createdAt": "2017-02-15T23:17:37Z",
      "deletions": 37265,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA2NDIxNjYw",
      "mergedAt": "2017-02-18T19:29:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(stories): add initial components and scaffolding for import from…",
      "url": "https://github.com/Tripwire/octagon/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA2ODAyMzQw": {
      "additions": 2,
      "body": "# problem statement\r\n\r\n- some dirs arent lint covered\r\n- a story is bogus\r\n<!--\r\n- X behaves this way, which breaks Y\r\n-->\r\n\r\n# solution\r\n\r\n- increase lint scope\r\n- drop story\r\n<!--\r\n- decouple X & Y\r\n- make Y a standalone component, etc\r\n-->\r\n\r\n@joshsleeper @jhegg, looking for +1 here\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2017-02-17T20:02:58Z",
      "deletions": 72,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODAyMzQw",
      "mergedAt": "2017-02-18T00:09:51Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "Tidy/pkg",
      "url": "https://github.com/Tripwire/octagon/pull/7"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA2ODM5NjI1": {
      "additions": 189,
      "body": "# problem statement\r\n\r\n- scripts are injected into the pkg at install time\r\n<!--\r\n- X behaves this way, which breaks Y\r\n-->\r\n\r\n# solution\r\n\r\n- only use the precommit rule _for now!_  prevents script injection.\r\n<!--\r\n- decouple X & Y\r\n- make Y a standalone component, etc\r\n-->\r\n\r\n@jhegg @eddier \r\ncloses #10 ",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2017-02-18T01:01:08Z",
      "deletions": 132,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODM5NjI1",
      "mergedAt": "2017-02-18T20:03:49Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(pkg): limit ripcord rules",
      "url": "https://github.com/Tripwire/octagon/pull/11"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA3OTM1MTM4": {
      "additions": 575,
      "body": "# problem statement\r\n\r\nrequireg doesnt work everywhere\r\n\r\n# solution\r\n\r\nuse npm directly",
      "changedFiles": 31,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2017-02-25T00:36:51Z",
      "deletions": 146,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA3OTM1MTM4",
      "mergedAt": "2017-02-25T00:39:21Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTgwODkwNQ==",
        "nameWithOwner": "cdaringe/ripcord"
      },
      "state": "MERGED",
      "title": "fix(pkg): drop requireg, add npm client",
      "url": "https://github.com/cdaringe/ripcord/pull/84"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA3OTk2MjA5": {
      "additions": 171,
      "body": "",
      "changedFiles": 4,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2017-02-26T08:41:11Z",
      "deletions": 36,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA3OTk2MjA5",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4MjUwNjMyMg==",
        "nameWithOwner": "dino-dna/tagadactyl"
      },
      "state": "OPEN",
      "title": "<wip> feature groups",
      "url": "https://github.com/dino-dna/tagadactyl/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA4NTk5Mjk2": {
      "additions": 5016,
      "body": "# problem statement\r\n\r\n<!--\r\n- X behaves this way, which breaks Y\r\n-->\r\n\r\n# solution\r\n\r\n<!--\r\n- decouple X & Y\r\n- make Y a standalone component, etc\r\n-->\r\n\r\n# discussion\r\n\r\n<!--\r\n- here's a GIF of X revamped\r\n- here's a GIF of Y revamped\r\n-->\r\n\r\n<!--\r\n// here's a handy bash function to load into your shell profile so you can convert\r\n// screen recordings to animated GIFs!\r\n// movToGif my-screen-recording.mov ==> my-screen-recording.mov.gif\r\nfunction movToGif() {\r\n  `ffmpeg -i $1 -pix_fmt rgb24 -r 5 -f gif - | gifsicle --optimize=4 --delay=20 > $1.gif`;\r\n}\r\n-->\r\n",
      "changedFiles": 208,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 21
      },
      "createdAt": "2017-03-01T18:26:32Z",
      "deletions": 3275,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA4NTk5Mjk2",
      "mergedAt": "2017-03-08T18:42:31Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "Styleguide",
      "url": "https://github.com/Tripwire/octagon/pull/21"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA5MDc0NTc3": {
      "additions": 0,
      "body": "# problem statement\r\n\r\n- fonts were not resolving\r\n\r\n# solution\r\n\r\n- drop duplicate font ref.  `elegant` is already in `site.overrides`\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-03-03T23:12:41Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA5MDc0NTc3",
      "mergedAt": "2017-03-03T23:26:17Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(fonts): drop dupelicate font ref",
      "url": "https://github.com/Tripwire/octagon/pull/29"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA5MDg2MDMw": {
      "additions": 1,
      "body": "# problem statement\r\n\r\n- some assets got left behind in #25\r\n- some site.overrides aren't used globally, but instead exist to serve octagon native components\r\n\r\n# solution\r\n\r\n- remove assets\r\n- remove duplicate css (in site.overrides)",
      "changedFiles": 5,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-03-04T01:21:38Z",
      "deletions": 1346,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA5MDg2MDMw",
      "mergedAt": "2017-03-08T18:42:31Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "chore(styles): remove unused & duplicate styles",
      "url": "https://github.com/Tripwire/octagon/pull/31"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA5MzU4NDcx": {
      "additions": 842,
      "body": "# discussion\r\n\r\nPR staged just for discussion purposes",
      "changedFiles": 19,
      "comments": {
        "totalCount": 10
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2017-03-06T21:58:31Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA5MzU4NDcx",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "CLOSED",
      "title": "<wip> microcard feeback",
      "url": "https://github.com/Tripwire/octagon/pull/32"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA5Nzk3NjQ3": {
      "additions": 1216,
      "body": "# status\r\n\r\n- pending resolution of garris/BackstopJS#313\r\n\r\n# problem statement\r\n\r\n- https://github.com/Tripwire/octagon/issues/17\r\n\r\n# solution\r\n\r\n- add test framework and baselines\r\n\r\n# discussion\r\n\r\nphantomjs is the only renderer.  bummer, but possibly good enough for now.  other strategies are moderately more complicated.  we may need to pursue a different strategy, but this is a noble 1st attempt",
      "changedFiles": 53,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2017-03-08T22:20:38Z",
      "deletions": 613,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA5Nzk3NjQ3",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "CLOSED",
      "title": "Feature/testing",
      "url": "https://github.com/Tripwire/octagon/pull/37"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA5ODAyODU5": {
      "additions": 436,
      "body": "# problem statement\r\n\r\n- storybook builds are biffing from the ci service :(\r\n- gh-pages builds are whack\r\n\r\n# solution\r\n\r\n- ~apply guess n check commits in desperate attempt to recover them.~\r\n- ditch storybook entirely\r\n- have wa11-e run https://github.com/cdaringe/surge-review in CI, publishing styleguidist\r\n",
      "changedFiles": 16,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2017-03-08T22:51:28Z",
      "deletions": 1128,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA5ODAyODU5",
      "mergedAt": "2017-03-10T16:41:30Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "chore(pkg): kick storybook",
      "url": "https://github.com/Tripwire/octagon/pull/38"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA5ODEzODY1": {
      "additions": 1,
      "body": "# testing netlify\r\n\r\n# do not merge",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-03-09T00:13:36Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA5ODEzODY1",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NDUyMTE2OQ==",
        "nameWithOwner": "dino-dna/donut"
      },
      "state": "CLOSED",
      "title": "docs(Donut): dummy change",
      "url": "https://github.com/dino-dna/donut/pull/72"
    },
    "MDExOlB1bGxSZXF1ZXN0MTA5OTY5MDgx": {
      "additions": 3216,
      "body": "# test",
      "changedFiles": 14,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2017-03-09T17:48:40Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTA5OTY5MDgx",
      "mergedAt": "2017-03-09T21:51:42Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4NDM4Nzc5Mg==",
        "nameWithOwner": "cdaringe/surge-review"
      },
      "state": "MERGED",
      "title": "stage",
      "url": "https://github.com/cdaringe/surge-review/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MTEwMDI2Njgx": {
      "additions": 1080,
      "body": "",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-03-09T23:09:01Z",
      "deletions": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0MTEwMDI2Njgx",
      "mergedAt": "2017-03-09T23:09:05Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4NDM4Nzc5Mg==",
        "nameWithOwner": "cdaringe/surge-review"
      },
      "state": "MERGED",
      "title": "fix(pkg): add sem rel",
      "url": "https://github.com/cdaringe/surge-review/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0MTEwMDc3Mjc4": {
      "additions": 2,
      "body": "# problem statements\r\n\r\n- `token` isnt displayed in `surge -h`\r\n- `token` is displayed twice on `surge token`\r\n\r\n# solution\r\n\r\n- show token in `-h` call\r\n- drop `****` token from `surge token` call\r\n\r\n## discussion\r\n\r\n```\r\n    Surge - surge.sh\r\n\r\n              email: <user>\r\n              token: *****************\r\n              token:<mytoken>\r\n```\r\n\r\nto\r\n\r\n```\r\n    Surge - surge.sh\r\n\r\n              email: <user>\r\n              token: <mytoken>\r\n```\r\nmay not be entirely obvious from dropping the `auth` call in the `token` cmd\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-03-10T07:49:32Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTEwMDc3Mjc4",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjI4Mjc4Ng==",
        "nameWithOwner": "sintaxi/surge"
      },
      "state": "OPEN",
      "title": "fix(cli): token usage",
      "url": "https://github.com/sintaxi/surge/pull/253"
    },
    "MDExOlB1bGxSZXF1ZXN0MTEwMTcwODM3": {
      "additions": 8,
      "body": "# problem statement\r\n\r\n- see #9\r\n\r\n# solution\r\n\r\n- normal standard is jsx friendly. use blacklisting vs whitelisting\r\n\r\n# discussion\r\n\r\nnow that its fixed, it caught a few non conforming files, hence the additional changed files",
      "changedFiles": 6,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-03-10T17:13:59Z",
      "deletions": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0MTEwMTcwODM3",
      "mergedAt": "2017-03-13T18:36:48Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(pkg): lint. closes #9",
      "url": "https://github.com/Tripwire/octagon/pull/40"
    },
    "MDExOlB1bGxSZXF1ZXN0MTEwMjA3OTI4": {
      "additions": 37,
      "body": "# problem statement\r\n\r\n- we've churned a lot in the past 2 weeks.  docs are stale.  see #36 \r\n\r\n# solution\r\n\r\n- update docs & doc related thingies.",
      "changedFiles": 6,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2017-03-10T20:57:21Z",
      "deletions": 66,
      "id": "MDExOlB1bGxSZXF1ZXN0MTEwMjA3OTI4",
      "mergedAt": "2017-03-13T18:49:45Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "Docs",
      "url": "https://github.com/Tripwire/octagon/pull/41"
    },
    "MDExOlB1bGxSZXF1ZXN0MTEwNTM1MTIw": {
      "additions": 1090,
      "body": "",
      "changedFiles": 9,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2017-03-14T02:13:11Z",
      "deletions": 693,
      "id": "MDExOlB1bGxSZXF1ZXN0MTEwNTM1MTIw",
      "mergedAt": "2017-03-14T02:13:19Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4NDI1MjQxOQ==",
        "nameWithOwner": "cdaringe/browser-csrf"
      },
      "state": "MERGED",
      "title": "Testem",
      "url": "https://github.com/cdaringe/browser-csrf/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MTE0NjkxMjY2": {
      "additions": 8,
      "body": "<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\nAdd publish retry docs.\r\n\r\n## Motivation and Context\r\n\r\nPublish fails all of the time for me, for reasons not yet investigated.  I use `--force-publish`.\r\n\r\n## How Has This Been Tested?\r\nn/a\r\n\r\n## Types of changes\r\ndocs.\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-04-06T20:45:39Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTE0NjkxMjY2",
      "mergedAt": "2017-04-06T21:04:21Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0NzM5NDc3Ng==",
        "nameWithOwner": "lerna/lerna"
      },
      "state": "MERGED",
      "title": "Update FAQ.md",
      "url": "https://github.com/lerna/lerna/pull/736"
    },
    "MDExOlB1bGxSZXF1ZXN0MTE0NzQxNjQx": {
      "additions": 2482,
      "body": "# problem statement\r\n\r\nwe have no tests!\r\n\r\n# solution\r\n\r\nadd tests!\r\n\r\n# discussion\r\n\r\ntbd",
      "changedFiles": 69,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2017-04-07T04:27:07Z",
      "deletions": 870,
      "id": "MDExOlB1bGxSZXF1ZXN0MTE0NzQxNjQx",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "CLOSED",
      "title": "feat(test): testing implementation",
      "url": "https://github.com/Tripwire/octagon/pull/68"
    },
    "MDExOlB1bGxSZXF1ZXN0MTE4MTA2MjQy": {
      "additions": 109,
      "body": "continuation of #1360. re-implemented per code review remarks, and conflicts resolved.  needs 👀 re-review :).\r\n\r\n# problem statement\r\n\r\n- `react-scripts` does not offer ready-to-roll jest debugging.\r\n\r\n# solution \r\n\r\n- add it!\r\n\r\n![debug-react-scripts mov](https://cloud.githubusercontent.com/assets/1003261/21738111/20de177a-d435-11e6-965a-51afe9f8434e.gif)\r\n\r\ncloses #594 \r\n\r\n# test\r\n\r\n- checkout this feature branch\r\n- `/path/to/this/branch/create-react-app/bin/create-react-app dummy-app`\r\n- cd `dummy-app`\r\n- modify `npm test` to add a debug flag ^^\r\n- tell your editor to honor source maps\r\n- `npm test`\r\n- connect the remote debugger\r\n- go.\r\n",
      "changedFiles": 6,
      "comments": {
        "totalCount": 29
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2017-04-28T08:46:52Z",
      "deletions": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0MTE4MTA2MjQy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MzUzNzI0OQ==",
        "nameWithOwner": "facebook/create-react-app"
      },
      "state": "CLOSED",
      "title": ":art: add first class debugging support",
      "url": "https://github.com/facebook/create-react-app/pull/2041"
    },
    "MDExOlB1bGxSZXF1ZXN0MTE5NTkzNDY5": {
      "additions": 4,
      "body": "# problem statement\r\n\r\ndocker image un-runnable after `docker build .` cmd\r\n\r\n# solution\r\n\r\npatch.",
      "changedFiles": 2,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2017-05-09T06:45:16Z",
      "deletions": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0MTE5NTkzNDY5",
      "mergedAt": "2017-05-09T19:34:22Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3OTA2NjA2Ng==",
        "nameWithOwner": "greenkeeper-keeper/reference-instance"
      },
      "state": "MERGED",
      "title": "fix(Docker): transpile onbuild",
      "url": "https://github.com/greenkeeper-keeper/reference-instance/pull/48"
    },
    "MDExOlB1bGxSZXF1ZXN0MTIwNDU5NTY1": {
      "additions": 325,
      "body": "**Summary**\r\n\r\n# problem statement\r\n\r\n- yarn@24 bundles the CLI, removing entry points & usability from the tool.\r\n  - for instance, i wrote [parse-yarn-lock](https://www.npmjs.com/package/parse-yarn-lock), which (used to) use `yarn`'s very own [lockfile parser](https://github.com/yarnpkg/yarn/blob/master/src/lockfile/parse.js), to be used for a variety of reasons.  in version 24, the parser is now bundled, and cut off from external access.\r\n\r\n<!-- Is the feature a substantial feature request? Please use https://github.com/yarnpkg/rfcs -->\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\nIn my described use case, it is logical to use the _very same parser_ rather than an independent parser.  There's no value in duplicate tooling, and integrity/quality of the operation can suffer if using an alternative.  Some may challenge that exposing such functionality is out of scope for this project.  However, I would argue that exposing internals is a big enabler and comes with a very low cost + cost-of-ownership.\r\n\r\n# solution\r\n\r\n- incrementally expose some internal APIs so `yarn` can be used programmatically.  `YARN_AS_LIB` tells the entry point to expose the library by default, vs executing the CLI.\r\n\r\n**Test plan**\r\n\r\n- an integration test could be done to call into the library from a shell, although im not seeing such test code in `__tests__` ATM, and i figured core maintainers would have a preference on how to execute such a test.\r\n\r\n# review\r\n\r\n**review with `?w=1` in the URL such that github more cleanly displays the very few changes.  https://github.com/yarnpkg/yarn/pull/3397/files?w=1**\r\n\r\n![yarn-as-lib mov](https://cloud.githubusercontent.com/assets/1003261/26028300/7a7053ec-37d2-11e7-81c7-ba70561c39bc.gif)\r\n\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 11
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-05-13T19:03:13Z",
      "deletions": 306,
      "id": "MDExOlB1bGxSZXF1ZXN0MTIwNDU5NTY1",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0OTk3MDY0Mg==",
        "nameWithOwner": "yarnpkg/yarn"
      },
      "state": "CLOSED",
      "title": "feat-fix(pkg): restore partial export of internal APIs",
      "url": "https://github.com/yarnpkg/yarn/pull/3397"
    },
    "MDExOlB1bGxSZXF1ZXN0MTIxMzQxNTkx": {
      "additions": 5,
      "body": "# problem statement\r\n\r\nci is quiet on sem-rel\r\n\r\n# solution\r\n\r\nmake it noisy",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-05-18T17:52:36Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTIxMzQxNTkx",
      "mergedAt": "2017-05-18T17:53:09Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(ci): add publish verbosity",
      "url": "https://github.com/Tripwire/octagon/pull/95"
    },
    "MDExOlB1bGxSZXF1ZXN0MTIxNjQ0NDA0": {
      "additions": 1,
      "body": "# problem statement\r\n\r\nwe bundle Lato locally, but pat noticed that the theme is also configured to pull in google fonts.\r\n\r\n<!--\r\n- X behaves this way, which breaks Y\r\n-->\r\n\r\n# solution\r\n\r\ndrop google fonts\r\n<!--\r\n- decouple X & Y\r\n- make Y a standalone component, etc\r\n-->\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-05-21T01:34:16Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTIxNjQ0NDA0",
      "mergedAt": "2017-05-21T01:43:43Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(theme): drop dupe Lato font assets",
      "url": "https://github.com/Tripwire/octagon/pull/96"
    },
    "MDExOlB1bGxSZXF1ZXN0MTI0MzMyMTE2": {
      "additions": 20,
      "body": "# problem statement\r\n\r\n- some liquibase changelogs use relative paths to include changesets.  these include statements do not always use the liquibase properties for specifying to use relative paths.  instead, they rely on liquibase being run from a specific dir.  the current image does not support running liquibase from a specified dir.\r\n\r\n# solution\r\n\r\nsupport a user provided `pwd`!\r\n\r\n# testing?\r\n\r\ni tested it :), works great\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-06-07T04:00:49Z",
      "deletions": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI0MzMyMTE2",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1Mjg3MTU1Mw==",
        "nameWithOwner": "beresfordt/pg-liquibase-update"
      },
      "state": "OPEN",
      "title": "feature/support-working-dir",
      "url": "https://github.com/beresfordt/pg-liquibase-update/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MTI3ODExNDA0": {
      "additions": 20,
      "body": "# do not merge\r\n\r\nsee #103 . just hacking/adding here to see CI results from #103",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2017-06-27T23:05:21Z",
      "deletions": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI3ODExNDA0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "CLOSED",
      "title": "Andrewleyva remove twnamespace css",
      "url": "https://github.com/Tripwire/octagon/pull/104"
    },
    "MDExOlB1bGxSZXF1ZXN0MTI5ODIwOTUx": {
      "additions": 2298,
      "body": "# problem statement\r\n\r\n- no browser support\r\n\r\n# solution\r\n\r\n- add browser support\r\n\r\n# discussion\r\n\r\n- `cron-parser` has already done the work to be browser friendly\r\n- no logic has changed in the lib. changes include:\r\n  - transpiling to ES5 to be browser friendly\r\n  - run the tests in phantomjs + all available browsers on the system\r\n    - node tests remain unchanged!  simply add running the tests in browser in _parallel_. woo hoo",
      "changedFiles": 7,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-07-11T04:21:22Z",
      "deletions": 65,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI5ODIwOTUx",
      "mergedAt": "2018-01-26T14:20:27Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMjg5NzI1Nw==",
        "nameWithOwner": "tfmalt/node-cron-emitter"
      },
      "state": "MERGED",
      "title": "feat(pkg): support browsers",
      "url": "https://github.com/tfmalt/node-cron-emitter/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0MTMyMTQ0NTkw": {
      "additions": 1,
      "body": "# problem statement\r\n\r\n- attempting to use `Radio` fails!\r\n\r\n# solution\r\n\r\n- fix import path\r\n\r\n# discussion\r\n\r\n```\r\n$ tree node_modules/semantic-ui-react/dist/commonjs/addons/Radio/\r\nnode_modules/semantic-ui-react/dist/commonjs/addons/Radio/\r\n├── Radio.d.ts\r\n├── Radio.js\r\n├── index.d.ts\r\n└── index.js\r\n\r\n0 directories, 4 files\r\n```",
      "changedFiles": 1,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-07-24T21:03:01Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTMyMTQ0NTkw",
      "mergedAt": "2017-07-24T21:16:54Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(Radio): patch broken export",
      "url": "https://github.com/Tripwire/octagon/pull/105"
    },
    "MDExOlB1bGxSZXF1ZXN0MTMyMTcyMTIy": {
      "additions": 10,
      "body": "BREAKING CHANGE: buttons are now spaced wider apart from one another\r\n(.25em to .5em)\r\n\r\n# problem statement\r\n\r\n- @yung wants wider spacing between buttons\r\n\r\n# solution\r\n\r\n- space'em out",
      "changedFiles": 2,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-07-25T00:19:19Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTMyMTcyMTIy",
      "mergedAt": "2017-07-25T22:35:09Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(Buttons): space adjacent button",
      "url": "https://github.com/Tripwire/octagon/pull/106"
    },
    "MDExOlB1bGxSZXF1ZXN0MTMyMzk0OTkz": {
      "additions": 47,
      "body": "# problem statement\r\n\r\n- i need some library components!\r\n\r\n# solution\r\n\r\n- bring 'em in!\r\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-07-25T22:36:57Z",
      "deletions": 50,
      "id": "MDExOlB1bGxSZXF1ZXN0MTMyMzk0OTkz",
      "mergedAt": "2017-07-25T22:37:28Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(SUIR): expose additional SUIR components",
      "url": "https://github.com/Tripwire/octagon/pull/107"
    },
    "MDExOlB1bGxSZXF1ZXN0MTMyODY4NzY1": {
      "additions": 20,
      "body": "Please see #103 ",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-07-27T23:46:01Z",
      "deletions": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0MTMyODY4NzY1",
      "mergedAt": "2017-07-27T23:46:45Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(button): removed 'tripwire' from styles and markup and tweaked st…",
      "url": "https://github.com/Tripwire/octagon/pull/109"
    },
    "MDExOlB1bGxSZXF1ZXN0MTMzMDU5NTMz": {
      "additions": 59,
      "body": "BREAKING CHANGE: Primary & default button colors and spacing all modified.  Please adjust\r\naccordingly.\r\n\r\n# problem statement\r\n\r\n- Connect team wants some style tweaks to the theme.\r\n\r\n# solution\r\n\r\n- tweak buttons!\r\n\r\n# discussion\r\n\r\n- please review the Buttons section when the styleguide publishes",
      "changedFiles": 4,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-07-28T21:58:47Z",
      "deletions": 26,
      "id": "MDExOlB1bGxSZXF1ZXN0MTMzMDU5NTMz",
      "mergedAt": "2017-07-28T23:08:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(Button): hack button spacing & colors to be Connect friendly",
      "url": "https://github.com/Tripwire/octagon/pull/110"
    },
    "MDExOlB1bGxSZXF1ZXN0MTM0NTE3NjIy": {
      "additions": 606,
      "body": "# problem statement\r\n\r\n- i'm observing some inconsistencies w/ SUIR latest trying to render an icon w/in an input field.\r\n\r\n# solution\r\n\r\n- take a shot in the dark by upgrading the things\r\n",
      "changedFiles": 137,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2017-08-07T20:16:06Z",
      "deletions": 96,
      "id": "MDExOlB1bGxSZXF1ZXN0MTM0NTE3NjIy",
      "mergedAt": "2017-08-08T05:07:21Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(pkg): bump-essential-deps",
      "url": "https://github.com/Tripwire/octagon/pull/111"
    },
    "MDExOlB1bGxSZXF1ZXN0MTM4NzYwNDQz": {
      "additions": 78,
      "body": "# problem statement\r\n\r\nwe need `Label`s\r\n\r\n# solution\r\n\r\nadd 'em\r\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2017-08-31T20:36:27Z",
      "deletions": 371,
      "id": "MDExOlB1bGxSZXF1ZXN0MTM4NzYwNDQz",
      "mergedAt": "2017-08-31T21:21:06Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "Feat/export label",
      "url": "https://github.com/Tripwire/octagon/pull/116"
    },
    "MDExOlB1bGxSZXF1ZXN0MTM4ODE2MTU5": {
      "additions": 39,
      "body": "Fixes #2034.\r\n\r\n# problem statement\r\n\r\n- enable closing Popop `onclick`\r\n  - see #2034\r\n\r\n# solution\r\n\r\n- add support as described in #2034 \r\n- add supporting test",
      "changedFiles": 5,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2017-09-01T05:04:38Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTM4ODE2MTU5",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNzczNDIyNg==",
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      },
      "state": "CLOSED",
      "title": "feat(Popup): add closeOnClickInside support",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/2037"
    },
    "MDExOlB1bGxSZXF1ZXN0MTM5NzE3ODI5": {
      "additions": 4748,
      "body": "# problem statement\r\n\r\n- no tests\r\n\r\n# solution\r\n\r\n- add tests\r\n\r\n# discussion\r\n\r\n- semantic upgraded just because i had cleared the lockfile when merging master ==> this ollld feature branch\r\n- ... then postcss was crapping out on my machine, so i upgraded major version upgraded, which caused the huge cascade of other upgrades\r\n  - truth be told, we want all of these things upgraded anyway, but it does make for a :rage1: terrible review :rage4:.  so here's to annotation",
      "changedFiles": 89,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 13
      },
      "createdAt": "2017-09-07T05:15:08Z",
      "deletions": 2725,
      "id": "MDExOlB1bGxSZXF1ZXN0MTM5NzE3ODI5",
      "mergedAt": "2017-09-07T16:04:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "Feature/testing",
      "url": "https://github.com/Tripwire/octagon/pull/118"
    },
    "MDExOlB1bGxSZXF1ZXN0MTQyODE2MjYx": {
      "additions": 1,
      "body": "# problem statement\r\n\r\n`userOpts` is not always provided by consumers within http adapter.\r\n\r\n# solution\r\n\r\nvalidate the lookup before assigning the default\r\n\r\n# discussion\r\n\r\ni cant believe i haven't hit this before!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-09-25T07:54:19Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQyODE2MjYx",
      "mergedAt": "2017-10-30T07:46:18Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3MTQwNzQ=",
        "nameWithOwner": "pouchdb/pouchdb"
      },
      "state": "MERGED",
      "title": "fix(http): prevent field lookup on undefined value",
      "url": "https://github.com/pouchdb/pouchdb/pull/6766"
    },
    "MDExOlB1bGxSZXF1ZXN0MTQ0MzQwNzg4": {
      "additions": 2,
      "body": "# problem statement\r\n\r\nimport statements are biffed\r\n\r\n# solution\r\n\r\npatch\r\n\r\n# discussion\r\n\r\nit's been a long while since i've been to reactabular.  looks like a lot has changed!  time to dig in",
      "changedFiles": 2,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-10-03T05:47:20Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ0MzQwNzg4",
      "mergedAt": "2017-10-03T09:39:16Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyOTQ4NjMwOQ==",
        "nameWithOwner": "reactabular/reactabular"
      },
      "state": "MERGED",
      "title": "docs(README): patch README import statements",
      "url": "https://github.com/reactabular/reactabular/pull/322"
    },
    "MDExOlB1bGxSZXF1ZXN0MTQ0ODExMjIx": {
      "additions": 106,
      "body": "# problem statement\r\n\r\n- theme doesn't allow colored buttons\r\n  - a negative button is not red, but has default colors\r\n  - a red button is part red, part blue\r\n\r\n# solution\r\n\r\n- remove most of the overrides\r\n- refactor the button theme to use our default button styles as... the default button styles\r\n- refine example set (expand goodies, drop redundants)\r\n\r\n# discussion\r\n\r\n- we've discussed this many times before ad-hoc, but i now have a stronger opinion on some of these color categories.  the theme gives us:\r\n\r\n1. default\r\n1. primary\r\n1. secondary\r\n1. positive\r\n1. negative\r\n\r\nwe had patched positive/negative to be blue/gray instead of green/red.  while that was ok for buttons, positive/negative has global variables which we squashed.  if we think other positive/negative things (like warnings/alerts/text/etc) also make sense to always be blue/gray, fine, however, i'd wager that most likely blue/gray doesn't have universal appeal for these contexts.\r\n\r\nwith that, i propose that we:\r\n\r\n1. dont use positive negative buttons at all, or\r\n1. use them, but use them w/ green reds\r\n\r\nand always use the more conventional primary/secondary/default buttons in most contexts\r\n\r\ni'll probably have to organize a meeting for this :).\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-10-05T01:22:09Z",
      "deletions": 239,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ0ODExMjIx",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "CLOSED",
      "title": "refactor(Button): make default button _actually_ default",
      "url": "https://github.com/Tripwire/octagon/pull/124"
    },
    "MDExOlB1bGxSZXF1ZXN0MTQ1MzY2MzUy": {
      "additions": 50,
      "body": "# problem\r\n\r\ndeps out of date (and the old version is causing a build failure w/ my build stack)\r\n\r\n# solution\r\n\r\nrev 'em!\r\n\r\n# discussion\r\n\r\nthe major bump shouldn't affect this package's usage, so a major shouldn't be required here.  see https://github.com/jessepollak/card/releases/tag/v2.0.0",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-10-09T02:28:24Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ1MzY2MzUy",
      "mergedAt": "2017-10-14T08:52:54Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyODI2NzYzMw==",
        "nameWithOwner": "gavruk/angular-card"
      },
      "state": "MERGED",
      "title": "feat(pkg): upgrade to latest card",
      "url": "https://github.com/gavruk/angular-card/pull/38"
    },
    "MDExOlB1bGxSZXF1ZXN0MTQ2NjMwNTQw": {
      "additions": 8514,
      "body": "# problem\r\n\r\nregressions would be cool\r\n\r\n# solution\r\n\r\nbasic xprocess wire in",
      "changedFiles": 12,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2017-10-15T02:12:48Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ2NjMwNTQw",
      "mergedAt": "2017-10-15T02:23:11Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NDUyMTE2OQ==",
        "nameWithOwner": "dino-dna/donut"
      },
      "state": "MERGED",
      "title": "Feat/regression",
      "url": "https://github.com/dino-dna/donut/pull/118"
    },
    "MDExOlB1bGxSZXF1ZXN0MTQ4MDEyNzAw": {
      "additions": 1070,
      "body": "# problem\r\n\r\n- need that donut rater\r\n\r\n# solution\r\n\r\n- port to `common`\r\n\r\n# discussion\r\n\r\n- includes a bunch of WIP regression garbage",
      "changedFiles": 16,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2017-10-22T20:45:33Z",
      "deletions": 3260,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ4MDEyNzAw",
      "mergedAt": "2017-10-22T23:05:00Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NDUyMTE2OQ==",
        "nameWithOwner": "dino-dna/donut"
      },
      "state": "MERGED",
      "title": "feat(common): add common pkg, explore scipy.optimize",
      "url": "https://github.com/dino-dna/donut/pull/121"
    },
    "MDExOlB1bGxSZXF1ZXN0MTQ5OTM2MDMx": {
      "additions": 3940,
      "body": "",
      "changedFiles": 5,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2017-11-01T00:08:53Z",
      "deletions": 90,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ5OTM2MDMx",
      "mergedAt": "2017-11-01T00:08:58Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NzE2OTk1NQ==",
        "nameWithOwner": "cdaringe/front-end-challenge"
      },
      "state": "MERGED",
      "title": "Redo",
      "url": "https://github.com/cdaringe/front-end-challenge/pull/15"
    },
    "MDExOlB1bGxSZXF1ZXN0MTUwNjIyMTA4": {
      "additions": 2186,
      "body": "# problem statement\r\n\r\n- @eddier had struggled with getting child component properties propagated to the styleguide.  the new version is much better about parsing all react components found, using `propTypes` and/or `JSDoc` to annotate components.\r\n\r\n# solution\r\n\r\n- upgrade styleguide\r\n\r\n# discussion\r\n\r\n- styleguide also got _much better_ about how we render examples.  we can make them more interactive now, too, which is great!  we have a ways to go, but this is seemingly a more and more capable tool.\r\n  - because of this, **i updated most of our example files** to use traditional markdown code blocks to render the examples.\r\n  - you will note for code blocks that you actually want to _just render code in, verses example_, you annotate by doing:\r\n\r\n```\r\n\\```js static\r\n// rendered as a traditional markdown code block\r\nvar a = 'b'\r\n\\```\r\n\r\n\\```js\r\n// renders an styleguide example\r\n<Button />\r\n\\```\r\n```\r\n\r\n- **BREAKING CHANGE**: imports of components native to octagon are now\r\nimported fromy \"react-octagon/components/native/<name>\" versus\r\n\"react-octagon/components/<name>\".  this is to disambiguate between\r\ncomponents authored in library, and those authored from\r\nsemantic-ui-react.\r\n  - we can workshop the term `native`, if desired.  i realize that could be non-ideal\r\n",
      "changedFiles": 97,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2017-11-03T20:30:06Z",
      "deletions": 1081,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUwNjIyMTA4",
      "mergedAt": "2017-11-08T01:18:53Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(pkg): updgrade styleguide",
      "url": "https://github.com/Tripwire/octagon/pull/134"
    },
    "MDExOlB1bGxSZXF1ZXN0MTUxNDU4Nzc3": {
      "additions": 29,
      "body": "# problem statement\r\n\r\n- element screenshot capture doesn't work when elements are outside of the original viewport\r\n\r\n# solution\r\n\r\n- use absolute coordinates\r\n\r\n# discussion\r\n\r\n- ~https://chromedevtools.github.io/devtools-protocol/tot/Page/#type-Viewport is ambiguous about whether `x` and `y` are relative/absolute to what reference~\r\n- https://github.com/ChromeDevTools/devtools-protocol/issues/67\r\n\r\ncloses #1304 & #1315\r\n\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-11-08T18:24:04Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUxNDU4Nzc3",
      "mergedAt": "2017-11-11T00:02:53Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk5MDc5NjY2Mw==",
        "nameWithOwner": "puppeteer/puppeteer"
      },
      "state": "MERGED",
      "title": "Fix/element screenshot",
      "url": "https://github.com/puppeteer/puppeteer/pull/1323"
    },
    "MDExOlB1bGxSZXF1ZXN0MTUyNjgzMTEx": {
      "additions": 15772,
      "body": "",
      "changedFiles": 11,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2017-11-15T04:37:00Z",
      "deletions": 13617,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUyNjgzMTEx",
      "mergedAt": "2017-11-15T04:39:35Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NDUyMTE2OQ==",
        "nameWithOwner": "dino-dna/donut"
      },
      "state": "MERGED",
      "title": "chore(regression): tidy",
      "url": "https://github.com/dino-dna/donut/pull/124"
    },
    "MDExOlB1bGxSZXF1ZXN0MTUzNDI4ODY5": {
      "additions": 819,
      "body": "",
      "changedFiles": 35,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2017-11-18T01:54:45Z",
      "deletions": 31,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUzNDI4ODY5",
      "mergedAt": "2017-11-18T01:54:50Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMTA2MjIwMTU=",
        "nameWithOwner": "cdaringe/docker-distributed-logging"
      },
      "state": "MERGED",
      "title": "Master",
      "url": "https://github.com/cdaringe/docker-distributed-logging/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MTUzNTIyMzI0": {
      "additions": 41937,
      "body": "# problem\r\n\r\n- regression wasn't passing tests\r\n- regression had some sloppiness.  hey, it still does, _a little_ :), but not too too much\r\n\r\n# solution\r\n\r\nfix the things\r\n",
      "changedFiles": 25,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 10
      },
      "createdAt": "2017-11-19T23:33:10Z",
      "deletions": 28983,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUzNTIyMzI0",
      "mergedAt": "2017-11-19T23:33:16Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NDUyMTE2OQ==",
        "nameWithOwner": "dino-dna/donut"
      },
      "state": "MERGED",
      "title": "fix: regression",
      "url": "https://github.com/dino-dna/donut/pull/128"
    },
    "MDExOlB1bGxSZXF1ZXN0MTUzNTI1NTY2": {
      "additions": 125,
      "body": "# problem\r\n\r\n- no presentation\r\n\r\n# solution\r\n\r\n- add one",
      "changedFiles": 6,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-11-20T00:41:45Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUzNTI1NTY2",
      "mergedAt": "2017-11-27T06:06:19Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NDUyMTE2OQ==",
        "nameWithOwner": "dino-dna/donut"
      },
      "state": "MERGED",
      "title": "feat(presentation): alpha",
      "url": "https://github.com/dino-dna/donut/pull/130"
    },
    "MDExOlB1bGxSZXF1ZXN0MTU2NTg4ODY2": {
      "additions": 1,
      "body": "# problem\r\n\r\n- kibana does not gracefully accept ES 6.x+ returning two mapping types\r\n  - ES yields a named mapping plus a `_default_` key\r\n  - see https://github.com/elastic/kibana/issues/14934#issuecomment-346183906\r\n\r\n# solution\r\n\r\n- disregard `'_default_'` when checking mapping types",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2017-12-05T22:14:05Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTU2NTg4ODY2",
      "mergedAt": "2017-12-12T17:04:34Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3ODMzMTY4",
        "nameWithOwner": "elastic/kibana"
      },
      "state": "MERGED",
      "title": "Handle ES _default_ mapping type (#14934)",
      "url": "https://github.com/elastic/kibana/pull/15432"
    },
    "MDExOlB1bGxSZXF1ZXN0MTU3NzU0MDg5": {
      "additions": 13489,
      "body": "# problem statement\r\n\r\n- we don't have automated tests\r\n\r\n# solution\r\n\r\n- add automated tests\r\n\r\n# discussion\r\n\r\n- we like backstopjs.  backstopjs was not rendering images properly w/ chromy\r\n- rather than debug and patch, i rolled my own.  for great shame!  but mines pretty alright too :), with docs\r\n  - we can gut it later if we want to stub backstopjs back in, no sweat. but give mine a try at least!\r\n  - anyway, here's my package https://www.npmjs.com/package/snapjerk & imperfect documentation site here https://cdaringe.github.io/webjerk/\r\n- i pinged some teamsters on the public TW repos, and we don't have a FOSS CI provider ready for docker.  codeship supports it, but for $monies$.  circleci gives us VMs w/ docker ready agents fo' free in a simpler-than-jenkins like yml file, much akin to travis. PLUS, ssh-able builds and public artifacts. woohoo!\r\n",
      "changedFiles": 72,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 20
      },
      "createdAt": "2017-12-12T07:23:52Z",
      "deletions": 22492,
      "id": "MDExOlB1bGxSZXF1ZXN0MTU3NzU0MDg5",
      "mergedAt": "2017-12-18T23:00:02Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(tests): add docker based screenshot testing + ci",
      "url": "https://github.com/Tripwire/octagon/pull/138"
    },
    "MDExOlB1bGxSZXF1ZXN0MTU5MDU3MTgz": {
      "additions": 20,
      "body": "# problem statement\r\n\r\n- old version of `snapjerk` doesn't generate reports correctly.\r\n\r\n# solution\r\n\r\n- new version of snapjerk generates reports with asset paths correct\r\n\r\n# discussion\r\n\r\n- this was intended to go in with #138, but was stale on my machine\r\n- given this is a strict dep update on a minor flag, i will eager merge on test pass, against normal biz process\r\n  - we should consider updating CONTRIBUTING.md to allow for minor/patch dep updates and **strict** doc updates to be eager merged by project owners",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2017-12-19T01:17:01Z",
      "deletions": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0MTU5MDU3MTgz",
      "mergedAt": "2017-12-19T01:17:17Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(tests): bump snapjerk s.t. html reports dont use bogus pathing",
      "url": "https://github.com/Tripwire/octagon/pull/140"
    },
    "MDExOlB1bGxSZXF1ZXN0MTU5MjkzNzE0": {
      "additions": 535,
      "body": "# problem statement\r\n\r\n- we used to use codeship, now we use circleci, therefore:\r\n  - we dont get updates from @wa11-e w/ static site copies on PR commits\r\n  - we dont cut releases automatically via semantic release\r\n\r\n# solution\r\n\r\n- complete the transition to circleci\r\n\r\n# notes\r\n\r\n- circleci gives us the docker-engine fo' free!  codeship didnt.\r\n- you should have access to the circleci builds by simply being a member of the tripwire organization on github.  make sure you log on to circle w/ you public github handle, if it prompts you",
      "changedFiles": 3,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2017-12-19T23:05:09Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTU5MjkzNzE0",
      "mergedAt": "2017-12-20T21:32:56Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "Feat/send static site from circle",
      "url": "https://github.com/Tripwire/octagon/pull/141"
    },
    "MDExOlB1bGxSZXF1ZXN0MTU5NTIzMTg1": {
      "additions": 82,
      "body": "# problem statement\r\n\r\nthe Pagination control was stateful\r\n\r\n# solution\r\n\r\n- make it stateless\r\n- update examples to use state, as one may in a real world app\r\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2017-12-20T21:34:36Z",
      "deletions": 91,
      "id": "MDExOlB1bGxSZXF1ZXN0MTU5NTIzMTg1",
      "mergedAt": "2017-12-20T22:21:58Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "Feat/stateless",
      "url": "https://github.com/Tripwire/octagon/pull/143"
    },
    "MDExOlB1bGxSZXF1ZXN0MTYyMDEwNzg5": {
      "additions": 45,
      "body": "# problem statement\r\n\r\ncomponent statefulness guidelines unclear to active devs\r\n\r\n# solution\r\n\r\nadd an adr for the topic\r\n\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-01-10T00:36:45Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTYyMDEwNzg5",
      "mergedAt": "2018-01-11T00:11:30Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "docs(adr): stateless components",
      "url": "https://github.com/Tripwire/octagon/pull/148"
    },
    "MDExOlB1bGxSZXF1ZXN0MTYyMDEyMjIy": {
      "additions": 1,
      "body": "# problem statement\r\n\r\nbad badge!\r\n\r\n# solution\r\n\r\ncorrect badge!\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-01-10T00:48:52Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTYyMDEyMjIy",
      "mergedAt": "2018-01-11T00:11:42Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "docs(README): circle badge",
      "url": "https://github.com/Tripwire/octagon/pull/149"
    },
    "MDExOlB1bGxSZXF1ZXN0MTY0MTU5MDgx": {
      "additions": 6,
      "body": "# problem\r\n\r\nVSCode steps into native code at each `await` statement.\r\n\r\n# solution\r\n\r\nusing skipFiles on node_internals yields a more dev-expected debug experience\r\n\r\n<!--\r\n\r\nRead the [contributing guidelines](https://github.com/avajs/ava/blob/master/contributing.md). We are excited about pull requests, but please try to limit the scope, provide a general description of the changes, and remember, it's up to you to convince us to land it. If this fixes an open issue, link to it in the following way: `Fixes #321`. New features and bug fixes should come with tests.\r\n\r\n-->\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-01-21T04:20:47Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY0MTU5MDgx",
      "mergedAt": "2018-01-22T14:13:31Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjgyMDc5OA==",
        "nameWithOwner": "avajs/ava"
      },
      "state": "MERGED",
      "title": "docs(debugging): recommend skipFiles",
      "url": "https://github.com/avajs/ava/pull/1644"
    },
    "MDExOlB1bGxSZXF1ZXN0MTY1MjMxMDEw": {
      "additions": 33,
      "body": "# problem statement\r\n\r\n- we should define our high level testing strategy\r\n\r\n# solution\r\n\r\nadr for screenshot testing\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-01-25T21:19:39Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY1MjMxMDEw",
      "mergedAt": "2018-01-25T22:17:32Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "docs(adr): testing via screenshots",
      "url": "https://github.com/Tripwire/octagon/pull/155"
    },
    "MDExOlB1bGxSZXF1ZXN0MTY1MjQ1Mjk1": {
      "additions": 1,
      "body": "# problem statement\r\n\r\nreleases are being built, but not published to npm\r\n\r\n# solution\r\n\r\nfix env var\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-01-25T22:27:18Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY1MjQ1Mjk1",
      "mergedAt": "2018-01-25T23:00:38Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(ci): correct branch env var",
      "url": "https://github.com/Tripwire/octagon/pull/156"
    },
    "MDExOlB1bGxSZXF1ZXN0MTY1MjU1NjMz": {
      "additions": 46,
      "body": "# problem statement\r\n\r\n#156 build failed because ci was still making env assertions for codeship\r\n\r\n# solution\r\n\r\nmigrate to circleci verify conditions",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-01-25T23:25:57Z",
      "deletions": 14,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY1MjU1NjMz",
      "mergedAt": "2018-01-25T23:43:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(ci): remove codeship verify condition, swap in circleci",
      "url": "https://github.com/Tripwire/octagon/pull/157"
    },
    "MDExOlB1bGxSZXF1ZXN0MTY1ODIwNTIz": {
      "additions": 1254,
      "body": "# problem statement\r\n\r\n- build fails because semantic-release doesn't like the latest node\r\n\r\n# solution\r\n\r\n- bump semantic-release\r\n- fix bad env var\r\n- remove obsolete cmd from `sem-rel` script",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-01-29T21:18:52Z",
      "deletions": 601,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY1ODIwNTIz",
      "mergedAt": "2018-01-29T23:17:06Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(ci): patch sem-rel",
      "url": "https://github.com/Tripwire/octagon/pull/159"
    },
    "MDExOlB1bGxSZXF1ZXN0MTY3NTIwMzUz": {
      "additions": 8,
      "body": "* Related Issues: #1751\r\n\r\n## Introduction\r\n\r\na bad knex arg is allowed on construction\r\n\r\n## Motivation\r\n\r\nfail fast\r\n\r\n## Proposed solution\r\n\r\ndisallow a bad knex arg on construction\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-02-06T20:23:28Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY3NTIwMzUz",
      "mergedAt": "2018-02-08T11:26:17Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4NTk0NzUy",
        "nameWithOwner": "bookshelf/bookshelf"
      },
      "state": "MERGED",
      "title": "feat(constructor): detect knex on construction",
      "url": "https://github.com/bookshelf/bookshelf/pull/1756"
    },
    "MDExOlB1bGxSZXF1ZXN0MTY3NTIyNTgz": {
      "additions": 13,
      "body": "## Introduction\r\n\r\n- i wanted to run the tests, but the instructions didnt help, they only raised more questions\r\n\r\n## Motivation\r\n\r\n- simple testing fosters contribution\r\n\r\n## Proposed solution\r\n\r\n- specify to use docker for tests by default\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-02-06T20:33:44Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY3NTIyNTgz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4NTk0NzUy",
        "nameWithOwner": "bookshelf/bookshelf"
      },
      "state": "CLOSED",
      "title": "docs(README): clarify how to run tests",
      "url": "https://github.com/bookshelf/bookshelf/pull/1757"
    },
    "MDExOlB1bGxSZXF1ZXN0MTY3NTYzMTU0": {
      "additions": 186,
      "body": "# problem\r\n\r\n- see https://github.com/choojs/bankai/issues/410\r\n\r\n# solution\r\n\r\n- prototype api to allow user to provide app state to render with\r\n\r\n# discussion\r\n\r\nim not married to this implementation at all, but i am eager for the feature, so i figured some code would get the convo rolling.\r\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2018-02-06T23:58:52Z",
      "deletions": 53,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY3NTYzMTU0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0ODQ5NjgzNQ==",
        "nameWithOwner": "choojs/bankai"
      },
      "state": "CLOSED",
      "title": "feat(ssr): optionally render with app state",
      "url": "https://github.com/choojs/bankai/pull/413"
    },
    "MDExOlB1bGxSZXF1ZXN0MTcxNTY5NzY4": {
      "additions": 3,
      "body": "# idea\r\n\r\n- what if you could run one command that would install all of the things and configure a project to wire in prettier-standard, husky, and lint-staged, configuration and all?\r\n\r\n# solution\r\n\r\n`npx standard-damn-it`\r\n\r\n# discussion\r\n\r\ni love this package so much.  there's a few packages and configuration bits that i have to look up every time i want to use it with githooks.  i got tired of looking them up, so i codified them into a script!  \r\n\r\nthanks for the consideration.",
      "changedFiles": 1,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-02-27T05:50:34Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTcxNTY5NzY4",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4NDk1OTI5MQ==",
        "nameWithOwner": "sheerun/prettier-standard"
      },
      "state": "CLOSED",
      "title": "docs(README): suggest standard-damn-it for easy bootstrapping",
      "url": "https://github.com/sheerun/prettier-standard/pull/51"
    },
    "MDExOlB1bGxSZXF1ZXN0MTcyMTIwNjg1": {
      "additions": 490,
      "body": "",
      "changedFiles": 8,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-03-01T01:28:19Z",
      "deletions": 137,
      "id": "MDExOlB1bGxSZXF1ZXN0MTcyMTIwNjg1",
      "mergedAt": "2018-03-01T01:28:25Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMjIwMDcxNTM=",
        "nameWithOwner": "cdaringe/little-buddy"
      },
      "state": "MERGED",
      "title": "stage",
      "url": "https://github.com/cdaringe/little-buddy/pull/6"
    },
    "MDExOlB1bGxSZXF1ZXN0MTc4NDM1Njc4": {
      "additions": 30,
      "body": "# problem statement\r\n\r\n- our lib creates large bundles\r\n\r\n# solution\r\n\r\n- import from es modules to benefit from tree shaking, vs commonjs dist builds [ref needed]()\r\n",
      "changedFiles": 29,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-03-29T20:39:49Z",
      "deletions": 30,
      "id": "MDExOlB1bGxSZXF1ZXN0MTc4NDM1Njc4",
      "mergedAt": "2018-04-04T22:01:17Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(pkg): commonjs => es suir imports",
      "url": "https://github.com/Tripwire/octagon/pull/174"
    },
    "MDExOlB1bGxSZXF1ZXN0MTc4NzQ4ODAy": {
      "additions": 45,
      "body": "# problem\r\n\r\n- service logs to console by default in production\r\n\r\n# solution\r\n\r\n- disable logging by default in production\r\n- document how to configure logging\r\n- document how newcomers can more easily run the tests\r\n\r\n# discussion\r\n\r\nthx for the great lib.",
      "changedFiles": 4,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2018-04-01T21:34:16Z",
      "deletions": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0MTc4NzQ4ODAy",
      "mergedAt": "2018-09-17T18:14:08Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNzY1MTY1Ng==",
        "nameWithOwner": "voxpelli/node-pg-pubsub"
      },
      "state": "MERGED",
      "title": "refactor/logging",
      "url": "https://github.com/voxpelli/node-pg-pubsub/pull/18"
    },
    "MDExOlB1bGxSZXF1ZXN0MTgyNjY4MzE1": {
      "additions": 4,
      "body": "# problem\r\n\r\n- examples list no open source services\r\n\r\n# solution\r\n\r\n- add our service!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-04-19T05:17:41Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTgyNjY4MzE1",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1Nzk2NTE4Ng==",
        "nameWithOwner": "cds-hooks/docs"
      },
      "state": "CLOSED",
      "title": "docs(examples): add hep-c-screener example service",
      "url": "https://github.com/cds-hooks/docs/pull/199"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg0MTQwMjY3": {
      "additions": 6197,
      "body": "# problem statement\r\n\r\n- tests on master are failing\r\n\r\n# discussion\r\n\r\n- `snapjerk` was using an unpinned docker container.  use a new version that pins the docker container",
      "changedFiles": 5,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-04-25T19:32:22Z",
      "deletions": 4523,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg0MTQwMjY3",
      "mergedAt": "2018-04-25T21:05:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(tests): bump snapjerk to pin stable docker chrome container",
      "url": "https://github.com/Tripwire/octagon/pull/177"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg0MTg1MjAx": {
      "additions": 5,
      "body": "# problem statement\r\n\r\n- suir is out of date\r\n\r\n# solution\r\n\r\nbump it",
      "changedFiles": 2,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-04-25T22:55:53Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg0MTg1MjAx",
      "mergedAt": "2018-04-25T23:22:11Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(pkg): bump suir",
      "url": "https://github.com/Tripwire/octagon/pull/178"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg0NDc3NTIx": {
      "additions": 14385,
      "body": "# problem statement\r\n\r\n- `suir` is a dependency, not a [peerDependency](https://nodejs.org/en/blog/npm/peer-dependencies/)\r\n  - while this has the benefit of guaranteeing that our styles work with the component library, it also hinders independence and flexibility of our consumers\r\n  - the trade-off of dexterity over stability is a risk we are willing to try\r\n\r\n# solution\r\n\r\n- migrate suir to a peer dep\r\n- add suir as a dev dep\r\n- patch all references to our local wrappers/entry-points into SUIR\r\n  - this includes components & *.examples.md.  this is **lot** of files!\r\n\r\n# discussion\r\n\r\n- in updating our many references into suir entry points, tidy the files we're already hard at work in (i.e., while the patient is open ☝️, do good work)\r\n  - use triple backtick markdown examples, vs indented code examples\r\n  - patch files for linter upgrade.  **sorry for that**--`prettier` yielded a huge code diff on some value add changes that i couldn't roll back.\r\n    - shame on me, but it's very low risk.  #tests!",
      "changedFiles": 133,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2018-04-26T22:09:44Z",
      "deletions": 1350,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg0NDc3NTIx",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "CLOSED",
      "title": "feat/suir-as-peer-dependency",
      "url": "https://github.com/Tripwire/octagon/pull/180"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg0NDgyNzE0": {
      "additions": 15355,
      "body": "# problem statement\r\n\r\n- `suir` is a dependency, not a [peerDependency](https://nodejs.org/en/blog/npm/peer-dependencies/)\r\n  - while this has the benefit of guaranteeing that our styles work with the component library, it also hinders independence and flexibility of our consumers\r\n  - the trade-off of dexterity over stability is a risk we are willing to try\r\n\r\n# solution\r\n\r\n- migrate suir to a peer dep\r\n- add suir as a dev dep\r\n- patch all references to our local wrappers/entry-points into SUIR\r\n  - this includes components & *.examples.md.  this is **lot** of files!\r\n\r\n# discussion\r\n\r\n- in updating our many references into suir entry points, tidy the files we're already hard at work in (i.e., while the patient is open ☝️, do good work)\r\n  - use triple backtick markdown examples, vs indented code examples\r\n  - patch files for linter upgrade.  **sorry for that**--`prettier` yielded a huge code diff on some value add changes that i couldn't roll back.\r\n    - shame on me, but it's very low risk.  #tests!",
      "changedFiles": 140,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-04-26T22:41:03Z",
      "deletions": 9827,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg0NDgyNzE0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "CLOSED",
      "title": "feat(pkg): suir as peer",
      "url": "https://github.com/Tripwire/octagon/pull/181"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg0NjY1Mzk2": {
      "additions": 454,
      "body": "# problem statement\r\n\r\n- nav items are not consistently sized, specifically the top most item, which is truncated\r\n- nav item pointer is inconsistent, as it's used only over the img, not the container\r\n- nav item images aren't vertically centered in their container (off by ~1-2 px in the examples)\r\n\r\n# solution\r\n\r\n- fix the sizing\r\n  - equally distribute padding, top to bottom.  this makes the topmost item render nicely\r\n- make sure the pointer cursor appears on hover of the full nav item container\r\n  - use padding vs margin \r\n- flex center the nav image, vertically\r\n- bump to more stable snapjerk version, so tests pass.\r\n  - last version was crashing as the diff reporter was loosing its cool due an internal issue tied to https://github.com/facebook/create-react-app/issues/4076#issuecomment-374945938\r\n\r\nnew:\r\n<img width=\"85\" alt=\"screen shot 2018-04-27 at 9 42 32 am\" src=\"https://user-images.githubusercontent.com/1003261/39374811-0ba910b0-4a01-11e8-9675-7de288243807.png\">\r\n\r\nold:\r\n<img width=\"81\" alt=\"screen shot 2018-04-27 at 9 55 33 am\" src=\"https://user-images.githubusercontent.com/1003261/39374851-2e955926-4a01-11e8-8ac0-b3fbe63c5e63.png\">\r\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-04-27T16:08:50Z",
      "deletions": 316,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg0NjY1Mzk2",
      "mergedAt": "2018-04-27T18:31:34Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(LeftNav): correct pointer, padding, and topmost margin",
      "url": "https://github.com/Tripwire/octagon/pull/182"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg0NzA4NTQ2": {
      "additions": 16,
      "body": "# problem statement\r\n\r\n- common handled props are not being propagated to root nodes\r\n\r\n# solution\r\n\r\n- proxy handled props to root node\r\n\r\n# discussion\r\n\r\nsame story, different day.  the issue that keeps on giving ;)",
      "changedFiles": 4,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-04-27T19:31:21Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg0NzA4NTQ2",
      "mergedAt": "2018-04-27T19:38:43Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(TopNav): accept handled props on root nodes",
      "url": "https://github.com/Tripwire/octagon/pull/184"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg0NzU3MDc4": {
      "additions": 35,
      "body": "# problem statement\r\n\r\n- gutter isn't documented\r\n\r\n# solution\r\n\r\n- document it, test it\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-04-28T01:44:10Z",
      "deletions": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg0NzU3MDc4",
      "mergedAt": "2018-04-30T17:36:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(LargeCard): document Gutter",
      "url": "https://github.com/Tripwire/octagon/pull/186"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg0NzYxNzM4": {
      "additions": 2,
      "body": "# problem statement\r\n\r\n- `LeftNav` styles assumed too much about their usage context `height`\r\n\r\n# solution\r\n\r\n- make the styles of this component extensible. remove overly contextual assumptions\r\n\r\n# discussion\r\n\r\n- we just did a `LeftNav` PR.  sorry i missed this in that one!  i've been doing a bottom up design, which meant i hadn't actually plugged this component into the app properly until moments ago\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-04-28T03:38:17Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg0NzYxNzM4",
      "mergedAt": "2018-04-30T17:37:11Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(LeftNav): remove evil styles, allow class extension",
      "url": "https://github.com/Tripwire/octagon/pull/187"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg0ODUwNzg1": {
      "additions": 2,
      "body": "# problem\r\n\r\n- [debug](https://www.npmjs.com/package/debug) is a popular mechanism used in JS programs, as it offers quick and easy tuning of selective logging, however it's not immediately compatible with our webpack config.\r\n\r\n# discussion\r\n\r\nthis env file very closely mirrors CRA's std configuration.  consequently, i assume that this file is well guarded by the maintainers/community, and sensitive to changes.  a PR is likely the best place for any associated discussion given the the change impact is so small.  let me know your thoughts!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-04-29T19:41:48Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg0ODUwNzg1",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NjEzMDM0Nw==",
        "nameWithOwner": "wmonk/create-react-app-typescript"
      },
      "state": "OPEN",
      "title": "feat(webpack): support debug package & associated env",
      "url": "https://github.com/wmonk/create-react-app-typescript/pull/316"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg1MjkzMjgw": {
      "additions": 7654,
      "body": "- [x] I have read the [Contributor Guide](https://github.com/redux-observable/redux-observable/blob/master/CONTRIBUTING.md)\r\n- [x] My commit messages are in [conventional-changelog-standard](https://github.com/redux-observable/redux-observable/blob/master/CONTRIBUTING.md#sending-a-pull-request) format.\r\n\r\n# problem\r\n\r\n- https://github.com/redux-observable/redux-observable/issues/87#issue-168497134 requests PRs for common recipes, and `redux-form` is missing\r\n- `redux-form` mandates that submission/validation happen in a promise chain within app code.  common `redux` is event based (action based), and consequently doesn't always play nicely.\r\n\r\n# solution\r\n\r\n- propose mechanism, similar to that in the `saga` project, wherein `epic`s are `redux-form` aware and call `meta` Promise functions _maybe_ injected from a flux standard action",
      "changedFiles": 10,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-05-01T22:34:12Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg1MjkzMjgw",
      "mergedAt": "2018-05-02T17:04:40Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1NjcyMzc1NA==",
        "nameWithOwner": "redux-observable/redux-observable"
      },
      "state": "MERGED",
      "title": "docs(examples): add redux-form example",
      "url": "https://github.com/redux-observable/redux-observable/pull/490"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg1ODQ3NjE0": {
      "additions": 12228,
      "body": "BREAKING CHANGE: consumers must now install semantic-ui-react into their\r\nown project and import components to their liking directly from that\r\npackage\r\n\r\n# problem statement\r\n\r\n- consumers want more agility using SUIR\r\n\r\n# solution\r\n\r\n- decouple SUIR from this package\r\n",
      "changedFiles": 55,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-05-03T21:50:38Z",
      "deletions": 102,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg1ODQ3NjE0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "CLOSED",
      "title": "feat(pkg): move semantic-ui-react to peerDependencies",
      "url": "https://github.com/Tripwire/octagon/pull/190"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg1ODQ3OTcz": {
      "additions": 38,
      "body": "BREAKING CHANGE: consumers must now install semantic-ui-react into their\r\nown project and import components to their liking directly from that\r\npackage\r\n\r\n# problem statement\r\n\r\n- consumers want more agility using SUIR\r\n\r\n# solution\r\n\r\n- decouple SUIR from this package\r\n",
      "changedFiles": 54,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-05-03T21:52:26Z",
      "deletions": 102,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg1ODQ3OTcz",
      "mergedAt": "2018-05-03T23:21:53Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(pkg): move semantic-ui-react to peerDependencies",
      "url": "https://github.com/Tripwire/octagon/pull/191"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg1ODUxOTcw": {
      "additions": 3375,
      "body": "# problem statement\r\n\r\n- tidy up some bogus deps\r\n\r\n# solution\r\n\r\n- remove deps, wiring obsolete deps\r\n\r\n# todo\r\n\r\n- merge #191, OR, just review the one commit 9ab129c to not see the dependent PR's changes",
      "changedFiles": 57,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-05-03T22:13:07Z",
      "deletions": 5713,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg1ODUxOTcw",
      "mergedAt": "2018-05-03T23:23:23Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat/tidy",
      "url": "https://github.com/Tripwire/octagon/pull/192"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2MDM2NzU3": {
      "additions": 11631,
      "body": "BREAKING CHANGE: code paths are now shallower, and users can import components via es6 std mechanisms, destructuring off the default library export, vs importing using fully qualified paths\r\n\r\n# problem statement\r\n\r\n- we export a commonjs module, but soon, tree-shaking will _actually_ be upon us, and we care to benefit from it, whilst having easy imports.\r\n\r\ne.g.\r\n\r\n`import { Thing } from 'react-octagon'` will tree shake, and prevent users to have to\r\n`import Thing from 'react-octagon/path/to/thingo'`\r\n\r\n# solution\r\n\r\n- let's move to making it an es5-compiled es6 module\r\n- remap all paths and bogus imports",
      "changedFiles": 74,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-05-04T16:41:24Z",
      "deletions": 21327,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2MDM2NzU3",
      "mergedAt": "2018-05-04T21:07:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(pkg): ship as es module",
      "url": "https://github.com/Tripwire/octagon/pull/194"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2MDM4ODIy": {
      "additions": 12118,
      "body": "# todo\r\n\r\n- [ ] close #194, pull 11.x back into this branch to reduce the diff\r\n\r\n# problem statement\r\n\r\n- we have some prototyped/incubating components that have have immediate need for consumption, but are still incubating with designers\r\n\r\n# solution\r\n\r\n- load up components under `src/components/unstable`\r\n- export `<CompA />` as `<CompAUnstable />`\r\n- remove `unstable` components from tests\r\n\r\n# discussion\r\n\r\n- to review, just review commit 588697fd194e6b7c8a9d2d02173efd457b7576ac !\r\n",
      "changedFiles": 87,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-05-04T16:50:48Z",
      "deletions": 21360,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2MDM4ODIy",
      "mergedAt": "2018-05-04T21:08:58Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat/export-unstable-components",
      "url": "https://github.com/Tripwire/octagon/pull/195"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2MTEyNTky": {
      "additions": 71,
      "body": "# problem statement\r\n\r\n- @ggascoigne mentioned some historic woes on using octagon in dev mode whilst using it in his app\r\n\r\nwhilst linking and on-change simply running `[yarn|npm] build` _works_, it's not RAPIDO 💨 \r\n\r\n# solution\r\n\r\n- enable a `watch` mode for quick incremental builds\r\n  - rather than doing a blanket file system watch and rebuilding all of the things, instead, use individual watchers for each part of the lib (react components, react component styles, and the sui theme)\r\n  - builds are suuuuper fast for react & components css changes (ms level), whilst building the full sui theme takes ~2-3 seconds \r\n\r\n![untitled mov](https://user-images.githubusercontent.com/1003261/39654681-bb85d3e8-4faa-11e8-9a18-9925f98cec66.gif)\r\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-05-04T21:53:53Z",
      "deletions": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2MTEyNTky",
      "mergedAt": "2018-05-08T18:11:32Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat/fast-dev-watch-mode",
      "url": "https://github.com/Tripwire/octagon/pull/196"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2MTIwMzk5": {
      "additions": 12232,
      "body": "# problem statement\r\n\r\n- `11.x` has lots of great features!\r\n  - suir as a peer dep, es module exports, fast dev mode, unstable components, and more!\r\n  - https://github.com/Tripwire/octagon/projects/1\r\n\r\n# solution\r\n\r\n- merge it!\r\n\r\n# todo\r\n\r\n- [x] merge #196 ",
      "changedFiles": 134,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 13
      },
      "createdAt": "2018-05-04T22:51:11Z",
      "deletions": 23759,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2MTIwMzk5",
      "mergedAt": "2018-05-08T18:25:48Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat/11.x",
      "url": "https://github.com/Tripwire/octagon/pull/197"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2NDc3NjY4": {
      "additions": 13,
      "body": "# problem\r\n\r\n- it wasn't clear to me how to setup for usage with GitLab\r\n\r\n# solution\r\n\r\n- fill the missing documentation gap in the GitLab recipe",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-05-07T22:05:45Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2NDc3NjY4",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDA2MzU3Ng==",
        "nameWithOwner": "semantic-release/semantic-release"
      },
      "state": "CLOSED",
      "title": "docs(recipe): update gitlab usage configuration",
      "url": "https://github.com/semantic-release/semantic-release/pull/781"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2NzA5OTA3": {
      "additions": 60,
      "body": "# problem\r\n\r\n- please see #2389\r\n\r\n# solution\r\n\r\n- add in RAF behavior per @levithomason's recommendation.\r\n  - i _didn't_ actually properly animate it in, but this still has the added benefit of keeping the `<Popup />` correctly attached to the trigger if the trigger moves\r\n\r\n## demo\r\n\r\nhere i use `<Popup />` for form validation.\r\n\r\nwith fix, the `<Popup />` immediately renders when the field is dirty and empty:\r\n\r\n![good mov](https://user-images.githubusercontent.com/1003261/39773872-1f9b3b9c-52ae-11e8-8fc1-0d096c0c8df7.gif)\r\n\r\nwithout fix.  the `<Popup />` is out of the viewport.  I have to fidget with the `trigger={<Input />}` to get the Popup to eventually appear where it has been commanded to go:\r\n\r\n![bad mov](https://user-images.githubusercontent.com/1003261/39773923-44ffd0c8-52ae-11e8-9fa1-25a7c28c7aa4.gif)\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 9
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2018-05-08T17:56:33Z",
      "deletions": 34,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzA5OTA3",
      "mergedAt": "2018-05-19T00:12:24Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNzczNDIyNg==",
        "nameWithOwner": "Semantic-Org/Semantic-UI-React"
      },
      "state": "MERGED",
      "title": "fix(Popup) popup appearing in wrong position when open prop is set ",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/pull/2775"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2NzUyMjY1": {
      "additions": 242,
      "body": "# problem statement\r\n\r\n- npm is just OK\r\n\r\n# solution\r\n\r\n- migrate to yarn\r\n",
      "changedFiles": 6,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-05-08T20:50:49Z",
      "deletions": 81,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzUyMjY1",
      "mergedAt": "2018-05-08T21:21:42Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "chore(pkg): migrate to yarn",
      "url": "https://github.com/Tripwire/octagon/pull/198"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2NzU5MjMy": {
      "additions": 1650,
      "body": "# problem statement\r\n\r\n- greenkeeper wont enable easily because were so far behind on many things\r\n\r\n# solution\r\n\r\n- manually get us up to snuff before re-enabling",
      "changedFiles": 63,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-05-08T21:19:51Z",
      "deletions": 740,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzU5MjMy",
      "mergedAt": "2018-05-08T21:35:22Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "chore/migrate-to-std-latest",
      "url": "https://github.com/Tripwire/octagon/pull/199"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2NzgxMjU3": {
      "additions": 130,
      "body": "# problem statement\r\n\r\n- `<Layout />` doesn't offer menu customization or customization of what content goes in the `admin` region\r\n\r\n# solution\r\n\r\n- quick and dirty hack to expose API to populate these parts of the `<Layout />`\r\n\r\n# discussion\r\n\r\n- see the props documentation and new examples",
      "changedFiles": 7,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-05-08T23:23:07Z",
      "deletions": 67,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2NzgxMjU3",
      "mergedAt": "2018-05-23T03:58:53Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat/nav-configurable menu",
      "url": "https://github.com/Tripwire/octagon/pull/201"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg2Nzk3Mjc4": {
      "additions": 0,
      "body": "",
      "changedFiles": 0,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 0
      },
      "createdAt": "2018-05-09T01:40:01Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg2Nzk3Mjc4",
      "mergedAt": "2018-05-09T01:40:57Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk5NDI2MjEwNA==",
        "nameWithOwner": "dino-dna/truth.lol"
      },
      "state": "MERGED",
      "title": "Feature/api rust",
      "url": "https://github.com/dino-dna/truth.lol/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0MTg5NTU1NjMz": {
      "additions": 1,
      "body": "# problem\r\n\r\n- example doesn't work\r\n\r\n# solution\r\n\r\nremove un-paired quote",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-05-22T06:04:02Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTg5NTU1NjMz",
      "mergedAt": "2018-05-22T06:39:22Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxODM5ODQ5NA==",
        "nameWithOwner": "aio-libs/aiopg"
      },
      "state": "MERGED",
      "title": "fix(examples): remove unmatched single quote",
      "url": "https://github.com/aio-libs/aiopg/pull/476"
    },
    "MDExOlB1bGxSZXF1ZXN0MTkwNDI0ODc0": {
      "additions": 104,
      "body": "# problem statement\r\n\r\n- some icons do not render full well\r\n\r\n# solution\r\n\r\n- heed the warning from the SUIR README\r\n\r\n> ⚠️NOTE: Currently Semantic UI React is not yet compatible with the latest 2.3 version of Semantic UI styles. See #2250 for more info.\r\n\r\npin our sui less dep.",
      "changedFiles": 3,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-05-24T21:25:57Z",
      "deletions": 99,
      "id": "MDExOlB1bGxSZXF1ZXN0MTkwNDI0ODc0",
      "mergedAt": "2018-05-24T22:38:08Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(icons): pin unstable dep",
      "url": "https://github.com/Tripwire/octagon/pull/206"
    },
    "MDExOlB1bGxSZXF1ZXN0MTkwNzA4Mjk4": {
      "additions": 150,
      "body": "# problem\r\n\r\n- i cannot add a class to AWS React Amplify elements\r\n\r\n# solution\r\n\r\n- permit className extension\r\n\r\n# discussion\r\n\r\n- ~i can't get your build/test stack to run successfully atm. would love if someone would send a foolproof recipe to test build/lint/test changes in the react package~. got it. test snapshot updated.\r\n\r\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.\r\n",
      "changedFiles": 6,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2018-05-25T22:46:50Z",
      "deletions": 141,
      "id": "MDExOlB1bGxSZXF1ZXN0MTkwNzA4Mjk4",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDU1OTA4Mzc=",
        "nameWithOwner": "aws-amplify/amplify-js"
      },
      "state": "CLOSED",
      "title": "fix(AmplifyUI): enable component className extension",
      "url": "https://github.com/aws-amplify/amplify-js/pull/920"
    },
    "MDExOlB1bGxSZXF1ZXN0MTkwNzE1MTcx": {
      "additions": 181,
      "body": "# problem statement\r\n\r\n- need `compactY` in unstable component\r\n\r\n# solution\r\n\r\n- compact it\r\n\r\n# discussion\r\n\r\n- fix #207 while im at it",
      "changedFiles": 9,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2018-05-26T00:04:36Z",
      "deletions": 115,
      "id": "MDExOlB1bGxSZXF1ZXN0MTkwNzE1MTcx",
      "mergedAt": "2018-05-26T00:07:55Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "Feat/unstable login compact",
      "url": "https://github.com/Tripwire/octagon/pull/209"
    },
    "MDExOlB1bGxSZXF1ZXN0MTkxNjEwMzE3": {
      "additions": 81,
      "body": "# problem statement\r\n\r\n- some apps use libs that bring their own auth widgets\r\n\r\n# solution\r\n\r\n- support that use case\r\n\r\nadd `thirdPartyAuth` and friends to the `<LoginPane />` component\r\n",
      "changedFiles": 5,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-05-30T23:50:27Z",
      "deletions": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0MTkxNjEwMzE3",
      "mergedAt": "2018-05-30T23:59:24Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(LoginPane): enable unstable thirdPartyAuth prop",
      "url": "https://github.com/Tripwire/octagon/pull/213"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk0MTkxODUy": {
      "additions": 11,
      "body": "# problem\r\n\r\n- im not building an elm app for the web, im building an elm app for electron\r\n\r\n# solution\r\n\r\n- support configuration of the target env",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-06-12T07:42:10Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk0MTkxODUy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NzM2MjIzMQ==",
        "nameWithOwner": "halfzebra/create-elm-app"
      },
      "state": "CLOSED",
      "title": "Feat/env target",
      "url": "https://github.com/halfzebra/create-elm-app/pull/263"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk0NzY5NTQ4": {
      "additions": 1,
      "body": "# problem\r\n\r\ndocs do not specify anything about the venv, thus finding pip took a second to learn how to install plugins\r\n\r\n# solution\r\n\r\nclarify `pip` location",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-06-14T03:27:23Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk0NzY5NTQ4",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMzczMDA1MDg=",
        "nameWithOwner": "cdaringe/OctoPi"
      },
      "state": "CLOSED",
      "title": "docs(readme): clarify plugin installation",
      "url": "https://github.com/cdaringe/OctoPi/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk0NzY5NjI1": {
      "additions": 1,
      "body": "# problem\r\n\r\ndocs do not specify anything about the venv, thus finding pip took a second to learn how to install plugins\r\n\r\n# solution\r\n\r\nclarify `pip` location",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-06-14T03:28:08Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk0NzY5NjI1",
      "mergedAt": "2018-06-14T08:30:26Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMTE3NDQxMw==",
        "nameWithOwner": "guysoft/OctoPi"
      },
      "state": "MERGED",
      "title": "docs(readme): clarify plugin installation",
      "url": "https://github.com/guysoft/OctoPi/pull/542"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk2OTE1MzMw": {
      "additions": 482,
      "body": "# problem\r\n\r\n- we don't handle handled props in the cleanest or most efficient way possible\r\n- some className coerce `undefined` to `'undefined'`\r\n\r\n# solution\r\n\r\n- use object-rest-spread to extract handled props, and proxy the `...rest` into the child\r\n- use `classnames` everywhere\r\n\r\n# discussion\r\n\r\nBREAKING CHANGE:\r\n\r\n1. MicroCard\r\n    1. no longer requires a `cardContent` attribute\r\n    1. MicroCardContent no longer proxies props to child components. see the new API docs for adding props to some internal DOM elements\r\n1. ThinCard\r\n    1. ThinCardActionButton removed innerClassName in favor of innerProps",
      "changedFiles": 43,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-06-23T18:37:32Z",
      "deletions": 504,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk2OTE1MzMw",
      "mergedAt": "2018-06-27T23:04:27Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "xrefactor(props): improve handled props with spread op & classnames",
      "url": "https://github.com/Tripwire/octagon/pull/226"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk3MjczODM1": {
      "additions": 4,
      "body": "# problem\r\n\r\ni desire, but ATM cannot have:\r\n\r\n1) free maintenance and updates to RSG components as they are developed, **plus**\r\n2) the ability to tweak RSG components slightly (beyond the theme APIs)\r\n\r\n# solution\r\n\r\n- improve RSG component composition by proxying unhandled props to the target DOM node\r\n    - use `transform-object-rest-spread` to do this.  woo hoo!\r\n    - ideally it would be nice to extend this pattern to other components, but i thought a small focused change would help the discussion along\r\n\r\n# example\r\n\r\ni want to apply a class name and/or an id to the `<StyleGuideRenderer />` \r\n```jsx\r\nimport * as React from 'react'\r\nimport OrigStyleGuideRenderer from 'react-styleguidist/lib/rsg-components/StyleGuide/StyleGuideRenderer.js'\r\nexport default function StyleGuideRenderer (props) {\r\n  return <OrigStyleGuideRenderer {...{ ...props, id: 'bananas', className: 'sans-serif' }} />\r\n}\r\n```\r\n\r\n# discussion\r\n\r\n- the `contributing.md` steps don't work for me, even on master.  `jest` craps out with:\r\n\r\n```\r\nreact-styleguidist/test/jestsetup.js:15\r\n    import { configure, shallow, render, mount } from 'enzyme';\r\n           ^\r\n\r\n    SyntaxError: Unexpected token {\r\n\r\n      at ScriptTransformer._transformAndBuildScript (node_modules/jest-runtime/build/script_transformer.js:316:17)\r\n```",
      "changedFiles": 1,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-06-26T00:54:28Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk3MjczODM1",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjAzMzA4Ng==",
        "nameWithOwner": "styleguidist/react-styleguidist"
      },
      "state": "CLOSED",
      "title": "feat(StyleGuideRenderer): support StyleGuideRenderer composition",
      "url": "https://github.com/styleguidist/react-styleguidist/pull/1027"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk3ODAxMDk1": {
      "additions": 73,
      "body": "# problem statement\r\n\r\n`<Layout />` was super opinionated\r\n\r\n# solution\r\n\r\nremove opinions, make it a simple stupid content placeholder",
      "changedFiles": 5,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-06-27T17:25:43Z",
      "deletions": 103,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk3ODAxMDk1",
      "mergedAt": "2018-06-27T17:29:28Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "refactor(unstable): layout",
      "url": "https://github.com/Tripwire/octagon/pull/229"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk4Nzc1Nzky": {
      "additions": 43,
      "body": "- [x] Use a meaningful title for the pull request. Include the name of the package modified.\r\n- [x] Test the change in your own code. (Compile and run.)\r\n- [x] Add or edit tests to reflect the change. (Run with `npm test`.)\r\n- [x] Follow the advice from the [readme](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#make-a-pull-request).\r\n- [x] Avoid [common mistakes](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#common-mistakes).\r\n- [x] Run `npm run lint package-name` (or `tsc` if no `tslint.json` is present).\r\n\r\nSelect one of these and delete the others:\r\n\r\nIf adding a new definition:\r\n- [x] The package does not already provide its own types, or cannot have its `.d.ts` files generated via `--declaration`\r\n- [x] If this is for an NPM package, match the name. If not, do not conflict with the name of an NPM package.\r\n- [x] Create it with `dts-gen --dt`, not by basing it on an existing project.\r\n- [x] `tslint.json` should be present, and `tsconfig.json` should have `noImplicitAny`, `noImplicitThis`, `strictNullChecks`, and `strictFunctionTypes` set to `true`.\r\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-07-02T20:02:31Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk4Nzc1Nzky",
      "mergedAt": "2018-07-02T22:12:37Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MDkzMzE2",
        "nameWithOwner": "DefinitelyTyped/DefinitelyTyped"
      },
      "state": "MERGED",
      "title": "add nanographql typings",
      "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26998"
    },
    "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4": {
      "additions": 1339,
      "body": "# problem statment\r\n\r\n- TS typings are out of date\r\n- TS typings don't ship by default\r\n\r\npartially address https://github.com/graphile/postgraphile/issues/520\r\n\r\n# solution\r\n\r\n- have this TS project auto-build its typing artifcacts\r\n    - achieve this theoretically via a 3 LOC code change in the tsconfig.json\r\n    - address the cascading set of small issues associated with ^",
      "changedFiles": 25,
      "comments": {
        "totalCount": 18
      },
      "commits": {
        "totalCount": 40
      },
      "createdAt": "2018-07-07T22:59:50Z",
      "deletions": 1425,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE3MDM4",
      "mergedAt": "2018-07-21T09:48:12Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1NjI3MTE1OA==",
        "nameWithOwner": "graphile/crystal"
      },
      "state": "MERGED",
      "title": "feat(types): ship automatic TypeScript typings",
      "url": "https://github.com/graphile/crystal/pull/794"
    },
    "MDExOlB1bGxSZXF1ZXN0MjAzNjA3MzUy": {
      "additions": 2,
      "body": "# problem\r\n\r\ni was unclear on how to use `outFiles`.  googling took too long to find a GH thread w/ the answer\r\n\r\n# solution\r\n\r\ngive clear example of how to use inline in tooltip",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-07-24T17:56:55Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAzNjA3MzUy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDIxOTQwMTM=",
        "nameWithOwner": "cdaringe/vscode-node-debug"
      },
      "state": "CLOSED",
      "title": "feat(nls): add outFiles example to tooltip",
      "url": "https://github.com/cdaringe/vscode-node-debug/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MjAzNjA5NjI5": {
      "additions": 1,
      "body": "# problem\r\n\r\ni was unclear on how to use `outFiles`.  googling took too long to find a GH thread w/ the answer.\r\n\r\n# solution\r\n\r\ngive clear example of how to use inline in tooltip",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-07-24T18:05:49Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAzNjA5NjI5",
      "mergedAt": "2019-10-18T08:57:39Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0NTk3NTExMg==",
        "nameWithOwner": "microsoft/vscode-node-debug"
      },
      "state": "MERGED",
      "title": "feat(nls): add outFiles example to tooltip",
      "url": "https://github.com/microsoft/vscode-node-debug/pull/184"
    },
    "MDExOlB1bGxSZXF1ZXN0MjAzOTEwMjI5": {
      "additions": 27,
      "body": "# problem statement\r\n\r\n- `TopNav.Content` has non-value-add API, excess DOM, & bad centering centering\r\n\r\n# solution\r\n\r\nremove non-value-add API, remove excess DOM, fix centering\r\n\r\n# discussion\r\n\r\nBREAKING CHANGE: `<TopNav.Content />` props should no longer be used.  Content automatically flows into place.  A `link` prop is added to ease migration, which styles the last `<TopNav.Content link />` to be white, as was previously occurring with the `right` aligned Content piece.\r\n",
      "changedFiles": 6,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-07-25T17:32:58Z",
      "deletions": 25,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAzOTEwMjI5",
      "mergedAt": "2018-07-25T21:33:16Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "refactor(TopNav): remove non-value-add API, remove excess DOM, fix centering",
      "url": "https://github.com/Tripwire/octagon/pull/254"
    },
    "MDExOlB1bGxSZXF1ZXN0MjAzOTczNzky": {
      "additions": 29,
      "body": "# problem statement\r\n\r\n- `<Layout>` could use a sugar API to actually fill the whole viewport\r\n\r\n# solution\r\n\r\nadd a `full` prop, document it\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-07-25T21:51:31Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAzOTczNzky",
      "mergedAt": "2018-07-25T22:28:03Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(Layout): add full mode",
      "url": "https://github.com/Tripwire/octagon/pull/256"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA0MDUwNzYx": {
      "additions": 144,
      "body": "# problem statement\r\n\r\n- `<LeftNav />`:\r\n   - doesn't scale well\r\n   - has excess classes, inconsistent classNams\r\n   - is strongly opinionated to the _left_ (which this PR doesn't add _right_ support, but allows it to be extended to easily)\r\n\r\n# solution\r\n\r\n- replace with `<SideNav />`, maintaining the status quo functionality of `LeftNav`\r\n- add a nice hover transition",
      "changedFiles": 13,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-07-26T07:25:56Z",
      "deletions": 150,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA0MDUwNzYx",
      "mergedAt": "2018-07-26T21:39:03Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "feat(SideNav): init",
      "url": "https://github.com/Tripwire/octagon/pull/257"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA0MjAzOTgw": {
      "additions": 53,
      "body": "# problem statement\r\n\r\n- some handled props are being passed thru as unhandled, and emitting warnings\r\n- `key` is missing on an array\r\n\r\n# solution\r\n\r\npatch",
      "changedFiles": 4,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-07-26T16:50:55Z",
      "deletions": 58,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA0MjAzOTgw",
      "mergedAt": "2018-07-26T21:38:05Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "fix(pkgs): handle unhandled props and keys",
      "url": "https://github.com/Tripwire/octagon/pull/262"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA2MTQ0NDAz": {
      "additions": 18,
      "body": "- [x] Use a meaningful title for the pull request. Include the name of the package modified.\r\n- [x] Test the change in your own code. (Compile and run.)\r\n- [x] Add or edit tests to reflect the change. (Run with `npm test`.)\r\n- [x] Follow the advice from the [readme](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#make-a-pull-request).\r\n- [x] Avoid [common mistakes](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#common-mistakes).\r\n- [x] Run `npm run lint package-name` (or `tsc` if no `tslint.json` is present).\r\n\r\nSelect one of these and delete the others:\r\nIf changing an existing definition:\r\n- [x] Provide a URL to documentation or source code which provides context for the suggested changes: https://github.com/yoshuawuyts/nanographql/blob/master/index.js#L5\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-08-03T21:35:56Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA2MTQ0NDAz",
      "mergedAt": "2018-08-03T22:29:17Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MDkzMzE2",
        "nameWithOwner": "DefinitelyTyped/DefinitelyTyped"
      },
      "state": "MERGED",
      "title": "fix(nanographql): support usage as normal fn",
      "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27863"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA2NTM5MDk1": {
      "additions": 6,
      "body": "# problem\r\n\r\nclose allows for a race, and gives no chance of preventing race\r\n\r\n# solution\r\n\r\n- allow close to be awaitable (e.g. use the pg .close promise).  [ref close usage](https://node-postgres.com/#getting-started)",
      "changedFiles": 3,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-08-06T23:05:36Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA2NTM5MDk1",
      "mergedAt": "2018-09-11T19:54:52Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNzY1MTY1Ng==",
        "nameWithOwner": "voxpelli/node-pg-pubsub"
      },
      "state": "MERGED",
      "title": "feat(pkg): allow waiting for pgPool to close",
      "url": "https://github.com/voxpelli/node-pg-pubsub/pull/37"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA3ODQ3OTMx": {
      "additions": 35,
      "body": "# problem\r\n\r\ntests fail in master\r\n\r\n# solution\r\n\r\npatch for node 10 compat",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-08-13T00:11:43Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA3ODQ3OTMx",
      "mergedAt": "2018-08-13T00:21:41Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "fix(tests): patch tests to be compatible with node@10",
      "url": "https://github.com/node-swig/swig-templates/pull/48"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA3ODQ5MDMz": {
      "additions": 3864,
      "body": "# problem\r\n\r\nyarn > npm.  that's an opinion, but npm is creating noisy bogus output on node latest\r\n\r\n# soln \r\n\r\nyarn",
      "changedFiles": 6,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-08-13T00:33:54Z",
      "deletions": 25,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA3ODQ5MDMz",
      "mergedAt": "2018-08-13T00:52:44Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "refactor(pkg): npm => yarn",
      "url": "https://github.com/node-swig/swig-templates/pull/49"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA3ODUwOTk5": {
      "additions": 971,
      "body": "# problem\r\n\r\nThe value of `this` might be modified when called in other situations.\r\n\r\n# soln\r\n\r\n`this` => `self`\r\n\r\n# discussion\r\n\r\nAll other references to `this` are guarded with `self` in all other functions.",
      "changedFiles": 6,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2018-08-13T01:11:18Z",
      "deletions": 387,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA3ODUwOTk5",
      "mergedAt": "2018-08-13T04:46:50Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "fix(swig): apply consistent context guard (this => self)",
      "url": "https://github.com/node-swig/swig-templates/pull/50"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA3ODcxODg0": {
      "additions": 3075,
      "body": "# problem\r\n\r\nreleases are manual\r\n\r\n# solution\r\n\r\nauto-release w/ sem-rel",
      "changedFiles": 5,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-08-13T05:16:42Z",
      "deletions": 77,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA3ODcxODg0",
      "mergedAt": "2018-08-13T06:49:48Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "chore(pkg): init semantic-release",
      "url": "https://github.com/node-swig/swig-templates/pull/51"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA3ODg0MDcw": {
      "additions": 4733,
      "body": "# problem\r\n\r\nloose linting\r\n\r\n# solution\r\n\r\nstrict linting (and formatting).  you know, pedantic junk.",
      "changedFiles": 64,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-08-13T06:51:03Z",
      "deletions": 3172,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA3ODg0MDcw",
      "mergedAt": "2018-08-13T07:20:24Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1MDg4MjA0Nw==",
        "nameWithOwner": "node-swig/swig-templates"
      },
      "state": "MERGED",
      "title": "feat(pkg): super lint",
      "url": "https://github.com/node-swig/swig-templates/pull/52"
    },
    "MDExOlB1bGxSZXF1ZXN0MjA5MzQyMzI0": {
      "additions": 2,
      "body": "**this is a fake pr for demo purposes**\r\n\r\n# problem statement\r\n\r\n```\r\n# template\r\n<!--\r\n- X behaves this way, which breaks Y\r\n-->\r\n```\r\n- documentation did not make clear the original intent of _how_ to get to the ui documentation\r\n\r\n# solution\r\n\r\n```\r\n# template\r\n<!--\r\n- decouple X & Y\r\n- make Y a standalone component, etc\r\n-->\r\n```\r\n\r\n- applied the proper punctuation of `!` to the document\r\n\r\n# discussion\r\n\r\n```\r\n# template\r\n<!--\r\ne.g.:\r\n- \"here's a GIF of X revamped\"\r\n- \"considered this, considered that, yada yada\"\r\n-->\r\n\r\n<!--\r\n// UI PR?\r\n// here's a handy bash function to load into your shell profile so you can convert\r\n// screen recordings to animated GIFs!\r\n// movToGif my-screen-recording.mov ==> my-screen-recording.mov.gif\r\nfunction movToGif() {\r\n  `ffmpeg -i $1 -pix_fmt rgb24 -r 5 -f gif - | gifsicle --optimize=4 --delay=20 > $1.gif`;\r\n}\r\n-->\r\n```\r\n\r\n- i would like to promote greater future use of `!` in documentation.  can we setup a weekly working group, team?",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-08-19T04:29:25Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0MjA5MzQyMzI0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "docs(design): frivolous change for PR sake",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0MjE0NDcwMjk4": {
      "additions": 1,
      "body": "Closes #284\r\n\r\n# problem statement\r\n\r\n<!--\r\n- X behaves this way, which breaks Y\r\n-->\r\n\r\n# solution\r\n\r\n<!--\r\n- decouple X & Y\r\n- make Y a standalone component, etc\r\n-->\r\n\r\n# discussion\r\n\r\n<!--\r\n- here's a GIF of X revamped\r\n- here's a GIF of Y revamped\r\n-->\r\n\r\n<!--\r\n// here's a handy bash function to load into your shell profile so you can convert\r\n// screen recordings to animated GIFs!\r\n// movToGif my-screen-recording.mov ==> my-screen-recording.mov.gif\r\nfunction movToGif() {\r\n  `ffmpeg -i $1 -pix_fmt rgb24 -r 5 -f gif - | gifsicle --optimize=4 --delay=20 > $1.gif`;\r\n}\r\n-->\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-09-10T23:15:10Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MjE0NDcwMjk4",
      "mergedAt": "2018-09-10T23:23:02Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NzE2ODYzMQ==",
        "nameWithOwner": "Tripwire/octagon"
      },
      "state": "MERGED",
      "title": "chore(package): update webpack to version 4.18.0",
      "url": "https://github.com/Tripwire/octagon/pull/285"
    },
    "MDExOlB1bGxSZXF1ZXN0MjE3MTMxMzIz": {
      "additions": 4,
      "body": "# problem\r\n\r\ndeps are out of data. specifically koa-compose get's real annoying in v3 when using koa@latest\r\n\r\n# solution\r\n\r\n- bump most deps\r\n- run tests. they are 💚 ",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-09-20T23:08:47Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0MjE3MTMxMzIz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMjQ5OTI3NA==",
        "nameWithOwner": "ZijianHe/koa-router"
      },
      "state": "OPEN",
      "title": "feat(pkg): update deps",
      "url": "https://github.com/ZijianHe/koa-router/pull/483"
    },
    "MDExOlB1bGxSZXF1ZXN0MjE3MTMyMzQ2": {
      "additions": 2,
      "body": "# problem\r\n\r\ndeps are out of data. specifically koa-compose get's real annoying in v3 when using koa@latest\r\n\r\n# solution\r\n\r\n- bump most deps\r\n- run tests. they are 💚 ",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-09-20T23:15:07Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MjE3MTMyMzQ2",
      "mergedAt": "2018-09-26T03:42:34Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMjE3NDczOA==",
        "nameWithOwner": "koajs/mount"
      },
      "state": "MERGED",
      "title": "feat(pkg): update deps",
      "url": "https://github.com/koajs/mount/pull/68"
    },
    "MDExOlB1bGxSZXF1ZXN0MjE3NTI3MDA5": {
      "additions": 1885,
      "body": "# problem\r\n\r\ndeps out of date",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-09-23T19:40:06Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0MjE3NTI3MDA5",
      "mergedAt": "2018-09-23T19:42:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTAwMTg4Njc=",
        "nameWithOwner": "cdaringe/fast-wood"
      },
      "state": "MERGED",
      "title": "feat: bump deps",
      "url": "https://github.com/cdaringe/fast-wood/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MjE4MjEwODA4": {
      "additions": 7833,
      "body": "",
      "changedFiles": 35,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 8
      },
      "createdAt": "2018-09-26T07:13:12Z",
      "deletions": 2342,
      "id": "MDExOlB1bGxSZXF1ZXN0MjE4MjEwODA4",
      "mergedAt": "2018-10-22T04:45:59Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMzMyNzk1NzE=",
        "nameWithOwner": "cdaringe/github-diary"
      },
      "state": "MERGED",
      "title": "wip: more graphs!",
      "url": "https://github.com/cdaringe/github-diary/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MjI2NDAxNTE3": {
      "additions": 17,
      "body": "**What is the purpose of this pull request? (put an \"X\" next to item)**\r\n\r\n[x] Documentation update\r\n[ ] Bug fix ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/bug-report.md))\r\n[ ] New rule ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/rule-proposal.md))\r\n[ ] Changes an existing rule ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/rule-change-proposal.md))\r\n[ ] Add autofixing to a rule\r\n[ ] Add a CLI option\r\n[x] Add something to the core\r\n[ ] Other, please explain:\r\n\r\n<!--\r\n    Please ensure your pull request is ready:\r\n\r\n    - Read the pull request guide (https://eslint.org/docs/developer-guide/contributing/pull-requests)\r\n    - Include tests for this change\r\n    - Update documentation for this change (if appropriate)\r\n-->\r\n\r\n<!--\r\n    The following is required for all pull requests:\r\n-->\r\n\r\n**What changes did you make? (Give an overview)**\r\n\r\n`baseConfig` only accepts a rules object.  however, it would be friendly and desirable to offer a path to a `baseConfig` eslint configuration file in addition.  this saves the developer from having to parse the `baseConfig` rules on their own\r\n\r\n**Is there anything you'd like reviewers to focus on?**\r\n\r\nthe whole bit!",
      "changedFiles": 3,
      "comments": {
        "totalCount": 11
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-10-28T22:13:23Z",
      "deletions": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI2NDAxNTE3",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMTA2MTc3Mw==",
        "nameWithOwner": "eslint/eslint"
      },
      "state": "CLOSED",
      "title": "Update: Add support for filename baseConfig",
      "url": "https://github.com/eslint/eslint/pull/11028"
    },
    "MDExOlB1bGxSZXF1ZXN0MjM0ODY5MTMw": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-11-30T04:33:05Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MjM0ODY5MTMw",
      "mergedAt": "2018-11-30T04:33:44Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk5NjY1MjIwNQ==",
        "nameWithOwner": "cdaringe/cogsworth"
      },
      "state": "MERGED",
      "title": "chore(package): update lerna to version 3.5.1",
      "url": "https://github.com/cdaringe/cogsworth/pull/7"
    },
    "MDExOlB1bGxSZXF1ZXN0MjM4OTQyNzA2": {
      "additions": 1,
      "body": "# problem\r\n\r\n- module not listed\r\n\r\n# solution\r\n\r\n- list it!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-12-16T02:19:22Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MjM4OTQyNzA2",
      "mergedAt": "2019-01-07T09:00:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1Mjc3NDg5OQ==",
        "nameWithOwner": "avajs/awesome-ava"
      },
      "state": "MERGED",
      "title": "Add `ava-fixture-docker-db`",
      "url": "https://github.com/avajs/awesome-ava/pull/25"
    },
    "MDExOlB1bGxSZXF1ZXN0MjM5MDE2NTMy": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-12-17T03:18:53Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MjM5MDE2NTMy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4NDM4Nzc5Mg==",
        "nameWithOwner": "cdaringe/surge-review"
      },
      "state": "CLOSED",
      "title": "chore(package): update semantic-release to version 15.12.4",
      "url": "https://github.com/cdaringe/surge-review/pull/23"
    },
    "MDExOlB1bGxSZXF1ZXN0MjM5MDE3NDMz": {
      "additions": 4696,
      "body": "",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2018-12-17T03:26:08Z",
      "deletions": 7701,
      "id": "MDExOlB1bGxSZXF1ZXN0MjM5MDE3NDMz",
      "mergedAt": "2018-12-17T03:26:55Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4NDM4Nzc5Mg==",
        "nameWithOwner": "cdaringe/surge-review"
      },
      "state": "MERGED",
      "title": "Test",
      "url": "https://github.com/cdaringe/surge-review/pull/24"
    },
    "MDExOlB1bGxSZXF1ZXN0MjQxNDYwMjI3": {
      "additions": 2345,
      "body": "# problem\r\n\r\nno ts\r\n\r\n# solution\r\n\r\nadd ts\r\n\r\n\r\nBREAKING CHANGE: various APIs have been removed/added to simplify TS\r\ncompatibility.  `hasLikelySynced` event has been dropped, and only\r\n_some_ pouch methods are attached directly to Pouchy instances with\r\nstrong typings.  Typescripts mixins interface is limited and cumbersome\r\nto proxy a full API (PouchDB::Dababase onto Pouchy), especially with overloads,\r\nthus, a subset of interfaces was carried over.  It should meet 95% of\r\nuse cases.  The user is otherwise encouraged to drop to\r\n`pouchyInstances.db` as necessary.",
      "changedFiles": 32,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2018-12-29T19:04:47Z",
      "deletions": 2186,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQxNDYwMjI3",
      "mergedAt": "2018-12-29T19:12:30Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "MERGED",
      "title": "feat(typescript): re-wire project and apis for TS support",
      "url": "https://github.com/cdaringe/pouchy/pull/179"
    },
    "MDExOlB1bGxSZXF1ZXN0MjQ2MDU4MjQw": {
      "additions": 5,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-01-19T17:02:00Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ2MDU4MjQw",
      "mergedAt": "2019-01-19T17:02:16Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "Greenkeeper/prettier standard 9.1.1",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/7"
    },
    "MDExOlB1bGxSZXF1ZXN0MjQ5MDM0OTMx": {
      "additions": 2,
      "body": "# problem\r\n\r\nthe scripts version cannot be set outside of the cli, making overrides incompatible with _other_ CRA loading tools, like styleguidist\r\n\r\n# solution\r\n\r\npermit setting the scripts version through the env",
      "changedFiles": 2,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-01-30T21:27:41Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ5MDM0OTMx",
      "mergedAt": "2019-03-01T14:08:11Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NTIzMTg4Mw==",
        "nameWithOwner": "timarney/react-app-rewired"
      },
      "state": "MERGED",
      "title": "feat/scripts-version-via-env",
      "url": "https://github.com/timarney/react-app-rewired/pull/359"
    },
    "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMjM3": {
      "additions": 48,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-02-02T19:13:52Z",
      "deletions": 46,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMjM3",
      "mergedAt": "2019-02-02T19:14:01Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "MERGED",
      "title": "Greenkeeper/lint staged 8.1.3",
      "url": "https://github.com/cdaringe/pouchy/pull/185"
    },
    "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMjgz": {
      "additions": 363,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-02-02T19:14:34Z",
      "deletions": 189,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMjgz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4NTg4NDE2OA==",
        "nameWithOwner": "cdaringe/webjerk"
      },
      "state": "CLOSED",
      "title": "Greenkeeper/lint staged 8.1.3",
      "url": "https://github.com/cdaringe/webjerk/pull/22"
    },
    "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMzE4": {
      "additions": 53,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-02-02T19:15:01Z",
      "deletions": 46,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMzE4",
      "mergedAt": "2019-02-02T19:15:06Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjIzODAxMjg=",
        "nameWithOwner": "cdaringe/run-container"
      },
      "state": "MERGED",
      "title": "Greenkeeper/lint staged 8.1.3",
      "url": "https://github.com/cdaringe/run-container/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMzQ2": {
      "additions": 53,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-02-02T19:15:19Z",
      "deletions": 46,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMzQ2",
      "mergedAt": "2019-02-02T19:15:25Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "Greenkeeper/lint staged 8.1.3",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/12"
    },
    "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMzY2": {
      "additions": 71,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-02-02T19:15:39Z",
      "deletions": 35,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMzY2",
      "mergedAt": "2019-02-02T19:15:45Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDgzOTMyMTM=",
        "nameWithOwner": "cdaringe/pg-subscribe"
      },
      "state": "MERGED",
      "title": "Greenkeeper/lint staged 8.1.3",
      "url": "https://github.com/cdaringe/pg-subscribe/pull/11"
    },
    "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMzkz": {
      "additions": 73,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-02-02T19:16:04Z",
      "deletions": 37,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ5ODMxMzkz",
      "mergedAt": "2019-02-02T19:16:09Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTIxODA4MjM=",
        "nameWithOwner": "cdaringe/webhookup"
      },
      "state": "MERGED",
      "title": "Greenkeeper/lint staged 8.1.3",
      "url": "https://github.com/cdaringe/webhookup/pull/8"
    },
    "MDExOlB1bGxSZXF1ZXN0MjUxNzk5NTQ0": {
      "additions": 2554,
      "body": "BREAKING CHANGE: counsel has been completely rewritten. the intent has\r\nnot changed, but the implementation and interfaces as much different.\r\nthere is no migration guide. please take a peek at the new documentation\r\nto decide if you want to migrate or not! the new interfaces are much\r\nsimpler, generally pure, and functional. i hope you enjoy it!",
      "changedFiles": 129,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-02-11T04:35:59Z",
      "deletions": 2846,
      "id": "MDExOlB1bGxSZXF1ZXN0MjUxNzk5NTQ0",
      "mergedAt": "2019-02-11T04:36:11Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTQxMDgxNA==",
        "nameWithOwner": "cdaringe/counsel"
      },
      "state": "MERGED",
      "title": "feat: major api refactor, add typescript",
      "url": "https://github.com/cdaringe/counsel/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0MjY1MTg2NjQ5": {
      "additions": 31973,
      "body": "# problem\r\n\r\n- no doc website exists\r\n\r\n# solution\r\n\r\n- implement (incomplete) impl w/ accompanying examples",
      "changedFiles": 48,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 16
      },
      "createdAt": "2019-03-28T04:54:49Z",
      "deletions": 6243,
      "id": "MDExOlB1bGxSZXF1ZXN0MjY1MTg2NjQ5",
      "mergedAt": "2019-03-28T06:28:09Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTk0NDI0MzA=",
        "nameWithOwner": "cdaringe/cowtown"
      },
      "state": "MERGED",
      "title": "feat/docs",
      "url": "https://github.com/cdaringe/cowtown/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MjY2MTE4NTc1": {
      "additions": 252,
      "body": "# problem\r\n\r\n- no isomorphic rendering docs\r\n\r\n# solution\r\n\r\n- add 'em",
      "changedFiles": 7,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-04-01T07:15:49Z",
      "deletions": 47,
      "id": "MDExOlB1bGxSZXF1ZXN0MjY2MTE4NTc1",
      "mergedAt": "2019-04-01T07:16:03Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTk0NDI0MzA=",
        "nameWithOwner": "cdaringe/cowtown"
      },
      "state": "MERGED",
      "title": "feat: add isomorphic rendering",
      "url": "https://github.com/cdaringe/cowtown/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0MjY4MDE5NzQ2": {
      "additions": 9821,
      "body": "",
      "changedFiles": 54,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-04-06T07:39:30Z",
      "deletions": 1596,
      "id": "MDExOlB1bGxSZXF1ZXN0MjY4MDE5NzQ2",
      "mergedAt": "2019-04-06T07:42:53Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTk0NDI0MzA=",
        "nameWithOwner": "cdaringe/cowtown"
      },
      "state": "MERGED",
      "title": "feat: migrate to docz",
      "url": "https://github.com/cdaringe/cowtown/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0MjY5MjYzNDE5": {
      "additions": 5,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-04-10T17:45:45Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MjY5MjYzNDE5",
      "mergedAt": "2019-04-10T17:46:08Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTIxODA4MjM=",
        "nameWithOwner": "cdaringe/webhookup"
      },
      "state": "MERGED",
      "title": "Greenkeeper/@types/node 11.13.3",
      "url": "https://github.com/cdaringe/webhookup/pull/12"
    },
    "MDExOlB1bGxSZXF1ZXN0MjcyMjkxNzQ1": {
      "additions": 552,
      "body": "",
      "changedFiles": 6,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2019-04-22T06:40:26Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcyMjkxNzQ1",
      "mergedAt": "2019-04-22T06:40:53Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTA1Mjg3NTQ=",
        "nameWithOwner": "cdaringe/blog"
      },
      "state": "MERGED",
      "title": "Rls",
      "url": "https://github.com/cdaringe/blog/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0MjgxOTAxNzAx": {
      "additions": 964,
      "body": "# problem\r\n\r\nit don't boot right!\r\n\r\n# solution\r\n\r\ntidy versions, types, boot seq",
      "changedFiles": 21,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-05-24T07:40:14Z",
      "deletions": 60433,
      "id": "MDExOlB1bGxSZXF1ZXN0MjgxOTAxNzAx",
      "mergedAt": "2019-05-24T07:40:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDU5Mjg1OTc=",
        "nameWithOwner": "dino-dna/dino-king"
      },
      "state": "MERGED",
      "title": "fix(boot): tidy typings, boot sequence",
      "url": "https://github.com/dino-dna/dino-king/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0Mjg2MDI5OTM5": {
      "additions": 1,
      "body": "# problem\r\n\r\nno readme\r\n\r\n# solution\r\n\r\ncreate one\r\n\r\n# discussion\r\n\r\nhacking w/ proto",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-06-07T02:32:02Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjg2MDI5OTM5",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDQ1MjQ2NzU=",
        "nameWithOwner": "cdaringe/radness"
      },
      "state": "CLOSED",
      "title": "create readme",
      "url": "https://github.com/cdaringe/radness/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0Mjg4NTY5NDA0": {
      "additions": 1,
      "body": "# problem\r\n\r\n- page title is generic\r\n\r\n# solution\r\n\r\n- make it read dino-king",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-06-15T17:06:03Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjg4NTY5NDA0",
      "mergedAt": "2019-06-15T17:07:37Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDU5Mjg1OTc=",
        "nameWithOwner": "dino-dna/dino-king"
      },
      "state": "MERGED",
      "title": "fix: page title",
      "url": "https://github.com/dino-dna/dino-king/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0MjkwODM3NDI1": {
      "additions": 1,
      "body": "# problem\r\n\r\nvscode recipe link is missing from readme\r\n\r\n# solution\r\n\r\nrestore it",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-06-22T17:33:58Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MjkwODM3NDI1",
      "mergedAt": "2019-06-23T13:22:44Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjgyMDc5OA==",
        "nameWithOwner": "avajs/ava"
      },
      "state": "MERGED",
      "title": "docs(readme): restore vscode debug recipe",
      "url": "https://github.com/avajs/ava/pull/2165"
    },
    "MDExOlB1bGxSZXF1ZXN0MjkyMjcyMTgz": {
      "additions": 1,
      "body": "# problem\r\n\r\nas discussed in https://github.com/styleguidist/react-docgen-typescript/issues/71#issuecomment-362370750, some compiler options break component discovery.  the safest strategy is to always include the tsconfig from user space, which improves component detection.\r\n\r\n# solution\r\n\r\nadd `.withCustomConfig` call, as it's quite commonplace to for consumers to tweak their compiler settings",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-06-27T05:23:44Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MjkyMjcyMTgz",
      "mergedAt": "2019-06-28T09:32:49Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjAzMzA4Ng==",
        "nameWithOwner": "styleguidist/react-styleguidist"
      },
      "state": "MERGED",
      "title": "docs(webpack): improve typescript usage",
      "url": "https://github.com/styleguidist/react-styleguidist/pull/1395"
    },
    "MDExOlB1bGxSZXF1ZXN0MzI4MDYzMzg5": {
      "additions": 1,
      "body": "https://cdaringe.github.io/dvd-corner-bounce\r\n\r\n- source can be seen https://github.com/cdaringe/dvd-corner-bounce\r\n- gh-pages content can be seen here: https://github.com/cdaringe/dvd-corner-bounce/tree/gh-pages\r\n  - 🤦‍♂ i added the cname a bit early, so github is now already redirecting!  but, it's just a nice little static site inspired by: https://www.youtube.com/watch?v=QOtuX0jL85Y\r\n\r\n- [x] There is reasonable content on the page (see: [No Content](https://github.com/js-org/js.org/wiki/No-Content))\r\n- [x] I have read and accepted the [Terms and Conditions](http://js.org/terms.html)\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-10-15T03:59:43Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI4MDYzMzg5",
      "mergedAt": "2019-10-16T12:34:10Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMzU3ODI0MA==",
        "nameWithOwner": "js-org/js.org"
      },
      "state": "MERGED",
      "title": "dvd.js.org",
      "url": "https://github.com/js-org/js.org/pull/3448"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMwODU1Mzc1": {
      "additions": 133,
      "body": "# problem\r\n\r\n- node tests on pure node-code shouldn't require funky electrode env\r\n\r\n# solution\r\n\r\n- dependency inject electron via plain-old-functions.  i choose to provide fakes over fakes stubbing modules. turns out sinon even _recommends_ di in their docs, https://sinonjs.org/how-to/stub-dependency/ ",
      "changedFiles": 26,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2019-10-22T07:58:59Z",
      "deletions": 130,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMwODU1Mzc1",
      "mergedAt": "2019-10-23T01:25:26Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMTU0NjA5ODY=",
        "nameWithOwner": "dino-dna/checkup"
      },
      "state": "MERGED",
      "title": "fix(tests): dep-inject electron to decouple electron env from node env capable src",
      "url": "https://github.com/dino-dna/checkup/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMyMzczNTEw": {
      "additions": 284,
      "body": "# problem\r\n\r\n- no log files!  gotta have log files.\r\n\r\n# solution\r\n\r\n- add them, and ipc for renderer logging support",
      "changedFiles": 12,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-10-25T07:13:19Z",
      "deletions": 32,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMyMzczNTEw",
      "mergedAt": "2019-10-25T15:35:58Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMTU0NjA5ODY=",
        "nameWithOwner": "dino-dna/checkup"
      },
      "state": "MERGED",
      "title": "feat: add logging",
      "url": "https://github.com/dino-dna/checkup/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMyODIzMTcy": {
      "additions": 3,
      "body": "### Description\r\n\r\n- allow for mdx consumers to use the themed `<Code />` component\r\n- https://github.com/doczjs/docz/issues/785#issuecomment-536327740\r\n\r\n### Review\r\n\r\ni'm not sure what tests and/or docs would be desired here, but am happy to add 'em as requested\r\n\r\n<!--\r\n- [ ] Check the copy\r\n- [ ] ...\r\n- [ ] ...\r\n-->\r\n\r\n### Pre-merge checklist\r\n\r\n<!--\r\n- [ ] ...\r\n- [ ] ...\r\n-->\r\n\r\n### Screenshots\r\n\r\n| Before | After |\r\n| ------ | ----- |\r\n| n/a  | ![image](https://user-images.githubusercontent.com/1003261/67629610-508ec600-f835-11e9-92ba-dda2935f1a16.png) |",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-10-27T04:13:14Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMyODIzMTcy",
      "mergedAt": "2019-10-28T14:53:58Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMjU1OTY0ODk=",
        "nameWithOwner": "doczjs/docz"
      },
      "state": "MERGED",
      "title": "feat(docz): expose <Code /> component",
      "url": "https://github.com/doczjs/docz/pull/1206"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMyODI2MzYw": {
      "additions": 74,
      "body": "# problem\r\n\r\n- i haven't like the icons much. they're ok, but i want better ones!\r\n\r\n# solution\r\n\r\n- ~start doing a crappy theme support.  really, this should be `iconTheme`, not `theme`, and `theme` should be read from the OS, which electron supports~\r\n- make iconTheme OS dark-mode aware for good defaults!\r\n- add a few more icon sets\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/67630102-5b4e5880-f83f-11e9-811b-24256771d9cd.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/67630188-debc7980-f840-11e9-8ee7-60172dd53595.png)\r\n",
      "changedFiles": 17,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2019-10-27T05:24:01Z",
      "deletions": 21,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMyODI2MzYw",
      "mergedAt": "2019-10-27T05:36:35Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMTU0NjA5ODY=",
        "nameWithOwner": "dino-dna/checkup"
      },
      "state": "MERGED",
      "title": "feat(theme): os-aware theme implementation",
      "url": "https://github.com/dino-dna/checkup/pull/12"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMyOTE2ODAy": {
      "additions": 112,
      "body": "# problem\r\n\r\n- then `pending` state _doesn't even animate!_ i mean waaaat\r\n\r\n# solution\r\n\r\n- add animation `.png` file generator script\r\n- animate frames every 100ms",
      "changedFiles": 32,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2019-10-28T01:24:51Z",
      "deletions": 21,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMyOTE2ODAy",
      "mergedAt": "2019-10-28T01:38:38Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMTU0NjA5ODY=",
        "nameWithOwner": "dino-dna/checkup"
      },
      "state": "MERGED",
      "title": "feat/animate-pending",
      "url": "https://github.com/dino-dna/checkup/pull/19"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMyOTE5MDI4": {
      "additions": 3,
      "body": "# problem\r\n\r\n- resolving conflicts on the web, no good!\r\n\r\n# solution\r\n\r\n- patch bad types",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-10-28T01:42:45Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMyOTE5MDI4",
      "mergedAt": "2019-10-28T01:45:47Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMTU0NjA5ODY=",
        "nameWithOwner": "dino-dna/checkup"
      },
      "state": "MERGED",
      "title": "fix: bad typings, version",
      "url": "https://github.com/dino-dna/checkup/pull/20"
    },
    "MDExOlB1bGxSZXF1ZXN0MzMyOTc3NjM4": {
      "additions": 248,
      "body": "# problem\r\n\r\n- gotta be able to snooze 'em up.  today, aqi has been bad all day! ok ok i get i get it, i _wont_ go biking. now that i know, bugger off!\r\n\r\n# solution\r\n\r\n- add a snooze button.  when snoozed, allow de-snoozing\r\n\r\n<img width=\"562\" alt=\"Screen Shot 2019-11-03 at 4 54 18 PM\" src=\"https://user-images.githubusercontent.com/1003261/68095142-c6a9b300-fe5b-11e9-988d-abe22a5ea1cd.png\">\r\n\r\n<img width=\"562\" alt=\"Screen Shot 2019-11-03 at 4 54 25 PM\" src=\"https://user-images.githubusercontent.com/1003261/68095143-c6a9b300-fe5b-11e9-8527-8ff831315b57.png\">\r\n",
      "changedFiles": 14,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2019-10-28T07:05:19Z",
      "deletions": 68,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMyOTc3NjM4",
      "mergedAt": "2019-11-05T03:46:30Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMTU0NjA5ODY=",
        "nameWithOwner": "dino-dna/checkup"
      },
      "state": "MERGED",
      "title": "feat: support basic snooze support",
      "url": "https://github.com/dino-dna/checkup/pull/22"
    },
    "MDExOlB1bGxSZXF1ZXN0MzQxMDg2MjM4": {
      "additions": 1,
      "body": "# problem\r\n\r\n- see #8\r\n\r\n# solution\r\n\r\n- upgrade RN version to 0.59.9",
      "changedFiles": 1,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2019-11-14T17:14:49Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MzQxMDg2MjM4",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxOTk3MTAzMzU=",
        "nameWithOwner": "electrode-io/movies-reloaded-miniapp"
      },
      "state": "CLOSED",
      "title": "fix: upgrade rn version",
      "url": "https://github.com/electrode-io/movies-reloaded-miniapp/pull/9"
    },
    "MDExOlB1bGxSZXF1ZXN0MzU4ODQ3MDEx": {
      "additions": 130,
      "body": "# problem\r\n\r\non generating an api, i encountered this:\r\n\r\n```\r\n$ ern regen-api\r\n[v0.38.7] [Cauldron: -NONE-]\r\n✔ Syncing https://github.com/electrode-io/electrode-native-manifest.git Manifest 1s\r\n? Would you like to bump the plugin version from [react-native-walmartsmartlist-api@1.8\r\n✔ Syncing https://github.com/electrode-io/electrode-native-manifest.git Manifest 1s\r\n✖ An error occurred: Could not resolve type undefined undefined\r\n```\r\n\r\nas you can see, the error message is invalid and not actionable.\r\n\r\nadditionally,\r\n\r\n- regen-api was attempting to set an undefined value if license was omitted\r\n- regen-api was _not_ setting `additionalProperties` appropriately\r\n- regen-api was not handling $refs in additionalProperties\r\n\r\n# solution\r\n\r\n- fix the invalid `parent` reference passed into the function stack that induces the reported error\r\n- enhance the error messaging to direct the user more closely to his/her failing code\r\n- test it.\r\n- set `additionalProperties`\r\n- do not set an undefined license value\r\n- permit $ref processing in additionalProperties\r\n\r\n# discussion\r\n\r\n- now the user gets meaningful, actionable information on error:\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/71702634-7d0b1500-2d85-11ea-84a7-9ba33011fa01.png)\r\n\r\n- the regen-fixtures-check may need some re-wiring:\r\n```\r\n$ node regen-fixtures-check\r\nfatal: ambiguous argument 'ORIG_HEAD': unknown revision or path not in the working tree.\r\nUse '--' to separate paths from revisions, like this:\r\n'git <command> [<revision>...] -- [<file>...]'\r\nchild_process.js:642\r\n    throw err;\r\n    ^\r\n\r\nError: Command failed: git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD\r\nfatal: ambiguous argument 'ORIG_HEAD': unknown revision or path not in the working tree.\r\n```",
      "changedFiles": 7,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2020-01-03T01:30:01Z",
      "deletions": 72,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU4ODQ3MDEx",
      "mergedAt": "2020-01-08T08:21:25Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk5ODMzMTIwNw==",
        "nameWithOwner": "electrode-io/electrode-native"
      },
      "state": "MERGED",
      "title": "fix(ern-api-gen): patch bad object ref, improve error messaging, patch $ref bugs",
      "url": "https://github.com/electrode-io/electrode-native/pull/1441"
    },
    "MDExOlB1bGxSZXF1ZXN0MzY0MzQ4NzM0": {
      "additions": 2,
      "body": "# problem\r\n\r\nappium models contain KV pairs, where the values of those pairs may contain double quote characters: `\"`.\r\n\r\nisUnique wraps a query in double quotes, thus the xpath.select(...) call cannot parse the passed query due to bad quote inputs.\r\n\r\n# solution\r\n\r\n- escape double quotes from the query\r\n\r\n# discussion\r\n\r\npartially fixes #1057.",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-01-17T22:47:20Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MzY0MzQ4NzM0",
      "mergedAt": "2020-01-18T02:14:44Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MzU1ODA4NA==",
        "nameWithOwner": "appium/appium-desktop"
      },
      "state": "MERGED",
      "title": "fix(shared): escape double quotes within a double quoted template query",
      "url": "https://github.com/appium/appium-desktop/pull/1221"
    },
    "MDExOlB1bGxSZXF1ZXN0MzY0MzU1MzU2": {
      "additions": 54,
      "body": "# problem\r\n\r\n#1057 and other related issues suffer `Error`s being thrown, yielding an unactionable, blank screen.\r\n\r\n# solution\r\n\r\nimprove the UX by adding an error boundary, communicating the exception to the user, and inviting her to create a new github issue.\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/72652591-3b10d000-393c-11ea-8dda-8e2935a39455.png)\r\n ",
      "changedFiles": 5,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2020-01-17T23:16:27Z",
      "deletions": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MzY0MzU1MzU2",
      "mergedAt": "2020-01-20T18:40:58Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MzU1ODA4NA==",
        "nameWithOwner": "appium/appium-desktop"
      },
      "state": "MERGED",
      "title": "feat: add <ErrorBoundary /> for improved error condition UX",
      "url": "https://github.com/appium/appium-desktop/pull/1222"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzc2NDY3MTQ4": {
      "additions": 12875,
      "body": "# problem\r\n\r\n- there are few packages cram-jammed together in the current state, as though they were one\r\n- we probably want to mono it up so we can also checkin a docs site :)\r\n\r\n# solution\r\n\r\n- lerna\r\n- typescript mono, using `references` -- `npx tsc -b packages`--efficient bulk compile 👌 \r\n- break up the things into three subpackages\r\n  - `effects-common`\r\n  - `effects-runtime`\r\n  - `babel-plugin-effects`\r\n\r\n# wip\r\n\r\n- [ ] un-destroy dave's readme docs",
      "changedFiles": 89,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2020-02-18T07:51:27Z",
      "deletions": 3824,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc2NDY3MTQ4",
      "mergedAt": "2020-02-23T00:17:51Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "feat/monorepo",
      "url": "https://github.com/effectsjs/effectsjs/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzc4NjU0MDEw": {
      "additions": 2005,
      "body": "# problem\r\n\r\nno docs site\r\n\r\n# solution\r\n\r\nreaaaal simple docs site\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/75102429-1f829000-55a0-11ea-99ff-3f339e3290a0.png)\r\n",
      "changedFiles": 15,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2020-02-23T02:22:12Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjU0MDEw",
      "mergedAt": "2020-02-23T17:57:53Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "feat(effects-docs): init",
      "url": "https://github.com/effectsjs/effectsjs/pull/4"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzc4NzMyNzM0": {
      "additions": 318,
      "body": "# problem\r\n\r\n- in preparation for #5, we need our lint/format hygiene in order\r\n\r\n# solution\r\n\r\n- wire in default prettier/eslint. I usually run `standard-damn-it` to wire in a minimal \"just works\" config, however this time I did the classico hand-stitching together of a JS+TS eslint config, so as to stay more in line w/ Dave-style JS/TS",
      "changedFiles": 7,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2020-02-23T17:56:25Z",
      "deletions": 147,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc4NzMyNzM0",
      "mergedAt": "2020-02-23T18:52:19Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "feat/lint-format",
      "url": "https://github.com/effectsjs/effectsjs/pull/8"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzc4ODAzOTg0": {
      "additions": 5419,
      "body": "# problem\r\n\r\nui/docs aren't interactive\r\n\r\n# solution\r\n\r\nmake 'em interactive with meaningful examples!\r\n\r\n![demo mov](https://user-images.githubusercontent.com/1003261/75128728-50cf8e80-567a-11ea-9209-3d315f026d3e.gif)\r\n",
      "changedFiles": 21,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 8
      },
      "createdAt": "2020-02-24T04:23:43Z",
      "deletions": 440,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODAzOTg0",
      "mergedAt": "2020-02-24T06:56:45Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "feat/interactive-ui",
      "url": "https://github.com/effectsjs/effectsjs/pull/11"
    },
    "MDExOlB1bGxSZXF1ZXN0MzgwNzExODU4": {
      "additions": 19368,
      "body": "# problemo\r\n\r\n- lots of window hacks in this beautiful, simple, fast jade impl\r\n\r\n# solution\r\n\r\n- proper compile phase for static site via gatsby... which also has a few hacks up its sleeve",
      "changedFiles": 63,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2020-02-27T08:50:38Z",
      "deletions": 6801,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgwNzExODU4",
      "mergedAt": "2020-02-28T06:13:46Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "feat: gatsby-ify",
      "url": "https://github.com/effectsjs/effectsjs/pull/13"
    },
    "MDExOlB1bGxSZXF1ZXN0MzgxMjMyODI0": {
      "additions": 1,
      "body": "- [x] There is reasonable content on the page (see: [No Content](https://github.com/js-org/js.org/wiki/No-Content))\r\n- [x] I have read and accepted the [Terms and Conditions](http://js.org/terms.html)\r\n\r\nhttps://github.com/effectsjs/effectsjs\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2020-02-28T06:51:18Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgxMjMyODI0",
      "mergedAt": "2020-02-28T15:57:06Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMzU3ODI0MA==",
        "nameWithOwner": "js-org/js.org"
      },
      "state": "MERGED",
      "title": "effects.js.org",
      "url": "https://github.com/js-org/js.org/pull/3762"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzg4OTI1MTQy": {
      "additions": 31,
      "body": "# problem\r\n\r\ntwo parts!\r\n\r\n**p1**\r\n\r\n`} handle 'get_audience' with (evt) { // ok`, but destructured\r\n\r\n`} handle 'get_audience' with ({ payload: mappedToNewName }) { // not ok`\r\n\r\nthe compiled block looks like\r\n\r\n```\r\n*get_audience(__e__, resume) { // __e__ vs { payload: mappedToNewName }\r\n  const result = yield function (handler) {\r\n    return new Promise(async (res, rej) => {\r\n      try {\r\n        if (population > 7e7) return stackResume(handler, 'world').then(res).catch(rej);\r\n        ...\r\n      } catch (handlerError) {\r\n        rej(handlerError);\r\n      }\r\n    });\r\n  ...\r\n```\r\n\r\n**p2**\r\n\r\nmissing `return` in `getAudience`",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-03-16T01:59:40Z",
      "deletions": 30,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg4OTI1MTQy",
      "mergedAt": "2020-03-16T02:15:25Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "tests: fix hello-world",
      "url": "https://github.com/effectsjs/effectsjs/pull/21"
    },
    "MDExOlB1bGxSZXF1ZXN0MzkxODMyMTU1": {
      "additions": 344,
      "body": "# problem\r\n\r\n- doc site example runner stinks. crashes all the time!\r\n\r\n# solution\r\n\r\n- move it to a webworker. 🐎 \r\n- add more resilient error handling. self.onuncaughtrejection/self.onerror actually _work_ now 🤕 \r\n- worry less about patching _normal_ window.console, because we're only patching the workers to send messages _back to the parent_, which is untouched 😌 \r\n... annnnnd add an example that proves that current effect roots actually _dooo_ work. gotta better understand why that's the case.  expected it to break!",
      "changedFiles": 10,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2020-03-21T08:32:44Z",
      "deletions": 124,
      "id": "MDExOlB1bGxSZXF1ZXN0MzkxODMyMTU1",
      "mergedAt": "2020-03-21T16:45:12Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "refactor/docs",
      "url": "https://github.com/effectsjs/effectsjs/pull/22"
    },
    "MDExOlB1bGxSZXF1ZXN0MzkzMzk5Mzkz": {
      "additions": 16623,
      "body": "# problem\r\n\r\n`npm` keeps crashing, and i'm tired of it. it also doesn't work correctly with `\"depname\": \"file:./path/to/dep\"` style syntax which is breaking my ability to experiment with ease. grrrr\r\n\r\n# solution\r\n\r\n- yarn and yarn workspaces\r\n  - workspaces let you just `yarn` once in the root and have it install everything for all of the packages in `./packages/*`\r\n\r\n# discussion\r\n\r\nwe dont _need to do it_, but \r\n\r\n- i would like engineered code in my pkg manager vs npm-hacks, &\r\n- it would also let me progress on this prettier POC, which npm is blocking\r\n\r\n...hence prompting this effort",
      "changedFiles": 15,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2020-03-25T05:57:13Z",
      "deletions": 32683,
      "id": "MDExOlB1bGxSZXF1ZXN0MzkzMzk5Mzkz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "CLOSED",
      "title": "feat: yarn",
      "url": "https://github.com/effectsjs/effectsjs/pull/28"
    },
    "MDExOlB1bGxSZXF1ZXN0MzkzOTg3Njgw": {
      "additions": 16741,
      "body": "# todo\r\n\r\n- [ ] based off of #28, which is probably contentious\r\n\r\n# problem\r\n\r\nusers will need to wire in a custom parser. this is _one way to do that_. now that @dpchamps taught me the good way, this way feels much much worse, but hey--it's cheap, it's a valid--it works? not sure if we should even support it. i clearly annotate in the readme that _this is a bad way!_.",
      "changedFiles": 23,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 8
      },
      "createdAt": "2020-03-26T06:47:26Z",
      "deletions": 32683,
      "id": "MDExOlB1bGxSZXF1ZXN0MzkzOTg3Njgw",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "CLOSED",
      "title": "feat/babel-parser-effects-evil-monkey-patch",
      "url": "https://github.com/effectsjs/effectsjs/pull/29"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzk0NTYyMjE1": {
      "additions": 8,
      "body": "## Description\r\n\r\n`gatsby build` doesn't propagate all relevant errors up to its error reporter. webpack's stats `hasErrors()` is a child compilation aware call, thus, so too should be gatsby's error stats error collector\r\n\r\n### Documentation\r\n\r\nn/a\r\n\r\n## Related Issues\r\n\r\ncloses #22597",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2020-03-27T05:39:10Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTYyMjE1",
      "mergedAt": "2020-03-27T18:29:20Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNjA0MDg5NA==",
        "nameWithOwner": "gatsbyjs/gatsby"
      },
      "state": "MERGED",
      "title": "fix(gatsby): Collect nested webpack compilation stats errors",
      "url": "https://github.com/gatsbyjs/gatsby/pull/22598"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzk2NzQwNzY0": {
      "additions": 14895,
      "body": "# problem\r\n\r\n- no prettier support for effects\r\n\r\n# solution\r\n\r\n- add prettier support for effects\r\n- document the hacky way i've done it\r\n- format all the things\r\n- turn on formatting for various things that were previously turned off\r\n- re-orient the build to build, then _lint_ as we now rely on built plugin assets to execute the lint (prettier --check) step\r\n- add a test that merely asserts that all fixtures parse and are formatted",
      "changedFiles": 88,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 32
      },
      "createdAt": "2020-04-01T03:41:53Z",
      "deletions": 2216,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzQwNzY0",
      "mergedAt": "2020-04-13T01:32:07Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "feat: prettier-plugin-javascript-effects",
      "url": "https://github.com/effectsjs/effectsjs/pull/32"
    },
    "MDExOlB1bGxSZXF1ZXN0Mzk4NjYzNDM1": {
      "additions": 31,
      "body": "# problem\r\n\r\nexamples are old skool\r\n\r\n# solution\r\n\r\nmake em newt-skool 🦎 ",
      "changedFiles": 6,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-04-04T18:05:02Z",
      "deletions": 41,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk4NjYzNDM1",
      "mergedAt": "2020-04-05T02:28:05Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "fix: busted examples",
      "url": "https://github.com/effectsjs/effectsjs/pull/34"
    },
    "MDExOlB1bGxSZXF1ZXN0NDAwNjE1MDc2": {
      "additions": 0,
      "body": "# problem\r\n\r\nexamples were old-skool\r\n\r\n# soln\r\n\r\nnew-skool 'em up",
      "changedFiles": 0,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2020-04-08T03:59:36Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDAwNjE1MDc2",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "CLOSED",
      "title": "fix/examples",
      "url": "https://github.com/effectsjs/effectsjs/pull/41"
    },
    "MDExOlB1bGxSZXF1ZXN0NDAyMTA1Njg2": {
      "additions": 4,
      "body": "# problem\r\n\r\ndefault args specify `initialData`, but `{ context, request }` are actually passed\r\n\r\n# solution\r\n\r\nupdate to use `{ context, request }`",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-04-10T23:40:48Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0NDAyMTA1Njg2",
      "mergedAt": "2020-04-11T00:38:48Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NzUzODEwNA==",
        "nameWithOwner": "electrode-io/electrode"
      },
      "state": "MERGED",
      "title": "fix: correct prepare args",
      "url": "https://github.com/electrode-io/electrode/pull/1598"
    },
    "MDExOlB1bGxSZXF1ZXN0NDAyNTA0NTcw": {
      "additions": 5265,
      "body": "do it live",
      "changedFiles": 47,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2020-04-13T06:57:10Z",
      "deletions": 904,
      "id": "MDExOlB1bGxSZXF1ZXN0NDAyNTA0NTcw",
      "mergedAt": "2020-04-13T06:58:59Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMjE1OTU4NDM=",
        "nameWithOwner": "cdaringe/rad"
      },
      "state": "MERGED",
      "title": "Deno",
      "url": "https://github.com/cdaringe/rad/pull/43"
    },
    "MDExOlB1bGxSZXF1ZXN0NDA1NTUxMDY5": {
      "additions": 110,
      "body": "# problem\r\n\r\n- docs aren't formatted\r\n- some codeblocks aren't formatted\r\n- #44 \r\n- prettier plugin missing in package table\r\n\r\n# solution\r\n\r\n- auto format/prettier docs\r\n- address typos. closes #44\r\n- add row to package table",
      "changedFiles": 9,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2020-04-18T19:50:57Z",
      "deletions": 122,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA1NTUxMDY5",
      "mergedAt": "2020-04-18T19:54:23Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "docs/typos-and-formatting",
      "url": "https://github.com/effectsjs/effectsjs/pull/45"
    },
    "MDExOlB1bGxSZXF1ZXN0NDA1NTkwMjYz": {
      "additions": 1597,
      "body": "# problem\r\n\r\n- react, markdown, css, code-highlighting are all a bit mixed up. our homepage is mixed between many files. mdx lets us combine _most_ of our content down to one file, and reduce complexity stitching together the separate parts.\r\n\r\n# solution\r\n\r\n- use first-class gatsby highlighting, versus my prior highlightjs impl\r\n- get highlighting in markdown vs having to drop into react\r\n- make it easier to mix react and markdown\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/79677471-c2254c80-81a6-11ea-87dd-5b832cdc6ad1.png)\r\n\r\nnow all of our index content actually lives in `home.mdx`, vs scattered in a handful of `.md` files",
      "changedFiles": 17,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-04-19T02:02:07Z",
      "deletions": 227,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA1NTkwMjYz",
      "mergedAt": "2020-04-19T19:19:19Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDEyMzA5OTY=",
        "nameWithOwner": "effectsjs/effectsjs"
      },
      "state": "MERGED",
      "title": "docs: use mdx in effects-docs",
      "url": "https://github.com/effectsjs/effectsjs/pull/46"
    },
    "MDExOlB1bGxSZXF1ZXN0NDA1ODA4MDU3": {
      "additions": 1224,
      "body": "# problem\r\n\r\nrad is lame w/out deno!\r\n\r\n# solution\r\n\r\ndeno it up",
      "changedFiles": 52,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2020-04-20T03:54:02Z",
      "deletions": 911,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA1ODA4MDU3",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMjE1OTU4NDM=",
        "nameWithOwner": "cdaringe/rad"
      },
      "state": "CLOSED",
      "title": "Deno",
      "url": "https://github.com/cdaringe/rad/pull/46"
    },
    "MDExOlB1bGxSZXF1ZXN0NDA3NzM4NzY2": {
      "additions": 121,
      "body": "# problem\r\n\r\n- on setting up my own logger instance, i observed that exported log levels by levelName were of type `Record<string, number>`, and did not constrain my input to a valid, case-sensitive, stringy value\r\n\r\n# solution\r\n\r\n- `enum`ify  and expose `LogLevels`\r\n- type `levelName` to have type `LogLevel`, which is just a good ol' string union of `\"INFO\" | \"DEBUG\" | ...` etc\r\n- update `mod.ts` with enum export\r\n- update docs w/ inline examples _using_ said enum export\r\n- increase strictness around providing bogus log levels\r\n\r\n# discussion\r\n\r\nthis is one of those topics that i think people can validly debate if more typing helps or hurts. i'm not married to this proposal or the implementation details, so by all means--fire away. i _do_ want type safety here and am fine to bring it into userspace if we decide we dont want such _stuff_ here.",
      "changedFiles": 8,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2020-04-23T07:42:00Z",
      "deletions": 64,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA3NzM4NzY2",
      "mergedAt": "2020-04-25T09:13:27Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMzM0NDIzODQ=",
        "nameWithOwner": "denoland/deno"
      },
      "state": "MERGED",
      "title": "refactor(log): support enum log level",
      "url": "https://github.com/denoland/deno/pull/4859"
    },
    "MDExOlB1bGxSZXF1ZXN0NDA4OTU2NDI3": {
      "additions": 6,
      "body": "# problem\r\n\r\n- deno 38 is old skool cool!\r\n\r\n# solution\r\n\r\n- deno 41",
      "changedFiles": 4,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-04-25T19:13:57Z",
      "deletions": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA4OTU2NDI3",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3MTA2Mjg0",
        "nameWithOwner": "srackham/rimu"
      },
      "state": "CLOSED",
      "title": "chore: bump to deno 41",
      "url": "https://github.com/srackham/rimu/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NDA5MjMyMDk5": {
      "additions": 6,
      "body": "# problem\r\n\r\n- `rad` not listed\r\n\r\n# solution\r\n\r\n- add rad!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-04-27T03:45:53Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA5MjMyMDk5",
      "mergedAt": "2020-04-27T13:13:35Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMTYxNTY1MTg=",
        "nameWithOwner": "denoland/dotland"
      },
      "state": "MERGED",
      "title": "feat/update-database.json",
      "url": "https://github.com/denoland/dotland/pull/350"
    },
    "MDExOlB1bGxSZXF1ZXN0NDEyNDc4Nzg2": {
      "additions": 20,
      "body": "# problem\r\n\r\ncollecting stats can be tedious\r\n\r\n# solution\r\n\r\nautomate it!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-05-02T16:58:51Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0NDEyNDc4Nzg2",
      "mergedAt": "2020-05-07T07:23:09Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NzUzODEwNA==",
        "nameWithOwner": "electrode-io/electrode"
      },
      "state": "MERGED",
      "title": "docs(github): one-command solution for collecting system stats",
      "url": "https://github.com/electrode-io/electrode/pull/1637"
    },
    "MDExOlB1bGxSZXF1ZXN0NDE5Nzk1NTIy": {
      "additions": 1696,
      "body": "# problem\r\n\r\nxarc archetype tasks are not configurable onload\r\n\r\n# solution\r\n\r\n- rather than induce side-effects on-require, instead, take _most of the effects_ and only execute the effects on function call. in other words, take _everything to do with the archetype_ and lazily execute the effects inside a function.  now, what was once an effectful import, is now a lazy, and thus can be configured.\r\n\r\ne.g.\r\n\r\n```ts\r\nconst archetype = require('<archetype-pkg>/config/archetype')({\r\n  flagA: true,\r\n  flagB: false,\r\n  retries: 100\r\n})\r\n```\r\n\r\nvs\r\n\r\n```ts\r\nprocess.env.IS_FLAG_A_ENABLED = '1'; // side-effect\r\nrequire('<archetype-pkg>/config/archetype'); // more implicit side effects\r\n```\r\n\r\nthe totality of the PR could be summarized by taking existing code that looks like this:\r\n\r\n```js\r\nrequire('x') // effectful\r\nconst y = require('z');\r\ny.doStuff()  // effectful\r\nmodule.exports = { y }\r\n```\r\n\r\ninto something like:\r\n\r\n```js\r\nmodule.exports = (opts) => {\r\n  require('x') // effectful, but at least user flow controlled\r\n  const y = require('z');\r\n  y.doStuff(opts.y)  // effectful, but at least user flow controlled\r\n}\r\n```\r\n\r\n# discussion\r\n\r\n**this changeset is massive**, but can be trimmed down extensively by reviewing ignoring whitespace: https://github.com/electrode-io/electrode/pull/1643/files?w=1\r\n \r\non `require('@xarc/app[-dev]')`, a variety of side-effects and eager binding occur. dynamic requires to various configuration files are eagerly evaluated, and the ability to _tune_ the resultant tasks and configuration is voided _unless_ ENV vars are set in advanced before the require statement is executed. a major short-coming of this effort is that in many places, configuration _only happens via the ENV_, specifically in development mode when firing off in child processes. for now, i ask that we disregard that issue, as there are strategies to mitigate that shortcoming, such as modifiying the child process env, writing temp config, sending config over ipc, launching with additional flags, and more.\r\n\r\nthis PR attempts to:\r\n\r\n- not change the core logic/flows of existing archetypes, beyond the archetype exports\r\n- move all effects to inside functions\r\n- _improve_ some amount of backward compatibility by still having the archetypes be singletons. to not do so would be very challenging given the way how the archetypes are require'd from so many sources and mutated by _many parties_\r\n",
      "changedFiles": 83,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 13
      },
      "createdAt": "2020-05-18T23:38:29Z",
      "deletions": 18565,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE5Nzk1NTIy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NzUzODEwNA==",
        "nameWithOwner": "electrode-io/electrode"
      },
      "state": "CLOSED",
      "title": "feat/extensible-xarc",
      "url": "https://github.com/electrode-io/electrode/pull/1643"
    },
    "MDExOlB1bGxSZXF1ZXN0NDE5ODIxMTE0": {
      "additions": 2996,
      "body": "# problem\r\n\r\nxarc archetype tasks are not configurable onload\r\n\r\n# solution\r\n\r\n- rather than induce side-effects on-require, instead, take _most of the effects_ and only execute the effects on function call. in other words, take _everything to do with the archetype_ and lazily execute the effects inside a function.  now, what was once an effectful import, is now a lazy, and thus can be configured.\r\n\r\ne.g.\r\n\r\n```ts\r\nconst archetype = require('<archetype-pkg>/config/archetype')({\r\n  flagA: true,\r\n  flagB: false,\r\n  retries: 100\r\n})\r\n```\r\n\r\nvs\r\n\r\n```ts\r\nprocess.env.IS_FLAG_A_ENABLED = '1'; // side-effect\r\nrequire('<archetype-pkg>/config/archetype'); // more implicit side effects\r\n```\r\n\r\nthe totality of the PR could be summarized by taking existing code that looks like this:\r\n\r\n```js\r\nrequire('x') // effectful\r\nconst y = require('z');\r\ny.doStuff()  // effectful\r\nmodule.exports = { y }\r\n```\r\n\r\ninto something like:\r\n\r\n```js\r\nmodule.exports = (opts) => {\r\n  require('x') // effectful, but at least user flow controlled\r\n  const y = require('z');\r\n  y.doStuff(opts.y)  // effectful, but at least user flow controlled\r\n}\r\n```\r\n\r\n# discussion\r\n\r\n**this changeset is massive**, but can be trimmed down extensively by reviewing ignoring whitespace: https://github.com/electrode-io/electrode/pull/1645/files?w=1\r\n \r\non `require('@xarc/app[-dev]')`, a variety of side-effects and eager binding occur. dynamic requires to various configuration files are eagerly evaluated, and the ability to _tune_ the resultant tasks and configuration is voided _unless_ ENV vars are set in advanced before the require statement is executed. a major short-coming of this effort is that in many places, configuration _only happens via the ENV_, specifically in development mode when firing off in child processes. for now, i ask that we disregard that issue, as there are strategies to mitigate that shortcoming, such as modifiying the child process env, writing temp config, sending config over ipc, launching with additional flags, and more.\r\n\r\nthis PR attempts to:\r\n\r\n- not change the core logic/flows of existing archetypes, beyond the archetype exports\r\n- move all effects to inside functions\r\n- _improve_ some amount of backward compatibility by still having the archetypes be singletons. to not do so would be very challenging given the way how the archetypes are require'd from so many sources and mutated by _many parties_\r\n",
      "changedFiles": 85,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2020-05-19T01:18:04Z",
      "deletions": 18566,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE5ODIxMTE0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NzUzODEwNA==",
        "nameWithOwner": "electrode-io/electrode"
      },
      "state": "CLOSED",
      "title": "feat: archetypes as functions",
      "url": "https://github.com/electrode-io/electrode/pull/1645"
    },
    "MDExOlB1bGxSZXF1ZXN0NDIwMjY4NjU0": {
      "additions": 2996,
      "body": "see #1645 \r\n\r\nhttps://github.com/electrode-io/electrode/pull/1646/files#diff-52d4bf43db96176e77cc9038a78f98e1",
      "changedFiles": 85,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2020-05-19T17:43:24Z",
      "deletions": 18566,
      "id": "MDExOlB1bGxSZXF1ZXN0NDIwMjY4NjU0",
      "mergedAt": "2020-05-19T18:21:18Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NzUzODEwNA==",
        "nameWithOwner": "electrode-io/electrode"
      },
      "state": "MERGED",
      "title": "feat: archetypes as functions",
      "url": "https://github.com/electrode-io/electrode/pull/1646"
    },
    "MDExOlB1bGxSZXF1ZXN0NDIyNDc0Njk0": {
      "additions": 4413,
      "body": "# problem\r\n\r\n- Flow types are incomplete, out-of-sync, and generally weak, but TS types on reconciler are up-to-date\r\n- JSX/TSX KV assertions are poor\r\n\r\n# solution\r\n\r\n- update key deps (react-reconciler, ts, babel, etc)\r\n- update reconciler to newer API\r\n- prune a handful of junk examples\r\n- drop debounced render--let optimized fiber deal w/ it (unless there are shell contraints i ought be aware of!)\r\n- migrate & refactor, aggressively :/\r\n\r\n# todo\r\n\r\n- [ ] type out prop APIs for elements\r\n- [ ] export first class components, so as to avoid bad `react.d.ts` typings having all of ReactDOM typings conflict with blessed\r\n- [ ] discern what is wrong w/ an aspect on the reconciler. `examples/index` has issue when entering a demo, hitting `esc` closes the demo and `demo` state is not defined when it should be\r\n- [ ] tests. get serious about tests.",
      "changedFiles": 60,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2020-05-24T21:43:10Z",
      "deletions": 7264,
      "id": "MDExOlB1bGxSZXF1ZXN0NDIyNDc0Njk0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzOTUwOTA5MQ==",
        "nameWithOwner": "Yomguithereal/react-blessed"
      },
      "state": "OPEN",
      "title": "refactor: typescript",
      "url": "https://github.com/Yomguithereal/react-blessed/pull/107"
    },
    "MDExOlB1bGxSZXF1ZXN0NDIzNTQ5NzM0": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-05-27T01:19:32Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDIzNTQ5NzM0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjcxODg4NzM=",
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      },
      "state": "CLOSED",
      "title": "arst",
      "url": "https://github.com/cdaringe/probot-buddy-testing/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NDI0MDg3OTE4": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-05-27T20:07:41Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDI0MDg3OTE4",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjcxODg4NzM=",
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      },
      "state": "CLOSED",
      "title": "feat: best feature",
      "url": "https://github.com/cdaringe/probot-buddy-testing/pull/2"
    },
    "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky": {
      "additions": 0,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 12
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-05-27T20:49:27Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDI0MTA2NDky",
      "mergedAt": "2020-05-29T17:31:28Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjcxODg4NzM=",
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      },
      "state": "MERGED",
      "title": "chore: best weee",
      "url": "https://github.com/cdaringe/probot-buddy-testing/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0NDI1MTg0NjAz": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-05-29T15:50:48Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDI1MTg0NjAz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjc4OTU0NzI=",
        "nameWithOwner": "cdaringe/probot-funsies"
      },
      "state": "CLOSED",
      "title": "Update readme.md",
      "url": "https://github.com/cdaringe/probot-funsies/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NDI1MjM0NTI4": {
      "additions": 0,
      "body": "",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2020-05-29T17:34:01Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM0NTI4",
      "mergedAt": "2020-05-29T17:34:26Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjcxODg4NzM=",
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      },
      "state": "MERGED",
      "title": "fix: add missing resources a and b",
      "url": "https://github.com/cdaringe/probot-buddy-testing/pull/5"
    },
    "MDExOlB1bGxSZXF1ZXN0NDI1MjM3MjUw": {
      "additions": 0,
      "body": "Reverts cdaringe/probot-buddy-testing#5",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-05-29T17:40:24Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3MjUw",
      "mergedAt": "2020-05-29T17:40:42Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjcxODg4NzM=",
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      },
      "state": "MERGED",
      "title": "Revert \"fix: add missing resources a and b\"",
      "url": "https://github.com/cdaringe/probot-buddy-testing/pull/6"
    },
    "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5": {
      "additions": 0,
      "body": "Reverts cdaringe/probot-buddy-testing#6",
      "changedFiles": 2,
      "comments": {
        "totalCount": 17
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-05-29T17:40:53Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDI1MjM3NDU5",
      "mergedAt": "2020-05-29T19:34:42Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjcxODg4NzM=",
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      },
      "state": "MERGED",
      "title": "fix: try testing statuses_",
      "url": "https://github.com/cdaringe/probot-buddy-testing/pull/7"
    },
    "MDExOlB1bGxSZXF1ZXN0NDMxMjUyOTMx": {
      "additions": 0,
      "body": "n/a",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-06-08T16:19:59Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NDMxMjUyOTMx",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjcxODg4NzM=",
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      },
      "state": "CLOSED",
      "title": "test(tacos): arstarstarst333",
      "url": "https://github.com/cdaringe/probot-buddy-testing/pull/9"
    },
    "MDExOlB1bGxSZXF1ZXN0NDMxNDg0OTUw": {
      "additions": 20,
      "body": "# Problem\r\n\r\n- `next.js` does _not_ expose a mechanism to get at webpack `stats` or webpack compiler hooks, required by our application for post-processing\r\n\r\n# Solution\r\n\r\n- Provide the user a mechanism to get a handle on the webpack compiler.\r\n\r\n# Discussion\r\n\r\n- Motivator--I need a clean way to bundle my next.js Server application for docker. I do _not_ want to bundle my full `node_modules`, as I have a monorepo and my dependency stack has all sorts of _other_ stuff in it. One way to keep my size down would be to _know_ what top level application dependencies my application is using, and use that to reduce my node_modules footprint. Such an effort would require webpack stats exposed\r\n  - Ideally, there could be some customization to the server bundling process [see help request #13916](https://github.com/vercel/next.js/discussions/13916) to simply _not externalize_ things in `node_modules`.\r\n  - Next uses a moderately _complex_ server bundling/externalizing algorithm, (see `packages/next/build/webpack-config.ts`), so adding support _here_ would be strongly preferred :)\r\n\r\nThis PR in the current state is more-or-less a proposal, not targeted at acceptance. We're this feature accepted, clearly documentation and tests would need to accompany :)",
      "changedFiles": 2,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-06-09T01:45:36Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0NDMxNDg0OTUw",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3MDEwNzc4Ng==",
        "nameWithOwner": "vercel/next.js"
      },
      "state": "CLOSED",
      "title": "feat: expose webpack compiler",
      "url": "https://github.com/vercel/next.js/pull/13917"
    },
    "MDExOlB1bGxSZXF1ZXN0NDM4MTE0MjQw": {
      "additions": 0,
      "body": "# problem\r\n\r\n- ccolors is declared twice. once is highly effectful and breaks 256 color support. fixes #49\r\n\r\n# before\r\n\r\nshould have reds and oranges, but uses terminal default values:\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/85323473-ea6a4980-b47c-11ea-8ced-668fad9e5953.png)\r\n\r\n# after\r\n\r\nrespects 256 color codes:\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/85323453-e2aaa500-b47c-11ea-9a22-82c16ed2b34c.png)\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-06-22T18:41:04Z",
      "deletions": 17,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM4MTE0MjQw",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNzQyMTQ4OTQ=",
        "nameWithOwner": "cdaringe/neo-blessed"
      },
      "state": "OPEN",
      "title": "fix: drop redundant, effectful ccolors decl",
      "url": "https://github.com/cdaringe/neo-blessed/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NDM4MTE1MjQw": {
      "additions": 0,
      "body": "# problem\r\n\r\n- ccolors is declared twice. once is highly effectful and breaks 256 color support. fixes #49\r\n\r\n# before\r\n\r\nshould have reds and oranges, but uses terminal default values:\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/85323473-ea6a4980-b47c-11ea-8ced-668fad9e5953.png)\r\n\r\n# after\r\n\r\nrespects 256 color codes:\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/85323453-e2aaa500-b47c-11ea-9a22-82c16ed2b34c.png)\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-06-22T18:43:10Z",
      "deletions": 17,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM4MTE1MjQw",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMzcyMjcyNjI=",
        "nameWithOwner": "embarklabs/neo-blessed"
      },
      "state": "OPEN",
      "title": "fix(colors): restore 256 color support, drop redundant effectful ccolors decl",
      "url": "https://github.com/embarklabs/neo-blessed/pull/50"
    },
    "MDExOlB1bGxSZXF1ZXN0NDYzMDIyNDgz": {
      "additions": 1,
      "body": "# problem\r\n\r\nJust as the default rollup config is a function of builder options, so too should-be/could-be userland rollup configuration\r\n\r\n# solution\r\n\r\nPass in full options to userland rollup config function\r\n\r\n<!-- Please make sure you have read the submission guidelines before posting an PR -->\r\n<!-- https://github.com/nrwl/nx/blob/master/CONTRIBUTING.md#-submitting-a-pr -->\r\n\r\n<!-- Please make sure that your commit message follows our format -->\r\n<!-- Example: `fix(nx): must begin with lowercase` -->\r\n\r\n## Current Behavior\r\n<!-- This is the behavior we have today -->\r\n\r\n## Expected Behavior\r\n<!-- This is the behavior we should expect with the changes in this PR -->\r\n\r\n## Related Issue(s)\r\n<!-- Please link the issue being fixed so it gets closed when this is merged. -->\r\n\r\nFixes #\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-08-04T21:39:07Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDYzMDIyNDgz",
      "mergedAt": "2020-08-06T03:13:17Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDAwNjE3MTY=",
        "nameWithOwner": "nrwl/nx"
      },
      "state": "MERGED",
      "title": "feat(web): pass through builder options to custom rollup config",
      "url": "https://github.com/nrwl/nx/pull/3470"
    },
    "MDExOlB1bGxSZXF1ZXN0NDY3NDYwMTIw": {
      "additions": 8,
      "body": "Prevent cryptic error of `TypeError: Cannot read property 'map' of undefined`, which doesn't guide the user towards success\r\n\r\n<!-- Please make sure you have read the submission guidelines before posting an PR -->\r\n<!-- https://github.com/nrwl/nx/blob/master/CONTRIBUTING.md#-submitting-a-pr -->\r\n\r\n<!-- Please make sure that your commit message follows our format -->\r\n<!-- Example: `fix(nx): must begin with lowercase` -->\r\n\r\n## Current Behavior\r\n\r\n`TypeError: Cannot read property 'map' of undefined` on bad input\r\n\r\n## Expected Behavior\r\n\r\nGuidance on what was incorrect\r\n\r\n## Related Issue(s)\r\n\r\n#3354, #3318 \r\n\r\nFixes #\r\n\r\nn/a",
      "changedFiles": 1,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-08-13T15:27:59Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY3NDYwMTIw",
      "mergedAt": "2020-09-24T14:25:46Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDAwNjE3MTY=",
        "nameWithOwner": "nrwl/nx"
      },
      "state": "MERGED",
      "title": "feat(core): add user-friendly error on invalid input",
      "url": "https://github.com/nrwl/nx/pull/3516"
    },
    "MDExOlB1bGxSZXF1ZXN0NDcxMjYxODMz": {
      "additions": 107,
      "body": "Interested in this PR? Please head over to #16483 and 👍 /:thumbsdown: or add commentary!\r\n\r\n# Problem\r\n\r\n- next collects a bunch of awesome, interesting build data that user space wants to tap into\r\n\r\n# Solution\r\n\r\n- allow users to access internal build datas\r\n- document it\r\n- test it\r\n\r\n*warn* i didn't test the docs site--i didn't see a blurb in the contributing on this, so the documentation content is _unverified!_",
      "changedFiles": 8,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2020-08-20T21:56:36Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcxMjYxODMz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3MDEwNzc4Ng==",
        "nameWithOwner": "vercel/next.js"
      },
      "state": "CLOSED",
      "title": "feat(build): add onBuildComplete reporting API",
      "url": "https://github.com/vercel/next.js/pull/16418"
    },
    "MDExOlB1bGxSZXF1ZXN0NDk4OTYzNTQx": {
      "additions": 22,
      "body": "# Problem\r\n\r\nNo `OCaml` streamers.\r\n\r\n# Solution\r\n\r\nStart streaming OCaml, and self-add :)",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-10-07T04:07:59Z",
      "deletions": 10,
      "id": "MDExOlB1bGxSZXF1ZXN0NDk4OTYzNTQx",
      "mergedAt": "2020-11-02T19:45:50Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMTU5NTI2MTA=",
        "nameWithOwner": "bnb/awesome-developer-streams"
      },
      "state": "MERGED",
      "title": "feat: add chris dieringer",
      "url": "https://github.com/bnb/awesome-developer-streams/pull/269"
    },
    "MDExOlB1bGxSZXF1ZXN0NTAxMTgyOTIy": {
      "additions": 18,
      "body": "# Problem\r\n\r\nIt's common to install node in docker, and using NVM is quite helpful in this regard. Installing and using NVM isn't always. straightforward.\r\n\r\n# Solution\r\n\r\nMake it easier for users to setup nvm in docker by droppin' some docs.\r\n\r\nRef: https://stackoverflow.com/questions/25899912/how-to-install-nvm-in-docker",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2020-10-11T18:19:33Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTAxMTgyOTIy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MTIyMzA=",
        "nameWithOwner": "nvm-sh/nvm"
      },
      "state": "OPEN",
      "title": "docs: add docker tips",
      "url": "https://github.com/nvm-sh/nvm/pull/2318"
    },
    "MDExOlB1bGxSZXF1ZXN0NTIwODc0NTk3": {
      "additions": 1,
      "body": "<!--\r\nThank you for your contribution.\r\n\r\nBefore making a PR, please read our contributing guidelines at\r\nhttps://github.com/DevExpress/testcafe-hammerhead/blob/master/CONTRIBUTING.md#code-contribution\r\n\r\nWe recommend creating a *draft* PR, so that you can mark it as 'ready for review' when you are done.\r\n-->\r\n\r\n## Purpose\r\n\r\nCorrect invalid assumption that `err` is guaranteed to be an `Error` instance.\r\n\r\n## Approach\r\n\r\n- only call toString if it exists\r\n\r\n## References\r\n\r\nhttps://github.com/DevExpress/testcafe-hammerhead/issues/2480\r\n\r\n## Pre-Merge TODO\r\n- [ ] Write tests for your proposed changes\r\n- [ ] Make sure that existing tests do not fail\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2020-11-13T22:05:01Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIwODc0NTk3",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNjg4MzgyMw==",
        "nameWithOwner": "DevExpress/testcafe-hammerhead"
      },
      "state": "CLOSED",
      "title": "fix: remove error instance assumption on property access",
      "url": "https://github.com/DevExpress/testcafe-hammerhead/pull/2481"
    },
    "MDExOlB1bGxSZXF1ZXN0NTQ3NzI0NjM3": {
      "additions": 29,
      "body": "# problem\r\n\r\ni didnt have python installed, or a python env w/ the needed dep\r\n\r\n# solution\r\n\r\nsupport docker, run anywhere (ish)",
      "changedFiles": 4,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2021-01-02T07:04:18Z",
      "deletions": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ3NzI0NjM3",
      "mergedAt": "2021-01-08T09:47:41Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyOTc5MjYwODg=",
        "nameWithOwner": "spiwn/FactorioApiScraper"
      },
      "state": "MERGED",
      "title": "feat: support docker",
      "url": "https://github.com/spiwn/FactorioApiScraper/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NTYwNzgzNjU4": {
      "additions": 1,
      "body": "# Problem\r\n\r\nFactorio Type Kit is not listed\r\n\r\n# Solution\r\n\r\nList it :)\r\n\r\nThis project is awesome--thank you for the killer work. I was delighted to put together an automated API scraper for factorio, and automate the build/publish of various artifacts, most importantly typescript definitions.",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-01-25T05:13:09Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTYwNzgzNjU4",
      "mergedAt": "2021-01-29T19:07:14Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTI5MTQxNDc=",
        "nameWithOwner": "TypeScriptToLua/TypeScriptToLua.github.io"
      },
      "state": "MERGED",
      "title": "docs: add factorio-type-kit",
      "url": "https://github.com/TypeScriptToLua/TypeScriptToLua.github.io/pull/23"
    },
    "MDExOlB1bGxSZXF1ZXN0NTczMDU0NjIy": {
      "additions": 2,
      "body": "## ⚠️ See discussion below for more info\r\n\r\nThis PR has changed quite a bit since it was opened, but it still fixes the same root issue.\r\n\r\n***\r\n\r\n**Original PR description:**\r\n\r\n> This reverts commit c818ad97ebd30bab76d2a519afcc8fc56e0e816f.\r\n> \r\n> #8519 was submitted to improve android support. However, in the process, it broke desktop support. cc/ @Larpon \r\n> | With revert | Without revert |\r\n> | ------------- | ------------- |\r\n> | ![image](https://user-images.githubusercontent.com/1003261/107871514-3710f380-6e57-11eb-9add-99a621500263.png) | ![image](https://user-images.githubusercontent.com/1003261/107871533-5c9dfd00-6e57-11eb-8a73-fa76477b3d79.png) |\r\n> \r\n> tetros go off screen. there are issues with scaling and bounds\r\n\r\n<!--\r\n\r\nPlease title your PR as follows: `time: fix foo bar`.\r\nAlways start with the thing you are fixing, then describe the fix.\r\nDon't use past tense (e.g. \"fixed foo bar\").\r\n\r\nExplain what your PR does and why.\r\n\r\nIf you are adding a new function, please document it and add tests:\r\n\r\n```\r\n// foo does foo and bar\r\nfn foo() {\r\n\r\n// file_test.v\r\nfn test_foo() {\r\n    assert foo() == ...\r\n    ...\r\n}\r\n```\r\n\r\nIf you are fixing a bug, please add a test that covers it.\r\n\r\nBefore submitting a PR, please run `v test-all` .\r\nSee also `TESTS.md`.\r\n\r\nI try to process PRs as soon as possible. They should be handled within 24 hours.\r\n\r\nApplying labels to PRs is not needed.\r\n\r\nThanks a lot for your contribution!\r\n\r\n-->\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 19
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2021-02-14T07:59:37Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTczMDU0NjIy",
      "mergedAt": "2021-02-16T11:41:21Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjk2NzcyOTc=",
        "nameWithOwner": "vlang/v"
      },
      "state": "MERGED",
      "title": "gg: window_size: normalize dpi scaling",
      "url": "https://github.com/vlang/v/pull/8738"
    },
    "MDExOlB1bGxSZXF1ZXN0NTc3MTc1NTk0": {
      "additions": 40,
      "body": "# Problem\r\n\r\nFixes #603. A failure currently just returns `null`\r\n\r\n# Solution\r\n\r\nFailing to start the worker now results in a `throw`, as the expressed intent of `start(...)` failed",
      "changedFiles": 5,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2021-02-21T20:33:28Z",
      "deletions": 82,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc3MTc1NTk0",
      "mergedAt": "2021-02-24T10:38:29Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTczOTc1ODM=",
        "nameWithOwner": "mswjs/msw"
      },
      "state": "MERGED",
      "title": "refactor: throw on start fail, vs null return",
      "url": "https://github.com/mswjs/msw/pull/607"
    },
    "MDExOlB1bGxSZXF1ZXN0NTc4MDQ5NzI1": {
      "additions": 1,
      "body": "<h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/api/package.json\n\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **658/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-1018905](https://snyk.io/vuln/SNYK-JS-LODASH-1018905) |  No  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **753/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASH-1040724](https://snyk.io/vuln/SNYK-JS-LODASH-1040724) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5ZDAxMWMwNS0wOWY4LTRlMzYtYjViMi02MjEzZGI0MmFhNjciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjlkMDExYzA1LTA5ZjgtNGUzNi1iNWIyLTYyMTNkYjQyYWE2NyJ9fQ==\" width=\"0\" height=\"0\"/><img src=\"https://app.snyk.io/badges/merge-advice/?package_manager=yarn&package_name=lodash&from_version=4.17.10&to_version=4.17.21&pr_id=9d011c05-09f8-4e36-b5b2-6213db42aa67&visibility=false&has_feature_flag=false\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"9d011c05-09f8-4e36-b5b2-6213db42aa67\",\"dependencies\":[{\"name\":\"lodash\",\"from\":\"4.17.10\",\"to\":\"4.17.21\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"7522964a-bca4-45aa-b609-e7c7b014d63d\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source=github&utm_medium=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"upgrade\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\",\"merge-advice-badge-shown\"],\"priorityScoreList\":[658,753]})\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-02-23T00:49:37Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc4MDQ5NzI1",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lodash from 4.17.10 to 4.17.21",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/38"
    },
    "MDExOlB1bGxSZXF1ZXN0NTc4MDk3NTM2": {
      "additions": 5,
      "body": "<h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n![merge advice](https://app.snyk.io/badges/merge-advice/?package_manager=yarn&package_name=lodash&from_version=4.17.10&to_version=4.17.21&pr_id=7f3ce97a-2898-47d2-81c3-7c144f9aa904&visibility=true&has_feature_flag=false)\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/common/package.json\n    - packages/common/yarn.lock\n\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **658/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-1018905](https://snyk.io/vuln/SNYK-JS-LODASH-1018905) |  No  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **753/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASH-1040724](https://snyk.io/vuln/SNYK-JS-LODASH-1040724) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3ZjNjZTk3YS0yODk4LTQ3ZDItODFjMy03YzE0NGY5YWE5MDQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdmM2NlOTdhLTI4OTgtNDdkMi04MWMzLTdjMTQ0ZjlhYTkwNCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/93fd332d-bf8d-499a-aba9-84683ab38d2a)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/93fd332d-bf8d-499a-aba9-84683ab38d2a/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"7f3ce97a-2898-47d2-81c3-7c144f9aa904\",\"dependencies\":[{\"name\":\"lodash\",\"from\":\"4.17.10\",\"to\":\"4.17.21\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"93fd332d-bf8d-499a-aba9-84683ab38d2a\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/93fd332d-bf8d-499a-aba9-84683ab38d2a?utm_source=github&utm_medium=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"upgrade\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\",\"merge-advice-badge-shown\"],\"priorityScoreList\":[658,753]})\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-02-23T02:57:31Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc4MDk3NTM2",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lodash from 4.17.10 to 4.17.21",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/39"
    },
    "MDExOlB1bGxSZXF1ZXN0NTc4MTc1Nzk0": {
      "additions": 7,
      "body": "<h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n![merge advice](https://app.snyk.io/badges/merge-advice/?package_manager=yarn&package_name=lodash&from_version=4.17.10&to_version=4.17.21&pr_id=1f7ef699-e387-4729-ab1f-61e652b4b180&visibility=true&has_feature_flag=false)\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **658/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-1018905](https://snyk.io/vuln/SNYK-JS-LODASH-1018905) |  No  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **753/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASH-1040724](https://snyk.io/vuln/SNYK-JS-LODASH-1040724) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxZjdlZjY5OS1lMzg3LTQ3MjktYWIxZi02MWU2NTJiNGIxODAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjFmN2VmNjk5LWUzODctNDcyOS1hYjFmLTYxZTY1MmI0YjE4MCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"1f7ef699-e387-4729-ab1f-61e652b4b180\",\"dependencies\":[{\"name\":\"lodash\",\"from\":\"4.17.10\",\"to\":\"4.17.21\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"upgrade\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\",\"merge-advice-badge-shown\"],\"priorityScoreList\":[658,753]})\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-02-23T06:01:09Z",
      "deletions": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc4MTc1Nzk0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lodash from 4.17.10 to 4.17.21",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/40"
    },
    "MDExOlB1bGxSZXF1ZXN0NTc4MTk3NzI5": {
      "additions": 1,
      "body": "# Description\r\n\r\nMono emits only native traces, and doesn't yield super interesting stacks on crash\r\n\r\n## Contributions\r\n\r\n- I changed `Dockerfile` because \"adding gdb allots for mono to enhance per thread stacktraces\". See [output emitted here for demonstration of the effect](https://github.com/mbround18/valheim-docker/discussions/162#discussioncomment-396292)\r\n\r\n## Checklist\r\n\r\n- [ ] I added one or multiple labels which best describes this PR.\r\n- [x] I have tested the changes locally.\r\n- [ ] This PR has a reviewer on it. \r\n- [x] I have validated my changes in a docker container and on Ubuntu. (Only needed for Odin or Docker Changes)\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2021-02-23T06:43:50Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc4MTk3NzI5",
      "mergedAt": "2021-02-23T17:12:35Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMzU1MTk4NDQ=",
        "nameWithOwner": "mbround18/valheim-docker"
      },
      "state": "MERGED",
      "title": "feat: add gdb for improved c# traces",
      "url": "https://github.com/mbround18/valheim-docker/pull/164"
    },
    "MDExOlB1bGxSZXF1ZXN0NTgwNjM0ODg1": {
      "additions": 2969,
      "body": "<h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **658/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-1018905](https://snyk.io/vuln/SNYK-JS-LODASH-1018905) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **753/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASH-1040724](https://snyk.io/vuln/SNYK-JS-LODASH-1040724) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzMzI0ZTEwYS01MGE5LTQxYzQtOTQwZC1kMzU1ODg0NWFiYjUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjMzMjRlMTBhLTUwYTktNDFjNC05NDBkLWQzNTU4ODQ1YWJiNSJ9fQ==\" width=\"0\" height=\"0\"/><img src=\"https://app.snyk.io/badges/merge-advice/?package_manager=yarn&package_name=pouchy&from_version=11.0.3&to_version=12.0.0&pr_id=3324e10a-50a9-41c4-940d-d3558845abb5&visibility=false&has_feature_flag=false\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"3324e10a-50a9-41c4-940d-d3558845abb5\",\"dependencies\":[{\"name\":\"pouchy\",\"from\":\"11.0.3\",\"to\":\"12.0.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"f6603448-9c5d-44da-b6b2-a1163095b76c\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source=github&utm_medium=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"upgrade\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\",\"merge-advice-badge-shown\"],\"priorityScoreList\":[658,753]})\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-02-26T06:29:08Z",
      "deletions": 623,
      "id": "MDExOlB1bGxSZXF1ZXN0NTgwNjM0ODg1",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzgyOTk5Nw==",
        "nameWithOwner": "cdaringe/tuffet"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade pouchy from 11.0.3 to 12.0.0",
      "url": "https://github.com/cdaringe/tuffet/pull/18"
    },
    "MDExOlB1bGxSZXF1ZXN0NTgwNjYxMDcy": {
      "additions": 1,
      "body": "<h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n![merge advice](https://app.snyk.io/badges/merge-advice/?package_manager=yarn&package_name=lodash&from_version=4.17.15&to_version=4.17.21&pr_id=b1f4875e-a250-4b6f-a019-bddcdd4aeac8&visibility=true&has_feature_flag=false)\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **658/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-1018905](https://snyk.io/vuln/SNYK-JS-LODASH-1018905) |  No  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **753/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASH-1040724](https://snyk.io/vuln/SNYK-JS-LODASH-1040724) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiMWY0ODc1ZS1hMjUwLTRiNmYtYTAxOS1iZGRjZGQ0YWVhYzgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImIxZjQ4NzVlLWEyNTAtNGI2Zi1hMDE5LWJkZGNkZDRhZWFjOCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/166bfa97-0f0d-4099-a7e7-2bbc3d855619)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/166bfa97-0f0d-4099-a7e7-2bbc3d855619/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"b1f4875e-a250-4b6f-a019-bddcdd4aeac8\",\"dependencies\":[{\"name\":\"lodash\",\"from\":\"4.17.15\",\"to\":\"4.17.21\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"166bfa97-0f0d-4099-a7e7-2bbc3d855619\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/166bfa97-0f0d-4099-a7e7-2bbc3d855619?utm_source=github&utm_medium=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"upgrade\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\",\"merge-advice-badge-shown\"],\"priorityScoreList\":[658,753]})\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-02-26T07:24:33Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTgwNjYxMDcy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "CLOSED",
      "title": "[Snyk] Security upgrade lodash from 4.17.15 to 4.17.21",
      "url": "https://github.com/cdaringe/pouchy/pull/1013"
    },
    "MDExOlB1bGxSZXF1ZXN0NTgxMzg0ODA1": {
      "additions": 4,
      "body": "<!--\r\n1. Give the PR a descriptive title.\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n-->\r\n\r\n# Problem\r\n\r\nUsers want docker guidance.\r\n\r\nhttps://github.com/denoland/deno/issues/3356\r\n\r\n# Solution\r\n\r\nProvide it.\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2021-02-27T18:55:38Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTgxMzg0ODA1",
      "mergedAt": "2021-04-21T09:24:43Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMzM0NDIzODQ=",
        "nameWithOwner": "denoland/deno"
      },
      "state": "MERGED",
      "title": "docs: advise docker support",
      "url": "https://github.com/denoland/deno/pull/9618"
    },
    "MDExOlB1bGxSZXF1ZXN0NTg2MTc3NTMw": {
      "additions": 10,
      "body": "# Problem\r\n\r\nOur tests implement an `afterEach(async () => { /* ... */ })` handler. We registered it, thinking all was well! However, jest processes afterEach handlers in reverse order of registration. That means that our integration test execute, effects could be outstanding due to interactions in the test, the test block exits, our `afterEach` _perhaps_ take a little bit of time to complete, the react effects settle from the integration test, and an `act()` error is emitted because cleanup() has not yet been invoked. Only until after our `afterEach` promise settles does RTL `cleanup()` get invoked, prompting effect teardown/cancellation, etc.\r\n\r\nWe wrote code that makes it s.t. `act()` errors fail our tests. With the above scenario also in play, we found our tests to have some degree of flakiness in noisy/inconsistent environments (like a busy CI agent).\r\n\r\nThe implicit behavior of RTL, I found, was actually undesirable. If I had known `cleanup` was a RTL provision in play just by importing the library, perhaps I would have more rapidly identified it as a potential culprit in our failures. Generally, side-effects as imports can be risky, with general exception when you explicitly import a verb, like `babel/register`, etc. I think this library should consider making this behavior explicit.\r\n\r\nI suspect other community members have periodic act() errors that they consider ghosts in the system, when perhaps they really need to look at their own `afterEach()` handlers!\r\n\r\nLet's warn those users! :)",
      "changedFiles": 1,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-03-07T03:11:06Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg2MTc3NTMw",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjM1NDk2OTE=",
        "nameWithOwner": "testing-library/testing-library-docs"
      },
      "state": "OPEN",
      "title": "docs(react-testing-library): warn about afterEach auto cleanup footgun",
      "url": "https://github.com/testing-library/testing-library-docs/pull/779"
    },
    "MDExOlB1bGxSZXF1ZXN0NTg2MzkyMjAy": {
      "additions": 1,
      "body": "<h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n![merge advice](https://app.snyk.io/badges/merge-advice/?package_manager=yarn&package_name=react-scripts-ts&from_version=2.17.0&to_version=4.0.1&pr_id=a2f64f77-eddf-4023-9e78-674da3c22fb1&visibility=true&has_feature_flag=false)\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/ui/package.json\n\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-GLOBPARENT-1016905](https://snyk.io/vuln/SNYK-JS-GLOBPARENT-1016905) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhMmY2NGY3Ny1lZGRmLTQwMjMtOWU3OC02NzRkYTNjMjJmYjEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImEyZjY0Zjc3LWVkZGYtNDAyMy05ZTc4LTY3NGRhM2MyMmZiMSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"a2f64f77-eddf-4023-9e78-674da3c22fb1\",\"dependencies\":[{\"name\":\"react-scripts-ts\",\"from\":\"2.17.0\",\"to\":\"4.0.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source=github&utm_medium=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-GLOBPARENT-1016905\"],\"upgrade\":[\"SNYK-JS-GLOBPARENT-1016905\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\",\"merge-advice-badge-shown\"],\"priorityScoreList\":[479]})\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-03-08T02:23:38Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg2MzkyMjAy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade react-scripts-ts from 2.17.0 to 4.0.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/41"
    },
    "MDExOlB1bGxSZXF1ZXN0NTk0MTI1MTcw": {
      "additions": 18,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-03-16T17:57:58Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk0MTI1MTcw",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNDg0Mzc1NzU=",
        "nameWithOwner": "cdaringe/drom"
      },
      "state": "OPEN",
      "title": "docs: recommend a simpler global drom execution model",
      "url": "https://github.com/cdaringe/drom/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NTk0MTI2MzE3": {
      "additions": 18,
      "body": "# problem\r\n\r\ni want to install `drom` globally, but felt that the recommended instructions re-implemented existing `opam` functionality.\r\n\r\n# solution\r\n\r\nadditionally consider a one-liner to support global `drom`\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-03-16T17:59:46Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk0MTI2MzE3",
      "mergedAt": "2021-03-17T16:27:05Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyOTA3MjY3MDk=",
        "nameWithOwner": "OCamlPro/drom"
      },
      "state": "MERGED",
      "title": "docs: recommend a simpler global drom execution model",
      "url": "https://github.com/OCamlPro/drom/pull/137"
    },
    "MDExOlB1bGxSZXF1ZXN0NTk2ODcxODg4": {
      "additions": 30,
      "body": "<!--- Provide a general summary of your changes in the Title above -->\r\n<!--- To help with semantic versioning the PR title should start with one of the conventional commit types. -->\r\n<!--- The conventional commit types for Semantic PR are: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert -->\r\n\r\n#### Description\r\n\r\n- support rendering the opam `switch`\r\n\r\n#### Motivation and Context\r\n\r\n- `switch` to me is more useful than ocaml `version`. i suspect users of local switches also would desire to see their switch vs ocaml version\r\n\r\n#### Screenshots (if appropriate):\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/111840917-61245e00-88ba-11eb-99f6-3c111577c6da.png)\r\n\r\n#### How Has This Been Tested?\r\n\r\n1. installed my binary locally, ran it\r\n2. unit test\r\n\r\n- [x] I have tested using **MacOS**\r\n- [ ] I have tested using **Linux**\r\n- [ ] I have tested using **Windows**\r\n\r\n#### Checklist:\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have updated the tests accordingly.\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2021-03-19T20:53:13Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk2ODcxODg4",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzg5OTExNTg=",
        "nameWithOwner": "starship/starship"
      },
      "state": "CLOSED",
      "title": "feat(ocaml): add switch variable to ocaml format",
      "url": "https://github.com/starship/starship/pull/2479"
    },
    "MDExOlB1bGxSZXF1ZXN0NTk2ODk3OTMy": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-03-19T21:49:22Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk2ODk3OTMy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNDk1NjMxOTI=",
        "nameWithOwner": "cdaringe/jsoo-react"
      },
      "state": "OPEN",
      "title": "feat: update jsoo-react.opam",
      "url": "https://github.com/cdaringe/jsoo-react/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NjAwMzQwNDU0": {
      "additions": 0,
      "body": "# whatever\r\n\r\njust testing",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-03-25T01:09:52Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwMzQwNDU0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNTA4MDIxMjQ=",
        "nameWithOwner": "cdaringe/promise_fns"
      },
      "state": "CLOSED",
      "title": "chore: test stuff",
      "url": "https://github.com/cdaringe/promise_fns/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NjAxMjI5Nzk5": {
      "additions": 1,
      "body": "# Problem\r\n\r\nI'm interested in trying out `ocaml-ci`\r\n\r\n# Solution\r\n\r\nAdd to allow list, per `readme.md`",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-03-26T01:01:55Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAxMjI5Nzk5",
      "mergedAt": "2021-03-26T08:58:11Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMDYwNzAxODA=",
        "nameWithOwner": "ocurrent/ocaml-ci"
      },
      "state": "MERGED",
      "title": "chore: add cdaringe to allow list",
      "url": "https://github.com/ocurrent/ocaml-ci/pull/326"
    },
    "MDExOlB1bGxSZXF1ZXN0NjA2ODQ2ODgz": {
      "additions": 71,
      "body": "# Problem\r\n\r\nCurrent implementation:\r\n\r\n- does not support all esbuild options\r\n- reimplements some esbuild types\r\n\r\n# Solution\r\n\r\n- Support esbuild options to be passed thru, so users can use more esbuild APIs to suit their needs\r\n- Dedupe types\r\n- Update docs\r\n\r\n# Discussion\r\n\r\n- the project has prettier in it, my editor picked it up, ...and ran it 😬 . hopefully that's ok? i didn't mean to send a bulk change, but ...editors... and prettier\r\n- `yarn test` outside of CI yields:\r\n\r\n\r\n```\r\n$ jest --clearCache && jest --detectOpenHandles                                                                                                                                   \r\nCleared /private/var/folders/b2/_t0w_hyn6jz28xm301k2qp81c9b83j/T/jest_okufzl\r\njest-haste-map: Haste module naming collision: esbuild-jest\r\n  The following files share their name; please adjust your hasteImpl:\r\n    * <rootDir>/package.json\r\n    * <rootDir>/dist/package.json\r\n ```\r\n\r\nthis is because the build step symlinks the dist folder. there's certainly ways around that, but FYI, I had to test like CI tests :)",
      "changedFiles": 3,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-04-01T03:59:30Z",
      "deletions": 70,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA2ODQ2ODgz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjYyNjkxMTk=",
        "nameWithOwner": "aelbore/esbuild-jest"
      },
      "state": "OPEN",
      "title": "feat: support esbuild options",
      "url": "https://github.com/aelbore/esbuild-jest/pull/29"
    },
    "MDExOlB1bGxSZXF1ZXN0NjI4MjM2Mjg4": {
      "additions": 24,
      "body": "<!-- Please make sure you have read the submission guidelines before posting an PR -->\r\n<!-- https://github.com/nrwl/nx/blob/master/CONTRIBUTING.md#-submitting-a-pr -->\r\n\r\n<!-- Please make sure that your commit message follows our format -->\r\n<!-- Example: `fix(nx): must begin with lowercase` -->\r\n\r\n## Current Behavior\r\n\r\n-  testTimeout flag not honored\r\n\r\n## Expected Behavior\r\n\r\n-  testTimeout flag honored\r\n\r\n## Related Issue(s)\r\n\r\nFixes #5517",
      "changedFiles": 6,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-04-30T22:01:21Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NjI4MjM2Mjg4",
      "mergedAt": "2021-04-30T23:10:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDAwNjE3MTY=",
        "nameWithOwner": "nrwl/nx"
      },
      "state": "MERGED",
      "title": "feat(testing): support test timeout argv flag",
      "url": "https://github.com/nrwl/nx/pull/5520"
    },
    "MDExOlB1bGxSZXF1ZXN0NjUwOTcxMTM5": {
      "additions": 1,
      "body": "- [x] There is reasonable content on the page (see: [No Content](https://github.com/js-org/js.org/wiki/No-Content))\r\n- [x] I have read and accepted the [Terms and Conditions](http://js.org/terms.html)\r\n\r\nfish.js.org is a **functional** (but still actively developing) phaser.io JS game. currently webgl animations work, and fish can be caught by the randomized hook! 😄 🐟 ",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-05-24T05:02:25Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUwOTcxMTM5",
      "mergedAt": "2021-05-24T19:20:50Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMzU3ODI0MA==",
        "nameWithOwner": "js-org/js.org"
      },
      "state": "MERGED",
      "title": "fish.js.org",
      "url": "https://github.com/js-org/js.org/pull/5968"
    },
    "MDExOlB1bGxSZXF1ZXN0NjUyNjQ4NzIw": {
      "additions": 16,
      "body": "<!--\r\nThanks for opening a PR! Your contribution is much appreciated.\r\nIn order to make sure your PR is handled as smoothly as possible we request that you follow the checklist sections below.\r\nChoose the right checklist for the change that you're making:\r\n-->\r\n\r\n## Bug\r\n\r\n- [ ] Related issues linked using `fixes #number`\r\n- [ ] Integration tests added\r\n\r\n## Feature\r\n\r\n- [ ] Implements an existing feature request or RFC. Make sure the feature request has been accepted for implementation before opening a PR.\r\n    -  https://github.com/vercel/next.js/discussions/25464\r\n- [x] Related issues linked using `fixes #number`\r\n- [ ] Integration tests added\r\n    - skipped. we can discuss adding some in here, though. there are no baselines to add to, and i suspect there would be opinions on how to do these meaningfully.\r\n- [x] Documentation added\r\n- [ ] Telemetry added. In case of a feature if it's used or not.\r\n    - skipped\r\n\r\n## Documentation / Examples\r\n\r\n- [x] Make sure the linting passes\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-05-25T17:57:47Z",
      "deletions": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUyNjQ4NzIw",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3MDEwNzc4Ng==",
        "nameWithOwner": "vercel/next.js"
      },
      "state": "CLOSED",
      "title": "feat(analyzer): support options field",
      "url": "https://github.com/vercel/next.js/pull/25463"
    },
    "MDExOlB1bGxSZXF1ZXN0Njg2NDAwMjE0": {
      "additions": 0,
      "body": "qwfp",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-07-09T00:11:57Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg2NDAwMjE0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQyNzMzMDM=",
        "nameWithOwner": "cdaringe/coach-testing"
      },
      "state": "OPEN",
      "title": "wat",
      "url": "https://github.com/cdaringe/coach-testing/pull/1"
    },
    "MDExOlB1bGxSZXF1ZXN0NzAwNjQ3MTUz": {
      "additions": 783,
      "body": "# problem\r\n\r\nno tests\r\n\r\n# soln\r\n\r\ntests",
      "changedFiles": 9,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-07-31T03:45:42Z",
      "deletions": 12,
      "id": "MDExOlB1bGxSZXF1ZXN0NzAwNjQ3MTUz",
      "mergedAt": "2021-07-31T03:52:47Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ4OTIxMDE=",
        "nameWithOwner": "cdaringe/airmap"
      },
      "state": "MERGED",
      "title": "feat: tests",
      "url": "https://github.com/cdaringe/airmap/pull/3"
    },
    "MDExOlB1bGxSZXF1ZXN0NzAyMDE1NDI3": {
      "additions": 71,
      "body": "",
      "changedFiles": 5,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2021-08-03T07:06:19Z",
      "deletions": 44,
      "id": "MDExOlB1bGxSZXF1ZXN0NzAyMDE1NDI3",
      "mergedAt": "2021-08-03T07:09:38Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ4OTIxMDE=",
        "nameWithOwner": "cdaringe/airmap"
      },
      "state": "MERGED",
      "title": "chore: great work",
      "url": "https://github.com/cdaringe/airmap/pull/4"
    },
    "MDExOlB1bGxSZXF1ZXN0NzIwOTk4NDc5": {
      "additions": 74,
      "body": "# problem\r\n\r\nI need access to the `picker` instance, but no API exposes it\r\n\r\n# solution\r\n\r\n- expose the picker in a `onPreBuild` optional callback, giving the user a handle to the picker once it's been fully configured\r\n- fix lint script\r\n- ...well, my editor ran `prettier` on a few thing on-save 🤦 . i didn't see a format script available in the repo, but i'm happy to apply whatever formatting is desired",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-08-27T03:29:08Z",
      "deletions": 66,
      "id": "MDExOlB1bGxSZXF1ZXN0NzIwOTk4NDc5",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNjc3ODI3ODE=",
        "nameWithOwner": "Jose-cd/React-google-drive-picker"
      },
      "state": "CLOSED",
      "title": "feat: add onPreBuild",
      "url": "https://github.com/Jose-cd/React-google-drive-picker/pull/8"
    },
    "MDExOlB1bGxSZXF1ZXN0NzIyMTE3Mjky": {
      "additions": 1,
      "body": "<!-- Brief description of purpose of changes and what changed -->\r\n# Problems\r\n\r\n- link incorrect for installation\r\n- unused route\r\n\r\n# Solutions\r\n\r\n- corrected pathname for installation\r\n- drop unused route\r\n\r\nCloses #490\r\n\r\n## Modified relative paths:\r\n\r\n<!-- For local branches, replace \"BRANCH_NAME\" with your branch; replace PATH/TO/PAGE -->\r\nhttps://v3-ocaml-org-git-fork-cdaringe-refactor-home-ocaml.vercel.app/\r\n\r\n<!-- For branches in forks, replace \"FORK_NAME\" and \"BRANCH_NAME\" with appropriate values, replace PATH/TO/PAGE -->\r\n<!-- https://v3-ocaml-org-git-fork-FORK_NAME-BRANCH_NAME-ocaml.vercel.app/PATH/TO/PAGE -->\r\n\r\n## Contributor Pre-flight Checklist\r\n\r\n- [x] Accessibility check - checked pa11y report for modified pages, observing new errors\r\n- [x] Responsive check - visually inspected vercel preview, using responsive tool to toggle between desktop and mobile view\r\n- [x] HTML review - use browser DOM/Page inspector to inspect generated HTML within `<div id=\"__next>\"` element\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2021-08-30T03:25:08Z",
      "deletions": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0NzIyMTE3Mjky",
      "mergedAt": "2021-08-30T05:45:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMTk0NDQ1Mzk=",
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      },
      "state": "MERGED",
      "title": "refactor: drop ResourcesBasics",
      "url": "https://github.com/ocaml/v3.ocaml.org-rescript/pull/518"
    },
    "MDExOlB1bGxSZXF1ZXN0NzI3Mjk0NTA4": {
      "additions": 161,
      "body": "# Problem\r\n\r\n- no place for react rules to live yet, until the plugin system gets ironed-out/formalized\r\n\r\n# Solution\r\n\r\n- add in initial react rule\r\n\r\n# Discussion\r\n\r\nI fully expect this to be rejected, but figured I'd use it as a discussion mechanism :)\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/132142363-4e266c79-5dd1-4cc2-b1e5-5f62e64af85c.png)\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-09-04T20:34:50Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI3Mjk0NTA4",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNTA3OTAxMjU=",
        "nameWithOwner": "denoland/deno_lint"
      },
      "state": "CLOSED",
      "title": "feat(react): add use-jsx-in-jsx",
      "url": "https://github.com/denoland/deno_lint/pull/838"
    },
    "MDExOlB1bGxSZXF1ZXN0NzMzMTc4MDYx": {
      "additions": 9,
      "body": "<!-- Please make sure you have read the submission guidelines before posting an PR -->\r\n<!-- https://github.com/nrwl/nx/blob/master/CONTRIBUTING.md#-submitting-a-pr -->\r\n\r\n<!-- Please make sure that your commit message follows our format -->\r\n<!-- Example: `fix(nx): must begin with lowercase` -->\r\n\r\n## Current Behavior\r\n\r\nUser specified buildTarget options **not** supported in node:execute\r\n\r\n## Expected Behavior\r\n\r\nUser specified buildTarget options **are** supported in node:execute\r\n\r\n## Related Issue(s)\r\n<!-- Please link the issue being fixed so it gets closed when this is merged. -->\r\n\r\nFixes #7001\r\n",
      "changedFiles": 3,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-09-13T23:00:01Z",
      "deletions": 0,
      "id": "MDExOlB1bGxSZXF1ZXN0NzMzMTc4MDYx",
      "mergedAt": "2021-10-18T14:42:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDAwNjE3MTY=",
        "nameWithOwner": "nrwl/nx"
      },
      "state": "MERGED",
      "title": "feat(node): support buildTargetOptions in node:execute",
      "url": "https://github.com/nrwl/nx/pull/7002"
    },
    "PR_kwDOD-z6ic4slXmZ": {
      "additions": 0,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 15
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-10-01T23:08:29Z",
      "deletions": 0,
      "id": "PR_kwDOD-z6ic4slXmZ",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjcxODg4NzM=",
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      },
      "state": "CLOSED",
      "title": "wee",
      "url": "https://github.com/cdaringe/probot-buddy-testing/pull/12"
    },
    "PR_kwDOGMb4384tOthP": {
      "additions": 176,
      "body": "# problem\r\n\r\nwill github actions pick this up? 🤔 ",
      "changedFiles": 10,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 11
      },
      "createdAt": "2021-10-15T01:23:37Z",
      "deletions": 135,
      "id": "PR_kwDOGMb4384tOthP",
      "mergedAt": "2021-10-15T02:37:48Z",
      "repository": {
        "id": "R_kgDOGMb43w",
        "nameWithOwner": "cdaringe/ppx_effects"
      },
      "state": "MERGED",
      "title": "feat: gopiandcode radness n ci",
      "url": "https://github.com/cdaringe/ppx_effects/pull/2"
    },
    "PR_kwDOALNGyM4tZ_Rc": {
      "additions": 463,
      "body": "# Problem\r\n\r\nSee #1157\r\n\r\n# Solution\r\n\r\n- Add config & cli options for target runtime\r\n- Add conditional `//If: ...` handling to include target runtime artifacts in compilation\r\n",
      "changedFiles": 22,
      "comments": {
        "totalCount": 19
      },
      "commits": {
        "totalCount": 52
      },
      "createdAt": "2021-10-19T21:03:09Z",
      "deletions": 164,
      "id": "PR_kwDOALNGyM4tZ_Rc",
      "mergedAt": "2021-12-07T15:31:41Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMTc0OTA2NA==",
        "nameWithOwner": "ocsigen/js_of_ocaml"
      },
      "state": "MERGED",
      "title": "feat(compiler): support target envs",
      "url": "https://github.com/ocsigen/js_of_ocaml/pull/1160"
    },
    "PR_kwDOCP54nM4t4CcP": {
      "additions": 215,
      "body": "# problem\r\n\r\n- no extension logging\r\n  - i have more than one issue getting the debugger working. having logging in place really helped me narrow down where debug launch issues where originating\r\n- the bytecode detection logic was ok, but i noticed it was possibly swallowing errors and simply returning `false` if any logic failed within the `try {}` block\r\n- during debugging, I could not see output from `ocamlearlybird`, as it's a VSCode managed process, but I had suspicion it may be crashing\r\n\r\n# solution\r\n\r\n- use the vscode extension logging provider\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/139563970-2a165d30-0212-4b51-8eed-237c4f0bb2ea.png)\r\n\r\n- improve error handling case\r\n- add a configuration setting, `\"ocamlearlybird.connectToLocalDebugAdapterServer\"`, which simply as implemented, just connects to `earlybird` on `localhost:4417`, vs launching an instance from VSCode for DAP. This helped me identify #36 ..., which really was two problems, the primary one being my copy of `jsoo` segfaulting 😆 \r\n- ...and 😬 😬 😬 , I accidentally ran [prettier](https://www.npmjs.com/package/prettier) on VSCode project. In case you are not aware, `prettier` is the `ocamlformat` of JS. I am willing to undo the prettier format, but there is not an explicit style guide or formatter listed for the JS. Much like OCaml is all in on `ocamlformat`, so too do i like to \"never discuss\" formatting in changesets. Given that I did it and it's just a single file, I added prettier to devDeps in case you are interested in adopting it? Let me know",
      "changedFiles": 4,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2021-10-30T07:01:05Z",
      "deletions": 90,
      "id": "PR_kwDOCP54nM4t4CcP",
      "mergedAt": "2021-10-31T07:52:38Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTA4OTQ3NDg=",
        "nameWithOwner": "hackwaly/ocamlearlybird"
      },
      "state": "MERGED",
      "title": "feat: add extension logging, improve extension features",
      "url": "https://github.com/hackwaly/ocamlearlybird/pull/35"
    },
    "PR_kwDOBM54-c4t4oNy": {
      "additions": 2,
      "body": "# problem\r\n\r\nocaml missing\r\n\r\n# solution\r\n\r\nadd it",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-10-30T22:53:02Z",
      "deletions": 1,
      "id": "PR_kwDOBM54-c4t4oNy",
      "mergedAt": "2021-12-14T10:48:55Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4MDY0MDI0OQ==",
        "nameWithOwner": "microsoft/debug-adapter-protocol"
      },
      "state": "MERGED",
      "title": "docs(implementors): add OCaml",
      "url": "https://github.com/microsoft/debug-adapter-protocol/pull/228"
    },
    "PR_kwDOALNGyM4t5lnm": {
      "additions": 47,
      "body": "# Problem\r\n\r\nSee https://github.com/ocsigen/js_of_ocaml/issues/1162\r\n\r\n# Solution\r\n\r\nDemonstrate a casual pass at slapping together a docker environment.\r\n\r\nTo try it out:\r\n\r\n- pull this branch\r\n- `make dev_container`\r\n- `make all test`",
      "changedFiles": 4,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2021-11-01T01:14:41Z",
      "deletions": 2,
      "id": "PR_kwDOALNGyM4t5lnm",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMTc0OTA2NA==",
        "nameWithOwner": "ocsigen/js_of_ocaml"
      },
      "state": "CLOSED",
      "title": "feat: support docker development",
      "url": "https://github.com/ocsigen/js_of_ocaml/pull/1163"
    },
    "PR_kwDOCaVDVc4uYFyH": {
      "additions": 2,
      "body": "# Problem\r\n\r\nMDN & caniuse claim different values for resize observer.\r\n\r\nref: https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver#browser_compatibility\r\n\r\nAside: should we find a slick way to pull in caniuse-lite into populating these toml configs?\r\n\r\n# Solution\r\n\r\nUpdate versions",
      "changedFiles": 1,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-11-10T22:47:00Z",
      "deletions": 2,
      "id": "PR_kwDOCaVDVc4uYFyH",
      "mergedAt": "2021-11-10T23:43:13Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjE4MjU2MjE=",
        "nameWithOwner": "JakeChampion/polyfill-library"
      },
      "state": "MERGED",
      "title": "fix(ResizeObserver): correct safari versions per MDN",
      "url": "https://github.com/JakeChampion/polyfill-library/pull/1116"
    },
    "PR_kwDOBfbSFM4ueoEt": {
      "additions": 12,
      "body": "<!-- Please make sure you have read the submission guidelines before posting an PR -->\r\n<!-- https://github.com/nrwl/nx/blob/master/CONTRIBUTING.md#-submitting-a-pr -->\r\n\r\n<!-- Please make sure that your commit message follows our format -->\r\n<!-- Example: `fix(nx): must begin with lowercase` -->\r\n\r\n## Current Behavior\r\n\r\n- node:execute generates commands with `-r source-map-support`, which fails\r\n\r\nUsing `-r source-map-support` makes dangerous assumptions about `node_modules` structure. Specifically, it assumes that `-r <THIS_MODULE>` is available for resolution by node. `pnpm`, for instance, will _not_ create `node_modules/source-map-support` in the top level, because it does not expose transitive dependencies. This isn't strictly a pnpm problem--but rather an incorrect expression of required dependencies in `packages/node/package.json`. I suspect other package managers may not guarantee this dependency in the same path either.  The common package managers (yarn, npm) in their default configurations _will_ write `node_modules/source-map-support`, so it works for 99% of folks, but nonetheless, does not work for all.\r\n\r\n## Expected Behavior\r\n\r\n- works, regardless of your package manager\r\n\r\n## Related Issue(s)\r\n\r\nFixes #\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-11-12T23:25:23Z",
      "deletions": 8,
      "id": "PR_kwDOBfbSFM4ueoEt",
      "mergedAt": "2021-11-17T00:23:29Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMDAwNjE3MTY=",
        "nameWithOwner": "nrwl/nx"
      },
      "state": "MERGED",
      "title": "fix(node): fix source-map-support dependency",
      "url": "https://github.com/nrwl/nx/pull/7728"
    },
    "PR_kwDOCqoIVs4ugoU0": {
      "additions": 2,
      "body": "# problem\r\n\r\nmost tutorials in the wild target cemu. as a wii u user, i was surprised that i needed a game dump to use bcml, and was confused for a bit on why i could not fill set a target lang.\r\n\r\n# solution\r\n\r\nclarify that lang populates only once game files are set. probably worth asserting somewhere that console use requires a dump as well _somewhere_, but that's for another docs segment!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-11-15T04:52:31Z",
      "deletions": 0,
      "id": "PR_kwDOCqoIVs4ugoU0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNzg5MTU0MTQ=",
        "nameWithOwner": "NiceneNerd/BCML"
      },
      "state": "CLOSED",
      "title": "feat(ui): clarify game languages hydration tooltip",
      "url": "https://github.com/NiceneNerd/BCML/pull/207"
    },
    "PR_kwDOAarPis4un49z": {
      "additions": 24,
      "body": "# Problem\r\n\r\nA browser's name is not enough to identify a browser, because browsers of the same name can be drastically different browsers based on their device/build target.\r\n\r\nSee #642\r\n\r\n# Solution\r\n\r\nImprove clarity, by specifying with greater precision how a browser's name maps to a browserslist/caniuse identifier.\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/142082749-f23f8fa8-78d3-4807-881b-0fdfe8048de2.png)\r\n\r\n^ screenshot is out of date, but that's the gist :)",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-11-16T23:23:48Z",
      "deletions": 23,
      "id": "PR_kwDOAarPis4un49z",
      "mergedAt": "2021-11-17T13:11:06Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNzk3MTQ2Ng==",
        "nameWithOwner": "browserslist/browserslist"
      },
      "state": "MERGED",
      "title": "docs(readme): improve browser name => device mapping",
      "url": "https://github.com/browserslist/browserslist/pull/649"
    },
    "PR_kwDOCaVDVc4vVE9e": {
      "additions": 17,
      "body": "# Problem\r\n\r\n- `android` has various incorrect mappings, per MDN\r\n\r\n# Solution\r\n\r\n- fix 'em\r\n\r\n| feature | link | claimed version supported |\r\n|---|---|---|\r\n| Array.from| https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from | <45|\r\n| Array.of| https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of | <39|\r\n| @@iterator | https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator | <43 |\r\n| Array proto fill | https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill | <45|\r\n| Array proto includes | https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes | <47 |\r\n| Array proto values | https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/values | <66 |\r\n| IntersectionObserver | https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | <51|\r\n|InserectionObserverEntry| https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | see full table|\r\n| Object.assign | https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign | <45 |\r\n| String proto endsWith | https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith | <37 |\r\n| String proto startsWith | https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith | <37 |\r\n| String proto padStart | https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart |  <57|\r\n| URL | https://developer.mozilla.org/en-US/docs/Web/API/URL | <71 |\r\n| Visibility state | https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API | <4.4.3 |\r\n| RAF | https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame | <37|\r\n|smoothscroll | https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior | <61 |",
      "changedFiles": 15,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2021-12-02T20:39:36Z",
      "deletions": 17,
      "id": "PR_kwDOCaVDVc4vVE9e",
      "mergedAt": "2021-12-21T12:09:00Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjE4MjU2MjE=",
        "nameWithOwner": "JakeChampion/polyfill-library"
      },
      "state": "MERGED",
      "title": "fix(android): incorrect versions for many features",
      "url": "https://github.com/JakeChampion/polyfill-library/pull/1134"
    },
    "PR_kwDOCaVDVc4vVLBh": {
      "additions": 11,
      "body": "# What\r\n\r\n## Problem\r\n\r\nCloses #1133\r\n\r\n## Solution\r\n\r\nAlign String.prototype.trim compatibility with MDN table. The current values are _very_ disjoint with MDN. I'm unclear if there is reason for this or not--no annotations present suggesting MDN incorrectness. ",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-12-02T21:18:43Z",
      "deletions": 11,
      "id": "PR_kwDOCaVDVc4vVLBh",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNjE4MjU2MjE=",
        "nameWithOwner": "JakeChampion/polyfill-library"
      },
      "state": "CLOSED",
      "title": "fix: align String.prototype.trim to MDN compatibility table",
      "url": "https://github.com/JakeChampion/polyfill-library/pull/1135"
    },
    "PR_kwDOEwpWO84wCdWl": {
      "additions": 15,
      "body": "<!-- Brief description of purpose of changes and what changed -->\r\nPer #519, the hero image is very large (`1.2MB` ish). Instead of serving a giant hero image, instead:\r\n\r\n- host various images sizes for the same intent\r\n- serve a device/viewport aware image to the user\r\n- scale the 1.25Mb image down to (30,40,50KB) responsive images for users\r\n\r\nless data, faster loading, happy users\r\n\r\nUncompressed demo of changing the viewport and watching new responsive images downloaded at (<600px first load, 600px - 799px, and 800px+). DPR of 2x assumed\r\n\r\n\r\nhttps://user-images.githubusercontent.com/1003261/146657148-495560bd-94d3-4029-be02-0f6eb12f7ec8.mov\r\n\r\n\r\n\r\n## Modified relative paths:\r\n\r\n<!-- For local branches, replace \"BRANCH_NAME\" with your branch; replace PATH/TO/PAGE -->\r\nhttps://v3-ocaml-org-git-BRANCH_NAME-ocaml.vercel.app/PATH/TO/PAGE\r\n\r\n<!-- For branches in forks, replace \"FORK_NAME\" and \"BRANCH_NAME\" with appropriate values, replace PATH/TO/PAGE -->\r\nhttps://v3-ocaml-org-git-fork-cdaringe-fix-caml-img-ocaml.vercel.app\r\n\r\n## Contributor Pre-flight Checklist\r\n\r\n- [ ] Accessibility check - checked pa11y report for modified pages, observing new errors\r\n- [ ] Responsive check - visually inspected vercel preview, using responsive tool to toggle between desktop and mobile view\r\n- [ ] HTML review - use browser DOM/Page inspector to inspect generated HTML within `<div id=\"__next>\"` element\r\n",
      "changedFiles": 8,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-12-18T22:25:09Z",
      "deletions": 7,
      "id": "PR_kwDOEwpWO84wCdWl",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMTk0NDQ1Mzk=",
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      },
      "state": "OPEN",
      "title": "performance: responsive image loading",
      "url": "https://github.com/ocaml/v3.ocaml.org-rescript/pull/555"
    },
    "PR_kwDOEwpWO84wCiwI": {
      "additions": 20,
      "body": "Fixes #556\r\n\r\n<!-- Brief description of purpose of changes and what changed -->\r\n\r\nBuild has been failing. Add missing file to de-bork `make build`\r\n\r\n## Modified relative paths:\r\n\r\n\r\n<!-- For branches in forks, replace \"FORK_NAME\" and \"BRANCH_NAME\" with appropriate values, replace PATH/TO/PAGE -->\r\nhttps://v3-ocaml-org-git-fork-cdarige-fix-build-ocaml.vercel.app\r\n\r\n## Contributor Pre-flight Checklist\r\n\r\n- [ ] Accessibility check - checked pa11y report for modified pages, observing new errors\r\n- [ ] Responsive check - visually inspected vercel preview, using responsive tool to toggle between desktop and mobile view\r\n- [ ] HTML review - use browser DOM/Page inspector to inspect generated HTML within `<div id=\"__next>\"` element\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-12-19T01:58:22Z",
      "deletions": 0,
      "id": "PR_kwDOEwpWO84wCiwI",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMTk0NDQ1Mzk=",
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      },
      "state": "OPEN",
      "title": "fix(build): add missing & required src/Import.resi",
      "url": "https://github.com/ocaml/v3.ocaml.org-rescript/pull/557"
    },
    "PR_kwDOEwpWO84wCjBy": {
      "additions": 25,
      "body": "## Problem\r\n\r\nNo CI is currently run in PRs\r\n\r\n## Solution\r\n\r\nRun some CI! Stub in barebones `build & install` steps. These are untested :)\r\n\r\n## Modified relative paths:\r\n\r\n<!-- For local branches, replace \"BRANCH_NAME\" with your branch; replace PATH/TO/PAGE -->\r\nhttps://v3-ocaml-org-git-BRANCH_NAME-ocaml.vercel.app/PATH/TO/PAGE\r\n\r\n<!-- For branches in forks, replace \"FORK_NAME\" and \"BRANCH_NAME\" with appropriate values, replace PATH/TO/PAGE -->\r\nhttps://v3-ocaml-org-git-fork-FORK_NAME-BRANCH_NAME-ocaml.vercel.app/PATH/TO/PAGE\r\n\r\n## Contributor Pre-flight Checklist\r\n\r\n- [ ] Accessibility check - checked pa11y report for modified pages, observing new errors\r\n- [ ] Responsive check - visually inspected vercel preview, using responsive tool to toggle between desktop and mobile view\r\n- [ ] HTML review - use browser DOM/Page inspector to inspect generated HTML within `<div id=\"__next>\"` element\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-12-19T02:09:02Z",
      "deletions": 0,
      "id": "PR_kwDOEwpWO84wCjBy",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMTk0NDQ1Mzk=",
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      },
      "state": "OPEN",
      "title": "feat: add-basic-github-actions-ci",
      "url": "https://github.com/ocaml/v3.ocaml.org-rescript/pull/558"
    },
    "PR_kwDOEwpWO84wCjT2": {
      "additions": 3,
      "body": "<!-- Brief description of purpose of changes and what changed -->\r\n\r\n## Problem\r\n\r\n- two logo files present on the same page, both downloaded, for the same usage intent\r\n- both files are ~108KB\r\n\r\n## Solution\r\n\r\n- dedupe files\r\n- get logo down to 14KB\r\n\r\n## Modified relative paths:\r\n\r\n<!-- For local branches, replace \"BRANCH_NAME\" with your branch; replace PATH/TO/PAGE -->\r\n\r\n<!-- For branches in forks, replace \"FORK_NAME\" and \"BRANCH_NAME\" with appropriate values, replace PATH/TO/PAGE -->\r\nhttps://v3-ocaml-org-git-fork-cdaringe-refactor-improved-logos-ocaml.vercel.app/\r\n\r\n## Contributor Pre-flight Checklist\r\n\r\n- [ ] Accessibility check - checked pa11y report for modified pages, observing new errors\r\n- [ ] Responsive check - visually inspected vercel preview, using responsive tool to toggle between desktop and mobile view\r\n- [ ] HTML review - use browser DOM/Page inspector to inspect generated HTML within `<div id=\"__next>\"` element\r\n",
      "changedFiles": 4,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2021-12-19T02:21:58Z",
      "deletions": 3,
      "id": "PR_kwDOEwpWO84wCjT2",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMTk0NDQ1Mzk=",
        "nameWithOwner": "ocaml/v3.ocaml.org-rescript"
      },
      "state": "OPEN",
      "title": "refactor: 100KB+ logo => 14KB logo, dedupe asset",
      "url": "https://github.com/ocaml/v3.ocaml.org-rescript/pull/559"
    },
    "PR_kwDOFunuwM4wDuNv": {
      "additions": 40,
      "body": "# Problem\r\n\r\nNo problem per se, but the content could be organized more in [inverted pyramid](https://en.wikipedia.org/wiki/Inverted_pyramid_(journalism)) style, however that ports from journalism into technical writing :)\r\n\r\n# Discussion\r\n\r\nnow the content flows with macro topics in this order:\r\n\r\n1. use `dune init`\r\n1. here's useful info for `dune init`\r\n1. here's how to get dune installed\r\n1. consider adding a dune-project file (note, the next version of dune init will emit dune-project files)\r\n1. consider spin\r\n\r\ni know spin is the original author's personal project, and it is _indeed_ a cool project. i did observe that it's not formally part of the [platform](https://ocaml.org/platform) yet. with respect to the author 🙇 , i'd at least _consider_ pulling `spin` out of this particular doc as a platform formal recommendation. if it is recommended formally, then by all means, please disregard.",
      "changedFiles": 2,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2021-12-20T05:13:19Z",
      "deletions": 40,
      "id": "PR_kwDOFunuwM4wDuNv",
      "mergedAt": "2022-01-12T09:47:52Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ0Mjk3NjA=",
        "nameWithOwner": "ocaml/ocaml.org"
      },
      "state": "MERGED",
      "title": "docs(workflows): bootstrapping",
      "url": "https://github.com/ocaml/ocaml.org/pull/193"
    },
    "PR_kwDOFunuwM4wRJlw": {
      "additions": 8,
      "body": "# Problem\r\n\r\nPage and assets are large\r\n\r\n# Solution\r\n\r\nCompress by default.\r\n\r\nAn unscientific diff shows there are hundreds of kBs of savings just on the homepage:\r\n\r\n![image](https://user-images.githubusercontent.com/1003261/147370156-597b32e1-62fb-4050-a305-e8a79e97238c.png)",
      "changedFiles": 3,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2021-12-24T18:41:32Z",
      "deletions": 8,
      "id": "PR_kwDOFunuwM4wRJlw",
      "mergedAt": "2022-01-12T09:45:40Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ0Mjk3NjA=",
        "nameWithOwner": "ocaml/ocaml.org"
      },
      "state": "MERGED",
      "title": "feat: compress by default",
      "url": "https://github.com/ocaml/ocaml.org/pull/197"
    },
    "PR_kwDOFunuwM4wRrpM": {
      "additions": 14,
      "body": "# Problem\r\n\r\nfresh cloners may not be usin' the right switch!\r\n\r\n# Solution\r\n\r\n- default to the local switch!\r\n- fix lint issue broken in main\r\n\r\n# Discussion\r\n\r\nNot required :) would be nice to either accept it or perhaps add `.vscode` to gitignore",
      "changedFiles": 3,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2021-12-25T23:24:51Z",
      "deletions": 8,
      "id": "PR_kwDOFunuwM4wRrpM",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ0Mjk3NjA=",
        "nameWithOwner": "ocaml/ocaml.org"
      },
      "state": "CLOSED",
      "title": "feat: local switch",
      "url": "https://github.com/ocaml/ocaml.org/pull/199"
    },
    "PR_kwDOFunuwM4wRym0": {
      "additions": 8554,
      "body": "# Problem\r\n\r\nCloses #198 \r\n\r\n# Solution\r\n\r\n- use `opam switch import/export`\r\n- `opam lock . -y` doesn't actually produce a pinned opam lockfile :/ . i'll probably open an issue over there",
      "changedFiles": 7,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2021-12-26T06:24:07Z",
      "deletions": 40,
      "id": "PR_kwDOFunuwM4wRym0",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ0Mjk3NjA=",
        "nameWithOwner": "ocaml/ocaml.org"
      },
      "state": "CLOSED",
      "title": "feat: locked dependencies",
      "url": "https://github.com/ocaml/ocaml.org/pull/200"
    },
    "PR_kwDOA7BOnc4y5I7j": {
      "additions": 1,
      "body": "The prior language suggested that ESM helps identify side effects. This is not the case.\r\n\r\nThe following case demonstrates an effect during ESM load.\r\n\r\n```js\r\nexport const foo = (() => { window.bar = true; return 0; })();\r\n```\r\n\r\nModule evaluation of the above ES module induces a side effect during evaluation, and usage of ESM did not help identify it.\r\n\r\nESM did help compiler tooling evaluate `usedExports`, because the exported symbols are fixed.\r\n\r\nThe use of PURE and sideEffects are a bit contradictory in the webpack definitions. It's probably worth defining explicit definitions for webpack's interpreation of `pure` and `side effect` in the glossary page.\r\n\r\n_describe your changes..._\r\n\r\n- [ ] Read and sign the [CLA][1]. PRs that haven't signed it won't be accepted.\r\n- [ ] Make sure your PR complies with the [writer's guide][2].\r\n- [ ] Review the diff carefully as sometimes this can reveal issues.\r\n- [ ] Do not abandon your Pull Request: [Stale Pull Requests][3].\r\n- **Remove these instructions from your PR as they are for your eyes only.**\r\n\r\n[1]: https://github.com/openjs-foundation/EasyCLA#openjs-foundation-cla\r\n[2]: https://webpack.js.org/contribute/writers-guide/\r\n[3]: https://webpack.js.org/contribute/#pull-requests\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-02-16T00:58:22Z",
      "deletions": 1,
      "id": "PR_kwDOA7BOnc4y5I7j",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2MTg4NjEwOQ==",
        "nameWithOwner": "webpack/webpack.js.org"
      },
      "state": "CLOSED",
      "title": "docs(tree-shaking): remove imprecise language",
      "url": "https://github.com/webpack/webpack.js.org/pull/5975"
    },
    "PR_kwDOAeugBs4zlQs2": {
      "additions": 76,
      "body": "<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n- Refactor http-proxy-middleware middeware types to be properly x-server compatible, from both a typescript & node.js lens \r\n- Augment `http.IncomingMessage` with http-proxy-middleware values permissible on `req`, but not present by default\r\n<!--- Describe your changes in detail -->\r\n\r\nBREAKING CHANGE: `RequestHandler` => `RequestMiddleware`. Middleware now\r\nis expressed in terms of node core http.* types, which express req/res\r\nare compatible with. Orienting to base http.* types allows better typing\r\nacross all node servers, as eventually each implementation has these\r\nvalues in their servers. That is to say, express, koa, fastify, next,\r\netc all use http.IncomingMessage/http.ServerResponse under the hood,\r\nthus the new middleware types are compatible with everyone.\r\n\r\nTechnically this _should_ be backwards compatible for most users. However, exotic coupling to the previous types (e.g. `Parameters<typeof createProxyMiddleware>` could induce subtle breakages.\r\n\r\n## Motivation and Context\r\n\r\nSee #719 \r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n<!--- If it fixes an open issue, please link to the issue here. -->\r\n\r\n## How has this been tested?\r\n\r\n- Mo' tests added!\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n## Checklist:\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n",
      "changedFiles": 10,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2022-02-27T00:53:26Z",
      "deletions": 35,
      "id": "PR_kwDOAeugBs4zlQs2",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMjIxOTE0Mg==",
        "nameWithOwner": "chimurai/http-proxy-middleware"
      },
      "state": "CLOSED",
      "title": "refactor: use base node http types",
      "url": "https://github.com/chimurai/http-proxy-middleware/pull/721"
    },
    "PR_kwDOAeugBs4z6UdV": {
      "additions": 793,
      "body": "<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\nRe-post of #721 against v3\r\n\r\n- Refactor http-proxy-middleware middeware types to be properly x-server compatible, from both a typescript & node.js lens \r\n- Augment `http.IncomingMessage` with http-proxy-middleware values permissible on `req`, but not present by default\r\n<!--- Describe your changes in detail -->\r\n\r\nBREAKING CHANGE: `RequestHandler` => `RequestMiddleware`. Middleware now\r\nis expressed in terms of node core http.* types, which express req/res\r\nare compatible with. Orienting to base http.* types allows better typing\r\nacross all node servers, as eventually each implementation has these\r\nvalues in their servers. That is to say, express, koa, fastify, next,\r\netc all use http.IncomingMessage/http.ServerResponse under the hood,\r\nthus the new middleware types are compatible with everyone.\r\n\r\nTechnically this _should_ be backwards compatible for most users. However, exotic coupling to the previous types (e.g. `Parameters<typeof createProxyMiddleware>` could induce subtle breakages.\r\n\r\n## Motivation and Context\r\n\r\nSee #719 \r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n<!--- If it fixes an open issue, please link to the issue here. -->\r\n\r\n## How has this been tested?\r\n\r\n- Mo' tests added!\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n## Checklist:\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n",
      "changedFiles": 33,
      "comments": {
        "totalCount": 9
      },
      "commits": {
        "totalCount": 13
      },
      "createdAt": "2022-03-03T19:04:19Z",
      "deletions": 1013,
      "id": "PR_kwDOAeugBs4z6UdV",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMjIxOTE0Mg==",
        "nameWithOwner": "chimurai/http-proxy-middleware"
      },
      "state": "CLOSED",
      "title": "refactor: use base node http types",
      "url": "https://github.com/chimurai/http-proxy-middleware/pull/723"
    },
    "PR_kwDOBq3HGs40Vv85": {
      "additions": 344,
      "body": "# Problem\r\n\r\n- executor `foo` tries to run and iterate through two `js:serve` executors on the `dummy` app, but only one app runs\r\n\r\n# Understanding the demo\r\n\r\n- A custom executor is authored, which does _things_ concurrently\r\n- [`runExecutor` is called twice](https://github.com/nrwl/nx-examples/pull/193/files#diff-aaf24430d0709017428484035d6698dde5af5a2c3808f1a32e9f76fe628dc399), producing two async iterators\r\n- those iterators are combined, then all events attempted to be iterated through\r\n\r\n...however, execution _halts_ for one iterator.\r\n\r\nYou can swap the target (such as `build`, `lint`) and these targets **do not** suffer the failure",
      "changedFiles": 27,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-03-12T08:06:25Z",
      "deletions": 5,
      "id": "PR_kwDOBq3HGs40Vv85",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMTIwNTE5OTQ=",
        "nameWithOwner": "nrwl/nx-examples"
      },
      "state": "OPEN",
      "title": "Concurrent js:serve runExecutor iterators failure",
      "url": "https://github.com/nrwl/nx-examples/pull/193"
    },
    "PR_kwDOG6f34M40W-X9": {
      "additions": 176,
      "body": "**do not merge**",
      "changedFiles": 12,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-03-13T17:44:20Z",
      "deletions": 132,
      "id": "PR_kwDOG6f34M40W-X9",
      "mergedAt": "2022-03-13T20:44:17Z",
      "repository": {
        "id": "R_kgDOG6f34A",
        "nameWithOwner": "cdaringe/http-proxy-middleware"
      },
      "state": "MERGED",
      "title": "refactor: decouple from express",
      "url": "https://github.com/cdaringe/http-proxy-middleware/pull/1"
    },
    "PR_kwDOCzdphs40962P": {
      "additions": 1,
      "body": "# Problem\r\n\r\nIdentifier should be optional:\r\n\r\n<img width=\"683\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1003261/159976904-f1c8adcc-8aa4-4781-9627-dca6a4989e47.png\">\r\n\r\nBut is marked as required in TypeScript\r\n\r\n# Solution\r\n\r\nMake the field optional",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-03-24T17:38:04Z",
      "deletions": 1,
      "id": "PR_kwDOCzdphs40962P",
      "mergedAt": "2022-03-28T06:48:44Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxODgxODA4NzA=",
        "nameWithOwner": "crowdin/crowdin-api-client-js"
      },
      "state": "MERGED",
      "title": "fix: optionalize identifier",
      "url": "https://github.com/crowdin/crowdin-api-client-js/pull/159"
    },
    "PR_kwDOBuX7GM41hfLH": {
      "additions": 2126,
      "body": "# Problem\r\n\r\nSee #242\r\n\r\n# Solution\r\n\r\n- Break up CI files into a PR flow, & a `master`/trunk flow\r\n- In the PR flow, do the exact same stuff as before, just don't run on changes to the master branch\r\n- In the master flow, execute build & tests (as done in the PR flow), but additionally\r\n    - auto publish\r\n    - push incr version\r\n    - skip ci for incremented version \r\n\r\nThe following was auto-published using my fork on the `main` branch, executing the same publish flow: https://marketplace.visualstudio.com/items?itemName=cdaringe.vscode-jest-runner-dummy \r\n\r\nI personally opt for semantic release, but that's a pretty big personal behavioral change, so i stuck with the highly functional and basic approach for this round.\r\n\r\nYou can still increment the version for minors and majors as seen fit, CI will just always release with a patch rev on top of your minor or major versions.",
      "changedFiles": 4,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2022-04-02T06:14:20Z",
      "deletions": 68,
      "id": "PR_kwDOBuX7GM41hfLH",
      "mergedAt": "2022-08-14T06:45:14Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMTU3MzUzMjA=",
        "nameWithOwner": "firsttris/vscode-jest-runner"
      },
      "state": "MERGED",
      "title": "feat: automatically publish on trunk branch",
      "url": "https://github.com/firsttris/vscode-jest-runner/pull/246"
    },
    "PR_kwDOAo2Bcs42S-Jk": {
      "additions": 3,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **539/1000**  <br/> **Why?** Has a fix available, CVSS 6.5  | Information Exposure <br/>[SNYK-JS-NODEFETCH-2342118](https://snyk.io/vuln/SNYK-JS-NODEFETCH-2342118) |  No  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **520/1000**  <br/> **Why?** Has a fix available, CVSS 5.9  | Denial of Service <br/>[SNYK-JS-NODEFETCH-674311](https://snyk.io/vuln/SNYK-JS-NODEFETCH-674311) |  No  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmYzYxYjM4Ni0xNmU5LTRjYzgtYTA3MS01M2I5YzhlNDg2MDkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZjNjFiMzg2LTE2ZTktNGNjOC1hMDcxLTUzYjljOGU0ODYwOSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/166bfa97-0f0d-4099-a7e7-2bbc3d855619?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/166bfa97-0f0d-4099-a7e7-2bbc3d855619?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"fc61b386-16e9-4cc8-a071-53b9c8e48609\",\"prPublicId\":\"fc61b386-16e9-4cc8-a071-53b9c8e48609\",\"dependencies\":[{\"name\":\"pouchdb-adapter-http\",\"from\":\"7.1.1\",\"to\":\"7.3.0\"},{\"name\":\"pouchdb-core\",\"from\":\"7.1.1\",\"to\":\"7.3.0\"},{\"name\":\"pouchdb-find\",\"from\":\"7.1.1\",\"to\":\"7.3.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"166bfa97-0f0d-4099-a7e7-2bbc3d855619\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/166bfa97-0f0d-4099-a7e7-2bbc3d855619?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-NODEFETCH-2342118\",\"SNYK-JS-NODEFETCH-674311\"],\"upgrade\":[\"SNYK-JS-NODEFETCH-2342118\",\"SNYK-JS-NODEFETCH-674311\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[539,520]})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-04-15T16:05:02Z",
      "deletions": 3,
      "id": "PR_kwDOAo2Bcs42S-Jk",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "CLOSED",
      "title": "[Snyk] Fix for 2 vulnerabilities",
      "url": "https://github.com/cdaringe/pouchy/pull/1238"
    },
    "PR_kwDOAbu8g843Ajro": {
      "additions": 141,
      "body": "# problem\r\n\r\ndoesn't work on latest version of chase.com\r\n\r\n# solution\r\n\r\npatch it.\r\n\r\nmy editor ran `prettier` 🙄 . my bad :/",
      "changedFiles": 3,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-04-29T05:14:01Z",
      "deletions": 111,
      "id": "PR_kwDOAbu8g843Ajro",
      "mergedAt": "2022-05-14T02:47:03Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyOTA4MDcwNw==",
        "nameWithOwner": "michalmazur/chase-running-balance"
      },
      "state": "MERGED",
      "title": "fix: adjust for latest version of site",
      "url": "https://github.com/michalmazur/chase-running-balance/pull/3"
    },
    "PR_kwDOCKG9jc430Jan": {
      "additions": 2631,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n![merge advice](https://app.snyk.io/badges/merge-advice/?package_manager=yarn&package_name=lerna&from_version=3.0.5&to_version=3.6.0&pr_id=33788eb9-06fd-4cba-8084-08ffcf3f3ba4&visibility=true&has_feature_flag=false)\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-ANSIREGEX-1583908](https://snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzMzc4OGViOS0wNmZkLTRjYmEtODA4NC0wOGZmY2YzZjNiYTQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjMzNzg4ZWI5LTA2ZmQtNGNiYS04MDg0LTA4ZmZjZjNmM2JhNCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"33788eb9-06fd-4cba-8084-08ffcf3f3ba4\",\"prPublicId\":\"33788eb9-06fd-4cba-8084-08ffcf3f3ba4\",\"dependencies\":[{\"name\":\"lerna\",\"from\":\"3.0.5\",\"to\":\"3.6.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-ANSIREGEX-1583908\"],\"upgrade\":[\"SNYK-JS-ANSIREGEX-1583908\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\",\"merge-advice-badge-shown\"],\"priorityScoreList\":[696]})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-05-14T01:29:48Z",
      "deletions": 871,
      "id": "PR_kwDOCKG9jc430Jan",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lerna from 3.0.5 to 3.6.0",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/56"
    },
    "PR_kwDOCKG9jc436HMB": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n![merge advice](https://app.snyk.io/badges/merge-advice/?package_manager=yarn&package_name=react-scripts-ts&from_version=2.17.0&to_version=4.0.1&pr_id=eedd5133-e599-4a39-a032-5c122e7088a2&visibility=true&has_feature_flag=false)\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/ui/package.json\n\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-BROWSERSLIST-1090194](https://snyk.io/vuln/SNYK-JS-BROWSERSLIST-1090194) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlZWRkNTEzMy1lNTk5LTRhMzktYTAzMi01YzEyMmU3MDg4YTIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImVlZGQ1MTMzLWU1OTktNGEzOS1hMDMyLTVjMTIyZTcwODhhMiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"eedd5133-e599-4a39-a032-5c122e7088a2\",\"prPublicId\":\"eedd5133-e599-4a39-a032-5c122e7088a2\",\"dependencies\":[{\"name\":\"react-scripts-ts\",\"from\":\"2.17.0\",\"to\":\"4.0.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-BROWSERSLIST-1090194\"],\"upgrade\":[\"SNYK-JS-BROWSERSLIST-1090194\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\",\"merge-advice-badge-shown\"],\"priorityScoreList\":[586]})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-05-16T20:46:12Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc436HMB",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade react-scripts-ts from 2.17.0 to 4.0.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/57"
    },
    "PR_kwDOCXZcSc45buvz": {
      "additions": 5392,
      "body": "# problem statement\r\n\r\nprs are merging with problemos\r\n\r\n# solution\r\n\r\nenhance pr ci checks",
      "changedFiles": 9,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2022-06-10T02:11:53Z",
      "deletions": 9795,
      "id": "PR_kwDOCXZcSc45buvz",
      "mergedAt": "2022-06-10T02:34:14Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "chore: upgrade ci tools",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/366"
    },
    "PR_kwDOCXZcSc455rfo": {
      "additions": 1070,
      "body": "# problem\r\n\r\nSee #370, but some conditions were incorrect, as identified by adding improved TS integration\r\n\r\n# solution\r\n\r\n- add mo types\r\n- add mo cases\r\n- add coverage",
      "changedFiles": 13,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2022-06-19T06:57:09Z",
      "deletions": 407,
      "id": "PR_kwDOCXZcSc455rfo",
      "mergedAt": "2022-06-19T07:02:56Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "refactor: constraint improvements tuning",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/374"
    },
    "PR_kwDOCXZcSc46uBAv": {
      "additions": 1071,
      "body": "# problem\r\n\r\n#370 had a bunch of great stuff in it, but looks like i may have pushed over `main`?\r\n\r\n# solution\r\n\r\n- re merge the good stuff\r\n- add branch protection",
      "changedFiles": 13,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 8
      },
      "createdAt": "2022-07-01T16:29:07Z",
      "deletions": 408,
      "id": "PR_kwDOCXZcSc46uBAv",
      "mergedAt": "2022-07-01T16:34:21Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "fix: re-apply constraint improvements tuning",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/382"
    },
    "PR_kwDOCXZcSc46uE_G": {
      "additions": 0,
      "body": "# problem\r\n\r\nthe change to commitlint-circle checks all history in `main`, for which a bad commit exists\r\n\r\n# solution\r\n\r\n`rebase` to `reword` just that one commit",
      "changedFiles": 0,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 0
      },
      "createdAt": "2022-07-01T16:51:25Z",
      "deletions": 0,
      "id": "PR_kwDOCXZcSc46uE_G",
      "mergedAt": "2022-07-01T16:52:29Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "fix: rebase bad commit wording out",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/384"
    },
    "PR_kwDOCXZcSc46uGDl": {
      "additions": 0,
      "body": "# problem\r\n\r\nfixing commit history in #384 borked sem-rel, where it's not picking up the latest released tags, because tags weren't pulled (and main was hot swapped, because i'm evil).\r\n\r\n# solution\r\n\r\nnaturally let sem-rel figure itself out w/ an empty patch",
      "changedFiles": 0,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-07-01T16:58:19Z",
      "deletions": 0,
      "id": "PR_kwDOCXZcSc46uGDl",
      "mergedAt": "2022-07-01T16:59:27Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "fix: bump sem-rel to pickup patches unreleased from #382",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/385"
    },
    "PR_kwDOCXZcSc46uIkP": {
      "additions": 0,
      "body": "# problem\r\n\r\n#370 should have been a breaking change\r\n\r\n# solution\r\n\r\nload a breaking commit to trigger semrel major",
      "changedFiles": 0,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-07-01T17:08:37Z",
      "deletions": 0,
      "id": "PR_kwDOCXZcSc46uIkP",
      "mergedAt": "2022-07-01T17:08:52Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "feat: change upsert matching conditions",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/387"
    },
    "PR_kwDOCXZcSc46uJdR": {
      "additions": 1,
      "body": "# problem\r\n\r\n#387 should have triggered a new release, but github is cute instead and the merge kept the old commit text\r\n\r\n# solution\r\n\r\nload a breaking commit to trigger semrel major",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2022-07-01T17:12:11Z",
      "deletions": 2,
      "id": "PR_kwDOCXZcSc46uJdR",
      "mergedAt": "2022-07-01T17:12:44Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "feat: improve upsert matching conditions release",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/388"
    },
    "PR_kwDOGKvm4846_sgA": {
      "additions": 22,
      "body": "# Problem\r\n\r\nSee #1477\r\n\r\n# Solution\r\n\r\nDetect >=1.0 `yarn` invocations, and drop the separator on detection\r\n\r\n# ToDo\r\n\r\n- [ ] tests",
      "changedFiles": 2,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-07-07T06:58:31Z",
      "deletions": 0,
      "id": "PR_kwDOGKvm4846_sgA",
      "mergedAt": null,
      "repository": {
        "id": "R_kgDOGKvm4w",
        "nameWithOwner": "vercel/turbo"
      },
      "state": "CLOSED",
      "title": "fix(yarn): correct argSeparator for yarn >=1.0 invocations",
      "url": "https://github.com/vercel/turbo/pull/1493"
    },
    "PR_kwDOGKvm4847K6g9": {
      "additions": 137,
      "body": "# Problem\r\n\r\nSee #1477, supersedes #1493\r\n\r\n# Solution\r\n\r\n- port arg detection into the packagemanager abstraction\r\n- add `version` tracking into the struct, as arg separator is often contingent on version\r\n- port CLI version reading into a shared impl for all package managers",
      "changedFiles": 8,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2022-07-11T06:30:47Z",
      "deletions": 50,
      "id": "PR_kwDOGKvm4847K6g9",
      "mergedAt": null,
      "repository": {
        "id": "R_kgDOGKvm4w",
        "nameWithOwner": "vercel/turbo"
      },
      "state": "CLOSED",
      "title": "fix: refactor arg separator strategy",
      "url": "https://github.com/vercel/turbo/pull/1507"
    },
    "PR_kwDOCEG0hc48AAPr": {
      "additions": 6,
      "body": "# Problem\r\n\r\nExamples use old rescript ppx syntax\r\n\r\n# Solution\r\n\r\nRecord annotated new rescript ppx syntax",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-07-24T22:06:22Z",
      "deletions": 0,
      "id": "PR_kwDOCEG0hc48AAPr",
      "mergedAt": "2022-07-25T17:31:40Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMzg1MjM3ODE=",
        "nameWithOwner": "rescript-labs/decco"
      },
      "state": "MERGED",
      "title": "docs(readme): clarify ppx syntax",
      "url": "https://github.com/rescript-labs/decco/pull/88"
    },
    "PR_kwDOHRNu6M48SHLD": {
      "additions": 1,
      "body": "Signed-off-by: Christopher Dieringer <cdaringe@users.noreply.github.com>\r\n\r\n<!--\r\nThanks for opening a PR! Your contribution is much appreciated.\r\nIn order to make sure your PR is handled as smoothly as possible we request that you follow the checklist sections below.\r\nChoose the right checklist for the change that you're making:\r\n-->\r\n\r\n# Problem\r\n\r\nbackground resolution is not working, no scripts are found\r\n\r\n# Solution\r\n\r\nCorrect path resolution\r\n\r\n## Details\r\n\r\n- [x] closes #123\r\n- [ ] If RFC, it has been approved for implementation.\r\n\r\n### Code of Conduct\r\n\r\n- [x] I agree to follow this project's Code of Conduct\r\n- [x] I checked the [current PR](https://github.com/PlasmoHQ/plasmo/pulls) for duplication.\r\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-07-28T22:37:11Z",
      "deletions": 1,
      "id": "PR_kwDOHRNu6M48SHLD",
      "mergedAt": "2022-07-29T15:34:28Z",
      "repository": {
        "id": "R_kgDOHRNu6A",
        "nameWithOwner": "PlasmoHQ/plasmo"
      },
      "state": "MERGED",
      "title": "fix: correct background script entry resolution",
      "url": "https://github.com/PlasmoHQ/plasmo/pull/124"
    },
    "PR_kwDOD-z6ic48igD3": {
      "additions": 1,
      "body": "arstar",
      "changedFiles": 1,
      "comments": {
        "totalCount": 13
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-08-02T23:06:08Z",
      "deletions": 0,
      "id": "PR_kwDOD-z6ic48igD3",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNjcxODg4NzM=",
        "nameWithOwner": "cdaringe/probot-buddy-testing"
      },
      "state": "CLOSED",
      "title": "Update weee",
      "url": "https://github.com/cdaringe/probot-buddy-testing/pull/14"
    },
    "PR_kwDOCXZcSc49xNNq": {
      "additions": 78,
      "body": "",
      "changedFiles": 6,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2022-08-25T06:29:08Z",
      "deletions": 277,
      "id": "PR_kwDOCXZcSc49xNNq",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "CLOSED",
      "title": "feat: trial gha",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/433"
    },
    "PR_kwDOCXZcSc49xPlH": {
      "additions": 78,
      "body": "debuggins",
      "changedFiles": 6,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2022-08-25T06:41:15Z",
      "deletions": 277,
      "id": "PR_kwDOCXZcSc49xPlH",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "CLOSED",
      "title": "feat/gha2",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/434"
    },
    "PR_kwDOCXZcSc49xQP7": {
      "additions": 78,
      "body": "# problem\r\n\r\nwe want mo betta ci integration",
      "changedFiles": 6,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2022-08-25T06:44:30Z",
      "deletions": 277,
      "id": "PR_kwDOCXZcSc49xQP7",
      "mergedAt": "2022-08-25T06:48:19Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "chore(ci): gha",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/435"
    },
    "PR_kwDOFvD8xc5ARdML": {
      "additions": 26483,
      "body": "",
      "changedFiles": 178,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 38
      },
      "createdAt": "2022-10-06T06:21:11Z",
      "deletions": 1482,
      "id": "PR_kwDOFvD8xc5ARdML",
      "mergedAt": "2022-10-10T07:00:37Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ4OTIxMDE=",
        "nameWithOwner": "cdaringe/airmap"
      },
      "state": "MERGED",
      "title": "turbo",
      "url": "https://github.com/cdaringe/airmap/pull/5"
    },
    "PR_kwDOCKG9jc5CPIeA": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/ui/package.json\n\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **661/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-LOADERUTILS-3043105](https://snyk.io/vuln/SNYK-JS-LOADERUTILS-3043105) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyYzZhMWRhNi1iOWYzLTQzZGEtYTkzZC05NWEwYjYxM2IxMTkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjJjNmExZGE2LWI5ZjMtNDNkYS1hOTNkLTk1YTBiNjEzYjExOSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"2c6a1da6-b9f3-43da-a93d-95a0b613b119\",\"prPublicId\":\"2c6a1da6-b9f3-43da-a93d-95a0b613b119\",\"dependencies\":[{\"name\":\"react-scripts-ts\",\"from\":\"2.17.0\",\"to\":\"4.0.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LOADERUTILS-3043105\"],\"upgrade\":[\"SNYK-JS-LOADERUTILS-3043105\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[661]})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lessons/prototype-pollution/javascript//?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-11-04T19:47:04Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5CPIeA",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade react-scripts-ts from 2.17.0 to 4.0.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/59"
    },
    "PR_kwDOEa12KM5ERMjo": {
      "additions": 1,
      "body": "# problem\r\n\r\ntypo on array detection\r\n\r\n# solution\r\n\r\nremove typo exclamation point/bang!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-12-04T21:31:27Z",
      "deletions": 1,
      "id": "PR_kwDOEa12KM5ERMjo",
      "mergedAt": "2022-12-10T00:00:30Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyOTY1ODA2NDg=",
        "nameWithOwner": "swc-project/jest"
      },
      "state": "MERGED",
      "title": "fix: drop wandering !BANG",
      "url": "https://github.com/swc-project/jest/pull/134"
    },
    "PR_kwDOCKG9jc5GLCKo": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/ui/package.json\n\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **713/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 6.4  | Prototype Pollution <br/>[SNYK-JS-JSON5-3182856](https://snyk.io/vuln/SNYK-JS-JSON5-3182856) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhNjk3OTZhMS1hMGRkLTRhZDUtOTNiOC1hZDE0YmI1NTA4MzUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImE2OTc5NmExLWEwZGQtNGFkNS05M2I4LWFkMTRiYjU1MDgzNSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"a69796a1-a0dd-4ad5-93b8-ad14bb550835\",\"prPublicId\":\"a69796a1-a0dd-4ad5-93b8-ad14bb550835\",\"dependencies\":[{\"name\":\"react-scripts-ts\",\"from\":\"2.17.0\",\"to\":\"4.0.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-JSON5-3182856\"],\"upgrade\":[\"SNYK-JS-JSON5-3182856\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[713]})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lessons/prototype-pollution/javascript/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2022-12-25T17:49:53Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5GLCKo",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade react-scripts-ts from 2.17.0 to 4.0.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/60"
    },
    "PR_kwDOBpCvo85G3RxE": {
      "additions": 6371,
      "body": "# problem\r\n\r\nmain is borked and unpublished.\r\n\r\n# solution (kind of)\r\n\r\n- to make this module work, this branch has been published as `cdaringe-screeps-server-mockup@1.5.1-rc.01`\r\n- getting isolated-vm to work w/ later versions of mac is a real pita, so isolated-vm has been forced from 2 => 4 (which is divergent from screeps engine). some CPU stuff is no longer exposed, and those props/tests have been commented out\r\n\r\nthis patch set shouldn't really be accepted, but viewers may find it useful",
      "changedFiles": 12,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-01-07T03:25:41Z",
      "deletions": 7102,
      "id": "PR_kwDOBpCvo85G3RxE",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxMTAxNDU0NDM=",
        "nameWithOwner": "screepers/screeps-server-mockup"
      },
      "state": "OPEN",
      "title": "fix: main",
      "url": "https://github.com/screepers/screeps-server-mockup/pull/61"
    },
    "PR_kwDOCKG9jc5HDvLh": {
      "additions": 3,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/api/package.json\n\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png \"low severity\")  |  **461/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 3.5  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-DEBUG-3227433](https://snyk.io/vuln/SNYK-JS-DEBUG-3227433) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmOTQ2ZDhiYy1hY2U2LTQyMDgtYTE2MS01YmQxNTI5ODdkYzgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImY5NDZkOGJjLWFjZTYtNDIwOC1hMTYxLTViZDE1Mjk4N2RjOCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"f946d8bc-ace6-4208-a161-5bd152987dc8\",\"prPublicId\":\"f946d8bc-ace6-4208-a161-5bd152987dc8\",\"dependencies\":[{\"name\":\"koa-mount\",\"from\":\"3.0.0\",\"to\":\"4.0.0\"},{\"name\":\"koa-static\",\"from\":\"4.0.3\",\"to\":\"5.0.0\"},{\"name\":\"toiletdb\",\"from\":\"1.4.1\",\"to\":\"2.0.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"7522964a-bca4-45aa-b609-e7c7b014d63d\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-DEBUG-3227433\"],\"upgrade\":[\"SNYK-JS-DEBUG-3227433\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[461]})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-01-10T10:42:25Z",
      "deletions": 3,
      "id": "PR_kwDOCKG9jc5HDvLh",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Fix for 1 vulnerabilities",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/61"
    },
    "PR_kwDOFvD8xc5IMCYw": {
      "additions": 205,
      "body": "# problem\r\n\r\nno map support for airmap gps\r\n\r\n# solution\r\n\r\nplot it for testing purposes",
      "changedFiles": 13,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-01-20T06:21:34Z",
      "deletions": 7,
      "id": "PR_kwDOFvD8xc5IMCYw",
      "mergedAt": "2023-01-20T06:22:23Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ4OTIxMDE=",
        "nameWithOwner": "cdaringe/airmap"
      },
      "state": "MERGED",
      "title": "feat: add airmap gps support",
      "url": "https://github.com/cdaringe/airmap/pull/6"
    },
    "PR_kwDOCXZcSc5IQbVh": {
      "additions": 304,
      "body": "# problemos\r\n\r\n- upgrades are failing, due to co-dependent pkg types\r\n\r\n# solution\r\n\r\n- roll em together\r\n- add missing displayName",
      "changedFiles": 8,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2023-01-21T03:48:32Z",
      "deletions": 167,
      "id": "PR_kwDOCXZcSc5IQbVh",
      "mergedAt": "2023-01-21T05:34:06Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg3NTE4MTc=",
        "nameWithOwner": "cdaringe/postgraphile-upsert"
      },
      "state": "MERGED",
      "title": "fix: roll graphile bit forward, add displayName",
      "url": "https://github.com/cdaringe/postgraphile-upsert/pull/555"
    },
    "PR_kwDOCXIH6s5IuQvE": {
      "additions": 136,
      "body": "# problem\r\n\r\nThe current concord js primitives are painfully limited. Common, expected js idioms crash due to lack of support. JS users have expected some features to be present for nearly a decade in all common JS runtimes, but are not available in current provisions. For example, common methods, e.g. `Object.entries(...)` are not available. `.entries` is an interesting example, because it's actually associated with 2017 ECMAScript spec, but developers have add access to it since... 2014? due to wide availability _and_ pervasive downleveling of code in most JS compiler toolchains.\r\n\r\n# solution\r\n\r\ngraal supports common, sensible, newer javascript in a fully backwards compatible way.\r\n\r\ndemo of newer syntax & methods, from a concord run with the new setting:\r\n<img width=\"548\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1003261/215553338-62f3ba85-44a2-48d8-9a04-5edc195d8db6.png\">\r\n\r\n# refs\r\n\r\nhttps://www.graalvm.org/latest/reference-manual/js/Options/",
      "changedFiles": 6,
      "comments": {
        "totalCount": 16
      },
      "commits": {
        "totalCount": 18
      },
      "createdAt": "2023-01-28T01:24:24Z",
      "deletions": 12,
      "id": "PR_kwDOCXIH6s5IuQvE",
      "mergedAt": "2023-02-23T00:59:21Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg0NjgwNzQ=",
        "nameWithOwner": "walmartlabs/concord"
      },
      "state": "MERGED",
      "title": "feat(runtime): up level graal vm js engine lang level",
      "url": "https://github.com/walmartlabs/concord/pull/709"
    },
    "PR_kwDOCXIH6s5I3Rb9": {
      "additions": 9,
      "body": "# Problem\r\n\r\n- `Variables` is cumbersome to work with from a scripting context\r\n\r\nexample:\r\n\r\n```js\r\nconst task = tasks.get(\"slack\");\r\nconst slackInputs = { foo: ...., bar: ...};\r\nfor (var key in slackInputs) {\r\n  context.variables().set(key, slackInputs[key]);\r\n}\r\ntask.execute(context.variables());\r\n```\r\n\r\n# Solution\r\n\r\nMake working with variables more ergonomic/~~pure~~/declaritive/whatever by means of a fluent/chained `.withMap(...)` method\r\n\r\n\r\n```js\r\n```js\r\nconst task = tasks.get(\"slack\");\r\ntask.execute(context.variables().withMap({ foo: ...., bar: ...}));\r\n```\r\n\r\n# Screenshot\r\n\r\n(errr GH is having cert issues ATM with its static asset service :( )",
      "changedFiles": 1,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2023-01-30T23:14:55Z",
      "deletions": 2,
      "id": "PR_kwDOCXIH6s5I3Rb9",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNTg0NjgwNzQ=",
        "nameWithOwner": "walmartlabs/concord"
      },
      "state": "CLOSED",
      "title": "feat: init easy script Variables instantiation",
      "url": "https://github.com/walmartlabs/concord/pull/711"
    },
    "PR_kwDOFvD8xc5JSfu0": {
      "additions": 1221,
      "body": "# wip",
      "changedFiles": 54,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2023-02-05T20:21:10Z",
      "deletions": 3005,
      "id": "PR_kwDOFvD8xc5JSfu0",
      "mergedAt": "2023-02-05T20:26:45Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ4OTIxMDE=",
        "nameWithOwner": "cdaringe/airmap"
      },
      "state": "MERGED",
      "title": "feat: miniwras bulk, etl history yearly agg restory",
      "url": "https://github.com/cdaringe/airmap/pull/7"
    },
    "PR_kwDOCzdphs5Jj_mZ": {
      "additions": 247,
      "body": "# problem\r\n\r\nError handling is not consistent or helpful in various cases, emitting generic and unhelpful messages. See #225\r\n\r\n# solution\r\n\r\nThe current strategy is to funnel all possible failure modes in the HTTP client down through the `handleError` function. This pattern exists because there is are adapters  to a generic HTTP client interface, but adapters do not need to map any error cases in. To rework that pattern is a massive refactor, likely out of scope of this PR.\r\n\r\nThus, the approach taken here is to map failure types into _expected_ failure types, and match (non-exhaustively) on those failure types to extract relevant information. This approach is nice because it's simple. It's a bit of a leaky abstraction, because now `handlerError` must know about all error types. An improved implementation later could be having Error type mappings in the HTTP client interface and the adapters themselves.\r\n\r\nThe solution does the following:\r\n\r\n- update adapters to throw well known Error types\r\n- update the single error handler to inspect for those error types, and try to do more surgical extraction of well known crowdin API datas\r\n\r\n# todo\r\n\r\n- [x] Tests. I don't want to put a pattern in here for testing this without maintainer guidance. tell me how you want tests structured for this type of thing. ideally, the maintainers would stub in a test or two!",
      "changedFiles": 10,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 9
      },
      "createdAt": "2023-02-08T21:26:11Z",
      "deletions": 86,
      "id": "PR_kwDOCzdphs5Jj_mZ",
      "mergedAt": "2023-03-01T09:49:38Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxODgxODA4NzA=",
        "nameWithOwner": "crowdin/crowdin-api-client-js"
      },
      "state": "MERGED",
      "title": "refactor: improved error handling and error types",
      "url": "https://github.com/crowdin/crowdin-api-client-js/pull/226"
    },
    "PR_kwDOFvD8xc5JzuUd": {
      "additions": 379,
      "body": "# problem\r\n\r\nbuild/bundling with deno has been _rough_. deno is awesome, but we already have to do sloppy bundling with `deno bundle`, `deno`'s unstable api kept changing, and the only really perk we got with it was a better faux DOM env for testing streaming and an integrated test runner.\r\n\r\n# solution\r\n\r\n- drop deno\r\n- plan to migrate to node's embedded test runner\r\n- `-r happy-dom` or something similar to restore the streaming tests",
      "changedFiles": 49,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2023-02-13T03:00:40Z",
      "deletions": 120,
      "id": "PR_kwDOFvD8xc5JzuUd",
      "mergedAt": "2023-02-13T03:00:46Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ4OTIxMDE=",
        "nameWithOwner": "cdaringe/airmap"
      },
      "state": "MERGED",
      "title": "refactor: drop deno",
      "url": "https://github.com/cdaringe/airmap/pull/8"
    },
    "PR_kwDOJAwOps5KdOsh": {
      "additions": 12,
      "body": "",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2023-02-21T19:34:19Z",
      "deletions": 0,
      "id": "PR_kwDOJAwOps5KdOsh",
      "mergedAt": "2023-02-21T19:37:25Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/1"
    },
    "PR_kwDOJAwOps5KdQOy": {
      "additions": 1,
      "body": "# problem\r\n\r\nbad folders!\r\n\r\n# solution\r\n\r\npurge! now... will crowdin config pickup this branch name and service it...",
      "changedFiles": 4,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-02-21T19:41:19Z",
      "deletions": 13,
      "id": "PR_kwDOJAwOps5KdQOy",
      "mergedAt": "2023-02-21T19:43:39Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "fix: purge bad folders",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/2"
    },
    "PR_kwDOJAwOps5KdQ0d": {
      "additions": 12,
      "body": "",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2023-02-21T19:43:59Z",
      "deletions": 0,
      "id": "PR_kwDOJAwOps5KdQ0d",
      "mergedAt": "2023-02-21T19:44:19Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/3"
    },
    "PR_kwDOJAwOps5KdSEK": {
      "additions": 6,
      "body": "# problem\r\n\r\nget those strings goin\r\n\r\n# solution\r\n\r\ndo it live",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-02-21T19:49:06Z",
      "deletions": 1,
      "id": "PR_kwDOJAwOps5KdSEK",
      "mergedAt": "2023-02-21T19:49:11Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "feat: add new lib and mod str",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/4"
    },
    "PR_kwDOJAwOps5KdSMQ": {
      "additions": 18,
      "body": "",
      "changedFiles": 6,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 9
      },
      "createdAt": "2023-02-21T19:49:41Z",
      "deletions": 3,
      "id": "PR_kwDOJAwOps5KdSMQ",
      "mergedAt": "2023-02-21T20:15:24Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/5"
    },
    "PR_kwDOJAwOps5KdY3X": {
      "additions": 3,
      "body": "",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2023-02-21T20:17:37Z",
      "deletions": 3,
      "id": "PR_kwDOJAwOps5KdY3X",
      "mergedAt": "2023-02-21T20:19:29Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/6"
    },
    "PR_kwDOJAwOps5KdZn2": {
      "additions": 27,
      "body": "",
      "changedFiles": 6,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 6
      },
      "createdAt": "2023-02-21T20:21:17Z",
      "deletions": 0,
      "id": "PR_kwDOJAwOps5KdZn2",
      "mergedAt": "2023-02-21T20:21:43Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/7"
    },
    "PR_kwDOJAwOps5Kd07R": {
      "additions": 6,
      "body": "",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2023-02-21T22:30:40Z",
      "deletions": 3,
      "id": "PR_kwDOJAwOps5Kd07R",
      "mergedAt": "2023-02-21T22:32:28Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/8"
    },
    "PR_kwDOJAwOps5Kd1hp": {
      "additions": 8,
      "body": "# problem\r\n\r\ntesting crowdin `*translat*` wildcard branch match. what will it do?\r\n\r\n\r\nAwesommme, it auto makes a PR into this branch! See https://github.com/cdaringe/crowdin-github-integration-poc/pull/11/files",
      "changedFiles": 4,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 8
      },
      "createdAt": "2023-02-21T22:34:18Z",
      "deletions": 4,
      "id": "PR_kwDOJAwOps5Kd1hp",
      "mergedAt": "2023-02-21T22:45:41Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "chore: add branch with translat match",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/9"
    },
    "PR_kwDOJAwOps5Kd1r1": {
      "additions": 2,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-02-21T22:35:17Z",
      "deletions": 2,
      "id": "PR_kwDOJAwOps5Kd1r1",
      "mergedAt": "2023-02-21T22:36:27Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/10"
    },
    "PR_kwDOJAwOps5Kd1tf": {
      "additions": 7,
      "body": "",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 5
      },
      "createdAt": "2023-02-21T22:35:26Z",
      "deletions": 4,
      "id": "PR_kwDOJAwOps5Kd1tf",
      "mergedAt": "2023-02-21T22:44:39Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/11"
    },
    "PR_kwDOJAwOps5KeB0V": {
      "additions": 6,
      "body": "",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2023-02-21T23:54:13Z",
      "deletions": 3,
      "id": "PR_kwDOJAwOps5KeB0V",
      "mergedAt": "2023-03-02T18:00:15Z",
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "MERGED",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/12"
    },
    "PR_kwDOFvD8xc5L136s": {
      "additions": 331,
      "body": "# problem\r\n\r\nno calibration page\r\n\r\n# soln\r\n\r\nadd calibration workflow",
      "changedFiles": 17,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2023-03-12T19:25:38Z",
      "deletions": 124,
      "id": "PR_kwDOFvD8xc5L136s",
      "mergedAt": "2023-03-12T19:45:32Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzODQ4OTIxMDE=",
        "nameWithOwner": "cdaringe/airmap"
      },
      "state": "MERGED",
      "title": "feat/calibration",
      "url": "https://github.com/cdaringe/airmap/pull/9"
    },
    "PR_kwDOEqZVJM5MwiwV": {
      "additions": 1894,
      "body": "# problem\r\n\r\nocaml 5 tools are just too new. can't get a switch goin with all the right stuff. tired of fighting ocaml switches/deps/dev-env. i love it, but i want to actually _get work done_.\r\n\r\n# solution\r\n\r\nswitch to something more productive",
      "changedFiles": 44,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2023-03-23T17:26:03Z",
      "deletions": 465,
      "id": "PR_kwDOEqZVJM5MwiwV",
      "mergedAt": "2023-03-24T04:31:35Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMTI4OTA2NjA=",
        "nameWithOwner": "cdaringe/freshawair"
      },
      "state": "MERGED",
      "title": "refactor: switch to rust",
      "url": "https://github.com/cdaringe/freshawair/pull/3"
    },
    "PR_kwDOJAwOps5Pg-ME": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-05-01T17:05:11Z",
      "deletions": 1,
      "id": "PR_kwDOJAwOps5Pg-ME",
      "mergedAt": null,
      "repository": {
        "id": "R_kgDOJAwOpg",
        "nameWithOwner": "cdaringe/crowdin-github-integration-poc"
      },
      "state": "OPEN",
      "title": "New Crowdin updates",
      "url": "https://github.com/cdaringe/crowdin-github-integration-poc/pull/13"
    },
    "PR_kwDODqUnoM5QvyfO": {
      "additions": 46,
      "body": "# Problem\r\n\r\n`.refine` and `.superRefine`d schemas cannot be used in `discriminatedUnion`, but should be able to be.\r\n\r\nSee https://github.com/colinhacks/zod/issues/2440\r\n\r\n# Discussion\r\n\r\nThe fix is very simple.\r\n\r\n1. Support `ZodEffect`s where in the input type is also a `ZodObject`. Add a union member that says \"not only accept ZodObject, but ALSO accept ZodEffect\\<ZodObject\\>\"\r\n2. When looking up the schema shape, do a very efficient check to see what type we are, and get the schema shape based on whether we are a ZodEffect or ZodObject\r\n\r\nAdd a test. Blamo. Easy!\r\n\r\nThere's a lot of discussion of \"problems with z.discriminatedUnion\". I see this as _independent_ from those critiques. This, I perceive, was just a basic oversight in the typing of the original implementation. The fix is simple and carries minimal overhead.",
      "changedFiles": 4,
      "comments": {
        "totalCount": 9
      },
      "commits": {
        "totalCount": 4
      },
      "createdAt": "2023-05-17T19:00:36Z",
      "deletions": 4,
      "id": "PR_kwDODqUnoM5QvyfO",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNDU3MDQ2MDg=",
        "nameWithOwner": "colinhacks/zod"
      },
      "state": "CLOSED",
      "title": "fix: ZodEffect in discriminatedUnion",
      "url": "https://github.com/colinhacks/zod/pull/2441"
    },
    "PR_kwDOADHRAs5S7ykb": {
      "additions": 66,
      "body": "# Problem Statement\r\n\r\nGiven a locale & a message with a custom formatter requirement, I want my compiled output to use a formatter tailored to that locale, but cannot due to limitations in the current API.\r\n\r\nCloses #402\r\n\r\n## Motivating Context\r\n\r\nPresume that some custom formatter is expensive to load for _all_ supported locales.\r\n\r\nIn the current API, my formatter must do something like this:\r\n\r\n```js\r\nformatter: (value, locale) => \r\n  isUs(locale)\r\n  ? formatUs(value)\r\n  : isMx(locale)\r\n  ? formatMx(value)\r\n//  ...SNIP N locales ...\r\n  : isFinland(value)\r\n  ? formatFn(value)\r\n  : value\r\n```\r\n\r\n```js\r\n// compiled-output.js\r\nimport { fmt } from \"formatters/formatter-that-knows-about-all-locales-under-the-sun\"\r\nexport const msg = d => fmt(d.foo)\r\n```\r\n\r\n Presume that each formatting function is **expensive, say 1kb**. Now my app must install (N-1) kb of wasted formatters on each application load.\r\n\r\n# Solution\r\n\r\nSupport locale-aware custom formatters.\r\n\r\n```js\r\n// compiled-output.js\r\nimport { fmt as fmt_enUS } from \"formatters/en-US\"\r\nexport const msg = d => fmt_enUS(d.foo)\r\n```\r\n\r\n```js\r\n// compiled-output.js\r\nimport { fmt as fmt_esMX } from \"formatters/en-MX\"\r\nexport const msg = d => fmt_enMX(d.foo)\r\n```\r\n\r\nIn the new state, customFormatters do not need to bundle _all_ locale concerns into a single module.",
      "changedFiles": 3,
      "comments": {
        "totalCount": 15
      },
      "commits": {
        "totalCount": 20
      },
      "createdAt": "2023-06-13T22:55:23Z",
      "deletions": 11,
      "id": "PR_kwDOADHRAs5S7ykb",
      "mergedAt": "2023-08-03T06:00:25Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMjY0Nzcw",
        "nameWithOwner": "messageformat/messageformat"
      },
      "state": "MERGED",
      "title": "feat: support locale-specific customFormatters",
      "url": "https://github.com/messageformat/messageformat/pull/403"
    },
    "PR_kwDODWGI885TYUx6": {
      "additions": 1,
      "body": "# Problem\r\n\r\n[\"roundtrip\" is used liberally](https://github.com/search?q=repo%3Aunicode-org%2Fmessage-format-wg+roundtrip&type=code) in captured documentation, but has no captured definition in the glossary\r\n\r\n# Solution\r\n\r\nDefine the term",
      "changedFiles": 1,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2023-06-19T21:57:28Z",
      "deletions": 0,
      "id": "PR_kwDODWGI885TYUx6",
      "mergedAt": "2023-07-03T16:48:23Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjQ0OTU4NTk=",
        "nameWithOwner": "unicode-org/message-format-wg"
      },
      "state": "MERGED",
      "title": "docs: add roundtrip to glossary",
      "url": "https://github.com/unicode-org/message-format-wg/pull/400"
    },
    "PR_kwDODWGI885TfKsm": {
      "additions": 169,
      "body": "# Problem\r\n\r\nOn visiting the WG, I was (am) deeply interested in ultimately ensuring the `formatToParts` like implementation became part of the spec. I did not understand...\r\n\r\n- the prior context for which all discussions on the matter had occurred in\r\n- what different team members meant when using the term \"markup\" in context of this repo\r\n- the state of markup support in MFv2 (i'd argue, few _actually_ have a great grip on this, outside of a select few, having read all of the issues 😄 )\r\n\r\n# Solution\r\n\r\nRead through the rich history of markup in the codebase. Capture,\r\n\r\n- each key discussion\r\n- interesting takeaways from the discussion\r\n- a \"Status\", representing the sentiment that I perceive that the WG wants from \"markup\" support",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2023-06-21T00:14:37Z",
      "deletions": 0,
      "id": "PR_kwDODWGI885TfKsm",
      "mergedAt": "2023-07-03T16:47:49Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjQ0OTU4NTk=",
        "nameWithOwner": "unicode-org/message-format-wg"
      },
      "state": "MERGED",
      "title": "docs: markup feature history",
      "url": "https://github.com/unicode-org/message-format-wg/pull/401"
    },
    "PR_kwDOCKG9jc5TjUlD": {
      "additions": 1952,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **658/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-SEMVER-3247795](https://snyk.io/vuln/SNYK-JS-SEMVER-3247795) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiYmFlNDZiNC1iN2VjLTRmOGMtOWIyNi1lNzY5MWU0M2QzN2EiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImJiYWU0NmI0LWI3ZWMtNGY4Yy05YjI2LWU3NjkxZTQzZDM3YSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"bbae46b4-b7ec-4f8c-9b26-e7691e43d37a\",\"prPublicId\":\"bbae46b4-b7ec-4f8c-9b26-e7691e43d37a\",\"dependencies\":[{\"name\":\"@commitlint/cli\",\"from\":\"7.0.0\",\"to\":\"9.1.2\"},{\"name\":\"execa\",\"from\":\"0.10.0\",\"to\":\"2.1.0\"},{\"name\":\"meow\",\"from\":\"5.0.0\",\"to\":\"8.0.0\"},{\"name\":\"prettier-standard\",\"from\":\"8.0.1\",\"to\":\"9.0.0\"},{\"name\":\"standard\",\"from\":\"11.0.1\",\"to\":\"15.0.0\"},{\"name\":\"typescript-eslint-parser\",\"from\":\"18.0.0\",\"to\":\"19.0.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-SEMVER-3247795\"],\"upgrade\":[\"SNYK-JS-SEMVER-3247795\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"priorityScore\"],\"priorityScoreList\":[658],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-06-21T14:01:51Z",
      "deletions": 641,
      "id": "PR_kwDOCKG9jc5TjUlD",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Fix for 1 vulnerabilities",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/62"
    },
    "PR_kwDOBCMf_s5Ty_gW": {
      "additions": 2,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `npm` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **658/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-SEMVER-3247795](https://snyk.io/vuln/SNYK-JS-SEMVER-3247795) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n<details>\n  <summary><b>Commit messages</b></summary>\n  </br>\n  <details>\n    <summary>Package name: <b>execa</b></summary>\n    The new version differs by 158 commits.</br>\n    <ul>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/e98561a71df16695f56700d7be406ec8fe41f0a3\">e98561a</a> 2.1.0</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/c6a24ec279c64fae72dafa30feea725c86c979dd\">c6a24ec</a> Add &#x60;error.originalMessage&#x60; property (#373)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/f9bd317a173601ff023e112db0d372e1739ce69d\">f9bd317</a> Upgrade cross-spawn to 7.0.0 (#367)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/f62030536fe4e9634b1704eb56c874c3a855e3dd\">f620305</a> Document the reasons why the returned promise might fail (#364)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/7c1934577558733570fb0fc21f9474b4c0e1bb8c\">7c19345</a> Revert &quot;Add a sentence about job search (#293)&quot; (#352)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/48067c436edc7139571abe820230fafa766b276f\">48067c4</a> Properly clean up child processes created during tests (#349)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/603537aa05e933d0585645fbe4f94da3e20746d6\">603537a</a> 2.0.5</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/d268fd1dc7ec48bb0c1cfba4c16b75c1cb20143d\">d268fd1</a> Make execa compatible with Node.js 13.0.0-pre (#370)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/ac2bc15e1598317e4698eba5ba171927e4159655\">ac2bc15</a> 2.0.4</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/211febee3fe03ef82f5a59c960d99be61a6e2ab1\">211febe</a> Fix errors being thrown when &#x60;detached: true&#x60; or &#x60;cleanup: false&#x60; is used (#360)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/0cdc62cbdc9ad7879316363dce9b17ce1e6239c9\">0cdc62c</a> 2.0.3</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/aa070b86135ddcb647d773aaa6dfaa8e2afc5c02\">aa070b8</a> Add missing &#x60;result.all&#x60; TypeScript definition (#345)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/b46cba1fff44ec28f181f4713b1cc797e3c01089\">b46cba1</a> Fix test for Node &#x60;&gt;&#x3D; 12.6.0&#x60; (#348)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/19e58fe885f9c9d789e1f92a8fd185e6a54a687d\">19e58fe</a> Separate &#x60;process.env&#x60;-related logic to its own function (#341)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/c9b4d09cc70f80ed8423bd81fbd2c5849512c3e0\">c9b4d09</a> Readme tweaks (#340)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/82d2a4adff4e205864dd49bd0a5c352fc54ecdee\">82d2a4a</a> Add tip on how to execute the current package&#x27;s binary (#339)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/8977752a1036a50223b6a572ae5d1a103853c158\">8977752</a> 2.0.2</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/6a8e9acd7db3a2165b559621f2ff23a71481d6f6\">6a8e9ac</a> Do not read streams more than once (#330)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/7d510474296bbbbd5a5bb86197faf73dde8aeb40\">7d51047</a> Move &#x60;onExit()&#x60; cleanup code next to &#x60;onExit()&#x60; (#337)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/0241d6e5333feb5c12133ccd3e06e5e8e47363fc\">0241d6e</a> Improve tests for the &#x60;timeout&#x60; option (#332)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/2a7551f05c6d383c47d646bd63517a144f1748c4\">2a7551f</a> Refactor the &#x60;timeout&#x60; option (#333)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/9020f28154d5e9398919839be8fd213922b28ff9\">9020f28</a> Rename &#x60;stdioOption&#x60; variable (#334)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/b336fbf5d170c6fdd369c30e916bb9a216509428\">b336fbf</a> Make the synchronous errors code clearer (#331)</li>\n      <li><a href=\"https://snyk.io/redirect/github/sindresorhus/execa/commit/46daa7b1b6e66b215d8d8fb43bdd29836a0de46a\">46daa7b</a> Separate command-related logic into its own file (#329)</li>\n    </ul>\n\n   <a href=\"https://snyk.io/redirect/github/sindresorhus/execa/compare/c8dccf7de66c65f4b9b821ec00871fea386fb35f...e98561a71df16695f56700d7be406ec8fe41f0a3\">See the full diff</a>\n  </details>\n  <details>\n    <summary>Package name: <b>semver</b></summary>\n    The new version differs by 168 commits.</br>\n    <ul>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/e7b78de06eb14a7fa2075cedf9f167040d8d31af\">e7b78de</a> chore: release 7.5.2</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/58c791f40ba8cf4be35a5ca6644353ecd6249edc\">58c791f</a> fix: diff when detecting major change from prerelease (#566)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/5c8efbcb3c6c125af10746d054faff13e8c33fbd\">5c8efbc</a> fix: preserve build in raw after inc (#565)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441\">717534e</a> fix: better handling of whitespace (#564)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/2f738e9a70d9b9468b7b69e9ed3e12418725c650\">2f738e9</a> chore: bump @ npmcli/template-oss from 4.14.1 to 4.15.1 (#558)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/aa016a67162c195938f7873ea29a73dac47ff9ba\">aa016a6</a> chore: release 7.5.1</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/d30d25a5c1fb963c3cc9178cb1769fe45e4a3cab\">d30d25a</a> fix: show type on invalid semver error (#559)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/09c69e23cdf6c69c51f83635482fff89ab2574e3\">09c69e2</a> chore: bump @ npmcli/template-oss from 4.13.0 to 4.14.1 (#555)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/5b02ad7163a3ddcbcadf499e4f6195d6f2226dce\">5b02ad7</a> chore: release 7.5.0</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/e219bb454036a0c23e34407591f921c8edb688e7\">e219bb4</a> fix: throw on bad version with correct error message (#552)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/503a4e52fe2b1c6ed1400d33149f7733c8361eed\">503a4e5</a> feat: allow identifierBase to be false (#548)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/fc2f3df0b5d25253b3580607e111a9a280d888ca\">fc2f3df</a> fix: incorrect results from diff sometimes with prerelease versions (#546)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/27817677794f592b592bf6181a80a4824ff762b2\">2781767</a> fix: avoid re-instantiating SemVer during diff compare (#547)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/82aa7f62617d445f578584543565329a62343aab\">82aa7f6</a> chore: release 7.4.0</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/731d896bf4d1c9905d845220da7da3060e6359f9\">731d896</a> chore: enable CD (#545)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/940723d22bca824993627c45ac30dd3d2854b8cd\">940723d</a> fix: intersects with v0.0.0 and v0.0.0-0 (#538)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/aa516b50b32f5a144017d8fc1b9efe0540963c91\">aa516b5</a> fix: faster parse options (#535)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/61e6ea1e9b7af01baf19ab0c0a63c8e3ebfac97c\">61e6ea1</a> fix: faster cache key factory for range (#536)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/f8b8b619e71746a47852a9d301f3087ab311444f\">f8b8b61</a> fix: optimistic parse (#541)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/796cbe29b06d102e1b16f3ed78eaba210ece951e\">796cbe2</a> fix: semver.diff prerelease to release recognition (#533)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/3f222b144033525ca9f8a2ce5bc6e02f0401881f\">3f222b1</a> fix: reuse comparators on subset (#537)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/113f51312a1a6b6aa50d4f9486b4fde21782c1f5\">113f513</a> feat: identifierBase parameter for .inc (#532)</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/ea689bcbf134bd01d4cb7557ffef620b4e7357d4\">ea689bc</a> chore: basic type test for RELEASE_TYPES</li>\n      <li><a href=\"https://snyk.io/redirect/github/npm/node-semver/commit/c5d29df6f75741fea27fffe3b88c9c3b28e3ca73\">c5d29df</a> docs: Add &quot;Constants&quot; section to README</li>\n    </ul>\n\n   <a href=\"https://snyk.io/redirect/github/npm/node-semver/compare/c83c18cf84f9ccaea3431c929bb285fd168c01e4...e7b78de06eb14a7fa2075cedf9f167040d8d31af\">See the full diff</a>\n  </details>\n</details>\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjZDQ5NDRkYi0wMjAxLTQ1NDItYTMzMy1mNjUxOGFiY2FkNDIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImNkNDk0NGRiLTAyMDEtNDU0Mi1hMzMzLWY2NTE4YWJjYWQ0MiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3014cccc-f278-48ce-b078-7c341c17b0c6?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3014cccc-f278-48ce-b078-7c341c17b0c6?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"cd4944db-0201-4542-a333-f6518abcad42\",\"prPublicId\":\"cd4944db-0201-4542-a333-f6518abcad42\",\"dependencies\":[{\"name\":\"execa\",\"from\":\"1.0.0\",\"to\":\"2.1.0\"},{\"name\":\"semver\",\"from\":\"5.7.1\",\"to\":\"7.5.2\"}],\"packageManager\":\"npm\",\"projectPublicId\":\"3014cccc-f278-48ce-b078-7c341c17b0c6\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3014cccc-f278-48ce-b078-7c341c17b0c6?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-SEMVER-3247795\"],\"upgrade\":[\"SNYK-JS-SEMVER-3247795\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"priorityScore\"],\"priorityScoreList\":[658],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-06-24T01:13:23Z",
      "deletions": 2,
      "id": "PR_kwDOBCMf_s5Ty_gW",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTQxMDgxNA==",
        "nameWithOwner": "cdaringe/counsel"
      },
      "state": "OPEN",
      "title": "[Snyk] Fix for 1 vulnerabilities",
      "url": "https://github.com/cdaringe/counsel/pull/10"
    },
    "PR_kwDOADHRAs5XCObH": {
      "additions": 11,
      "body": "# Problem\r\n\r\n#403 requires documentation\r\n\r\n# Solution\r\n\r\nAdd documentation\r\n\r\n# Discussion\r\n\r\nI will be out-of-office for ~1-2 weeks. Please make edits _directly_ to the PR vs requesting changes, if feasible :)!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2023-08-02T17:49:34Z",
      "deletions": 2,
      "id": "PR_kwDOADHRAs5XCObH",
      "mergedAt": "2023-10-30T13:50:00Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMjY0Nzcw",
        "nameWithOwner": "messageformat/messageformat"
      },
      "state": "MERGED",
      "title": "docs: add locale specific formatting modules",
      "url": "https://github.com/messageformat/messageformat/pull/408"
    },
    "PR_kwDOAEs9Zs5XryZ9": {
      "additions": 1,
      "body": "# Problem\r\n\r\n`examples` missing, part of draft-6 spec (https://www.learnjsonschema.com/2020-12/meta-data/examples/)\r\n\r\n# Solution\r\n\r\nAdd 'em!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-08-10T23:43:46Z",
      "deletions": 0,
      "id": "PR_kwDOAEs9Zs5XryZ9",
      "mergedAt": "2024-04-05T07:01:54Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0OTMwOTE4",
        "nameWithOwner": "tdegrunt/jsonschema"
      },
      "state": "MERGED",
      "title": "fix: add draft-6 examples array",
      "url": "https://github.com/tdegrunt/jsonschema/pull/386"
    },
    "PR_kwDOKGwIaM5X1Y7q": {
      "additions": 38,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-08-14T02:11:23Z",
      "deletions": 0,
      "id": "PR_kwDOKGwIaM5X1Y7q",
      "mergedAt": "2023-08-14T02:11:41Z",
      "repository": {
        "id": "R_kgDOKGwIaA",
        "nameWithOwner": "cdaringe/programming-language-selector"
      },
      "state": "MERGED",
      "title": "chore: bug report",
      "url": "https://github.com/cdaringe/programming-language-selector/pull/2"
    },
    "PR_kwDOCKG9jc5bnz3j": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/ui/package.json\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **551/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.3  | Improper Input Validation <br/>[SNYK-JS-POSTCSS-5926692](https://snyk.io/vuln/SNYK-JS-POSTCSS-5926692) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4OGRkOWU1Yi0xOTViLTRiMjMtYmJjZi1iZDhhM2Q4NTA5NWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijg4ZGQ5ZTViLTE5NWItNGIyMy1iYmNmLWJkOGEzZDg1MDk1YSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"88dd9e5b-195b-4b23-bbcf-bd8a3d85095a\",\"prPublicId\":\"88dd9e5b-195b-4b23-bbcf-bd8a3d85095a\",\"dependencies\":[{\"name\":\"react-scripts-ts\",\"from\":\"2.17.0\",\"to\":\"4.0.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-POSTCSS-5926692\"],\"upgrade\":[\"SNYK-JS-POSTCSS-5926692\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[551],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-10-01T19:39:14Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5bnz3j",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade react-scripts-ts from 2.17.0 to 4.0.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/63"
    },
    "PR_kwDOBVl0UM5cDReO": {
      "additions": 1,
      "body": "# Problem\r\n\r\nCmd+arg was not clearly recorded in the examples, leading me to try zany things, like piping my cmds via stdin, but then the websocket closing prematurely\r\n\r\n# Solution\r\n\r\nMake the default example clear that string[] is a permissible input for a req/res lifecycle of exec, despite being over a ws",
      "changedFiles": 1,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2023-10-05T21:05:38Z",
      "deletions": 3,
      "id": "PR_kwDOBVl0UM5cDReO",
      "mergedAt": "2023-11-15T09:52:40Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk4OTc0ODU2MA==",
        "nameWithOwner": "kubernetes-client/javascript"
      },
      "state": "MERGED",
      "title": "docs: exec example",
      "url": "https://github.com/kubernetes-client/javascript/pull/1312"
    },
    "PR_kwDOA1197M5dtkeS": {
      "additions": 25,
      "body": "# Problem\r\n\r\nI wanted to tune my boot configuration, but could not\r\n\r\n# Solution\r\n\r\nSupport it!\r\n\r\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-10-25T06:13:23Z",
      "deletions": 17,
      "id": "PR_kwDOA1197M5dtkeS",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk1NjQ1ODczMg==",
        "nameWithOwner": "OpenFactorioServerManager/factorio-server-manager"
      },
      "state": "CLOSED",
      "title": "feat: allow CLI tuning",
      "url": "https://github.com/OpenFactorioServerManager/factorio-server-manager/pull/364"
    },
    "PR_kwDOApzK7c5d-2Aw": {
      "additions": 278,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **748/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.1  | Cross-site Request Forgery (CSRF) <br/>[SNYK-JS-AXIOS-6032459](https://snyk.io/vuln/SNYK-JS-AXIOS-6032459) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmYzU2N2VmYy1hNDQ3LTRhZWYtYmNlZC1mN2NjYzYzY2UzZWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZjNTY3ZWZjLWE0NDctNGFlZi1iY2VkLWY3Y2NjNjNjZTNlYyJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"fc567efc-a447-4aef-bced-f7ccc63ce3ec\",\"prPublicId\":\"fc567efc-a447-4aef-bced-f7ccc63ce3ec\",\"dependencies\":[{\"name\":\"axios\",\"from\":\"0.16.1\",\"to\":\"1.6.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"f6603448-9c5d-44da-b6b2-a1163095b76c\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-AXIOS-6032459\"],\"upgrade\":[\"SNYK-JS-AXIOS-6032459\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[748],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Cross-site Request Forgery (CSRF)](https://learn.snyk.io/lesson/csrf-attack/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-10-27T14:49:36Z",
      "deletions": 12,
      "id": "PR_kwDOApzK7c5d-2Aw",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzgyOTk5Nw==",
        "nameWithOwner": "cdaringe/tuffet"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade axios from 0.16.1 to 1.6.0",
      "url": "https://github.com/cdaringe/tuffet/pull/21"
    },
    "PR_kwDOIr5Pj85eeChd": {
      "additions": 2,
      "body": "# Problem\r\n\r\nI didn't know where to find the icons.\r\n\r\n# Solution\r\n\r\nDocument it!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-11-02T19:41:50Z",
      "deletions": 0,
      "id": "PR_kwDOIr5Pj85eeChd",
      "mergedAt": null,
      "repository": {
        "id": "R_kgDOIr5Pjw",
        "nameWithOwner": "alebcay/openlens-node-pod-menu"
      },
      "state": "OPEN",
      "title": "docs: highlight where icons are added",
      "url": "https://github.com/alebcay/openlens-node-pod-menu/pull/134"
    },
    "PR_kwDOA_tQf85fVn1J": {
      "additions": 2,
      "body": "# Problem\r\n\r\nmulti-select ignores `value`s in `choices`.\r\n\r\n# Solution\r\n\r\nRespect `value` if present in a choice, otherwise, fallback to default behavior.",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-11-13T19:50:27Z",
      "deletions": 1,
      "id": "PR_kwDOA_tQf85fVn1J",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2NjgwMTc5MQ==",
        "nameWithOwner": "enquirer/enquirer"
      },
      "state": "OPEN",
      "title": "fix: do not drop value in multi select",
      "url": "https://github.com/enquirer/enquirer/pull/445"
    },
    "PR_kwDOCKG9jc5gcVMz": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/ui/package.json\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **619/1000**  <br/> **Why?** Has a fix available, CVSS 8.1  | Prototype Pollution <br/>[SNYK-JS-AJV-584908](https://snyk.io/vuln/SNYK-JS-AJV-584908) |  Yes  | No Known Exploit \n![critical severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/c.png \"critical severity\")  |  **679/1000**  <br/> **Why?** Has a fix available, CVSS 9.3  | Incomplete List of Disallowed Inputs <br/>[SNYK-JS-BABELTRAVERSE-5962463](https://snyk.io/vuln/SNYK-JS-BABELTRAVERSE-5962463) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-BROWSERSLIST-1090194](https://snyk.io/vuln/SNYK-JS-BROWSERSLIST-1090194) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-COLORSTRING-1082939](https://snyk.io/vuln/SNYK-JS-COLORSTRING-1082939) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-GLOBPARENT-1016905](https://snyk.io/vuln/SNYK-JS-GLOBPARENT-1016905) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **484/1000**  <br/> **Why?** Has a fix available, CVSS 5.4  | Open Redirect <br/>[SNYK-JS-GOT-2932019](https://snyk.io/vuln/SNYK-JS-GOT-2932019) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **641/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.4  | Prototype Pollution <br/>[SNYK-JS-JSON5-3182856](https://snyk.io/vuln/SNYK-JS-JSON5-3182856) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **681/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASHTEMPLATE-1088054](https://snyk.io/vuln/SNYK-JS-LODASHTEMPLATE-1088054) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-POSTCSS-1255640](https://snyk.io/vuln/SNYK-JS-POSTCSS-1255640) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Improper Input Validation <br/>[SNYK-JS-POSTCSS-5926692](https://snyk.io/vuln/SNYK-JS-POSTCSS-5926692) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **619/1000**  <br/> **Why?** Has a fix available, CVSS 8.1  | Cross-site Scripting (XSS) <br/>[SNYK-JS-SERIALIZEJAVASCRIPT-536840](https://snyk.io/vuln/SNYK-JS-SERIALIZEJAVASCRIPT-536840) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **706/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.7  | Arbitrary Code Injection <br/>[SNYK-JS-SERIALIZEJAVASCRIPT-570062](https://snyk.io/vuln/SNYK-JS-SERIALIZEJAVASCRIPT-570062) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **619/1000**  <br/> **Why?** Has a fix available, CVSS 8.1  | Cross-site Scripting (XSS) <br/>[SNYK-JS-SERIALIZEJAVASCRIPT-6056521](https://snyk.io/vuln/SNYK-JS-SERIALIZEJAVASCRIPT-6056521) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **589/1000**  <br/> **Why?** Has a fix available, CVSS 7.5  | Denial of Service (DoS) <br/>[SNYK-JS-TRIMNEWLINES-1298042](https://snyk.io/vuln/SNYK-JS-TRIMNEWLINES-1298042) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-UGLIFYJS-1727251](https://snyk.io/vuln/SNYK-JS-UGLIFYJS-1727251) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **601/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.6  | Prototype Pollution <br/>[SNYK-JS-YARGSPARSER-560381](https://snyk.io/vuln/SNYK-JS-YARGSPARSER-560381) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjODk0YjQ5OC05OThjLTQ1MmYtOWU4Mi0wOTAzNzYwMzE1NzgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImM4OTRiNDk4LTk5OGMtNDUyZi05ZTgyLTA5MDM3NjAzMTU3OCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"c894b498-998c-452f-9e82-090376031578\",\"prPublicId\":\"c894b498-998c-452f-9e82-090376031578\",\"dependencies\":[{\"name\":\"react-scripts-ts\",\"from\":\"2.17.0\",\"to\":\"4.0.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-AJV-584908\",\"SNYK-JS-BABELTRAVERSE-5962463\",\"SNYK-JS-BROWSERSLIST-1090194\",\"SNYK-JS-COLORSTRING-1082939\",\"SNYK-JS-GLOBPARENT-1016905\",\"SNYK-JS-GOT-2932019\",\"SNYK-JS-JSON5-3182856\",\"SNYK-JS-LODASHTEMPLATE-1088054\",\"SNYK-JS-POSTCSS-1255640\",\"SNYK-JS-POSTCSS-5926692\",\"SNYK-JS-SERIALIZEJAVASCRIPT-536840\",\"SNYK-JS-SERIALIZEJAVASCRIPT-570062\",\"SNYK-JS-SERIALIZEJAVASCRIPT-6056521\",\"SNYK-JS-TRIMNEWLINES-1298042\",\"SNYK-JS-UGLIFYJS-1727251\",\"SNYK-JS-YARGSPARSER-560381\"],\"upgrade\":[\"SNYK-JS-AJV-584908\",\"SNYK-JS-BABELTRAVERSE-5962463\",\"SNYK-JS-BROWSERSLIST-1090194\",\"SNYK-JS-COLORSTRING-1082939\",\"SNYK-JS-GLOBPARENT-1016905\",\"SNYK-JS-GOT-2932019\",\"SNYK-JS-JSON5-3182856\",\"SNYK-JS-LODASHTEMPLATE-1088054\",\"SNYK-JS-POSTCSS-1255640\",\"SNYK-JS-POSTCSS-5926692\",\"SNYK-JS-SERIALIZEJAVASCRIPT-536840\",\"SNYK-JS-SERIALIZEJAVASCRIPT-570062\",\"SNYK-JS-SERIALIZEJAVASCRIPT-6056521\",\"SNYK-JS-TRIMNEWLINES-1298042\",\"SNYK-JS-UGLIFYJS-1727251\",\"SNYK-JS-YARGSPARSER-560381\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[619,679,586,586,586,484,641,681,586,479,619,706,619,589,479,601],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr)\n 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-11-27T14:03:05Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5gcVMz",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade react-scripts-ts from 2.17.0 to 4.0.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/64"
    },
    "PR_kwDOCKG9jc5gcWG5": {
      "additions": 2156,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-ANSIREGEX-1583908](https://snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **636/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.3  | Prototype Pollution <br/>[SNYK-JS-DOTPROP-543489](https://snyk.io/vuln/SNYK-JS-DOTPROP-543489) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **681/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASHTEMPLATE-1088054](https://snyk.io/vuln/SNYK-JS-LODASHTEMPLATE-1088054) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **589/1000**  <br/> **Why?** Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-UNSETVALUE-2400660](https://snyk.io/vuln/SNYK-JS-UNSETVALUE-2400660) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiMTcyYjFlZS1jMjZmLTRlNzQtOTZlOS1jNzc0MTBiOGE2NDUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImIxNzJiMWVlLWMyNmYtNGU3NC05NmU5LWM3NzQxMGI4YTY0NSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"b172b1ee-c26f-4e74-96e9-c77410b8a645\",\"prPublicId\":\"b172b1ee-c26f-4e74-96e9-c77410b8a645\",\"dependencies\":[{\"name\":\"@commitlint/cli\",\"from\":\"7.0.0\",\"to\":\"9.0.0\"},{\"name\":\"lint-staged\",\"from\":\"7.2.2\",\"to\":\"10.2.0\"},{\"name\":\"prettier-standard\",\"from\":\"8.0.1\",\"to\":\"9.0.0\"},{\"name\":\"standard\",\"from\":\"11.0.1\",\"to\":\"13.0.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-ANSIREGEX-1583908\",\"SNYK-JS-DOTPROP-543489\",\"SNYK-JS-LODASHTEMPLATE-1088054\",\"SNYK-JS-UNSETVALUE-2400660\"],\"upgrade\":[\"SNYK-JS-ANSIREGEX-1583908\",\"SNYK-JS-DOTPROP-543489\",\"SNYK-JS-LODASHTEMPLATE-1088054\",\"SNYK-JS-UNSETVALUE-2400660\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"priorityScore\"],\"priorityScoreList\":[696,636,681,589],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-11-27T14:05:15Z",
      "deletions": 1097,
      "id": "PR_kwDOCKG9jc5gcWG5",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Fix for 4 vulnerabilities",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/65"
    },
    "PR_kwDOCKG9jc5gyWaX": {
      "additions": 88,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **661/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5  | Missing Release of Resource after Effective Lifetime <br/>[SNYK-JS-INFLIGHT-6095116](https://snyk.io/vuln/SNYK-JS-INFLIGHT-6095116) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzNjRjYTc1Ni01MGY4LTRjNzgtOThkNC1lNmU4NDA1ZDI2NDgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjM2NGNhNzU2LTUwZjgtNGM3OC05OGQ0LWU2ZTg0MDVkMjY0OCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"364ca756-50f8-4c78-98d4-e6e8405d2648\",\"prPublicId\":\"364ca756-50f8-4c78-98d4-e6e8405d2648\",\"dependencies\":[{\"name\":\"glob\",\"from\":\"7.1.2\",\"to\":\"9.0.0\"},{\"name\":\"prettier-standard\",\"from\":\"8.0.1\",\"to\":\"9.0.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-INFLIGHT-6095116\"],\"upgrade\":[\"SNYK-JS-INFLIGHT-6095116\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"priorityScore\"],\"priorityScoreList\":[661],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-11-30T14:29:39Z",
      "deletions": 319,
      "id": "PR_kwDOCKG9jc5gyWaX",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Fix for 1 vulnerabilities",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/66"
    },
    "PR_kwDOBCMf_s5g5wt-": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `npm` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **661/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5  | Missing Release of Resource after Effective Lifetime <br/>[SNYK-JS-INFLIGHT-6095116](https://snyk.io/vuln/SNYK-JS-INFLIGHT-6095116) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n<details>\n  <summary><b>Commit messages</b></summary>\n  </br>\n  <details>\n    <summary>Package name: <b>glob</b></summary>\n    The new version differs by 114 commits.</br>\n    <ul>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/a68703e61894ef260323dcc9f95b21f17197d951\">a68703e</a> 9.0.0</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/58159ca6767e7f8925e9301b9c0ac11211bde50b\">58159ca</a> test: cwd can be a url</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/a547a9c3e9c3a9e734204435871d6339d2d62e55\">a547a9c</a> more docs</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/42a3ac7ec172bb1b502a048e1bb3f14cf299f117\">42a3ac7</a> link to bash manual for Pattern Matching</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/474172d5e87a5eda64c0dffb10ead57c2826c805\">474172d</a> update readme with cwd URL support</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/ad3904d7f143e814896c0114731acf462d075cc3\">ad3904d</a> update readme with posix class support</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/b22fc7daaaf8a1d231f68c91e22f94376f65bd0b\">b22fc7d</a> minimatch@7.3.0</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/cdd1627bd63431741310c3b4f3f920ef78dabbf0\">cdd1627</a> update all the things, remove unused mkdirp types</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/75c64167c4823e9532d0f89d68865823238f854e\">75c6416</a> Merge branch &#x27;v9&#x27;</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/fa0cd771fc241806425dd33ddb7417c5c2596772\">fa0cd77</a> cwd can be a file:// url</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/d03ed0ae5a1d7e5a471667f8c530393226a5dd5e\">d03ed0a</a> typedoc github action</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/9a5a45a1c873b1df3f05cc55c535b6345a6857e0\">9a5a45a</a> put bench results in readme</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/20b2f8888c84575a46b8b1434282483cc89c84d4\">20b2f88</a> docs, fix benchmark script</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/4829c8887af895d5b24f09345f88a8e6ce7f881c\">4829c88</a> upgrade ci actions</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/5cbacdd6c4ab286cd65decc487a146f5f37b0719\">5cbacdd</a> minimatch@7.2.0</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/210310b528bf311cb7ab23fe1b448674e4d4f8aa\">210310b</a> omit symlinks on windows</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/d34c8d519a65242914d8348303dfc482c3ea3c28\">d34c8d5</a> full test coverage, clean up signals and remove extranous code</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/5f21b46bc21c27ce39e166c064455d8f1ed62863\">5f21b46</a> adding lots of tests, clean up types</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/b12e6baa664fa23ac2901ca9a4f3d56df1e6b787\">b12e6ba</a> slashes on nodir test</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/75f74b0d481da9d1b85f74e8ba35dc3646fefb3c\">75f74b0</a> more windows test slashes</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/3aa1abd025b2dd29cdc4cf92a9f64ef28c962af9\">3aa1abd</a> more windows test affordances</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/3e68a7b908d6477350530b70a55c9f80130f775b\">3e68a7b</a> some windows test affordances</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/8c2e0824f76b843d8477b6e3d90a3afecd54cc07\">8c2e082</a> feature complete and tests passing</li>\n      <li><a href=\"https://snyk.io/redirect/github/isaacs/node-glob/commit/c3be35ae03314f4d74450eee6d15b6e4d85f1816\">c3be35a</a> correct ** vs ./** behavior</li>\n    </ul>\n\n   <a href=\"https://snyk.io/redirect/github/isaacs/node-glob/compare/c3cd57ae128faa0e9190492acc743bb779ac4054...a68703e61894ef260323dcc9f95b21f17197d951\">See the full diff</a>\n  </details>\n</details>\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1NDQ2MDEyZS1mMjkwLTQxYmYtYWIwOS05OGI3ZmVkZjc3MjQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjU0NDYwMTJlLWYyOTAtNDFiZi1hYjA5LTk4YjdmZWRmNzcyNCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3014cccc-f278-48ce-b078-7c341c17b0c6?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3014cccc-f278-48ce-b078-7c341c17b0c6?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"5446012e-f290-41bf-ab09-98b7fedf7724\",\"prPublicId\":\"5446012e-f290-41bf-ab09-98b7fedf7724\",\"dependencies\":[{\"name\":\"glob\",\"from\":\"7.2.3\",\"to\":\"9.0.0\"}],\"packageManager\":\"npm\",\"projectPublicId\":\"3014cccc-f278-48ce-b078-7c341c17b0c6\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3014cccc-f278-48ce-b078-7c341c17b0c6?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-INFLIGHT-6095116\"],\"upgrade\":[\"SNYK-JS-INFLIGHT-6095116\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[661],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-12-01T14:06:00Z",
      "deletions": 1,
      "id": "PR_kwDOBCMf_s5g5wt-",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk2OTQxMDgxNA==",
        "nameWithOwner": "cdaringe/counsel"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade glob from 7.2.3 to 9.0.0",
      "url": "https://github.com/cdaringe/counsel/pull/11"
    },
    "PR_kwDOApzK7c5g5xKf": {
      "additions": 490,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **619/1000**  <br/> **Why?** Has a fix available, CVSS 8.1  | Prototype Pollution <br/>[SNYK-JS-AJV-584908](https://snyk.io/vuln/SNYK-JS-AJV-584908) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **584/1000**  <br/> **Why?** Has a fix available, CVSS 7.4  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-HAWK-2808852](https://snyk.io/vuln/SNYK-JS-HAWK-2808852) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **661/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5  | Missing Release of Resource after Effective Lifetime <br/>[SNYK-JS-INFLIGHT-6095116](https://snyk.io/vuln/SNYK-JS-INFLIGHT-6095116) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **646/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.5  | Server-side Request Forgery (SSRF) <br/>[SNYK-JS-REQUEST-3361831](https://snyk.io/vuln/SNYK-JS-REQUEST-3361831) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **646/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.5  | Prototype Pollution <br/>[SNYK-JS-TOUGHCOOKIE-5672873](https://snyk.io/vuln/SNYK-JS-TOUGHCOOKIE-5672873) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkNmQxMmY4Ny04NDMzLTRhYTgtOTgxNC03YWNkYWNjZjA0NjUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImQ2ZDEyZjg3LTg0MzMtNGFhOC05ODE0LTdhY2RhY2NmMDQ2NSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"d6d12f87-8433-4aa8-9814-7acdaccf0465\",\"prPublicId\":\"d6d12f87-8433-4aa8-9814-7acdaccf0465\",\"dependencies\":[{\"name\":\"pouchy\",\"from\":\"11.0.3\",\"to\":\"12.3.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"f6603448-9c5d-44da-b6b2-a1163095b76c\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-AJV-584908\",\"SNYK-JS-HAWK-2808852\",\"SNYK-JS-INFLIGHT-6095116\",\"SNYK-JS-REQUEST-3361831\",\"SNYK-JS-TOUGHCOOKIE-5672873\"],\"upgrade\":[\"SNYK-JS-AJV-584908\",\"SNYK-JS-HAWK-2808852\",\"SNYK-JS-INFLIGHT-6095116\",\"SNYK-JS-REQUEST-3361831\",\"SNYK-JS-TOUGHCOOKIE-5672873\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[619,584,661,646,646],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n 🦉 [Server-side Request Forgery (SSRF)](https://learn.snyk.io/lesson/ssrf-server-side-request-forgery/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-12-01T14:07:10Z",
      "deletions": 728,
      "id": "PR_kwDOApzK7c5g5xKf",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzgyOTk5Nw==",
        "nameWithOwner": "cdaringe/tuffet"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade pouchy from 11.0.3 to 12.3.1",
      "url": "https://github.com/cdaringe/tuffet/pull/22"
    },
    "PR_kwDOGuS9Ts5hmv1t": {
      "additions": 77,
      "body": "# Problem\r\n\r\n- packages site could use a sweet logo!\r\n- doesn't render well on mobile!\r\n\r\n<img src=\"https://github.com/gleam-lang/packages/assets/1003261/671e84dc-6386-4f68-8acb-ac14a71fef83.png\" width=\"220\" />\r\n\r\n\r\n# Solution\r\n\r\n- add the logo\r\n- make the header with logo more mobile friendly\r\n\r\n![gleam_header_responsive mov](https://github.com/gleam-lang/packages/assets/1003261/94366459-f3ef-43c9-ba07-f280df3f8c5c)\r\n",
      "changedFiles": 7,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2023-12-10T04:19:43Z",
      "deletions": 31,
      "id": "PR_kwDOGuS9Ts5hmv1t",
      "mergedAt": "2024-02-15T11:09:44Z",
      "repository": {
        "id": "R_kgDOGuS9Tg",
        "nameWithOwner": "gleam-lang/packages"
      },
      "state": "MERGED",
      "title": "feat: add logo",
      "url": "https://github.com/gleam-lang/packages/pull/27"
    },
    "PR_kwDOCKG9jc5hr-0o": {
      "additions": 43,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-1018905](https://snyk.io/vuln/SNYK-JS-LODASH-1018905) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **681/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASH-1040724](https://snyk.io/vuln/SNYK-JS-LODASH-1040724) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASH-450202](https://snyk.io/vuln/SNYK-JS-LODASH-450202) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **731/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 8.2  | Prototype Pollution <br/>[SNYK-JS-LODASH-567746](https://snyk.io/vuln/SNYK-JS-LODASH-567746) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASH-608086](https://snyk.io/vuln/SNYK-JS-LODASH-608086) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASH-73638](https://snyk.io/vuln/SNYK-JS-LODASH-73638) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **541/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 4.4  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-73639](https://snyk.io/vuln/SNYK-JS-LODASH-73639) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzNTdlOTA3NC0yYzU3LTRmZmUtOWViNy04NmExZDhiMmQ3YzQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjM1N2U5MDc0LTJjNTctNGZmZS05ZWI3LTg2YTFkOGIyZDdjNCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"357e9074-2c57-4ffe-9eb7-86a1d8b2d7c4\",\"prPublicId\":\"357e9074-2c57-4ffe-9eb7-86a1d8b2d7c4\",\"dependencies\":[{\"name\":\"prettier-standard\",\"from\":\"8.0.1\",\"to\":\"9.0.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\",\"SNYK-JS-LODASH-450202\",\"SNYK-JS-LODASH-567746\",\"SNYK-JS-LODASH-608086\",\"SNYK-JS-LODASH-73638\",\"SNYK-JS-LODASH-73639\"],\"upgrade\":[\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\",\"SNYK-JS-LODASH-450202\",\"SNYK-JS-LODASH-567746\",\"SNYK-JS-LODASH-608086\",\"SNYK-JS-LODASH-73638\",\"SNYK-JS-LODASH-73639\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[586,681,686,731,686,686,541],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-12-11T14:10:01Z",
      "deletions": 321,
      "id": "PR_kwDOCKG9jc5hr-0o",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade prettier-standard from 8.0.1 to 9.0.0",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/67"
    },
    "PR_kwDOCKG9jc5hy_zf": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/api/package.json\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **716/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 8.6  | Origin Validation Error <br/>[SNYK-JS-KOACORS-6117545](https://snyk.io/vuln/SNYK-JS-KOACORS-6117545) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIwMjMzNmM3Zi0yNzFkLTQ0ZDItODE0MS1hOGFkMGJhNjZiYmQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjAyMzM2YzdmLTI3MWQtNDRkMi04MTQxLWE4YWQwYmE2NmJiZCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"02336c7f-271d-44d2-8141-a8ad0ba66bbd\",\"prPublicId\":\"02336c7f-271d-44d2-8141-a8ad0ba66bbd\",\"dependencies\":[{\"name\":\"@koa/cors\",\"from\":\"2.2.2\",\"to\":\"5.0.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"7522964a-bca4-45aa-b609-e7c7b014d63d\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-KOACORS-6117545\"],\"upgrade\":[\"SNYK-JS-KOACORS-6117545\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[716],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-12-12T14:03:15Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5hy_zf",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade @koa/cors from 2.2.2 to 5.0.0",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/68"
    },
    "PR_kwDOCKG9jc5iZgKW": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/api/package.json\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **539/1000**  <br/> **Why?** Has a fix available, CVSS 6.5  | Improper Input Validation <br/>[SNYK-JS-URIJS-1055003](https://snyk.io/vuln/SNYK-JS-URIJS-1055003) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Improper Input Validation <br/>[SNYK-JS-URIJS-1078286](https://snyk.io/vuln/SNYK-JS-URIJS-1078286) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Open Redirect <br/>[SNYK-JS-URIJS-1319803](https://snyk.io/vuln/SNYK-JS-URIJS-1319803) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **579/1000**  <br/> **Why?** Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-URIJS-1319806](https://snyk.io/vuln/SNYK-JS-URIJS-1319806) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Open Redirect <br/>[SNYK-JS-URIJS-2401466](https://snyk.io/vuln/SNYK-JS-URIJS-2401466) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Improper Input Validation <br/>[SNYK-JS-URIJS-2415026](https://snyk.io/vuln/SNYK-JS-URIJS-2415026) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Open Redirect <br/>[SNYK-JS-URIJS-2419067](https://snyk.io/vuln/SNYK-JS-URIJS-2419067) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **646/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.5  | Misinterpretation of Input <br/>[SNYK-JS-URIJS-2440699](https://snyk.io/vuln/SNYK-JS-URIJS-2440699) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **591/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.4  | Cross-site Scripting (XSS) <br/>[SNYK-JS-URIJS-2441239](https://snyk.io/vuln/SNYK-JS-URIJS-2441239) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjYzg5OTEwMy1lMjhjLTRkYWUtODhkNC05NDIzMDBkZWM4MTkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImNjODk5MTAzLWUyOGMtNGRhZS04OGQ0LTk0MjMwMGRlYzgxOSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"cc899103-e28c-4dae-88d4-942300dec819\",\"prPublicId\":\"cc899103-e28c-4dae-88d4-942300dec819\",\"dependencies\":[{\"name\":\"koa-router\",\"from\":\"7.4.0\",\"to\":\"11.0.2\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"7522964a-bca4-45aa-b609-e7c7b014d63d\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-URIJS-1055003\",\"SNYK-JS-URIJS-1078286\",\"SNYK-JS-URIJS-1319803\",\"SNYK-JS-URIJS-1319806\",\"SNYK-JS-URIJS-2401466\",\"SNYK-JS-URIJS-2415026\",\"SNYK-JS-URIJS-2419067\",\"SNYK-JS-URIJS-2440699\",\"SNYK-JS-URIJS-2441239\"],\"upgrade\":[\"SNYK-JS-URIJS-1055003\",\"SNYK-JS-URIJS-1078286\",\"SNYK-JS-URIJS-1319803\",\"SNYK-JS-URIJS-1319806\",\"SNYK-JS-URIJS-2401466\",\"SNYK-JS-URIJS-2415026\",\"SNYK-JS-URIJS-2419067\",\"SNYK-JS-URIJS-2440699\",\"SNYK-JS-URIJS-2441239\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[539,479,586,579,586,586,586,646,591],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)\n 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr)\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-12-19T18:04:42Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5iZgKW",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade koa-router from 7.4.0 to 11.0.2",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/69"
    },
    "PR_kwDOCKG9jc5iZnky": {
      "additions": 4287,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **589/1000**  <br/> **Why?** Has a fix available, CVSS 7.5  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-ACORN-559469](https://snyk.io/vuln/SNYK-JS-ACORN-559469) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **619/1000**  <br/> **Why?** Has a fix available, CVSS 8.1  | Prototype Pollution <br/>[SNYK-JS-AJV-584908](https://snyk.io/vuln/SNYK-JS-AJV-584908) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-ANSIREGEX-1583908](https://snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908) |  Yes  | Proof of Concept \n![critical severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/c.png \"critical severity\")  |  **786/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 9.3  | Incomplete List of Disallowed Inputs <br/>[SNYK-JS-BABELTRAVERSE-5962462](https://snyk.io/vuln/SNYK-JS-BABELTRAVERSE-5962462) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-CONVENTIONALCOMMITSPARSER-1766960](https://snyk.io/vuln/SNYK-JS-CONVENTIONALCOMMITSPARSER-1766960) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Denial of Service (DoS) <br/>[SNYK-JS-DECODEURICOMPONENT-3149970](https://snyk.io/vuln/SNYK-JS-DECODEURICOMPONENT-3149970) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **636/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.3  | Prototype Pollution <br/>[SNYK-JS-DOTPROP-543489](https://snyk.io/vuln/SNYK-JS-DOTPROP-543489) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **579/1000**  <br/> **Why?** Has a fix available, CVSS 7.3  | Arbitrary File Overwrite <br/>[SNYK-JS-FSTREAM-174725](https://snyk.io/vuln/SNYK-JS-FSTREAM-174725) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-GLOBPARENT-1016905](https://snyk.io/vuln/SNYK-JS-GLOBPARENT-1016905) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **484/1000**  <br/> **Why?** Has a fix available, CVSS 5.4  | Open Redirect <br/>[SNYK-JS-GOT-2932019](https://snyk.io/vuln/SNYK-JS-GOT-2932019) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **671/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7  | Remote Code Execution (RCE) <br/>[SNYK-JS-HANDLEBARS-1056767](https://snyk.io/vuln/SNYK-JS-HANDLEBARS-1056767) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **601/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.6  | Prototype Pollution <br/>[SNYK-JS-HANDLEBARS-1279029](https://snyk.io/vuln/SNYK-JS-HANDLEBARS-1279029) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **579/1000**  <br/> **Why?** Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-HANDLEBARS-173692](https://snyk.io/vuln/SNYK-JS-HANDLEBARS-173692) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **579/1000**  <br/> **Why?** Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-HANDLEBARS-174183](https://snyk.io/vuln/SNYK-JS-HANDLEBARS-174183) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **579/1000**  <br/> **Why?** Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-HANDLEBARS-469063](https://snyk.io/vuln/SNYK-JS-HANDLEBARS-469063) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **589/1000**  <br/> **Why?** Has a fix available, CVSS 7.5  | Denial of Service (DoS) <br/>[SNYK-JS-HANDLEBARS-480388](https://snyk.io/vuln/SNYK-JS-HANDLEBARS-480388) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **726/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 8.1  | Arbitrary Code Execution <br/>[SNYK-JS-HANDLEBARS-534478](https://snyk.io/vuln/SNYK-JS-HANDLEBARS-534478) |  Yes  | Proof of Concept \n![critical severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/c.png \"critical severity\")  |  **704/1000**  <br/> **Why?** Has a fix available, CVSS 9.8  | Prototype Pollution <br/>[SNYK-JS-HANDLEBARS-534988](https://snyk.io/vuln/SNYK-JS-HANDLEBARS-534988) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **646/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.5  | Prototype Pollution <br/>[SNYK-JS-HANDLEBARS-567742](https://snyk.io/vuln/SNYK-JS-HANDLEBARS-567742) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-HOSTEDGITINFO-1088355](https://snyk.io/vuln/SNYK-JS-HOSTEDGITINFO-1088355) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **703/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 6.2  | Missing Release of Resource after Effective Lifetime <br/>[SNYK-JS-INFLIGHT-6095116](https://snyk.io/vuln/SNYK-JS-INFLIGHT-6095116) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-INI-1048974](https://snyk.io/vuln/SNYK-JS-INI-1048974) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **644/1000**  <br/> **Why?** Has a fix available, CVSS 8.6  | Prototype Pollution <br/>[SNYK-JS-JSONSCHEMA-1920922](https://snyk.io/vuln/SNYK-JS-JSONSCHEMA-1920922) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **509/1000**  <br/> **Why?** Has a fix available, CVSS 5.9  | Denial of Service (DoS) <br/>[SNYK-JS-JSYAML-173999](https://snyk.io/vuln/SNYK-JS-JSYAML-173999) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **619/1000**  <br/> **Why?** Has a fix available, CVSS 8.1  | Arbitrary Code Execution <br/>[SNYK-JS-JSYAML-174129](https://snyk.io/vuln/SNYK-JS-JSYAML-174129) |  Yes  | No Known Exploit \n![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png \"low severity\")  |  **506/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 3.7  | Validation Bypass <br/>[SNYK-JS-KINDOF-537849](https://snyk.io/vuln/SNYK-JS-KINDOF-537849) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-1018905](https://snyk.io/vuln/SNYK-JS-LODASH-1018905) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **681/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASH-1040724](https://snyk.io/vuln/SNYK-JS-LODASH-1040724) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASH-450202](https://snyk.io/vuln/SNYK-JS-LODASH-450202) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **731/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 8.2  | Prototype Pollution <br/>[SNYK-JS-LODASH-567746](https://snyk.io/vuln/SNYK-JS-LODASH-567746) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASH-608086](https://snyk.io/vuln/SNYK-JS-LODASH-608086) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASH-73638](https://snyk.io/vuln/SNYK-JS-LODASH-73638) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **541/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 4.4  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-73639](https://snyk.io/vuln/SNYK-JS-LODASH-73639) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASHMERGE-173732](https://snyk.io/vuln/SNYK-JS-LODASHMERGE-173732) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **636/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.3  | Prototype Pollution <br/>[SNYK-JS-LODASHMERGE-173733](https://snyk.io/vuln/SNYK-JS-LODASHMERGE-173733) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **681/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASHTEMPLATE-1088054](https://snyk.io/vuln/SNYK-JS-LODASHTEMPLATE-1088054) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-MINIMATCH-3050818](https://snyk.io/vuln/SNYK-JS-MINIMATCH-3050818) |  Yes  | No Known Exploit \n![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png \"low severity\")  |  **506/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 3.7  | Prototype Pollution <br/>[SNYK-JS-MINIMIST-2429795](https://snyk.io/vuln/SNYK-JS-MINIMIST-2429795) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **601/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.6  | Prototype Pollution <br/>[SNYK-JS-MINIMIST-559764](https://snyk.io/vuln/SNYK-JS-MINIMIST-559764) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-MIXINDEEP-450212](https://snyk.io/vuln/SNYK-JS-MIXINDEEP-450212) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **589/1000**  <br/> **Why?** Has a fix available, CVSS 7.5  | Directory Traversal <br/>[SNYK-JS-MOMENT-2440688](https://snyk.io/vuln/SNYK-JS-MOMENT-2440688) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-MOMENT-2944238](https://snyk.io/vuln/SNYK-JS-MOMENT-2944238) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Prototype Poisoning <br/>[SNYK-JS-QS-3153490](https://snyk.io/vuln/SNYK-JS-QS-3153490) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **646/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.5  | Server-side Request Forgery (SSRF) <br/>[SNYK-JS-REQUEST-3361831](https://snyk.io/vuln/SNYK-JS-REQUEST-3361831) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-SEMVER-3247795](https://snyk.io/vuln/SNYK-JS-SEMVER-3247795) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-SETVALUE-1540541](https://snyk.io/vuln/SNYK-JS-SETVALUE-1540541) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-SETVALUE-450213](https://snyk.io/vuln/SNYK-JS-SETVALUE-450213) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **624/1000**  <br/> **Why?** Has a fix available, CVSS 8.2  | Arbitrary File Overwrite <br/>[SNYK-JS-TAR-1536528](https://snyk.io/vuln/SNYK-JS-TAR-1536528) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **624/1000**  <br/> **Why?** Has a fix available, CVSS 8.2  | Arbitrary File Overwrite <br/>[SNYK-JS-TAR-1536531](https://snyk.io/vuln/SNYK-JS-TAR-1536531) |  Yes  | No Known Exploit \n![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png \"low severity\")  |  **410/1000**  <br/> **Why?** Has a fix available, CVSS 3.7  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-TAR-1536758](https://snyk.io/vuln/SNYK-JS-TAR-1536758) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **639/1000**  <br/> **Why?** Has a fix available, CVSS 8.5  | Arbitrary File Write <br/>[SNYK-JS-TAR-1579147](https://snyk.io/vuln/SNYK-JS-TAR-1579147) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **639/1000**  <br/> **Why?** Has a fix available, CVSS 8.5  | Arbitrary File Write <br/>[SNYK-JS-TAR-1579152](https://snyk.io/vuln/SNYK-JS-TAR-1579152) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **639/1000**  <br/> **Why?** Has a fix available, CVSS 8.5  | Arbitrary File Write <br/>[SNYK-JS-TAR-1579155](https://snyk.io/vuln/SNYK-JS-TAR-1579155) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **726/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 8.1  | Arbitrary File Overwrite <br/>[SNYK-JS-TAR-174125](https://snyk.io/vuln/SNYK-JS-TAR-174125) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **646/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.5  | Prototype Pollution <br/>[SNYK-JS-TOUGHCOOKIE-5672873](https://snyk.io/vuln/SNYK-JS-TOUGHCOOKIE-5672873) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **589/1000**  <br/> **Why?** Has a fix available, CVSS 7.5  | Denial of Service (DoS) <br/>[SNYK-JS-TRIMNEWLINES-1298042](https://snyk.io/vuln/SNYK-JS-TRIMNEWLINES-1298042) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-TRIMOFFNEWLINES-1296850](https://snyk.io/vuln/SNYK-JS-TRIMOFFNEWLINES-1296850) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-UGLIFYJS-1727251](https://snyk.io/vuln/SNYK-JS-UGLIFYJS-1727251) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **589/1000**  <br/> **Why?** Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-UNSETVALUE-2400660](https://snyk.io/vuln/SNYK-JS-UNSETVALUE-2400660) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-Y18N-1021887](https://snyk.io/vuln/SNYK-JS-Y18N-1021887) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **601/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.6  | Prototype Pollution <br/>[SNYK-JS-YARGSPARSER-560381](https://snyk.io/vuln/SNYK-JS-YARGSPARSER-560381) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **469/1000**  <br/> **Why?** Has a fix available, CVSS 5.1  | Denial of Service (DoS) <br/>[npm:mem:20180117](https://snyk.io/vuln/npm:mem:20180117) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1ZDJlMThhZC0zNGVkLTRhNTUtYmVlZS05Y2E2ZWQzZGI1YWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjVkMmUxOGFkLTM0ZWQtNGE1NS1iZWVlLTljYTZlZDNkYjVhYyJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"5d2e18ad-34ed-4a55-beee-9ca6ed3db5ac\",\"prPublicId\":\"5d2e18ad-34ed-4a55-beee-9ca6ed3db5ac\",\"dependencies\":[{\"name\":\"lerna\",\"from\":\"3.0.5\",\"to\":\"6.5.0\"},{\"name\":\"lint-staged\",\"from\":\"7.2.2\",\"to\":\"9.0.0\"},{\"name\":\"prettier-standard\",\"from\":\"8.0.1\",\"to\":\"15.0.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-ACORN-559469\",\"SNYK-JS-AJV-584908\",\"SNYK-JS-ANSIREGEX-1583908\",\"SNYK-JS-BABELTRAVERSE-5962462\",\"SNYK-JS-CONVENTIONALCOMMITSPARSER-1766960\",\"SNYK-JS-DECODEURICOMPONENT-3149970\",\"SNYK-JS-DOTPROP-543489\",\"SNYK-JS-FSTREAM-174725\",\"SNYK-JS-GLOBPARENT-1016905\",\"SNYK-JS-GOT-2932019\",\"SNYK-JS-HANDLEBARS-1056767\",\"SNYK-JS-HANDLEBARS-1279029\",\"SNYK-JS-HANDLEBARS-173692\",\"SNYK-JS-HANDLEBARS-174183\",\"SNYK-JS-HANDLEBARS-469063\",\"SNYK-JS-HANDLEBARS-480388\",\"SNYK-JS-HANDLEBARS-534478\",\"SNYK-JS-HANDLEBARS-534988\",\"SNYK-JS-HANDLEBARS-567742\",\"SNYK-JS-HOSTEDGITINFO-1088355\",\"SNYK-JS-INFLIGHT-6095116\",\"SNYK-JS-INI-1048974\",\"SNYK-JS-JSONSCHEMA-1920922\",\"SNYK-JS-JSYAML-173999\",\"SNYK-JS-JSYAML-174129\",\"SNYK-JS-KINDOF-537849\",\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\",\"SNYK-JS-LODASH-450202\",\"SNYK-JS-LODASH-567746\",\"SNYK-JS-LODASH-608086\",\"SNYK-JS-LODASH-73638\",\"SNYK-JS-LODASH-73639\",\"SNYK-JS-LODASHMERGE-173732\",\"SNYK-JS-LODASHMERGE-173733\",\"SNYK-JS-LODASHTEMPLATE-1088054\",\"SNYK-JS-MINIMATCH-3050818\",\"SNYK-JS-MINIMIST-2429795\",\"SNYK-JS-MINIMIST-559764\",\"SNYK-JS-MIXINDEEP-450212\",\"SNYK-JS-MOMENT-2440688\",\"SNYK-JS-MOMENT-2944238\",\"SNYK-JS-QS-3153490\",\"SNYK-JS-REQUEST-3361831\",\"SNYK-JS-SEMVER-3247795\",\"SNYK-JS-SETVALUE-1540541\",\"SNYK-JS-SETVALUE-450213\",\"SNYK-JS-TAR-1536528\",\"SNYK-JS-TAR-1536531\",\"SNYK-JS-TAR-1536758\",\"SNYK-JS-TAR-1579147\",\"SNYK-JS-TAR-1579152\",\"SNYK-JS-TAR-1579155\",\"SNYK-JS-TAR-174125\",\"SNYK-JS-TOUGHCOOKIE-5672873\",\"SNYK-JS-TRIMNEWLINES-1298042\",\"SNYK-JS-TRIMOFFNEWLINES-1296850\",\"SNYK-JS-UGLIFYJS-1727251\",\"SNYK-JS-UNSETVALUE-2400660\",\"SNYK-JS-Y18N-1021887\",\"SNYK-JS-YARGSPARSER-560381\",\"npm:mem:20180117\"],\"upgrade\":[\"SNYK-JS-ACORN-559469\",\"SNYK-JS-AJV-584908\",\"SNYK-JS-ANSIREGEX-1583908\",\"SNYK-JS-BABELTRAVERSE-5962462\",\"SNYK-JS-CONVENTIONALCOMMITSPARSER-1766960\",\"SNYK-JS-DECODEURICOMPONENT-3149970\",\"SNYK-JS-DOTPROP-543489\",\"SNYK-JS-FSTREAM-174725\",\"SNYK-JS-GLOBPARENT-1016905\",\"SNYK-JS-GOT-2932019\",\"SNYK-JS-HANDLEBARS-1056767\",\"SNYK-JS-HANDLEBARS-1279029\",\"SNYK-JS-HANDLEBARS-173692\",\"SNYK-JS-HANDLEBARS-174183\",\"SNYK-JS-HANDLEBARS-469063\",\"SNYK-JS-HANDLEBARS-480388\",\"SNYK-JS-HANDLEBARS-534478\",\"SNYK-JS-HANDLEBARS-534988\",\"SNYK-JS-HANDLEBARS-567742\",\"SNYK-JS-HOSTEDGITINFO-1088355\",\"SNYK-JS-INFLIGHT-6095116\",\"SNYK-JS-INI-1048974\",\"SNYK-JS-JSONSCHEMA-1920922\",\"SNYK-JS-JSYAML-173999\",\"SNYK-JS-JSYAML-174129\",\"SNYK-JS-KINDOF-537849\",\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\",\"SNYK-JS-LODASH-450202\",\"SNYK-JS-LODASH-567746\",\"SNYK-JS-LODASH-608086\",\"SNYK-JS-LODASH-73638\",\"SNYK-JS-LODASH-73639\",\"SNYK-JS-LODASHMERGE-173732\",\"SNYK-JS-LODASHMERGE-173733\",\"SNYK-JS-LODASHTEMPLATE-1088054\",\"SNYK-JS-MINIMATCH-3050818\",\"SNYK-JS-MINIMIST-2429795\",\"SNYK-JS-MINIMIST-559764\",\"SNYK-JS-MIXINDEEP-450212\",\"SNYK-JS-MOMENT-2440688\",\"SNYK-JS-MOMENT-2944238\",\"SNYK-JS-QS-3153490\",\"SNYK-JS-REQUEST-3361831\",\"SNYK-JS-SEMVER-3247795\",\"SNYK-JS-SETVALUE-1540541\",\"SNYK-JS-SETVALUE-450213\",\"SNYK-JS-TAR-1536528\",\"SNYK-JS-TAR-1536531\",\"SNYK-JS-TAR-1536758\",\"SNYK-JS-TAR-1579147\",\"SNYK-JS-TAR-1579152\",\"SNYK-JS-TAR-1579155\",\"SNYK-JS-TAR-174125\",\"SNYK-JS-TOUGHCOOKIE-5672873\",\"SNYK-JS-TRIMNEWLINES-1298042\",\"SNYK-JS-TRIMOFFNEWLINES-1296850\",\"SNYK-JS-UGLIFYJS-1727251\",\"SNYK-JS-UNSETVALUE-2400660\",\"SNYK-JS-Y18N-1021887\",\"SNYK-JS-YARGSPARSER-560381\",\"npm:mem:20180117\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"priorityScore\"],\"priorityScoreList\":[589,619,696,786,479,696,636,579,586,484,671,601,579,579,579,589,726,704,646,586,703,686,644,509,619,506,586,681,686,731,686,686,541,686,636,681,479,506,601,686,589,696,696,646,696,686,686,624,624,410,639,639,639,726,646,589,586,479,589,686,601,469],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr)\n 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-12-19T18:27:38Z",
      "deletions": 2380,
      "id": "PR_kwDOCKG9jc5iZnky",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Fix for 62 vulnerabilities",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/70"
    },
    "PR_kwDOCKG9jc5iZqy9": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/ui/package.json\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-ANSIREGEX-1583908](https://snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-ASYNC-2441827](https://snyk.io/vuln/SNYK-JS-ASYNC-2441827) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **636/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.3  | Prototype Pollution <br/>[SNYK-JS-DOTPROP-543489](https://snyk.io/vuln/SNYK-JS-DOTPROP-543489) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **703/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 6.2  | Missing Release of Resource after Effective Lifetime <br/>[SNYK-JS-INFLIGHT-6095116](https://snyk.io/vuln/SNYK-JS-INFLIGHT-6095116) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-INI-1048974](https://snyk.io/vuln/SNYK-JS-INI-1048974) |  Yes  | Proof of Concept \n![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png \"low severity\")  |  **506/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 3.7  | Validation Bypass <br/>[SNYK-JS-KINDOF-537849](https://snyk.io/vuln/SNYK-JS-KINDOF-537849) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LOADERUTILS-3042992](https://snyk.io/vuln/SNYK-JS-LOADERUTILS-3042992) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **589/1000**  <br/> **Why?** Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-LOADERUTILS-3043105](https://snyk.io/vuln/SNYK-JS-LOADERUTILS-3043105) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LOADERUTILS-3105943](https://snyk.io/vuln/SNYK-JS-LOADERUTILS-3105943) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-1018905](https://snyk.io/vuln/SNYK-JS-LODASH-1018905) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **681/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.2  | Command Injection <br/>[SNYK-JS-LODASH-1040724](https://snyk.io/vuln/SNYK-JS-LODASH-1040724) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASH-450202](https://snyk.io/vuln/SNYK-JS-LODASH-450202) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **731/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 8.2  | Prototype Pollution <br/>[SNYK-JS-LODASH-567746](https://snyk.io/vuln/SNYK-JS-LODASH-567746) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASH-608086](https://snyk.io/vuln/SNYK-JS-LODASH-608086) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **686/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-LODASH-73638](https://snyk.io/vuln/SNYK-JS-LODASH-73638) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **541/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 4.4  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-LODASH-73639](https://snyk.io/vuln/SNYK-JS-LODASH-73639) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-MINIMATCH-3050818](https://snyk.io/vuln/SNYK-JS-MINIMATCH-3050818) |  Yes  | No Known Exploit \n![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png \"low severity\")  |  **506/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 3.7  | Prototype Pollution <br/>[SNYK-JS-MINIMIST-2429795](https://snyk.io/vuln/SNYK-JS-MINIMIST-2429795) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **601/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.6  | Prototype Pollution <br/>[SNYK-JS-MINIMIST-559764](https://snyk.io/vuln/SNYK-JS-MINIMIST-559764) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-SEMVER-3247795](https://snyk.io/vuln/SNYK-JS-SEMVER-3247795) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **624/1000**  <br/> **Why?** Has a fix available, CVSS 8.2  | Arbitrary File Overwrite <br/>[SNYK-JS-TAR-1536528](https://snyk.io/vuln/SNYK-JS-TAR-1536528) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **624/1000**  <br/> **Why?** Has a fix available, CVSS 8.2  | Arbitrary File Overwrite <br/>[SNYK-JS-TAR-1536531](https://snyk.io/vuln/SNYK-JS-TAR-1536531) |  Yes  | No Known Exploit \n![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png \"low severity\")  |  **410/1000**  <br/> **Why?** Has a fix available, CVSS 3.7  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-TAR-1536758](https://snyk.io/vuln/SNYK-JS-TAR-1536758) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **639/1000**  <br/> **Why?** Has a fix available, CVSS 8.5  | Arbitrary File Write <br/>[SNYK-JS-TAR-1579147](https://snyk.io/vuln/SNYK-JS-TAR-1579147) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **639/1000**  <br/> **Why?** Has a fix available, CVSS 8.5  | Arbitrary File Write <br/>[SNYK-JS-TAR-1579152](https://snyk.io/vuln/SNYK-JS-TAR-1579152) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **639/1000**  <br/> **Why?** Has a fix available, CVSS 8.5  | Arbitrary File Write <br/>[SNYK-JS-TAR-1579155](https://snyk.io/vuln/SNYK-JS-TAR-1579155) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **539/1000**  <br/> **Why?** Has a fix available, CVSS 6.5  | Improper Input Validation <br/>[SNYK-JS-URIJS-1055003](https://snyk.io/vuln/SNYK-JS-URIJS-1055003) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **479/1000**  <br/> **Why?** Has a fix available, CVSS 5.3  | Improper Input Validation <br/>[SNYK-JS-URIJS-1078286](https://snyk.io/vuln/SNYK-JS-URIJS-1078286) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Open Redirect <br/>[SNYK-JS-URIJS-1319803](https://snyk.io/vuln/SNYK-JS-URIJS-1319803) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **579/1000**  <br/> **Why?** Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[SNYK-JS-URIJS-1319806](https://snyk.io/vuln/SNYK-JS-URIJS-1319806) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Open Redirect <br/>[SNYK-JS-URIJS-2401466](https://snyk.io/vuln/SNYK-JS-URIJS-2401466) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Improper Input Validation <br/>[SNYK-JS-URIJS-2415026](https://snyk.io/vuln/SNYK-JS-URIJS-2415026) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Open Redirect <br/>[SNYK-JS-URIJS-2419067](https://snyk.io/vuln/SNYK-JS-URIJS-2419067) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **646/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.5  | Misinterpretation of Input <br/>[SNYK-JS-URIJS-2440699](https://snyk.io/vuln/SNYK-JS-URIJS-2440699) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **591/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.4  | Cross-site Scripting (XSS) <br/>[SNYK-JS-URIJS-2441239](https://snyk.io/vuln/SNYK-JS-URIJS-2441239) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **434/1000**  <br/> **Why?** Has a fix available, CVSS 4.4  | Time of Check Time of Use (TOCTOU) <br/>[npm:chownr:20180731](https://snyk.io/vuln/npm:chownr:20180731) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkZTk3ZmRhOC1lMjA1LTQ3YTQtOWM5My0wODY0NGQzZjM3YjEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImRlOTdmZGE4LWUyMDUtNDdhNC05YzkzLTA4NjQ0ZDNmMzdiMSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"de97fda8-e205-47a4-9c93-08644d3f37b1\",\"prPublicId\":\"de97fda8-e205-47a4-9c93-08644d3f37b1\",\"dependencies\":[{\"name\":\"react-scripts-ts\",\"from\":\"2.17.0\",\"to\":\"4.0.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-ANSIREGEX-1583908\",\"SNYK-JS-ASYNC-2441827\",\"SNYK-JS-DOTPROP-543489\",\"SNYK-JS-INFLIGHT-6095116\",\"SNYK-JS-INI-1048974\",\"SNYK-JS-KINDOF-537849\",\"SNYK-JS-LOADERUTILS-3042992\",\"SNYK-JS-LOADERUTILS-3043105\",\"SNYK-JS-LOADERUTILS-3105943\",\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\",\"SNYK-JS-LODASH-450202\",\"SNYK-JS-LODASH-567746\",\"SNYK-JS-LODASH-608086\",\"SNYK-JS-LODASH-73638\",\"SNYK-JS-LODASH-73639\",\"SNYK-JS-MINIMATCH-3050818\",\"SNYK-JS-MINIMIST-2429795\",\"SNYK-JS-MINIMIST-559764\",\"SNYK-JS-SEMVER-3247795\",\"SNYK-JS-TAR-1536528\",\"SNYK-JS-TAR-1536531\",\"SNYK-JS-TAR-1536758\",\"SNYK-JS-TAR-1579147\",\"SNYK-JS-TAR-1579152\",\"SNYK-JS-TAR-1579155\",\"SNYK-JS-URIJS-1055003\",\"SNYK-JS-URIJS-1078286\",\"SNYK-JS-URIJS-1319803\",\"SNYK-JS-URIJS-1319806\",\"SNYK-JS-URIJS-2401466\",\"SNYK-JS-URIJS-2415026\",\"SNYK-JS-URIJS-2419067\",\"SNYK-JS-URIJS-2440699\",\"SNYK-JS-URIJS-2441239\",\"npm:chownr:20180731\"],\"upgrade\":[\"SNYK-JS-ANSIREGEX-1583908\",\"SNYK-JS-ASYNC-2441827\",\"SNYK-JS-DOTPROP-543489\",\"SNYK-JS-INFLIGHT-6095116\",\"SNYK-JS-INI-1048974\",\"SNYK-JS-KINDOF-537849\",\"SNYK-JS-LOADERUTILS-3042992\",\"SNYK-JS-LOADERUTILS-3043105\",\"SNYK-JS-LOADERUTILS-3105943\",\"SNYK-JS-LODASH-1018905\",\"SNYK-JS-LODASH-1040724\",\"SNYK-JS-LODASH-450202\",\"SNYK-JS-LODASH-567746\",\"SNYK-JS-LODASH-608086\",\"SNYK-JS-LODASH-73638\",\"SNYK-JS-LODASH-73639\",\"SNYK-JS-MINIMATCH-3050818\",\"SNYK-JS-MINIMIST-2429795\",\"SNYK-JS-MINIMIST-559764\",\"SNYK-JS-SEMVER-3247795\",\"SNYK-JS-TAR-1536528\",\"SNYK-JS-TAR-1536531\",\"SNYK-JS-TAR-1536758\",\"SNYK-JS-TAR-1579147\",\"SNYK-JS-TAR-1579152\",\"SNYK-JS-TAR-1579155\",\"SNYK-JS-URIJS-1055003\",\"SNYK-JS-URIJS-1078286\",\"SNYK-JS-URIJS-1319803\",\"SNYK-JS-URIJS-1319806\",\"SNYK-JS-URIJS-2401466\",\"SNYK-JS-URIJS-2415026\",\"SNYK-JS-URIJS-2419067\",\"SNYK-JS-URIJS-2440699\",\"SNYK-JS-URIJS-2441239\",\"npm:chownr:20180731\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[696,696,636,703,686,506,479,589,479,586,681,686,731,686,686,541,479,506,601,696,624,624,410,639,639,639,539,479,586,579,586,586,586,646,591,434],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n 🦉 [Validation Bypass](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)\n 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-12-19T18:38:52Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5iZqy9",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade react-scripts-ts from 2.17.0 to 4.0.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/71"
    },
    "PR_kwDOApzK7c5iqmZ9": {
      "additions": 497,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **586/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.3  | Information Exposure <br/>[SNYK-JS-FOLLOWREDIRECTS-2332181](https://snyk.io/vuln/SNYK-JS-FOLLOWREDIRECTS-2332181) |  No  | Proof of Concept \n![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png \"low severity\")  |  **344/1000**  <br/> **Why?** Has a fix available, CVSS 2.6  | Information Exposure <br/>[SNYK-JS-FOLLOWREDIRECTS-2396346](https://snyk.io/vuln/SNYK-JS-FOLLOWREDIRECTS-2396346) |  No  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **644/1000**  <br/> **Why?** Has a fix available, CVSS 8.6  | Prototype Pollution <br/>[SNYK-JS-JSONSCHEMA-1920922](https://snyk.io/vuln/SNYK-JS-JSONSCHEMA-1920922) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Prototype Poisoning <br/>[SNYK-JS-QS-3153490](https://snyk.io/vuln/SNYK-JS-QS-3153490) |  Yes  | Proof of Concept \n![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png \"low severity\")  |  **506/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 3.7  | Regular Expression Denial of Service (ReDoS) <br/>[npm:debug:20170905](https://snyk.io/vuln/npm:debug:20170905) |  No  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **579/1000**  <br/> **Why?** Has a fix available, CVSS 7.3  | Prototype Pollution <br/>[npm:extend:20180424](https://snyk.io/vuln/npm:extend:20180424) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **636/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 6.3  | Prototype Pollution <br/>[npm:hoek:20180212](https://snyk.io/vuln/npm:hoek:20180212) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **696/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 7.5  | Regular Expression Denial of Service (ReDoS) <br/>[npm:sshpk:20180409](https://snyk.io/vuln/npm:sshpk:20180409) |  Yes  | Proof of Concept \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **646/1000**  <br/> **Why?** Mature exploit, Has a fix available, CVSS 5.2  | Uninitialized Memory Exposure <br/>[npm:stringstream:20180511](https://snyk.io/vuln/npm:stringstream:20180511) |  Yes  | Mature \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **509/1000**  <br/> **Why?** Has a fix available, CVSS 5.9  | Regular Expression Denial of Service (ReDoS) <br/>[npm:tough-cookie:20170905](https://snyk.io/vuln/npm:tough-cookie:20170905) |  Yes  | No Known Exploit \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **576/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.1  | Uninitialized Memory Exposure <br/>[npm:tunnel-agent:20170305](https://snyk.io/vuln/npm:tunnel-agent:20170305) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1ZDFiMTdiNS02NDM1LTRlN2YtOGVlZS03MzY3ZmRlNzIxYmIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjVkMWIxN2I1LTY0MzUtNGU3Zi04ZWVlLTczNjdmZGU3MjFiYiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"5d1b17b5-6435-4e7f-8eee-7367fde721bb\",\"prPublicId\":\"5d1b17b5-6435-4e7f-8eee-7367fde721bb\",\"dependencies\":[{\"name\":\"axios\",\"from\":\"0.16.1\",\"to\":\"0.21.1\"},{\"name\":\"pouchy\",\"from\":\"11.0.3\",\"to\":\"12.3.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"f6603448-9c5d-44da-b6b2-a1163095b76c\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-FOLLOWREDIRECTS-2332181\",\"SNYK-JS-FOLLOWREDIRECTS-2396346\",\"SNYK-JS-JSONSCHEMA-1920922\",\"SNYK-JS-QS-3153490\",\"npm:tough-cookie:20170905\",\"npm:debug:20170905\",\"npm:extend:20180424\",\"npm:hoek:20180212\",\"npm:sshpk:20180409\",\"npm:stringstream:20180511\",\"npm:tunnel-agent:20170305\"],\"upgrade\":[\"SNYK-JS-FOLLOWREDIRECTS-2332181\",\"SNYK-JS-FOLLOWREDIRECTS-2396346\",\"SNYK-JS-JSONSCHEMA-1920922\",\"SNYK-JS-QS-3153490\",\"npm:debug:20170905\",\"npm:extend:20180424\",\"npm:hoek:20180212\",\"npm:sshpk:20180409\",\"npm:stringstream:20180511\",\"npm:tough-cookie:20170905\",\"npm:tunnel-agent:20170305\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"priorityScore\"],\"priorityScoreList\":[586,344,644,696,509,506,579,636,696,646,576],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-12-22T16:40:27Z",
      "deletions": 745,
      "id": "PR_kwDOApzK7c5iqmZ9",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzgyOTk5Nw==",
        "nameWithOwner": "cdaringe/tuffet"
      },
      "state": "OPEN",
      "title": "[Snyk] Fix for 11 vulnerabilities",
      "url": "https://github.com/cdaringe/tuffet/pull/23"
    },
    "PR_kwDOApzK7c5i8Lly": {
      "additions": 278,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **658/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 5.3  | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-AXIOS-6124857](https://snyk.io/vuln/SNYK-JS-AXIOS-6124857) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyY2ZmNTdlMy0wNTE1LTQxMGEtYmQ1ZS1hMTQzYjA0YWYwNTMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjJjZmY1N2UzLTA1MTUtNDEwYS1iZDVlLWExNDNiMDRhZjA1MyJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"2cff57e3-0515-410a-bd5e-a143b04af053\",\"prPublicId\":\"2cff57e3-0515-410a-bd5e-a143b04af053\",\"dependencies\":[{\"name\":\"axios\",\"from\":\"0.16.1\",\"to\":\"1.6.3\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"f6603448-9c5d-44da-b6b2-a1163095b76c\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-AXIOS-6124857\"],\"upgrade\":[\"SNYK-JS-AXIOS-6124857\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[658],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2023-12-29T14:33:03Z",
      "deletions": 12,
      "id": "PR_kwDOApzK7c5i8Lly",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzgyOTk5Nw==",
        "nameWithOwner": "cdaringe/tuffet"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade axios from 0.16.1 to 1.6.3",
      "url": "https://github.com/cdaringe/tuffet/pull/24"
    },
    "PR_kwDOApzK7c5jVoUE": {
      "additions": 278,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **661/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-AXIOS-6144788](https://snyk.io/vuln/SNYK-JS-AXIOS-6144788) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **758/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.3  | Improper Input Validation <br/>[SNYK-JS-FOLLOWREDIRECTS-6141137](https://snyk.io/vuln/SNYK-JS-FOLLOWREDIRECTS-6141137) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzM2RlMTljYy00YTkyLTQ0ZGItODcwYi02YWEyZDJiMGY1MGYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjMzZGUxOWNjLTRhOTItNDRkYi04NzBiLTZhYTJkMmIwZjUwZiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"33de19cc-4a92-44db-870b-6aa2d2b0f50f\",\"prPublicId\":\"33de19cc-4a92-44db-870b-6aa2d2b0f50f\",\"dependencies\":[{\"name\":\"axios\",\"from\":\"0.16.1\",\"to\":\"1.6.4\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"f6603448-9c5d-44da-b6b2-a1163095b76c\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-AXIOS-6144788\",\"SNYK-JS-FOLLOWREDIRECTS-6141137\"],\"upgrade\":[\"SNYK-JS-AXIOS-6144788\",\"SNYK-JS-FOLLOWREDIRECTS-6141137\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[661,758],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-05T18:09:45Z",
      "deletions": 12,
      "id": "PR_kwDOApzK7c5jVoUE",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzgyOTk5Nw==",
        "nameWithOwner": "cdaringe/tuffet"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade axios from 0.16.1 to 1.6.4",
      "url": "https://github.com/cdaringe/tuffet/pull/25"
    },
    "PR_kwDOG0yFq85jaRoW": {
      "additions": 5,
      "body": "# problem\r\n\r\nwanted role constructor, but was missing\r\n\r\n# solution\r\n\r\nadd it!\r\n\r\nnot an issue if you don't want to accept, and maybe consider doing a11y stuff in a big wave",
      "changedFiles": 1,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-07T18:18:47Z",
      "deletions": 0,
      "id": "PR_kwDOG0yFq85jaRoW",
      "mergedAt": "2024-01-07T19:06:03Z",
      "repository": {
        "id": "R_kgDOG0yFqw",
        "nameWithOwner": "lustre-labs/lustre"
      },
      "state": "MERGED",
      "title": "feat: add role attr",
      "url": "https://github.com/lustre-labs/lustre/pull/34"
    },
    "PR_kwDOCKG9jc5jlfvT": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/ui/package.json\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **698/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 6.1  | Cross-site Scripting (XSS) <br/>[SNYK-JS-SERIALIZEJAVASCRIPT-6147607](https://snyk.io/vuln/SNYK-JS-SERIALIZEJAVASCRIPT-6147607) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5YmNlY2E0Yi04NjM4LTQ1OTYtYWU2Yy04ODk2Zjg1ZDg1MmIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjliY2VjYTRiLTg2MzgtNDU5Ni1hZTZjLTg4OTZmODVkODUyYiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"9bceca4b-8638-4596-ae6c-8896f85d852b\",\"prPublicId\":\"9bceca4b-8638-4596-ae6c-8896f85d852b\",\"dependencies\":[{\"name\":\"react-scripts-ts\",\"from\":\"2.17.0\",\"to\":\"4.0.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/3b6cbd14-3cb1-42b2-a1e2-ff70a30cd0fc?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-SERIALIZEJAVASCRIPT-6147607\"],\"upgrade\":[\"SNYK-JS-SERIALIZEJAVASCRIPT-6147607\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[698],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/dom-based-xss/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-09T14:45:20Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5jlfvT",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade react-scripts-ts from 2.17.0 to 4.0.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/72"
    },
    "PR_kwDODVrI3M5kXxqv": {
      "additions": 2,
      "body": "# problem\r\n\r\ni want to only have a single fastify dependency in my node_modules, but must have many because:\r\n\r\n1. electrode-server is tightly coupled to fastify, but\r\n2. i need a fastify handle for testing, codegen, and other development related tasks which do not warrant a full electrode launch\r\n\r\n# solution\r\n\r\nexpose fastify to userspace",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-18T01:11:44Z",
      "deletions": 0,
      "id": "PR_kwDODVrI3M5kXxqv",
      "mergedAt": "2024-01-25T23:05:51Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjQwNTM0Njg=",
        "nameWithOwner": "electrode-io/fastify-server"
      },
      "state": "MERGED",
      "title": "feat: expose fastify handle to user-space",
      "url": "https://github.com/electrode-io/fastify-server/pull/39"
    },
    "PR_kwDODZxkzM5kZJOi": {
      "additions": 1,
      "body": "# problem\r\n\r\nno fswalk listed\r\n\r\n# solution\r\n\r\nadd it!",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 2
      },
      "createdAt": "2024-01-18T07:32:20Z",
      "deletions": 0,
      "id": "PR_kwDODZxkzM5kZJOi",
      "mergedAt": "2024-01-18T12:14:29Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjgzNTMyMjg=",
        "nameWithOwner": "gleam-lang/awesome-gleam"
      },
      "state": "MERGED",
      "title": "docs: add fswalk",
      "url": "https://github.com/gleam-lang/awesome-gleam/pull/77"
    },
    "PR_kwDODVrI3M5kejS8": {
      "additions": 287,
      "body": "# Problem\r\n\r\nEvery JS/TS developer knows common project toolkits (e.g. jest, prettier, etc), but only one JS/TS developer knows xarc/* toolkits.\r\n\r\nThis is a first pass at improving overall typescript _stuff_ in electrode-fastify-server.\r\n\r\n**BREAKING CHANGE**, entrypoint is _nearly_ the same, but the untyped `module.exports(...args)` is **removed**\r\n\r\n# Solution\r\n\r\nMigrate to latest, common, community oriented tools",
      "changedFiles": 14,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 7
      },
      "createdAt": "2024-01-18T23:28:33Z",
      "deletions": 246,
      "id": "PR_kwDODVrI3M5kejS8",
      "mergedAt": "2024-01-29T17:53:12Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyMjQwNTM0Njg=",
        "nameWithOwner": "electrode-io/fastify-server"
      },
      "state": "MERGED",
      "title": "refactor: project toolkit",
      "url": "https://github.com/electrode-io/fastify-server/pull/40"
    },
    "PR_kwDOJiMXlc5knfun": {
      "additions": 270,
      "body": "# problem\r\n\r\nAfter running `gleam format` on my source code, `glance` could not parse it.\r\n\r\n# research\r\n\r\n```gleam\r\npub fn main(x) { let Wibble(y, ..,) = x }\r\n```\r\n\r\ntrailing commons on pattern constructors were not accepted. it was a bit tough to trace given no stack trace in the Error variant on parse failure, but I got there!\r\n\r\n# Solution\r\n\r\nAdd case for handling the trailing comma, add test case",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-20T04:17:54Z",
      "deletions": 229,
      "id": "PR_kwDOJiMXlc5knfun",
      "mergedAt": "2024-01-20T09:58:54Z",
      "repository": {
        "id": "R_kgDOJiMXlQ",
        "nameWithOwner": "lpil/glance"
      },
      "state": "MERGED",
      "title": "fix: trailing-comma",
      "url": "https://github.com/lpil/glance/pull/4"
    },
    "PR_kwDOLGR9585koa-2": {
      "additions": 3,
      "body": "Welcome to [Renovate](https://togithub.com/renovatebot/renovate)! This is an onboarding PR to help you understand and configure settings before regular Pull Requests begin.\n\n🚦 To activate Renovate, merge this Pull Request. To disable Renovate, simply close this Pull Request unmerged.\n\n\n\n---\n### Detected Package Files\n\n * `.github/workflows/test.yml` (github-actions)\n\n### What to Expect\n\nWith your current configuration, Renovate will create 1 Pull Request:\n\n<details>\n<summary>chore(deps): update actions/checkout action to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/actions-checkout-4.x`\n  - Merge into: `main`\n  - Upgrade [actions/checkout](https://togithub.com/actions/checkout) to `v4`\n\n\n</details>\n\n\n---\n\n❓ Got questions? Check out Renovate's [Docs](https://docs.renovatebot.com/), particularly the Getting Started section.\nIf you need any further assistance then you can also [request help here](https://togithub.com/renovatebot/renovate/discussions).\n\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n\n<!--renovate-config-hash:94693a990c975907e7f13da3309b9d56ba02b3983519b41786edf5cf031e457c-->\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-20T17:35:14Z",
      "deletions": 0,
      "id": "PR_kwDOLGR9585koa-2",
      "mergedAt": "2024-01-20T17:35:49Z",
      "repository": {
        "id": "R_kgDOLGR95w",
        "nameWithOwner": "cdaringe/fswalk"
      },
      "state": "MERGED",
      "title": "chore: Configure Renovate",
      "url": "https://github.com/cdaringe/fswalk/pull/2"
    },
    "PR_kwDOLHZfjs5kocFv": {
      "additions": 3,
      "body": "Welcome to [Renovate](https://togithub.com/renovatebot/renovate)! This is an onboarding PR to help you understand and configure settings before regular Pull Requests begin.\n\n🚦 To activate Renovate, merge this Pull Request. To disable Renovate, simply close this Pull Request unmerged.\n\n\n\n---\n### Detected Package Files\n\n * `gleam.toml` (gleam)\n\n### What to Expect\n\nWith your current configuration, Renovate will create 2 Pull Requests:\n\n<details>\n<summary>Update dependency gleam_json to ~> 0.7.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/gleam_json-0.x`\n  - Merge into: `main`\n  - Upgrade gleam_json to `~> 0.7.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency gleam_json to v1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/gleam_json-1.x`\n  - Merge into: `main`\n  - Upgrade gleam_json to `~> 1.0.0`\n\n\n</details>\n\n\n---\n\n❓ Got questions? Check out Renovate's [Docs](https://docs.renovatebot.com/), particularly the Getting Started section.\nIf you need any further assistance then you can also [request help here](https://togithub.com/renovatebot/renovate/discussions).\n\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n\n<!--renovate-config-hash:94693a990c975907e7f13da3309b9d56ba02b3983519b41786edf5cf031e457c-->\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-20T17:48:21Z",
      "deletions": 0,
      "id": "PR_kwDOLHZfjs5kocFv",
      "mergedAt": "2024-01-20T17:48:30Z",
      "repository": {
        "id": "R_kgDOLHZfjg",
        "nameWithOwner": "cdaringe/renovate-npm-testerooni"
      },
      "state": "MERGED",
      "title": "Configure Renovate",
      "url": "https://github.com/cdaringe/renovate-npm-testerooni/pull/2"
    },
    "PR_kwDOLHZfjs5kocHF": {
      "additions": 1,
      "body": "",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-20T17:48:47Z",
      "deletions": 1,
      "id": "PR_kwDOLHZfjs5kocHF",
      "mergedAt": null,
      "repository": {
        "id": "R_kgDOLHZfjg",
        "nameWithOwner": "cdaringe/renovate-npm-testerooni"
      },
      "state": "CLOSED",
      "title": "__",
      "url": "https://github.com/cdaringe/renovate-npm-testerooni/pull/3"
    },
    "PR_kwDOLHZfjs5kocHh": {
      "additions": 1,
      "body": "arstar",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-20T17:48:54Z",
      "deletions": 1,
      "id": "PR_kwDOLHZfjs5kocHh",
      "mergedAt": null,
      "repository": {
        "id": "R_kgDOLHZfjg",
        "nameWithOwner": "cdaringe/renovate-npm-testerooni"
      },
      "state": "CLOSED",
      "title": "__",
      "url": "https://github.com/cdaringe/renovate-npm-testerooni/pull/4"
    },
    "PR_kwDOBJLedM5kodLh": {
      "additions": 346,
      "body": "<!-- If this is your first pull request: sign the CLA with this GitHub app: https://cla-assistant.io/renovatebot/renovate -->\r\n<!-- Make sure the `Allow edits and access to secrets by maintainers` checkbox is checked on this pull request. -->\r\n<!-- Please read https://github.com/renovatebot/renovate/blob/main/.github/contributing.md before you create your pull request.-->\r\n\r\n## Changes\r\n\r\nAdd gleam-lang manager support\r\n\r\n- [x] figure out what to do for getting `manifest.toml` lockfile updated\r\n- [x] tests\r\n- [x] docs? need to figure out where to put docs\r\n\r\n## Context\r\n\r\nsee #26744\r\n\r\n## Documentation (please check one with an [x])\r\n\r\n- [x] I have updated the documentation, or\r\n- [ ] No documentation update is required\r\n\r\n## How I've tested my work (please select one)\r\n\r\nRun in debug mode! Sending PRs over to the poorly named https://github.com/cdaringe/renovate-npm-testerooni/pull/3\r\n\r\nI have verified these changes via:\r\n\r\n- [ ] Code inspection only, or\r\n- [ ] Newly added/modified unit tests, or\r\n- [ ] No unit tests but ran on a real repository, or\r\n- [x] Both unit tests + ran on a real repository\r\n\r\n<!-- Do you have any suggestions about this PR template? Edit it here: https://github.com/renovatebot/renovate/edit/main/.github/pull_request_template.md -->\r\n\r\n<!-- Please do not force push to your PR's branch after you have created your PR, as doing so forces us to review the whole PR again. This makes it harder for us to review your work because we don't know what has changed. -->\r\n<!-- PRs will always be squashed by us when we merge your work. Commit as many times as you need in this branch. -->\r\n",
      "changedFiles": 10,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "totalCount": 26
      },
      "createdAt": "2024-01-20T18:02:30Z",
      "deletions": 0,
      "id": "PR_kwDOBJLedM5kodLh",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk3NjczNDA2OA==",
        "nameWithOwner": "renovatebot/renovate"
      },
      "state": "CLOSED",
      "title": "feat: support gleam lang",
      "url": "https://github.com/renovatebot/renovate/pull/26767"
    },
    "PR_kwDOLHZfjs5kohGB": {
      "additions": 3,
      "body": "arstar",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-20T18:53:28Z",
      "deletions": 3,
      "id": "PR_kwDOLHZfjs5kohGB",
      "mergedAt": null,
      "repository": {
        "id": "R_kgDOLHZfjg",
        "nameWithOwner": "cdaringe/renovate-npm-testerooni"
      },
      "state": "CLOSED",
      "title": "arst",
      "url": "https://github.com/cdaringe/renovate-npm-testerooni/pull/5"
    },
    "PR_kwDOLHZfjs5kohIP": {
      "additions": 3,
      "body": "This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [gleam_json](https://hex.pm/packages/gleam_json) | dependencies | major | `~> 0.6.0` -> `~> 1.0.0` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIwLjAuMC1zZW1hbnRpYy1yZWxlYXNlIiwidXBkYXRlZEluVmVyIjoiMC4wLjAtc2VtYW50aWMtcmVsZWFzZSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-20T18:54:07Z",
      "deletions": 3,
      "id": "PR_kwDOLHZfjs5kohIP",
      "mergedAt": null,
      "repository": {
        "id": "R_kgDOLHZfjg",
        "nameWithOwner": "cdaringe/renovate-npm-testerooni"
      },
      "state": "CLOSED",
      "title": "Update dependency gleam_json to v1",
      "url": "https://github.com/cdaringe/renovate-npm-testerooni/pull/6"
    },
    "PR_kwDOLHZfjs5koj7Z": {
      "additions": 3,
      "body": "This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [gleam_json](https://hex.pm/packages/gleam_json) | dependencies | minor | `~> 0.6.0` -> `~> 0.7.0` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIwLjAuMC1zZW1hbnRpYy1yZWxlYXNlIiwidXBkYXRlZEluVmVyIjoiMC4wLjAtc2VtYW50aWMtcmVsZWFzZSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-01-20T19:43:48Z",
      "deletions": 3,
      "id": "PR_kwDOLHZfjs5koj7Z",
      "mergedAt": null,
      "repository": {
        "id": "R_kgDOLHZfjg",
        "nameWithOwner": "cdaringe/renovate-npm-testerooni"
      },
      "state": "OPEN",
      "title": "Update dependency gleam_json to ~> 0.7.0",
      "url": "https://github.com/cdaringe/renovate-npm-testerooni/pull/7"
    },
    "PR_kwDOFOAMbc5konwU": {
      "additions": 118,
      "body": "# problem\r\n\r\nno gleam\r\n\r\n# solution\r\n\r\nadd gleam\r\n\r\n# discussion\r\n\r\nhey friends. i'm having a bit of hard time getting testing over the finish line. running the bake testing command, even with gleam in the no-prepare tools array, it's still prepared and install fails because it already exists.  not clear on the diff between prepare and install, so any help getting this over the finish line would be warmly welcomed\r\n\r\n",
      "changedFiles": 7,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "totalCount": 24
      },
      "createdAt": "2024-01-20T20:58:04Z",
      "deletions": 0,
      "id": "PR_kwDOFOAMbc5konwU",
      "mergedAt": "2024-02-04T09:20:48Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzNTAyMjc1NjU=",
        "nameWithOwner": "containerbase/base"
      },
      "state": "MERGED",
      "title": "feat: add gleam installer",
      "url": "https://github.com/containerbase/base/pull/2018"
    },
    "PR_kwDOLHwTPM5lyIOY": {
      "additions": 7,
      "body": "# problem\r\n\r\nsee #2",
      "changedFiles": 3,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 3
      },
      "createdAt": "2024-02-02T04:29:38Z",
      "deletions": 6,
      "id": "PR_kwDOLHwTPM5lyIOY",
      "mergedAt": "2024-02-02T04:37:47Z",
      "repository": {
        "id": "R_kgDOLHwTPA",
        "nameWithOwner": "cdaringe/gserde"
      },
      "state": "MERGED",
      "title": "refactor/casing",
      "url": "https://github.com/cdaringe/gserde/pull/3"
    },
    "PR_kwDOLHwTPM5ml5Gt": {
      "additions": 3,
      "body": "This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIwLjAuMC1zZW1hbnRpYy1yZWxlYXNlIiwidXBkYXRlZEluVmVyIjoiMC4wLjAtc2VtYW50aWMtcmVsZWFzZSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-02-12T02:18:47Z",
      "deletions": 3,
      "id": "PR_kwDOLHwTPM5ml5Gt",
      "mergedAt": "2024-02-14T04:45:14Z",
      "repository": {
        "id": "R_kgDOLHwTPA",
        "nameWithOwner": "cdaringe/gserde"
      },
      "state": "MERGED",
      "title": "chore(deps): lock file maintenance",
      "url": "https://github.com/cdaringe/gserde/pull/8"
    },
    "PR_kwDOApzK7c5pwrVd": {
      "additions": 240,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **718/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 6.5  | Information Exposure <br/>[SNYK-JS-FOLLOWREDIRECTS-6444610](https://snyk.io/vuln/SNYK-JS-FOLLOWREDIRECTS-6444610) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIwZTRhOTZjYy03M2IyLTRlOWMtOWRjNy1jNDg4MzdhYWE3MmIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjBlNGE5NmNjLTczYjItNGU5Yy05ZGM3LWM0ODgzN2FhYTcyYiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"0e4a96cc-73b2-4e9c-9dc7-c48837aaa72b\",\"prPublicId\":\"0e4a96cc-73b2-4e9c-9dc7-c48837aaa72b\",\"dependencies\":[{\"name\":\"axios\",\"from\":\"0.16.1\",\"to\":\"0.21.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"f6603448-9c5d-44da-b6b2-a1163095b76c\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-FOLLOWREDIRECTS-6444610\"],\"upgrade\":[\"SNYK-JS-FOLLOWREDIRECTS-6444610\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[718],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-03-15T15:04:19Z",
      "deletions": 12,
      "id": "PR_kwDOApzK7c5pwrVd",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzgyOTk5Nw==",
        "nameWithOwner": "cdaringe/tuffet"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade axios from 0.16.1 to 0.21.1",
      "url": "https://github.com/cdaringe/tuffet/pull/26"
    },
    "PR_kwDOCKG9jc5qf7qn": {
      "additions": 3757,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **718/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 6.5  | Uncontrolled Resource Consumption (&#x27;Resource Exhaustion&#x27;) <br/>[SNYK-JS-TAR-6476909](https://snyk.io/vuln/SNYK-JS-TAR-6476909) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzZmEwNDQxYy1iMjU3LTRiMDctYTY5OC02YjhhODMyNTNjMWIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjNmYTA0NDFjLWIyNTctNGIwNy1hNjk4LTZiOGE4MzI1M2MxYiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"3fa0441c-b257-4b07-a698-6b8a83253c1b\",\"prPublicId\":\"3fa0441c-b257-4b07-a698-6b8a83253c1b\",\"dependencies\":[{\"name\":\"lerna\",\"from\":\"3.0.5\",\"to\":\"6.4.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-TAR-6476909\"],\"upgrade\":[\"SNYK-JS-TAR-6476909\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[718],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Uncontrolled Resource Consumption (&#x27;Resource Exhaustion&#x27;)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-03-22T14:53:14Z",
      "deletions": 1444,
      "id": "PR_kwDOCKG9jc5qf7qn",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lerna from 3.0.5 to 6.4.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/73"
    },
    "PR_kwDOEKIhfM5skrkg": {
      "additions": 22,
      "body": "# problem\r\n\r\nembedded-hal is now 1.x\r\n\r\n# solution\r\n\r\nupgrade. clippy or fmt did some pretty zany autorefactors, more than just formatting :|",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-04-13T18:16:35Z",
      "deletions": 20,
      "id": "PR_kwDOEKIhfM5skrkg",
      "mergedAt": "2024-04-14T00:04:02Z",
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkyNzkwNjA4NjA=",
        "nameWithOwner": "mitchmindtree/tmc2209"
      },
      "state": "MERGED",
      "title": "feat: add hal 1.0.0 support",
      "url": "https://github.com/mitchmindtree/tmc2209/pull/5"
    },
    "PR_kwDOCKG9jc5swKLP": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/api/package.json\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **768/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-LODASH-6139239](https://snyk.io/vuln/SNYK-JS-LODASH-6139239) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzYTUxOGM5NS0wMTY4LTRkMjMtODFmZC00Y2E4NzYyNzdhMTkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjNhNTE4Yzk1LTAxNjgtNGQyMy04MWZkLTRjYTg3NjI3N2ExOSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"3a518c95-0168-4d23-81fd-4ca876277a19\",\"prPublicId\":\"3a518c95-0168-4d23-81fd-4ca876277a19\",\"dependencies\":[{\"name\":\"lodash\",\"from\":\"4.17.10\",\"to\":\"4.17.17\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"7522964a-bca4-45aa-b609-e7c7b014d63d\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/7522964a-bca4-45aa-b609-e7c7b014d63d?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-6139239\"],\"upgrade\":[\"SNYK-JS-LODASH-6139239\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[768],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-04-16T04:59:44Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5swKLP",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lodash from 4.17.10 to 4.17.17",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/74"
    },
    "PR_kwDOCKG9jc5swKNA": {
      "additions": 5,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - packages/common/package.json\n    - packages/common/yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **768/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-LODASH-6139239](https://snyk.io/vuln/SNYK-JS-LODASH-6139239) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxMmY4MGE1MS1kMmQ0LTQ2ZmEtOGUyMS1iY2VkYzI5MTEwNWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjEyZjgwYTUxLWQyZDQtNDZmYS04ZTIxLWJjZWRjMjkxMTA1YyJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/93fd332d-bf8d-499a-aba9-84683ab38d2a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/93fd332d-bf8d-499a-aba9-84683ab38d2a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"12f80a51-d2d4-46fa-8e21-bcedc291105c\",\"prPublicId\":\"12f80a51-d2d4-46fa-8e21-bcedc291105c\",\"dependencies\":[{\"name\":\"lodash\",\"from\":\"4.17.10\",\"to\":\"4.17.17\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"93fd332d-bf8d-499a-aba9-84683ab38d2a\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/93fd332d-bf8d-499a-aba9-84683ab38d2a?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-6139239\"],\"upgrade\":[\"SNYK-JS-LODASH-6139239\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[768],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-04-16T04:59:51Z",
      "deletions": 4,
      "id": "PR_kwDOCKG9jc5swKNA",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lodash from 4.17.10 to 4.17.17",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/75"
    },
    "PR_kwDOCKG9jc5swKgA": {
      "additions": 4362,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **768/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-LODASH-6139239](https://snyk.io/vuln/SNYK-JS-LODASH-6139239) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzYjg5YTcyMy1iYzhkLTQyODgtYTg0Yy1hZDM2NzYwODhlNmIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjNiODlhNzIzLWJjOGQtNDI4OC1hODRjLWFkMzY3NjA4OGU2YiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"3b89a723-bc8d-4288-a84c-ad3676088e6b\",\"prPublicId\":\"3b89a723-bc8d-4288-a84c-ad3676088e6b\",\"dependencies\":[{\"name\":\"lerna\",\"from\":\"3.0.5\",\"to\":\"6.4.1\"},{\"name\":\"lodash\",\"from\":\"4.17.10\",\"to\":\"4.17.17\"},{\"name\":\"prettier-standard\",\"from\":\"8.0.1\",\"to\":\"15.0.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-6139239\"],\"upgrade\":[\"SNYK-JS-LODASH-6139239\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"priorityScore\"],\"priorityScoreList\":[768],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-04-16T05:01:13Z",
      "deletions": 1714,
      "id": "PR_kwDOCKG9jc5swKgA",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Fix for 1 vulnerabilities",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/76"
    },
    "PR_kwDOAo2Bcs5tO-7e": {
      "additions": 1,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n<details>\n<summary>⚠️ <b>Warning</b></summary>\n\n```\nFailed to update the yarn.lock, please update manually before merging.\n```\n</details>\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **768/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-LODASH-6139239](https://snyk.io/vuln/SNYK-JS-LODASH-6139239) |  No  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzMTk5MjRhMS1hNmFlLTQwMTAtYjA5MS0yMzM4YzJlNGE5NzYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjMxOTkyNGExLWE2YWUtNDAxMC1iMDkxLTIzMzhjMmU0YTk3NiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/166bfa97-0f0d-4099-a7e7-2bbc3d855619?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/166bfa97-0f0d-4099-a7e7-2bbc3d855619?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"319924a1-a6ae-4010-b091-2338c2e4a976\",\"prPublicId\":\"319924a1-a6ae-4010-b091-2338c2e4a976\",\"dependencies\":[{\"name\":\"lodash\",\"from\":\"4.17.15\",\"to\":\"4.17.17\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"166bfa97-0f0d-4099-a7e7-2bbc3d855619\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/166bfa97-0f0d-4099-a7e7-2bbc3d855619?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-6139239\"],\"upgrade\":[\"SNYK-JS-LODASH-6139239\"],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"pr-warning-shown\",\"priorityScore\"],\"priorityScoreList\":[768],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n",
      "changedFiles": 1,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-04-19T23:40:57Z",
      "deletions": 1,
      "id": "PR_kwDOAo2Bcs5tO-7e",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MjgyODE0Ng==",
        "nameWithOwner": "cdaringe/pouchy"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lodash from 4.17.15 to 4.17.17",
      "url": "https://github.com/cdaringe/pouchy/pull/1261"
    },
    "PR_kwDOApzK7c5tPBuI": {
      "additions": 480,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **768/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.5  | Prototype Pollution <br/>[SNYK-JS-LODASH-6139239](https://snyk.io/vuln/SNYK-JS-LODASH-6139239) |  Yes  | Proof of Concept \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2MTZkMjg2Mi1jM2VkLTRhZWUtODY0YS1iZWFkNTVmYjM5NWQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjYxNmQyODYyLWMzZWQtNGFlZS04NjRhLWJlYWQ1NWZiMzk1ZCJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"616d2862-c3ed-4aee-864a-bead55fb395d\",\"prPublicId\":\"616d2862-c3ed-4aee-864a-bead55fb395d\",\"dependencies\":[{\"name\":\"pouchy\",\"from\":\"11.0.3\",\"to\":\"12.0.0\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"f6603448-9c5d-44da-b6b2-a1163095b76c\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-LODASH-6139239\"],\"upgrade\":[\"SNYK-JS-LODASH-6139239\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[768],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Prototype Pollution](https://learn.snyk.io/lesson/prototype-pollution/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-04-19T23:58:13Z",
      "deletions": 733,
      "id": "PR_kwDOApzK7c5tPBuI",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzgyOTk5Nw==",
        "nameWithOwner": "cdaringe/tuffet"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade pouchy from 11.0.3 to 12.0.0",
      "url": "https://github.com/cdaringe/tuffet/pull/27"
    },
    "PR_kwDOCKG9jc5vWNaM": {
      "additions": 3783,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - package.json\n    - yarn.lock\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory. \nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n#### Vulnerabilities that will be fixed\n##### With an upgrade:\nSeverity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **661/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5  | Uncontrolled resource consumption <br/>[SNYK-JS-BRACES-6838727](https://snyk.io/vuln/SNYK-JS-BRACES-6838727) |  Yes  | No Known Exploit \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png \"high severity\")  |  **661/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5  | Inefficient Regular Expression Complexity <br/>[SNYK-JS-MICROMATCH-6838728](https://snyk.io/vuln/SNYK-JS-MICROMATCH-6838728) |  Yes  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjNmIwYzI1NC02MTZkLTQ3MzUtYjEwOS03M2QzZjkyNjVmMzkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImM2YjBjMjU0LTYxNmQtNDczNS1iMTA5LTczZDNmOTI2NWYzOSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"c6b0c254-616d-4735-b109-73d3f9265f39\",\"prPublicId\":\"c6b0c254-616d-4735-b109-73d3f9265f39\",\"dependencies\":[{\"name\":\"lerna\",\"from\":\"3.0.5\",\"to\":\"6.4.1\"}],\"packageManager\":\"yarn\",\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-JS-BRACES-6838727\",\"SNYK-JS-MICROMATCH-6838728\"],\"upgrade\":[\"SNYK-JS-BRACES-6838727\",\"SNYK-JS-MICROMATCH-6838728\"],\"isBreakingChange\":true,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[661,661],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Uncontrolled resource consumption](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-05-14T05:36:42Z",
      "deletions": 1449,
      "id": "PR_kwDOCKG9jc5vWNaM",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lerna from 3.0.5 to 6.4.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/77"
    },
    "PR_kwDOCKG9jc5wRNyn": {
      "additions": 530,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3>\n\n\nAs this is a private repository, Snyk-bot does not have access. Therefore, this PR has been created automatically, but appears to have been created by a real user.\n\n#### Changes included in this PR\n\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n   - package.json\n - yarn.lock\n\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory.\nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n\n#### Vulnerabilities that will be fixed\n\n\n##### With an upgrade:\n\nSeverity | Priority Score (\\*) | Issue | Breaking Change | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------\n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png 'high severity')  | **768/1000**  <br/> **Why?** Proof of Concept exploit, Recently disclosed, Has a fix available, CVSS 7.5  | Uncontrolled resource consumption <br/>[SNYK-JS-BRACES-6838727](https://snyk.io/vuln/SNYK-JS-BRACES-6838727) |  Yes  | Proof of Concept \n![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png 'high severity')  | **661/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5  | Inefficient Regular Expression Complexity <br/>[SNYK-JS-MICROMATCH-6838728](https://snyk.io/vuln/SNYK-JS-MICROMATCH-6838728) |  Yes  | No Known Exploit \n\n(\\*) Note that the real score may have changed since the PR was raised.\n\n\n\n\n\n\n\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n---\n\n**Note:** _You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs._\n\nFor more information: <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3YTlkZDg1Zi1kZjJjLTRiZjUtYTViMy1iYTk1NDY4MmU1ZDIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdhOWRkODVmLWRmMmMtNGJmNS1hNWIzLWJhOTU0NjgyZTVkMiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # 'snyk:metadata:{\"customTemplate\":{\"variablesUsed\":[],\"fieldsUsed\":[]},\"dependencies\":[{\"name\":\"lint-staged\",\"from\":\"7.2.2\",\"to\":\"9.0.0\"}],\"env\":\"prod\",\"issuesToFix\":[{\"exploit_maturity\":\"Proof of Concept\",\"id\":\"SNYK-JS-BRACES-6838727\",\"priority_score\":768,\"priority_score_factors\":[{\"type\":\"exploit\",\"label\":\"Proof of Concept\",\"score\":107},{\"type\":\"freshness\",\"label\":true,\"score\":71},{\"type\":\"fixability\",\"label\":true,\"score\":214},{\"type\":\"cvssScore\",\"label\":\"7.5\",\"score\":375},{\"type\":\"scoreVersion\",\"label\":\"v1\",\"score\":1}],\"severity\":\"high\",\"title\":\"Uncontrolled resource consumption\"},{\"exploit_maturity\":\"No Known Exploit\",\"id\":\"SNYK-JS-MICROMATCH-6838728\",\"priority_score\":661,\"priority_score_factors\":[{\"type\":\"freshness\",\"label\":true,\"score\":71},{\"type\":\"fixability\",\"label\":true,\"score\":214},{\"type\":\"cvssScore\",\"label\":\"7.5\",\"score\":375},{\"type\":\"scoreVersion\",\"label\":\"v1\",\"score\":1}],\"severity\":\"high\",\"title\":\"Inefficient Regular Expression Complexity\"}],\"prId\":\"7a9dd85f-df2c-4bf5-a5b3-ba954682e5d2\",\"prPublicId\":\"7a9dd85f-df2c-4bf5-a5b3-ba954682e5d2\",\"packageManager\":\"yarn\",\"priorityScoreList\":[768,661],\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"prType\":\"fix\",\"templateFieldSources\":{\"branchName\":\"default\",\"commitMessage\":\"default\",\"description\":\"default\",\"title\":\"default\"},\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"type\":\"auto\",\"upgrade\":[\"SNYK-JS-BRACES-6838727\",\"SNYK-JS-MICROMATCH-6838728\"],\"vulns\":[\"SNYK-JS-BRACES-6838727\",\"SNYK-JS-MICROMATCH-6838728\"],\"patch\":[],\"isBreakingChange\":true,\"remediationStrategy\":\"vuln\"}'\n\n---\n\n**Note:** _This is a default PR template raised by Snyk. Find out more about how you can customise Snyk PRs in our [documentation.](https://docs.snyk.io/scan-using-snyk/snyk-open-source/automatic-and-manual-prs-with-snyk-open-source/customize-pr-templates-closed-beta)_\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n🦉 [Uncontrolled resource consumption](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-05-23T01:06:46Z",
      "deletions": 168,
      "id": "PR_kwDOCKG9jc5wRNyn",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lint-staged from 7.2.2 to 9.0.0",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/78"
    },
    "PR_kwDOCKG9jc5wkntQ": {
      "additions": 48,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br />![snyk-top-banner](https://github.com/andygongea/OWASP-Benchmark/assets/818805/c518c423-16fe-447e-b67f-ad5a49b5d123)\n\n### Snyk has created this PR to fix 1 vulnerabilities in the yarn dependencies of this project.\n\n#### Snyk changed the following file(s):\n\n- `package.json`\n- `yarn.lock`\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory.\nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n\n\n#### Vulnerabilities that will be fixed with an upgrade:\n\n|  | Issue | Score | \n:-------------------------:|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png 'medium severity') | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-MINIMATCH-3050818](https://snyk.io/vuln/SNYK-JS-MINIMATCH-3050818) | &nbsp;&nbsp;**479**&nbsp;&nbsp; \n\n\n\n\n---\n\n> [!IMPORTANT]\n>\n> - Check the changes in this PR to ensure they won't cause issues with your project.\n> - Max score is 1000. Note that the real score may have changed since the PR was raised.\n> - This PR was automatically created by Snyk using the credentials of a real user.\n\n---\n\n**Note:** _You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs._\n\nFor more information: <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlZTJhYWQ1My0wOGY0LTQzZTYtOTEwYi1iYWNhMzhhYjQxYjMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImVlMmFhZDUzLTA4ZjQtNDNlNi05MTBiLWJhY2EzOGFiNDFiMyJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n📜 [Customise PR templates](https://docs.snyk.io/scan-using-snyk/pull-requests/snyk-fix-pull-or-merge-requests/customize-pr-templates)\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n📚 [Read about Snyk's upgrade logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n\n[//]: # 'snyk:metadata:{\"customTemplate\":{\"variablesUsed\":[],\"fieldsUsed\":[]},\"dependencies\":[{\"name\":\"glob\",\"from\":\"7.1.2\",\"to\":\"9.0.0\"}],\"env\":\"prod\",\"issuesToFix\":[{\"exploit_maturity\":\"No Known Exploit\",\"id\":\"SNYK-JS-MINIMATCH-3050818\",\"priority_score\":479,\"priority_score_factors\":[{\"type\":\"fixability\",\"label\":true,\"score\":214},{\"type\":\"cvssScore\",\"label\":\"5.3\",\"score\":265},{\"type\":\"scoreVersion\",\"label\":\"v1\",\"score\":1}],\"severity\":\"medium\",\"title\":\"Regular Expression Denial of Service (ReDoS)\"}],\"prId\":\"ee2aad53-08f4-43e6-910b-baca38ab41b3\",\"prPublicId\":\"ee2aad53-08f4-43e6-910b-baca38ab41b3\",\"packageManager\":\"yarn\",\"priorityScoreList\":[479],\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"prType\":\"fix\",\"templateFieldSources\":{\"branchName\":\"default\",\"commitMessage\":\"default\",\"description\":\"default\",\"title\":\"default\"},\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"type\":\"auto\",\"upgrade\":[\"SNYK-JS-MINIMATCH-3050818\"],\"vulns\":[\"SNYK-JS-MINIMATCH-3050818\"],\"patch\":[],\"isBreakingChange\":true,\"remediationStrategy\":\"vuln\"}'\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-05-26T02:31:18Z",
      "deletions": 1,
      "id": "PR_kwDOCKG9jc5wkntQ",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade glob from 7.1.2 to 9.0.0",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/79"
    },
    "PR_kwDOApzK7c5wkpUr": {
      "additions": 488,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br />![snyk-top-banner](https://github.com/andygongea/OWASP-Benchmark/assets/818805/c518c423-16fe-447e-b67f-ad5a49b5d123)\n\n### Snyk has created this PR to fix 2 vulnerabilities in the yarn dependencies of this project.\n\n#### Snyk changed the following file(s):\n\n- `package.json`\n- `yarn.lock`\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory.\nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n\n\n#### Vulnerabilities that will be fixed with an upgrade:\n\n|  | Issue | Score | \n:-------------------------:|:-------------------------|:-------------------------\n![critical severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/c.png 'critical severity') | Authentication Bypass <br/>[SNYK-JS-HAWK-6969142](https://snyk.io/vuln/SNYK-JS-HAWK-6969142) | &nbsp;&nbsp;**858**&nbsp;&nbsp; \n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png 'medium severity') | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-MINIMATCH-3050818](https://snyk.io/vuln/SNYK-JS-MINIMATCH-3050818) | &nbsp;&nbsp;**479**&nbsp;&nbsp; \n\n\n\n\n---\n\n> [!IMPORTANT]\n>\n> - Check the changes in this PR to ensure they won't cause issues with your project.\n> - Max score is 1000. Note that the real score may have changed since the PR was raised.\n> - This PR was automatically created by Snyk using the credentials of a real user.\n\n---\n\n**Note:** _You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs._\n\nFor more information: <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIwMDc1ODAxZC01Y2VkLTQzYjMtODFiNS1mMzkwZDFkODBmMGUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjAwNzU4MDFkLTVjZWQtNDNiMy04MWI1LWYzOTBkMWQ4MGYwZSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n📜 [Customise PR templates](https://docs.snyk.io/scan-using-snyk/pull-requests/snyk-fix-pull-or-merge-requests/customize-pr-templates)\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n📚 [Read about Snyk's upgrade logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n🦉 [Authentication Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr)\n🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n\n[//]: # 'snyk:metadata:{\"customTemplate\":{\"variablesUsed\":[],\"fieldsUsed\":[]},\"dependencies\":[{\"name\":\"pouchy\",\"from\":\"11.0.3\",\"to\":\"12.3.1\"}],\"env\":\"prod\",\"issuesToFix\":[{\"exploit_maturity\":\"Proof of Concept\",\"id\":\"SNYK-JS-HAWK-6969142\",\"priority_score\":858,\"priority_score_factors\":[{\"type\":\"exploit\",\"label\":\"Proof of Concept\",\"score\":107},{\"type\":\"freshness\",\"label\":true,\"score\":71},{\"type\":\"fixability\",\"label\":true,\"score\":214},{\"type\":\"cvssScore\",\"label\":\"9.3\",\"score\":465},{\"type\":\"scoreVersion\",\"label\":\"v1\",\"score\":1}],\"severity\":\"critical\",\"title\":\"Authentication Bypass\"},{\"exploit_maturity\":\"No Known Exploit\",\"id\":\"SNYK-JS-MINIMATCH-3050818\",\"priority_score\":479,\"priority_score_factors\":[{\"type\":\"fixability\",\"label\":true,\"score\":214},{\"type\":\"cvssScore\",\"label\":\"5.3\",\"score\":265},{\"type\":\"scoreVersion\",\"label\":\"v1\",\"score\":1}],\"severity\":\"medium\",\"title\":\"Regular Expression Denial of Service (ReDoS)\"}],\"prId\":\"0075801d-5ced-43b3-81b5-f390d1d80f0e\",\"prPublicId\":\"0075801d-5ced-43b3-81b5-f390d1d80f0e\",\"packageManager\":\"yarn\",\"priorityScoreList\":[858,479],\"projectPublicId\":\"f6603448-9c5d-44da-b6b2-a1163095b76c\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/f6603448-9c5d-44da-b6b2-a1163095b76c?utm_source=github&utm_medium=referral&page=fix-pr\",\"prType\":\"fix\",\"templateFieldSources\":{\"branchName\":\"default\",\"commitMessage\":\"default\",\"description\":\"default\",\"title\":\"default\"},\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"type\":\"auto\",\"upgrade\":[\"SNYK-JS-HAWK-6969142\",\"SNYK-JS-MINIMATCH-3050818\"],\"vulns\":[\"SNYK-JS-HAWK-6969142\",\"SNYK-JS-MINIMATCH-3050818\"],\"patch\":[],\"isBreakingChange\":true,\"remediationStrategy\":\"vuln\"}'\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-05-26T02:57:57Z",
      "deletions": 726,
      "id": "PR_kwDOApzK7c5wkpUr",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnk0MzgyOTk5Nw==",
        "nameWithOwner": "cdaringe/tuffet"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade pouchy from 11.0.3 to 12.3.1",
      "url": "https://github.com/cdaringe/tuffet/pull/28"
    },
    "PR_kwDOE_-gZM5zS-9O": {
      "additions": 233,
      "body": "# Description\r\n\r\n## Contributions\r\n\r\n- I changed x because y\r\n- I added the new feature x.\r\n\r\n## Checklist\r\n\r\n- [ ] I added one or multiple labels which best describes this PR.\r\n- [ ] I have tested the changes locally.\r\n- [ ] This PR has a reviewer on it.\r\n- [ ] I have validated my changes in a docker container and on Ubuntu. (Only needed for Odin or Docker Changes)\r\n",
      "changedFiles": 16,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "totalCount": 12
      },
      "createdAt": "2024-06-23T22:27:44Z",
      "deletions": 29,
      "id": "PR_kwDOE_-gZM5zS-9O",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkzMzU1MTk4NDQ=",
        "nameWithOwner": "mbround18/valheim-docker"
      },
      "state": "OPEN",
      "title": "feat: wip traffic detection",
      "url": "https://github.com/mbround18/valheim-docker/pull/880"
    },
    "PR_kwDOKCtBjs5z0cKn": {
      "additions": 7,
      "body": "# problem\r\n\r\ni need keyCode, but it's not present\r\n\r\n# solution\r\n\r\nadd it",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-06-27T20:27:27Z",
      "deletions": 0,
      "id": "PR_kwDOKCtBjs5z0cKn",
      "mergedAt": "2024-06-27T20:58:03Z",
      "repository": {
        "id": "R_kgDOKCtBjg",
        "nameWithOwner": "CrowdHailer/plinth"
      },
      "state": "MERGED",
      "title": "feat: add key_code",
      "url": "https://github.com/CrowdHailer/plinth/pull/13"
    },
    "PR_kwDOCKG9jc50KqzD": {
      "additions": 3780,
      "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br />![snyk-top-banner](https://github.com/andygongea/OWASP-Benchmark/assets/818805/c518c423-16fe-447e-b67f-ad5a49b5d123)\n\n### Snyk has created this PR to fix 1 vulnerabilities in the yarn dependencies of this project.\n\n#### Snyk changed the following file(s):\n\n- `package.json`\n- `yarn.lock`\n\n\n#### Note for [zero-installs](https://yarnpkg.com/features/zero-installs) users\n\nIf you are using the Yarn feature [zero-installs](https://yarnpkg.com/features/zero-installs) that was introduced in Yarn V2, note that this PR does not update the `.yarn/cache/` directory meaning this code cannot be pulled and immediately developed on as one would expect for a zero-install project - you will need to run `yarn` to update the contents of the `./yarn/cache` directory.\nIf you are not using zero-install you can ignore this as your flow should likely be unchanged.\n\n\n\n\n#### Vulnerabilities that will be fixed with an upgrade:\n\n|  | Issue | Score | \n:-------------------------:|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png 'medium severity') | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-JS-ASYNC-7414156](https://snyk.io/vuln/SNYK-JS-ASYNC-7414156) | &nbsp;&nbsp;**631**&nbsp;&nbsp; \n\n\n\n\n---\n\n> [!IMPORTANT]\n>\n> - Check the changes in this PR to ensure they won't cause issues with your project.\n> - Max score is 1000. Note that the real score may have changed since the PR was raised.\n> - This PR was automatically created by Snyk using the credentials of a real user.\n\n---\n\n**Note:** _You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs._\n\nFor more information: <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxMGJhYWYyZC02ZTljLTQwMDUtYjZkOC0zMWYzN2FlMzIzNDEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjEwYmFhZjJkLTZlOWMtNDAwNS1iNmQ4LTMxZjM3YWUzMjM0MSJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n📜 [Customise PR templates](https://docs.snyk.io/scan-using-snyk/pull-requests/snyk-fix-pull-or-merge-requests/customize-pr-templates)\n🛠 [Adjust project settings](https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n📚 [Read about Snyk's upgrade logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)\n\n[//]: # 'snyk:metadata:{\"customTemplate\":{\"variablesUsed\":[],\"fieldsUsed\":[]},\"dependencies\":[{\"name\":\"lerna\",\"from\":\"3.0.5\",\"to\":\"6.4.1\"}],\"env\":\"prod\",\"issuesToFix\":[{\"exploit_maturity\":\"No Known Exploit\",\"id\":\"SNYK-JS-ASYNC-7414156\",\"priority_score\":631,\"priority_score_factors\":[{\"type\":\"freshness\",\"label\":true,\"score\":71},{\"type\":\"fixability\",\"label\":true,\"score\":214},{\"type\":\"cvssScore\",\"label\":\"6.9\",\"score\":345},{\"type\":\"scoreVersion\",\"label\":\"v1\",\"score\":1}],\"severity\":\"medium\",\"title\":\"Regular Expression Denial of Service (ReDoS)\"}],\"prId\":\"10baaf2d-6e9c-4005-b6d8-31f37ae32341\",\"prPublicId\":\"10baaf2d-6e9c-4005-b6d8-31f37ae32341\",\"packageManager\":\"yarn\",\"priorityScoreList\":[631],\"projectPublicId\":\"4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19\",\"projectUrl\":\"https://app.snyk.io/org/cdaringe/project/4b8e70fd-3fe8-4b32-8408-1adfc3c1ce19?utm_source=github&utm_medium=referral&page=fix-pr\",\"prType\":\"fix\",\"templateFieldSources\":{\"branchName\":\"default\",\"commitMessage\":\"default\",\"description\":\"default\",\"title\":\"default\"},\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"type\":\"auto\",\"upgrade\":[\"SNYK-JS-ASYNC-7414156\"],\"vulns\":[\"SNYK-JS-ASYNC-7414156\"],\"patch\":[],\"isBreakingChange\":true,\"remediationStrategy\":\"vuln\"}'\n",
      "changedFiles": 2,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "totalCount": 1
      },
      "createdAt": "2024-07-02T08:48:18Z",
      "deletions": 1440,
      "id": "PR_kwDOCKG9jc50KqzD",
      "mergedAt": null,
      "repository": {
        "id": "MDEwOlJlcG9zaXRvcnkxNDQ4MTc1NDk=",
        "nameWithOwner": "cdaringe/deep-pocket-discounts"
      },
      "state": "OPEN",
      "title": "[Snyk] Security upgrade lerna from 3.0.5 to 6.4.1",
      "url": "https://github.com/cdaringe/deep-pocket-discounts/pull/80"
    }
  },
  "issueCommentsPageInfo": {
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOnYyOpHOg5pVlg=="
  },
  "pullRequestspullRequestsPageInfo": {
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOnYyOpHOdCqsww=="
  }
}